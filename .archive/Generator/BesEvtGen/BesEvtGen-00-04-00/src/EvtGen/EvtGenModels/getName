begevtgenget.F:* Anders Ryd,  Oct 1   Created.
begevtgenget.F:        mother=jmohep(1,entry)
begevtgenget.F:        daugfirst=jdahep(1,entry)
begevtgenget.F:        px=phep(1,entry)
begevtgenget.F:        x=vhep(1,entry)
begevtgengetx.F:C      Copyright (C) 1998      Caltech, UCSB
begevtgengetx.F:C    DJL/RYD     August 11, 1998         Module created
begevtgengetx.F:* Anders Ryd,  Oct 1   Created.
begevtgengetx.F:        mother=jmohep(1,entry)
begevtgengetx.F:        daugfirst=jdahep(1,entry)
begevtgengetx.F:        px=phep(1,entry)
begevtgengetx.F:        x=vhep(1,entry)
begevtgenstore.F:C      Copyright (C) 1998      Caltech, UCSB
begevtgenstore.F:C    DJL/RYD     August 11, 1998         Module created
begevtgenstore.F:        if (istat.eq.1) then
begevtgenstore.F:     +        stdhepnum.eq.-1.or.
begevtgenstore.F:     +        stdhepnum.eq. 1.or.
begevtgenstore.F:c     +        stdhepnum.ne.-1.and.
begevtgenstore.F:c     +        stdhepnum.ne. 1.and.
begevtgenstore.F:c     +        stdhepnum.ne.-11.and.
begevtgenstore.F:c     +        stdhepnum.ne.11.and.
begevtgenstore.F:c     +        stdhepnum.ne.-13.and.
begevtgenstore.F:c     +        stdhepnum.ne.13.and.
begevtgenstore.F:c     +        stdhepnum.ne.12.and.
begevtgenstore.F:c     +        stdhepnum.ne.-12.and.
begevtgenstore.F:c     +        stdhepnum.ne.14.and.
begevtgenstore.F:c     +        stdhepnum.ne.-14.and.
begevtgenstore.F:c     +        stdhepnum.ne.16.and.
begevtgenstore.F:c     +        stdhepnum.ne.-16.and.
begevtgenstore.F:c     +        stdhepnum.ne.2212.and.
begevtgenstore.F:c     +        stdhepnum.ne.-2212.and.
begevtgenstore.F:c     +        stdhepnum.ne.2112.and.
begevtgenstore.F:c     +        stdhepnum.ne.-2112.and.
begevtgenstore.F:c     +        stdhepnum.ne.211.and.
begevtgenstore.F:c     +        stdhepnum.ne.-211.and.
begevtgenstore.F:c     +        stdhepnum.ne.321.and.
begevtgenstore.F:c     +        stdhepnum.ne.-321.and.
begevtgenstore.F:c     +        stdhepnum.ne.130.and.
begevtgenstore.F:c     +        stdhepnum.ne.310.and.
begevtgenstore.F:        jmohep(1,nument)=motherfirst
begevtgenstore.F:        jdahep(1,nument)=daugfirst
begevtgenstore.F:        phep(1,nument)=px
begevtgenstore.F:        vhep(1,nument)=x
begevtgenstorex.F:C     Copyright (C) 1998      Caltech, UCSB
begevtgenstorex.F:C     DJL/RYD     August 11, 1998         Module created
begevtgenstorex.F:      parameter (ph_nmxhep=10000)
begevtgenstorex.F:      jmohep(1,entry)=mother
begevtgenstorex.F:      jdahep(1,entry)=daugfirst
begevtgenstorex.F:      phep(1,entry)=px
begevtgenstorex.F:      vhep(1,entry)=x
continuum.F:C      Copyright (C) 1998      Caltech, UCSB
continuum.F:C    DJL/RYD     August 11, 1998         Module created
continuum.F:      integer flavor,kf(100),i,ndaug,istart
continuum.F:      real*8  px(100),py(100),pz(100),e(100)
continuum.F:C      call lulist(1)
continuum.F:      do 1,i=1,n
continuum.F:        if(abs(k(i,2)).gt.6) goto 1
continuum.F:        if(k(i,2).eq.0)      goto 1
continuum.F:        if(k(i,3).ne.0)      goto 1
continuum.F:        ndaug=ndaug+1
continuum.F:        px(ndaug)=p(i,1)
continuum.F:1     continue
continuum.F:      do 2, i=1,n
continuum.F:         if(k(k(i,3),2).eq.92.or.k(k(i,3),2).eq.91) goto 22
continuum.F:         if (k(i,2).ne.22) istart=1
continuum.F:         ndaug = ndaug + 1
continuum.F:         px(ndaug)=p(i,1)
continuum.F:      if (abs(pxsum).gt.0.001.or.
continuum.F:     +       abs(pysum).gt.0.001.or.
continuum.F:     +       abs(pzsum).gt.0.001) then
continuum.F:         call lulist(1)
Binary file diy.root matches
EvtAngSam.cc:  // check that there are 1 arguments:angular distribution parameter 
EvtAngSam.cc:  checkNArg(1);
EvtAngSam.cc:  EvtParticle *v,*s1;
EvtAngSam.cc:  s1=p->getDaug(1); //J/psi
EvtAngSam.cc:  ps=s1->getP4();
EvtAngSam.cc:  double theta =angles.getHelAng(1);
EvtAngSam.cc:  double amp1=(1.0+alpha*costheta*costheta);
EvtAngSam.cc:  if(alpha>0.) ampflag=amp1/(1.0+alpha);
EvtAngSam.cc:  if(alpha<0.) ampflag=amp1;
EvtAngSam.cc:  double rd1=EvtRandom::Flat(0.0, 1.0);
EvtAngSam.cc:  if(rd1>=ampflag) goto loop;
EvtAV2GV.cc:// Description: Routine to decay chi_c1-> gamma J/psi  using 
EvtAV2GV.cc://    helicity amplitude, assuming E1 dominance. see prd13,1203             
EvtAV2GV.cc: checkSpinDaughter(1,EvtSpinType::VECTOR);
EvtAV2GV.cc:setProbMax(12.00001);
EvtAV2GV.cc:  EvtParticle *v,*s1;
EvtAV2GV.cc:  s1=p->getDaug(1); //J/psi
EvtAV2GV.cc:  ps=s1->getP4();
EvtAV2GV.cc:  double theta =angles.getHelAng(1);
EvtAV2GV.cc: int j1,j2,j3;
EvtAV2GV.cc: for(j1=0;j1<=2;){
EvtAV2GV.cc: for(j2=0;j2<=1;){
EvtAV2GV.cc: vertex(j1,j2,j3,0.0);j3++;}
EvtAV2GV.cc:j1++;}
EvtAV2GV.cc: vertex(0,0,0, Djmn(1, 1, 0,phi,theta,gamma));   //0 for chi_c1 helicity= 1
EvtAV2GV.cc: vertex(0,0,1, Djmn(1,-1, 0,phi,theta,gamma));   //1 for chi_c1 helicity=-1
EvtAV2GV.cc: vertex(0,0,2, Djmn(1, 0, 0,phi,theta,gamma));   //2 for chi_c1 helicity= 0
EvtAV2GV.cc: vertex(1,1,0, Djmn(1, 1, 0,phi,theta,gamma));
EvtAV2GV.cc: vertex(1,1,1, Djmn(1,-1, 0,phi,theta,gamma));
EvtAV2GV.cc: vertex(1,1,2, Djmn(1, 0, 0,phi,theta,gamma));  
EvtAV2GV.cc: vertex(2,0,0, Djmn(1, 1, 1,phi,theta,gamma)); 
EvtAV2GV.cc: vertex(2,0,1, Djmn(1,-1, 1,phi,theta,gamma)); 
EvtAV2GV.cc: vertex(2,0,2, Djmn(1, 0, 1,phi,theta,gamma)); 
EvtAV2GV.cc: vertex(2,1,0, Djmn(1, 1,-1,phi,theta,gamma));
EvtAV2GV.cc: vertex(2,1,1, Djmn(1,-1,-1,phi,theta,gamma)); 
EvtAV2GV.cc: vertex(2,1,2, Djmn(1, 0,-1,phi,theta,gamma)); 
EvtAV2GV.hh:// Description: Routine to decay chi_c1-> gamma J/psi  using
EvtAV2GV.hh://      helicity amplitude, assuming E1 dominance.  
EvtBHadronic.cc://      Copyright (C) 1998      Caltech, UCSB
EvtBHadronic.cc://    RYD     June 14, 1997         Module created
EvtBHadronic.cc:  static EvtId D3P10=EvtPDL::getId("D'_10");
EvtBHadronic.cc:  static EvtId D1P10=EvtPDL::getId("D_10");
EvtBHadronic.cc:  wcurrent=(int)getArg(1);
EvtBHadronic.cc:  case 1:
EvtBHadronic.cc:    nbcurrent=1;
EvtBHadronic.cc:			EvtPDL::getMeanMass(getDaugs()[1]),&fp,&fm);
EvtBHadronic.cc:    g.setdiag(1.0,-1.0,-1.0,-1.0);
EvtBHadronic.cc:      -gf*EvtComplex(0.0,1.0)*dual(directProd(p4[0]+p4b,p4b-p4[0]))
EvtBHadronic.cc:    jb[0]=tds.cont1(p->getDaug(0)->epsParent(0).conj());
EvtBHadronic.cc:    jb[1]=tds.cont1(p->getDaug(0)->epsParent(1).conj());
EvtBHadronic.cc:    jb[2]=tds.cont1(p->getDaug(0)->epsParent(2).conj());
EvtBHadronic.cc:    // D1
EvtBHadronic.cc:    ffmodel.getvectorff(B0,D3P10,EvtPDL::getMeanMass(D3P10),q2,&f,&gf,&ap,&am);
EvtBHadronic.cc:    g.setdiag(1.0,-1.0,-1.0,-1.0);
EvtBHadronic.cc:      -gf*EvtComplex(0.0,1.0)*dual(directProd(p4[0]+p4b,p4b-p4[0]))
EvtBHadronic.cc:    jb[0]=tds.cont1(p->getDaug(0)->epsParent(0).conj());
EvtBHadronic.cc:    jb[1]=tds.cont1(p->getDaug(0)->epsParent(1).conj());
EvtBHadronic.cc:    jb[2]=tds.cont1(p->getDaug(0)->epsParent(2).conj());
EvtBHadronic.cc:    g.setdiag(1.0,-1.0,-1.0,-1.0);
EvtBHadronic.cc:    ep_meson_b[1] = ((p->getDaug(0)->epsTensorParent(1)).cont2(p4b)).conj();
EvtBHadronic.cc:    ep_meson_bb[1]=ep_meson_b[1]*(p4b);
EvtBHadronic.cc:    jb[0]=EvtComplex(0.0,(1.0)*hf)*dual(directProd(pp,pm)).cont2(ep_meson_b[0])
EvtBHadronic.cc:    jb[1]=EvtComplex(0.0,(1.0)*hf)*dual(directProd(pp,pm)).cont2(ep_meson_b[1])
EvtBHadronic.cc:       -kf*ep_meson_b[1]
EvtBHadronic.cc:       -bp*ep_meson_bb[1]*pp-bm*ep_meson_bb[1]*pm;
EvtBHadronic.cc:    jb[2]=EvtComplex(0.0,(1.0)*hf)*dual(directProd(pp,pm)).cont2(ep_meson_b[2])
EvtBHadronic.cc:    jb[3]=EvtComplex(0.0,(1.0)*hf)*dual(directProd(pp,pm)).cont2(ep_meson_b[3])
EvtBHadronic.cc:    jb[4]=EvtComplex(0.0,(1.0)*hf)*dual(directProd(pp,pm)).cont2(ep_meson_b[4])
EvtBHadronic.cc:    ffmodel.getvectorff(B0,D1P10,EvtPDL::getMeanMass(D1P10),q2,&f,&gf,&ap,&am);
EvtBHadronic.cc:    g.setdiag(1.0,-1.0,-1.0,-1.0);
EvtBHadronic.cc:      +gf*EvtComplex(0.0,1.0)*dual(directProd(p4[0]+p4b,p4b-p4[0]))
EvtBHadronic.cc:    jb[0]=tds.cont1(p->getDaug(0)->epsParent(0).conj());
EvtBHadronic.cc:    jb[1]=tds.cont1(p->getDaug(0)->epsParent(1).conj());
EvtBHadronic.cc:    jb[2]=tds.cont1(p->getDaug(0)->epsParent(2).conj());
EvtBHadronic.cc:    // D_1
EvtBHadronic.cc:    nbcurrent=1;
EvtBHadronic.cc:  case 1: case 3: case 4:
EvtBHadronic.cc:    nwcurrent=1;
EvtBHadronic.cc:    jw[0]=p4[getNDaug()-1];
EvtBHadronic.cc:    norm=1.0/sqrt(p4[1].get(0)*p4[1].get(0)/p4[1].mass2()-1.0);
EvtBHadronic.cc:    jw[0]=norm*p->getDaug(getNDaug()-1)->epsParent(0);
EvtBHadronic.cc:    jw[1]=norm*p->getDaug(getNDaug()-1)->epsParent(1);
EvtBHadronic.cc:    jw[2]=norm*p->getDaug(getNDaug()-1)->epsParent(2);
EvtBHadronic.cc:  if (nbcurrent==1&&nwcurrent==1){
EvtBHadronic.cc:  if (nbcurrent==1){
EvtBHadronic.cc:    //report(INFO,"EvtGen") << " prob:"<<a<<" mass:"<<p4[1].mass()<< endl;
EvtBHadronic.cc:  if (nwcurrent==1){
EvtBHadronic.hh://      Copyright (C) 1998      Caltech, UCSB
EvtBHadronic.hh://    DJL/RYD     August 11, 1998         Module created
EvtBody3.cc:#include "TH1.h"
EvtBody3.cc: int nd1,nd2,ii,sn;
EvtBody3.cc:  nd1=0;
EvtBody3.cc:  nd2=1;
EvtBody3.cc:  nd1=1;
EvtBody3.cc: if(sn==1){
EvtBody3.cc:  nd1=0;
EvtBody3.cc: const char*  DA1=setDaugAng(nd1);
EvtBody3.cc: int d1=dp[0];  //m(d1,d2) pair at X axis
EvtBody3.cc: int d2=dp[1];
EvtBody3.cc: TH1F *did1= (TH1F*)f.Get(DA1);
EvtBody3.cc: TH1F *did2= (TH1F*)f.Get(DA2);
EvtBody3.cc: TAxis* d1x=did1->GetXaxis();
EvtBody3.cc: int    BINSd1 =did1->GetXaxis()->GetLast();
EvtBody3.cc: double av1,av2,avm1,avm2;
EvtBody3.cc: avm1=0.;
EvtBody3.cc:// look for maxmum for the first hist.1
EvtBody3.cc: for(i=1;i<BINSd1+1;i++){
EvtBody3.cc:   av1=did1->GetBinContent(i);
EvtBody3.cc:   if(av1>avm1) avm1=av1;
EvtBody3.cc:// look for maxmum for the second hist.1
EvtBody3.cc: for(i=1;i<BINSd2+1;i++){
EvtBody3.cc: for(i=1;i<BINSx+1;i++){
EvtBody3.cc:     for(j=1;j<BINSy+1;j++){
EvtBody3.cc:  EvtParticle *id1,*id2,*id3,*id4,*s1;
EvtBody3.cc:  EvtVector4R pd1,pd2,pd3,pd4,ps;
EvtBody3.cc:  EvtVector4R dp1,dp2;
EvtBody3.cc:  id1 =p->getDaug(d1); 
EvtBody3.cc:  pd1 =id1->getP4Lab();
EvtBody3.cc:  dp1 =p->getDaug(nd1)->getP4Lab();
EvtBody3.cc:  xmass2=(pd1+pd2).mass2();
EvtBody3.cc:  double rd1=EvtRandom::Flat(0.0, 1.0); 
EvtBody3.cc:  if(rd1>xratio) goto loop;  //sigle out event by 2-D mass distribution histo.
EvtBody3.cc:  double da1=dp1.get(3)/dp1.d3mag();
EvtBody3.cc:  int dbin1=did1->FindBin(da1);
EvtBody3.cc:  double dr1=(did1->GetBinContent(dbin1))/avm1;
EvtBody3.cc:  rd1=EvtRandom::Flat(0.0, 1.0);
EvtBody3.cc:  if(rd1>dr1) goto loop;  //sigle out event by the first angular distribution histo.
EvtBody3.cc:  rd1=EvtRandom::Flat(0.0, 1.0);
EvtBody3.cc:  if(rd1>dr2) goto loop;  //sigle out event by the second angular distribution histo.
EvtBsquark.cc://      Copyright (C) 1998      Caltech, UCSB
EvtBsquark.cc://    RYD       January 17, 1997       Module created
EvtBsquark.cc:  int charge=1;
EvtBsquark.cc:  lepton = p->getDaug(1);
EvtBsquark.cc:    charge=-1;
EvtBsquark.cc:  if (charge==-1){
EvtBsquark.cc:  double tanbeta=getArg(1);
EvtBsquark.cc:  double mc=1.3;
EvtBsquark.cc:  EvtComplex U11=cos(phim);
EvtBsquark.cc:  EvtComplex U12=sin(phim);
EvtBsquark.cc:  EvtComplex U21=-sin(phim);
EvtBsquark.cc:  EvtComplex V11=cos(phip);
EvtBsquark.cc:  EvtComplex V12=sin(phip);
EvtBsquark.cc:  EvtComplex V21=-sin(phip);
EvtBsquark.cc:  double mchi1=mchargino;  
EvtBsquark.cc:  double g=1.0;
EvtBsquark.cc:  EvtComplex a1=mchi1*(U11*ctheta-mb*U12*stheta/(sqrt(2.0)*mw*cosbeta));
EvtBsquark.cc:  EvtComplex a2=mchi2*(U21*ctheta-mb*U22*stheta/(sqrt(2.0)*mw*cosbeta));
EvtBsquark.cc:  EvtComplex b1=mc*conj(V12)*ctheta/(sqrt(2.0)*mw*sinbeta);
EvtBsquark.cc:  EvtComplex f1=-(g*g*V11*vcsb)/((p4b-p4c).mass2()-mchi1*mchi1);
EvtBsquark.cc:  EvtComplex f2=-(g*g*V21*vcsb)/((p4b-p4c).mass2()-mchi1*mchi2);
EvtBsquark.cc:  //report(INFO,"EvtGen") <<g<<" "<<V11<<" "<<FL<<" "<<vcsb<<" "<<mchi1<<endl;
EvtBsquark.cc:  //report(INFO,"EvtGen") << "f1:"<<f1<<" "<<(p4b-p4c).mass2()<<endl;
EvtBsquark.cc:                       -p4sn.get(1)*EvtGammaMatrix::g1()
EvtBsquark.cc:      if (charge==-1){
EvtBsquark.cc:      M[ic][il]=f1*(a1*a+b1*b)+f2*(a2*a+b2*b);
EvtBsquark.cc:      //report(INFO,"EvtGen") << "Contr1:"<<a1<<" "<<a<<" "<<b1<<" "<<b<<endl;
EvtBsquark.cc:      //report(INFO,"EvtGen") <<"case1:"<<f1<<" "<<a1<<" "<<b1<<" "<<a<<" "<<b<<endl;
EvtBsquark.cc:		   M[1][0]*conj(M[1][0])+
EvtBsquark.cc:		   M[0][1]*conj(M[0][1])+
EvtBsquark.cc:		   M[1][1]*conj(M[1][1]));
EvtBsquark.hh://      Copyright (C) 1998      Caltech, UCSB
EvtBsquark.hh://    DJL/RYD     August 11, 1998         Module created
EvtBto2piCPiso.cc://      Copyright (C) 1998      Caltech, UCSB
EvtBto2piCPiso.cc://    RYD,NK     Febuary 7, 1998         Module created
EvtBto2piCPiso.cc:  // check that there are 11 arguments
EvtBto2piCPiso.cc:  checkNArg(11);
EvtBto2piCPiso.cc:  checkSpinDaughter(1,EvtSpinType::SCALAR);
EvtBto2piCPiso.cc:if (((getDaugs()[0]==PIP) && (getDaugs()[1]==PIM)) || ((getDaugs()[0]==PIM) && (getDaugs()[1]==PIP))) {
EvtBto2piCPiso.cc:if ((getDaugs()[0]==PI0) && (getDaugs()[1]==PI0)) {
EvtBto2piCPiso.cc:if (((getDaugs()[0]==PIP) && (getDaugs()[1]==PI0)) || ((getDaugs()[0]==PI0) && (getDaugs()[1]==PIP))) {
EvtBto2piCPiso.cc:if (((getDaugs()[0]==PI0) && (getDaugs()[1]==PIM)) || ((getDaugs()[0]==PIM) && (getDaugs()[1]==PI0))) {
EvtBto2piCPiso.cc:  double tag = EvtRandom::Flat(0.0,1.0);
EvtBto2piCPiso.cc:   EvtCPUtil::OtherB(p,t,other_b,1.0);
EvtBto2piCPiso.cc:  if (((getDaugs()[0]==PIP) && (getDaugs()[1]==PI0)) || ((getDaugs()[0]==PI0) && (getDaugs()[1]==PIP))) {
EvtBto2piCPiso.cc:    charged = 1;
EvtBto2piCPiso.cc:  if (((getDaugs()[0]==PI0) && (getDaugs()[1]==PIM)) || ((getDaugs()[0]==PIM) && (getDaugs()[1]==PI0))) {
EvtBto2piCPiso.cc:    charged = 1;  
EvtBto2piCPiso.cc:  if (((getDaugs()[0]==PIP) && (getDaugs()[1]==PIM)) || ((getDaugs()[0]==PIM) && (getDaugs()[1]==PIP))) {
EvtBto2piCPiso.cc:  if ((getDaugs()[0]==PI0) && (getDaugs()[1]==PI0)) {
EvtBto2piCPiso.cc:      amp=A*cos(getArg(1)*t/(2*EvtConst::c))+
EvtBto2piCPiso.cc:	EvtComplex(0.0,1.0)*Abar*sin(getArg(1)*t/(2*EvtConst::c));
EvtBto2piCPiso.cc:	EvtComplex(0.0,1.0)*sin(getArg(1)*t/(2*EvtConst::c))+       
EvtBto2piCPiso.cc:	Abar*cos(getArg(1)*t/(2*EvtConst::c));
EvtBto2piCPiso.hh://      Copyright (C) 1998      Caltech, UCSB
EvtBto2piCPiso.hh://    DJL/RYD     August 11, 1998         Module created
EvtBTo3piCP.cc://      Copyright (C) 1998      Caltech, UCSB
EvtBTo3piCP.cc://    RYD/VERSILLE     March 2, 1997        Module created
EvtBTo3piCP.cc:  checkSpinDaughter(1,EvtSpinType::SCALAR);
EvtBTo3piCP.cc:  setProbMax(1.5);
EvtBTo3piCP.cc:  pim=p->getDaug(1);
EvtBTo3piCP.cc:  double alpha=getArg(1);
EvtBTo3piCP.cc:  static int first=1;
EvtBTo3piCP.cc:  if (first==1) {
EvtBTo3piCP.cc:    iset=10000;
EvtBTo3piCP.cc:  double p4piplus[4],p4piminus[4],p4gamm1[4],p4gamm2[4]; 
EvtBTo3piCP.cc:  evt3pions_(&alpha,&iset,p4piplus,p4piminus,p4gamm1,p4gamm2,
EvtBTo3piCP.cc:  p4[0].set(p4piplus[3],p4piplus[0],p4piplus[1],p4piplus[2]);
EvtBTo3piCP.cc:  p4[1].set(p4piminus[3],p4piminus[0],p4piminus[1],p4piminus[2]);
EvtBTo3piCP.cc:  p4[2].set(p4gamm1[3]+p4gamm2[3],p4gamm1[0]+p4gamm2[0],
EvtBTo3piCP.cc:	    p4gamm1[1]+p4gamm2[1],p4gamm1[2]+p4gamm2[2]);
EvtBTo3piCP.cc:    pim->init( getDaug(1), p4[1] );
EvtBTo3piCP.cc:    pip->init( getDaug(0), p4[1] );
EvtBTo3piCP.cc:    pim->init( getDaug(1), p4[0] );  
EvtBTo3piCP.cc:       EvtComplex(0.,1.)*Abar*sin(dm*t/(2*EvtConst::c));
EvtBTo3piCP.cc:       EvtComplex(0.,1.)*A*sin(dm*t/(2*EvtConst::c));
EvtBTo3piCP.hh://      Copyright (C) 1998      Caltech, UCSB
EvtBTo3piCP.hh://    DJL/RYD     August 11, 1998         Module created
EvtBTo3pi.F:C      Copyright (C) 1998      Caltech, UCSB
EvtBTo3pi.F:C    DJL/RYD     August 11, 1998         Module created
EvtBTo3pi.F:C [1] first_step
EvtBTo3pi.F:C                 of Real*4 random number between 0 and 1	
EvtBTo3pi.F:C                 A. Snyder and H. Quinn [Phys.Rev.D48 (1993) 2139] 
EvtBTo3pi.F:C                 rho resonances [rho(770:1450:1700)]. The parameters
EvtBTo3pi.F:C                 which might be found in CERN-PPE:97013 (submitted to
EvtBTo3pi.F:      Common/Pawc/Hmemor(1000000)
EvtBTo3pi.F:      Real*8  p_pi_plus(4),p_pi_minus(4),p_gamma_1(4),p_gamma_2(4)
EvtBTo3pi.F:      Real*8  q_pi_plus(4),q_pi_minus(4),q_gamma_1(4),q_gamma_2(4)
EvtBTo3pi.F:      Call Hlimit(1000000)
EvtBTo3pi.F:      N_asked    =100000
EvtBTo3pi.F:      weight_max = 1.0
EvtBTo3pi.F:      xd         = 0.71
EvtBTo3pi.F:      Call hbook2(1,' Dalitz Plot ',500,0.,30.,500,0.,30.,0.)
EvtBTo3pi.F:      Do number=1,N_asked ! weighted events as generated here 
EvtBTo3pi.F:      If(number.eq.1) then
EvtBTo3pi.F:      iset=10000          ! 10^4 events are used to normalize amplitudes
EvtBTo3pi.F:     + p_pi_plus,p_pi_minus,p_gamma_1,p_gamma_2,
EvtBTo3pi.F: 1    Continue
EvtBTo3pi.F:      If(t3pions.gt.10.) Go to 1
EvtBTo3pi.F:      If(ttag   .gt.10.) Go to 2
EvtBTo3pi.F:      N_gener=N_gener+1  
EvtBTo3pi.F:      m_rhop_2=(p_pi_plus (4)+p_gamma_1(4)+p_gamma_2(4))**2 
EvtBTo3pi.F:      m_rhom_2=(p_pi_minus(4)+p_gamma_1(4)+p_gamma_2(4))**2  
EvtBTo3pi.F:      do j=1,3
EvtBTo3pi.F:      m_rhop_2=m_rhop_2-(p_pi_plus (j)+p_gamma_1(j)+p_gamma_2(j))**2 
EvtBTo3pi.F:      m_rhom_2=m_rhom_2-(p_pi_minus(j)+p_gamma_1(j)+p_gamma_2(j))**2  
EvtBTo3pi.F:                     Call hf2(1,Real(m_rhop_2),Real(m_rhom_2),1.)
EvtBTo3pi.F:      If(Tag.gt.0.5) Call hf2(2,Real(m_rhop_2),Real(m_rhom_2),1.) 
EvtBTo3pi.F:      If(Tag.lt.0.5) Call hf2(3,Real(m_rhop_2),Real(m_rhom_2),1.)  
EvtBTo3pi.F:      q_gamma_1 (4)=   p_gamma_1 (4)
EvtBTo3pi.F:      do i=1,3
EvtBTo3pi.F:      q_gamma_1 (i)= - p_gamma_1 (i)
EvtBTo3pi.F:       jset=-1
EvtBTo3pi.F:     + q_pi_plus,q_pi_minus,q_gamma_1,q_gamma_2,
EvtBTo3pi.F:     + p_pi_plus,p_pi_minus,p_gamma_1,p_gamma_2,
EvtBTo3pi.F:c       ---	          p_gamma_1 : the four momentum of the first  photon   
EvtBTo3pi.F:      Real*8  p_pi_plus(4),p_pi_minus(4),p_gamma_1(4),p_gamma_2(4)
EvtBTo3pi.F:      Real*8  p1(5),p2(5),p3(5),Gamma1(5),Gamma2(5) 
EvtBTo3pi.F:      Real*8 factor,factor_max,AB0,AB0bar,Ainter,R1,R2 
EvtBTo3pi.F:      data factor_max/1.D+00/
EvtBTo3pi.F:      p1(5)=M_pip**2
EvtBTo3pi.F: 10   continue
EvtBTo3pi.F:      call Evtfirst_step(p1,p2,p3)
EvtBTo3pi.F:      Call EvtCompute(p1,p2,p3,
EvtBTo3pi.F:      if(ierr.ne.0)  Go To 10
EvtBTo3pi.F:      Do i=1,4
EvtBTo3pi.F:      p1(i)= p_pi_plus (i)
EvtBTo3pi.F:      p2(i)= p_gamma_1 (i) + p_gamma_2 (i)
EvtBTo3pi.F:      p1(5)= M_pip**2
EvtBTo3pi.F:	Call EvtCompute(p1,p2,p3,
EvtBTo3pi.F:      p1(5)=M_pip**2
EvtBTo3pi.F:      Do number=1,iset
EvtBTo3pi.F:      call Evtfirst_step(p1,p2,p3)
EvtBTo3pi.F:      Call EvtCompute(p1,p2,p3,Real_B0,Imag_B0,Real_B0bar,
EvtBTo3pi.F:      R1    =  (AB0-AB0bar) /(AB0+AB0bar)
EvtBTo3pi.F:      factor=(1.D+00+Dsqrt(R1**2+R2**2))*(AB0+AB0bar)/2.D+00
EvtBTo3pi.F:      factor_max=1.D+00/Dsqrt(factor_max)
EvtBTo3pi.F:c	Print*,'factor_max',factor_max,p1,p2,p3
EvtBTo3pi.F:c     P1,p2,p3 ---> random rotation in B rest frame
EvtBTo3pi.F:      Call EvtRotation(p1,1)
EvtBTo3pi.F:      Call EvtGammaGamma(p2,Gamma1,Gamma2)
EvtBTo3pi.F:      Do i=1,4
EvtBTo3pi.F:      p_pi_plus (i)=p1    (i)      
EvtBTo3pi.F:      p_gamma_1 (i)=Gamma1(i)
EvtBTo3pi.F:      subroutine Evtfirst_step(P1,P2,P3)
EvtBTo3pi.F:c	--- This routine generates the 5-vectors P1,P2,P3 
EvtBTo3pi.F:c	--- 		P1(1) = Px	
EvtBTo3pi.F:c	--- 		P1(2) = Py
EvtBTo3pi.F:c	--- 		P1(3) = Pz
EvtBTo3pi.F:c	--- 		P1(4) = E
EvtBTo3pi.F:c	--- 		P1(5) = M**2
EvtBTo3pi.F:C 	---	Particle [1] is the pi+                                                       
EvtBTo3pi.F:	 real*8 P1(5),P2(5),P3(5)
EvtBTo3pi.F:      	real*8 m12,min_m12, max_m12
EvtBTo3pi.F:      	real*8 m13,min_m13, max_m13
EvtBTo3pi.F:      	Real*8 cost13,cost12,cost23
EvtBTo3pi.F:      	real*8 p1mom,p2mom,p3mom
EvtBTo3pi.F:      	max_m12 = M_B**2 
EvtBTo3pi.F:      	min_m12 = P1(5) + P2(5) 
EvtBTo3pi.F:      	max_m13 = M_B**2 
EvtBTo3pi.F:      	min_m13 = P1(5) + P3(5)
EvtBTo3pi.F:100   	Continue
EvtBTo3pi.F:	if(z.lt.1.) Then
EvtBTo3pi.F:		m12 = ranf()*(max_m12-min_m12)+min_m12
EvtBTo3pi.F:		m12 = mass**2
EvtBTo3pi.F:		m13 = ranf()*(max_m13-min_m13)+min_m13
EvtBTo3pi.F:		m23 = MB2 - m12 - m13
EvtBTo3pi.F:		m13 = ranf()*(max_m13-min_m13)+min_m13
EvtBTo3pi.F:		m13 =  mass**2
EvtBTo3pi.F:	 	m12 = ranf()*(max_m12-min_m12)+min_m12
EvtBTo3pi.F:		m23 = MB2 - m12 - m13
EvtBTo3pi.F:		m12 = ranf()*(max_m12-min_m12)+min_m12
EvtBTo3pi.F:      		m13 = MB2 - m12 - m23
EvtBTo3pi.F:      	If(m23.lt.min_m23.or.m23.gt.max_m23) Go to 100
EvtBTo3pi.F:      	If(m13.lt.min_m13.or.m13.gt.max_m13) Go to 100
EvtBTo3pi.F:      	If(m12.lt.min_m12.or.m12.gt.max_m12) Go to 100
EvtBTo3pi.F:c	--- Between -1 and +1 ?
EvtBTo3pi.F:      	P1(4)=(M_B**2+P1(5)-m23)/(2.*M_B)
EvtBTo3pi.F:      	P2(4)=(M_B**2+P2(5)-m13)/(2.*M_B)
EvtBTo3pi.F:      	P3(4)=(M_B**2+P3(5)-m12)/(2.*M_B)
EvtBTo3pi.F:        if (p1(4)**2-P1(5).le.0.0) go to 100
EvtBTo3pi.F:        if (p2(4)**2-P2(5).le.0.0) go to 100
EvtBTo3pi.F:        if (p3(4)**2-P3(5).le.0.0) go to 100
EvtBTo3pi.F:      	p1mom=Dsqrt(p1(4)**2-P1(5))      
EvtBTo3pi.F:      	cost13=(2.*p1(4)*p3(4)+P1(5)+p3(5)-m13)/(2.*p1mom*p3mom)
EvtBTo3pi.F:      	cost12=(2.*p1(4)*p2(4)+P1(5)+p2(5)-m12)/(2.*p1mom*p2mom)      
EvtBTo3pi.F:      	If(Dabs(cost13).gt.1.) Go to 100
EvtBTo3pi.F:      	If(Dabs(cost12).gt.1.) Go to 100
EvtBTo3pi.F:      	If(Dabs(cost23).gt.1.) Go to 100
EvtBTo3pi.F:c	--- Filling the 5-vectors P1,P2,P3
EvtBTo3pi.F:      	P3(1) = 0
EvtBTo3pi.F:      	P1(3) = p1mom*cost13
EvtBTo3pi.F:      	P1(1) = p1mom*Dsqrt(1.D+00-cost13**2)
EvtBTo3pi.F:      	p1(2) = 0.
EvtBTo3pi.F:      	Do i=1,3
EvtBTo3pi.F:      	P2(i)=-p1(i)-p3(i)
EvtBTo3pi.F:      Subroutine EvtCompute(p1,p2,p3,
EvtBTo3pi.F:      	Real*8 m12, m13, m23, W12, W13, W23, Wtot
EvtBTo3pi.F:      	Complex*16 MatBp,MatBm
EvtBTo3pi.F:      	Real*8     p1(5),p2(5),p3(5)
EvtBTo3pi.F:        COMPLEX*16 Mat_rhop,Mat_rhom,Mat_rho0
EvtBTo3pi.F:        Complex*16 BreitWigner,Mat_1,Mat_2,Mat_3                                         
EvtBTo3pi.F:	if(evt_gmas(p1,p2).lt.0.or.evt_gmas(p1,p3)
EvtBTo3pi.F:		ierr=1
EvtBTo3pi.F:      	m12 = sqrt(evt_gmas(p1,p2))
EvtBTo3pi.F:      	m13 = sqrt(evt_gmas(p1,p3))
EvtBTo3pi.F: 	W12 = (1./m12)*1./((Mass_rho - m12)**2+(Gam_rho/2.)**2)
EvtBTo3pi.F:      	W13 = (1./m13)*1./((Mass_rho - m13)**2+(Gam_rho/2.)**2)
EvtBTo3pi.F:      	W23 = (1./m23)*1./((Mass_rho - m23)**2+(Gam_rho/2.)**2)
EvtBTo3pi.F:      	Wtot = 1./Dsqrt(W12 + W13 + W23)                                
EvtBTo3pi.F:	Wtot = 1.
EvtBTo3pi.F:      	Mat_rhop=BreitWigner(p1,p2,p3,ierr)                                            
EvtBTo3pi.F:      	Mat_rhom=BreitWigner(p2,p3,p1,ierr)                                            
EvtBTo3pi.F:      	Mat_rho0=BreitWigner(p1,p3,p2,ierr)   
EvtBTo3pi.F:        Mat_1 =  Mat_s3*Mat_rhop
EvtBTo3pi.F:      	MatBp    = (Mat_1+Mat_2+Mat_3) * Wtot 
EvtBTo3pi.F:      	Mat_1 =  Nat_s3*Mat_rhom
EvtBTo3pi.F:      	MatBm    = (Mat_1+Mat_2+Mat_3) * Wtot
EvtBTo3pi.F:      Function BreitWigner(p1,p2,p3,ierr)
EvtBTo3pi.F:      	Complex *16 BreitWigner,EvtCRhoF_W 
EvtBTo3pi.F:      	Real*8     p1(5),p2(5),p3(5)                                              
EvtBTo3pi.F:      	Real*8 E12_2,m12_2,beta,gamma,argu,m13_2,costet,coscms,m12                             
EvtBTo3pi.F:      	Real *8 p1z,p1zcms12,e1cms12,p1cms12 
EvtBTo3pi.F:        	E12_2=(p1(4)+p2(4))**2                                                    
EvtBTo3pi.F:      	m12_2=E12_2                                                               
EvtBTo3pi.F:      	Do i=1,3                                                                  
EvtBTo3pi.F:      		m12_2=m12_2-(p1(i)+p2(i))**2                                              
EvtBTo3pi.F:      	Argu = 1.D+00 - m12_2 / E12_2                                             
EvtBTo3pi.F:      	If(m12_2.gt.0.)Then                                                       
EvtBTo3pi.F:      		m12     = Dsqrt(m12_2)                                                    
EvtBTo3pi.F:      		Print *,'Abnormal m12  ! m12_2 = ',m12_2 
EvtBTo3pi.F:      		Print*,'p1 = ',p1      		
EvtBTo3pi.F:      	gamma=Dsqrt(E12_2/m12_2)                                                    
EvtBTo3pi.F:      	m13_2=(p1(4)+p3(4))**2                                                    
EvtBTo3pi.F:      	Do i=1,3                                                                  
EvtBTo3pi.F:      		m13_2=m13_2-(p1(i)+p3(i))**2                                              
EvtBTo3pi.F:	if(m13_2.lt.0)            Go To 50
EvtBTo3pi.F:        if((p1(4)**2-p1(5)).lt.0) Go To 50
EvtBTo3pi.F:      	costet= (2.D+00*p1(4)*p3(4)-m13_2+p1(5)+p3(5))                            
EvtBTo3pi.F:     >        (2.D+00*Dsqrt( (p1(4)**2-p1(5)) * (p3(4)**2-p3(5)) ))              
EvtBTo3pi.F:C 	---	get the costet in the 1-2 CMS 
EvtBTo3pi.F:      	p1z=dsqrt(P1(4)**2-p1(5))*costet                                               
EvtBTo3pi.F:      	p1zcms12=gamma*(p1z+beta*P1(4))
EvtBTo3pi.F:      	e1cms12 =gamma*(p1(4)+beta*p1z)
EvtBTo3pi.F:      	p1cms12 =Dsqrt(e1cms12**2-p1(5))
EvtBTo3pi.F:      	coscms=p1zcms12/p1cms12   
EvtBTo3pi.F:      		BreitWigner= coscms * EvtCRhoF_W( m12_2 )
EvtBTo3pi.F:      	 Factor  = 2.D+00* ( (Mass_rho-m12)**2+(0.5D+00*Gam_rho)**2 )              
EvtBTo3pi.F:      	 Num_real=  (Mass_rho-m12)                    * Factor                     
EvtBTo3pi.F:      	Complex *16   Mat_Tp0,Mat_Tm0,Mat_T0p,Mat_T0m,Mat_Tpm,Mat_Tmp             
EvtBTo3pi.F:     >             ,Mat_P1,Mat_P0                                               
EvtBTo3pi.F:     >             ,Nat_P1,Nat_P0, Mat_Ppm, Mat_Pmp                                            
EvtBTo3pi.F:      pi       = 3.141592653 D+00
EvtBTo3pi.F:      M_pip    = 0.13957D0                                                   
EvtBTo3pi.F:      M_pi0    = 0.134976D0                                                  
EvtBTo3pi.F:      Gam_rho  = 0.150D0
EvtBTo3pi.F:      Mass_Kstarp = 0.8916 
EvtBTo3pi.F:      Mass_Kstar0 = 0.8961 
EvtBTo3pi.F:     >Sqrt((rho_gen**2+eta_gen**2)/((1.-rho_gen)**2+eta_gen**2))
EvtBTo3pi.F:      Mat_Tp0 = Dcmplx(calpha, -salpha) *1.09D+00        
EvtBTo3pi.F:      Mat_Tm0 = Dcmplx(calpha, -salpha) *1.09D+00                    
EvtBTo3pi.F:      Mat_Tpm = Dcmplx(calpha, -salpha) *1.00D+00                  
EvtBTo3pi.F:      Mat_Pmp =  Dcmplx(Dcos(2.D0),Dsin(2.D0))*0.15D0
EvtBTo3pi.F:      Mat_P1  = 0.5D0*(Mat_Ppm-Mat_Pmp)
EvtBTo3pi.F:      Nat_Tp0 = Dcmplx(calpha, salpha) *1.09D+00                      
EvtBTo3pi.F:      Nat_Tm0 = Dcmplx(calpha, salpha) *1.09D+00                       
EvtBTo3pi.F:      Nat_Tpm = Dcmplx(calpha, salpha) *1.00D+00                       
EvtBTo3pi.F:      Nat_P1  = Mat_P1                                       
EvtBTo3pi.F:      Mat_S1  = Mat_Tp0 + 2.D+00 * Mat_P1                                       
EvtBTo3pi.F:      Mat_S2  = Mat_T0p - 2.D+00 * Mat_P1                                       
EvtBTo3pi.F:      Mat_S3  = Mat_Tpm + Mat_P1 + Mat_P0                                       
EvtBTo3pi.F:      Mat_S4  = Mat_Tmp - Mat_P1 + Mat_P0                                       
EvtBTo3pi.F:      Nat_S1  = Nat_Tp0 + 2.D+00 * Nat_P1                                       
EvtBTo3pi.F:      Nat_S2  = Nat_T0p - 2.D+00 * Nat_P1                                       
EvtBTo3pi.F:      Nat_S3  = Nat_Tpm + Nat_P1 + Nat_P0                                       
EvtBTo3pi.F:      Nat_S4  = Nat_Tmp - Nat_P1 + Nat_P0                                       
EvtBTo3pi.F:C Gautier 14-Jan-98 : 
EvtBTo3pi.F:     >          + Dcmplx(cbeta,   sbeta)  * Dcmplx(-1.200,0.) 
EvtBTo3pi.F:      MatKstar0 = Dcmplx(calpha, -salpha) * Dcmplx( 0.015,0.)
EvtBTo3pi.F:      MatKrho   = Dcmplx(calpha, -salpha) * Dcmplx( 0.130,0.)
EvtBTo3pi.F:     >          + Dcmplx(cbeta,   sbeta)  * Dcmplx( 0.160,0.) 
EvtBTo3pi.F:c       Print*,'Mat_P1',Mat_P1
EvtBTo3pi.F:      	subroutine EvtGammaGamma(P2,PG1Boost,PG2Boost)
EvtBTo3pi.F:	Real*8 PG1Boost(5), PG2Boost(5)
EvtBTo3pi.F:	Real*8 PGamma1(5), PGamma2(5)
EvtBTo3pi.F:	Do i=1, 3
EvtBTo3pi.F:        cosThetaRot = ranf()*2.D+00-1.D+00
EvtBTo3pi.F:        sinThetaRot = Dsqrt(1.D+00 - cosThetaRot**2)
EvtBTo3pi.F:        PGamma1(1) = EGammaCmsPi0 * sinThetaRot * Dcos(PhiRot)
EvtBTo3pi.F:        PGamma1(2) = EGammaCmsPi0 * sinThetaRot * Dsin(PhiRot)
EvtBTo3pi.F:        PGamma1(3) = EGammaCmsPi0 * cosThetaRot
EvtBTo3pi.F:        PGamma1(4) = EGammaCmsPi0
EvtBTo3pi.F:        PGamma1(5) = 0.
EvtBTo3pi.F:        PGamma2(1) = - PGamma1(1)
EvtBTo3pi.F:        PGamma2(2) = - PGamma1(2)
EvtBTo3pi.F:        PGamma2(3) = - PGamma1(3)
EvtBTo3pi.F:        PGamma2(4) =   PGamma1(4)
EvtBTo3pi.F:        Call EvtREFREF(BETA,PGamma1,PG1Boost,1)
EvtBTo3pi.F:        Call EvtREFREF(BETA,PGamma2,PG2Boost,1)
EvtBTo3pi.F:c 	---	 S     =+1.
EvtBTo3pi.F:c 	---	 S     =-1.
EvtBTo3pi.F:      	BETA2 =BETA(1)**2+BETA(2)**2+BETA(3)**2
EvtBTo3pi.F:      	IF(BETA2.GT.1.D0) Print*,'Beta**2 .gt.1!!!'
EvtBTo3pi.F:      	GAMMA=1./DSQRT(1.D0-BETA2)
EvtBTo3pi.F:      	Do i=1,3
EvtBTo3pi.F:      	DO 1 I=1,3
EvtBTo3pi.F:     >      		(PIN(4)+GAMMA/(GAMMA+1.)*BETPIN)
EvtBTo3pi.F:  1   	CONTINUE
EvtBTo3pi.F:	function evt_gmas(P1,P2)
EvtBTo3pi.F:c	--- 	compute the invariant mass between particle 1 and 2
EvtBTo3pi.F:	real*8 p1(5),P2(5)
EvtBTo3pi.F:	evt_gmas = (P1(4)+P2(4))**2
EvtBTo3pi.F:	do i=1,3
EvtBTo3pi.F:		evt_gmas = evt_gmas - (P1(i) + P2(i))**2
EvtBTo3pi.F:      	Real*8 c1,c2,c3,s1,s2,s3
EvtBTo3pi.F:                c1=2.D+00*ranf()-1.D+00
EvtBTo3pi.F:                s1=Dsqrt(1.D+00-c1**2)
EvtBTo3pi.F:      		MatRot(1,1)=c1
EvtBTo3pi.F:      		MatRot(1,2)=s1*c3
EvtBTo3pi.F:      		MatRot(1,3)=s1*s3
EvtBTo3pi.F:      		MatRot(2,1)=-s1*c2
EvtBTo3pi.F:      		MatRot(2,2)=c1*c2*c3-s2*s3
EvtBTo3pi.F:      		MatRot(2,3)=c1*c2*s3+s2*c3
EvtBTo3pi.F:      		MatRot(3,1)=s1*s2
EvtBTo3pi.F:      		MatRot(3,2)=-c1*s2*c3-c2*s3
EvtBTo3pi.F:      		MatRot(3,3)=-c1*s2*s3+c2*c3
EvtBTo3pi.F:      	Do i=1,3
EvtBTo3pi.F:      	Do i=1,3
EvtBTo3pi.F:      	  Do j=1,3
EvtBTo3pi.F:      COMPLEX*16 EvtCRhoF_W, EvtcBW_KS, EvtcBW_GS
EvtBTo3pi.F:      PARAMETER (AmPi2=0.13956995**2)
EvtBTo3pi.F:        GamRho    =  0.1477
EvtBTo3pi.F:C...rho(1450)
EvtBTo3pi.F:        AmRhoP    =  1.465
EvtBTo3pi.F:C...rho(1700)
EvtBTo3pi.F:        AmRhoPP   =  1.760
EvtBTo3pi.F:        GamRhoPP  =  0.215
EvtBTo3pi.F:        lambda    =  1.0
EvtBTo3pi.F:        GamRho    =  0.1508
EvtBTo3pi.F:C...rho(1450)
EvtBTo3pi.F:        AmRhoP    =  1.448
EvtBTo3pi.F:        beta      =  -0.161
EvtBTo3pi.F:C...rho(1700)
EvtBTo3pi.F:        AmRhoPP   =  1.757
EvtBTo3pi.F:        lambda    =  1.0
EvtBTo3pi.F:     >       EvtcBW_KS(s,AmRhoP**2,GamRhoP)*(beta)  +     !...BW-rho(1450)
EvtBTo3pi.F:     >       EvtcBW_KS(s,AmRhoPP**2,GamRhoPP)*(gamma) ) / !...BW-rho(1700)
EvtBTo3pi.F:     >       (1.+beta+gamma)
EvtBTo3pi.F:     >       (1.+beta+gamma)
EvtBTo3pi.F:      COMPLEX*16 EvtcBW_KS
EvtBTo3pi.F:      PARAMETER (AmPi2=0.13956995**2)
EvtBTo3pi.F:      G  =  Gam* (Am2/s)**lambda * ((s-4.*AmPi2)/(Am2-4.*AmPi2))**1.5
EvtBTo3pi.F:      COMPLEX*16 EvtcBW_GS
EvtBTo3pi.F:      PARAMETER (AmPi2=0.13956995**2)
EvtBTo3pi.F:      G  =  Gam* (Am2/s)**lambda * ((s-4.*AmPi2)/(Am2-4.*AmPi2))**1.5
EvtBTo3pi.F:      z1 =  Am2 - s + Evtfs(s,Am2,Gam)
EvtBTo3pi.F:      X  =  z3 * z1
EvtBTo3pi.F:      N  =  z1**2 + z2**2
EvtBTo3pi.F:      PARAMETER (AmPi2=0.13956995**2)
EvtBTo3pi.F:      PARAMETER (pi=3.141593)
EvtBTo3pi.F:      PARAMETER (AmPi=0.13957)
EvtBTo3pi.F:      PARAMETER (pi=3.141593)
EvtBTo3pi.F:      dh_ds = h(s) * (1./(8.*k(s)**2) - 1./(2.*s)) + 1./(2.*pi*s)
EvtBTo3pi.F:      PARAMETER (pi=3.141593)
EvtBTo3pi.F:      PARAMETER (AmPi=0.13956995)
EvtBTo3pi.inc:      Complex *16  
EvtBTo3pi.inc:     >              Mat_S1,Mat_S2,Mat_S3,Mat_S4,Mat_S5                          
EvtBTo3pi.inc:     >             ,Nat_S1,Nat_S2,Nat_S3,Nat_S4,Nat_S5
EvtBTo3pi.inc:     >              Mat_S1,Mat_S2,Mat_S3,Mat_S4,Mat_S5                          
EvtBTo3pi.inc:     >             ,Nat_S1,Nat_S2,Nat_S3,Nat_S4,Nat_S5
EvtBTo3piMPP.F:C      Copyright (C) 1998      Caltech, UCSB
EvtBTo3piMPP.F:C    DJL/RYD     August 11, 1998         Module created
EvtBTo3piMPP.F:C [1] first_step_MPP
EvtBTo3piMPP.F:C                 of Real*4 random number between 0 and 1	
EvtBTo3piMPP.F:C                 A. Snyder and H. Quinn [Phys.Rev.D48 (1993) 2139] 
EvtBTo3piMPP.F:C                 rho resonances [rho(770:1450:1700)]. The parameters
EvtBTo3piMPP.F:C                 which might be found in CERN-PPE:97013 (submitted to
EvtBTo3piMPP.F:c      Common/Pawc/Hmemor(1000000)
EvtBTo3piMPP.F:c      Call Hlimit(1000000)
EvtBTo3piMPP.F:      Real*8  p_pi_minus(4),p_pi_plus_1(4),p_pi_plus_2(4)
EvtBTo3piMPP.F:      Real*8  m_rho12,m_rho13
EvtBTo3piMPP.F:      N_asked    = 100000
EvtBTo3piMPP.F:      weight_max = 1.0
EvtBTo3piMPP.F:      Call hbook2(11,' Dalitz Plot ',200,0.,30.,200,0.,30.,0.)
EvtBTo3piMPP.F:      Call hbook2(12,' B+ decay    ',200,0.,30.,200,0.,30.,0.)
EvtBTo3piMPP.F:      Call hbook2(13,' B- decay    ',200,0.,30.,200,0.,30.,0.)
EvtBTo3piMPP.F:      Call hbook1(14,' Weight      ',200,0., 5.,0.)
EvtBTo3piMPP.F:      Call hbook1(15,' pi+pi-      ',200,0., 5.,0.)
EvtBTo3piMPP.F:      Do number=1,N_asked ! weighted events as generated here 
EvtBTo3piMPP.F:      If(number.eq.1) then
EvtBTo3piMPP.F:      iset=10000          ! 10^4 events are used to normalize amplitudes
EvtBTo3piMPP.F:     + p_pi_minus,p_pi_plus_1,p_pi_plus_2,
EvtBTo3piMPP.F:		     Call hf1(14,Real(Weight),1.) 
EvtBTo3piMPP.F:      N_gener=N_gener+1  
EvtBTo3piMPP.F:      m_rho12=(p_pi_minus(4)+P_pi_plus_1(4))**2 
EvtBTo3piMPP.F:      m_rho13=(p_pi_minus(4)+P_pi_plus_2(4))**2 
EvtBTo3piMPP.F:      do j=1,3
EvtBTo3piMPP.F:      m_rho12=m_rho12-(p_pi_minus(j)+P_pi_plus_1(j))**2 
EvtBTo3piMPP.F:      m_rho13=m_rho13-(p_pi_minus(j)+P_pi_plus_2(j))**2  
EvtBTo3piMPP.F:                     Call hf2(11,Real(m_rho12),Real(m_rho13),1.)
EvtBTo3piMPP.F:      If(Tag.gt.0.5) Call hf2(12,Real(m_rho12),Real(m_rho13),1.) 
EvtBTo3piMPP.F:      If(Tag.lt.0.5) Call hf2(13,Real(m_rho12),Real(m_rho13),1.)  
EvtBTo3piMPP.F:		     Call hf1(15,Real(m_rho12),1.) 
EvtBTo3piMPP.F:		     Call hf1(15,Real(m_rho13),1.)
EvtBTo3piMPP.F:     + p_pi_minus,p_pi_plus_1,p_pi_plus_2,
EvtBTo3piMPP.F:c       ---	          p_pi_plus_1    : the four momentum of the first  pi+
EvtBTo3piMPP.F:      Real*8  p_pi_minus(4),p_pi_plus_1(4),p_pi_plus_2(4)
EvtBTo3piMPP.F:      Real*8  p1(5),p2(5),p3(5)
EvtBTo3piMPP.F:      data factor_max/1.D+00/
EvtBTo3piMPP.F:      p1(5)= M_pim**2
EvtBTo3piMPP.F: 10   continue	
EvtBTo3piMPP.F:      call Evtfirst_step_MPP(p1,p2,p3)
EvtBTo3piMPP.F:      Call EvtCompute_MPP(p1,p2,p3,
EvtBTo3piMPP.F:      if(ierr.ne.0) Go To 10
EvtBTo3piMPP.F:      Do i=1,4
EvtBTo3piMPP.F:      p1(i)= p_pi_minus (i)
EvtBTo3piMPP.F:      p2(i)= p_pi_plus_1(i) 
EvtBTo3piMPP.F:      p1(5)= M_pim**2
EvtBTo3piMPP.F:      Call EvtCompute_MPP(p1,p2,p3,
EvtBTo3piMPP.F:c    	changed by ryd April 27 1998. this causes an 
EvtBTo3piMPP.F:      p1(5)=M_pim**2
EvtBTo3piMPP.F:      Do number=1,iset
EvtBTo3piMPP.F:      call Evtfirst_step_MPP(p1,p2,p3)
EvtBTo3piMPP.F:      Call EvtCompute_MPP(p1,p2,p3,
EvtBTo3piMPP.F:      factor_max=1.D+00/Dsqrt(factor_max)
EvtBTo3piMPP.F:c     P1,p2,p3 ---> random rotation in B rest frame
EvtBTo3piMPP.F:      Call EvtRotation(p1,1)
EvtBTo3piMPP.F:      Do i=1,4
EvtBTo3piMPP.F:      p_pi_minus     (i)=p1    (i)      
EvtBTo3piMPP.F:      p_pi_plus_1    (i)=p2    (i) 
EvtBTo3piMPP.F:      subroutine Evtfirst_step_MPP(P1,P2,P3)
EvtBTo3piMPP.F:c	--- This routine generates the 5-vectors P1,P2,P3 
EvtBTo3piMPP.F:c	--- 		P1(1) = Px	
EvtBTo3piMPP.F:c	--- 		P1(2) = Py
EvtBTo3piMPP.F:c	--- 		P1(3) = Pz
EvtBTo3piMPP.F:c	--- 		P1(4) = E
EvtBTo3piMPP.F:c	--- 		P1(5) = M**2
EvtBTo3piMPP.F:C 	---	Particle [1] is the pi-                                                       
EvtBTo3piMPP.F:	 real*8 P1(5),P2(5),P3(5)
EvtBTo3piMPP.F:      	real*8 m12,min_m12, max_m12
EvtBTo3piMPP.F:      	real*8 m13,min_m13, max_m13
EvtBTo3piMPP.F:      	Real*8 cost13,cost12,cost23
EvtBTo3piMPP.F:      	real*8 p1mom,p2mom,p3mom
EvtBTo3piMPP.F:      	max_m12 = M_B**2 
EvtBTo3piMPP.F:      	min_m12 = P1(5) + P2(5) 
EvtBTo3piMPP.F:      	max_m13 = M_B**2 
EvtBTo3piMPP.F:      	min_m13 = P1(5) + P3(5)
EvtBTo3piMPP.F:100   	Continue
EvtBTo3piMPP.F:c	--- of a Rho0 = pi- pi+[1] or pi- pi+[2]
EvtBTo3piMPP.F:		m12 = ranf()*(max_m12-min_m12)+min_m12
EvtBTo3piMPP.F:	 	m12 = mass**2
EvtBTo3piMPP.F:	m13 = ranf()*(max_m13-min_m13)+min_m13
EvtBTo3piMPP.F:	m23 = MB2 - m12 - m13
EvtBTo3piMPP.F:		m13 = ranf()*(max_m13-min_m13)+min_m13
EvtBTo3piMPP.F:		m13 =  mass**2
EvtBTo3piMPP.F:	m12 = ranf()*(max_m12-min_m12)+min_m12
EvtBTo3piMPP.F:	m23 = MB2 - m12 - m13
EvtBTo3piMPP.F:      	If(m23.lt.min_m23.or.m23.gt.max_m23) Go to 100
EvtBTo3piMPP.F:      	If(m13.lt.min_m13.or.m13.gt.max_m13) Go to 100
EvtBTo3piMPP.F:      	If(m12.lt.min_m12.or.m12.gt.max_m12) Go to 100
EvtBTo3piMPP.F:c	--- Between -1 and +1 ?
EvtBTo3piMPP.F:      	P1(4)=(M_B**2+P1(5)-m23)/(2.*M_B)
EvtBTo3piMPP.F:      	P2(4)=(M_B**2+P2(5)-m13)/(2.*M_B)
EvtBTo3piMPP.F:      	P3(4)=(M_B**2+P3(5)-m12)/(2.*M_B)
EvtBTo3piMPP.F:      	p1mom=p1(4)**2-P1(5)      
EvtBTo3piMPP.F:      	If(p1mom.lt.0) Go to 100
EvtBTo3piMPP.F:      	If(p2mom.lt.0) Go to 100
EvtBTo3piMPP.F:      	If(p3mom.lt.0) Go to 100
EvtBTo3piMPP.F:      	p1mom=Dsqrt(p1mom)
EvtBTo3piMPP.F:      	cost13=(2.*p1(4)*p3(4)+P1(5)+p3(5)-m13)/(2.*p1mom*p3mom)
EvtBTo3piMPP.F:      	cost12=(2.*p1(4)*p2(4)+P1(5)+p2(5)-m12)/(2.*p1mom*p2mom)      
EvtBTo3piMPP.F:      	If(Dabs(cost13).gt.1.) Go to 100
EvtBTo3piMPP.F:      	If(Dabs(cost12).gt.1.) Go to 100
EvtBTo3piMPP.F:      	If(Dabs(cost23).gt.1.) Go to 100
EvtBTo3piMPP.F:c	--- Filling the 5-vectors P1,P2,P3
EvtBTo3piMPP.F:      	P3(1) = 0
EvtBTo3piMPP.F:      	P1(3) = p1mom*cost13
EvtBTo3piMPP.F:      	P1(1) = p1mom*Dsqrt(1.D+00-cost13**2)
EvtBTo3piMPP.F:      	p1(2) = 0.
EvtBTo3piMPP.F:      	Do i=1,3
EvtBTo3piMPP.F:      	P2(i)=-p1(i)-p3(i)
EvtBTo3piMPP.F:      Subroutine EvtCompute_MPP(p1,p2,p3,
EvtBTo3piMPP.F:      	Real*8 m12, m13, W12, W13, Wtot
EvtBTo3piMPP.F:      	Complex*16 MatBp,MatBm
EvtBTo3piMPP.F:      	Real*8     p1(5),p2(5),p3(5)
EvtBTo3piMPP.F:        Data    ASHQ/0.707107 D+00/
EvtBTo3piMPP.F:        COMPLEX*16 Mat_rhop
EvtBTo3piMPP.F:        Complex*16 BreitWigner
EvtBTo3piMPP.F:        if(evt_gmas(p1,p2).lt.0.or.evt_gmas(p1,p3)
EvtBTo3piMPP.F:		ierr=1
EvtBTo3piMPP.F:      	m12 = sqrt(evt_gmas(p1,p2))
EvtBTo3piMPP.F:      	m13 = sqrt(evt_gmas(p1,p3))
EvtBTo3piMPP.F: 	W12 = (1./m12)*1./((Mass_rho - m12)**2+(Gam_rho/2.)**2)
EvtBTo3piMPP.F:      	W13 = (1./m13)*1./((Mass_rho - m13)**2+(Gam_rho/2.)**2)
EvtBTo3piMPP.F:           Wtot = 1.D+00/Dsqrt(W12 + W13)                                        
EvtBTo3piMPP.F:           Wtot = 1.
EvtBTo3piMPP.F:      	Mat_rhop = BreitWigner(p1,p2,p3,ierr)
EvtBTo3piMPP.F:     +   + BreitWigner(p1,p3,p2,ierr)                                                                               
EvtBTo3piMPP.F:c       The factor ASHQ = 1./sqrt(2) is here just to stick to the notations
EvtBTo3piP00.F:C      Copyright (C) 1998      Caltech, UCSB
EvtBTo3piP00.F:C    DJL/RYD     August 11, 1998         Module created
EvtBTo3piP00.F:C [1] first_step_P00
EvtBTo3piP00.F:C                 of Real*4 random number between 0 and 1	
EvtBTo3piP00.F:C                 A. Snyder and H. Quinn [Phys.Rev.D48 (1993) 2139] 
EvtBTo3piP00.F:C                 rho resonances [rho(770:1450:1700)]. The parameters
EvtBTo3piP00.F:C                 which might be found in CERN-PPE:97013 (submitted to
EvtBTo3piP00.F:      Real*8  p_gamma_1(4),p_gamma_2(4),p_gamma_3(4),p_gamma_4(4)
EvtBTo3piP00.F:      Real*8  m_rho12,m_rho13
EvtBTo3piP00.F:      N_asked    = 100000
EvtBTo3piP00.F:      weight_max = 1.0
EvtBTo3piP00.F:      Call hbook2(1,' Dalitz Plot ',500,0.,30.,500,0.,30.,0.)
EvtBTo3piP00.F:      Call hbook1(4,' Weight      ',500,0., 5.,0.)
EvtBTo3piP00.F:      Call hbook1(5,' pi+pi0      ',500,0., 5.,0.)
EvtBTo3piP00.F:      Do number=1,N_asked ! weighted events as generated here 
EvtBTo3piP00.F:      If(number.eq.1) then
EvtBTo3piP00.F:      iset=10000          ! 10^4 events are used to normalize amplitudes
EvtBTo3piP00.F:     + p_gamma_1,p_gamma_2,p_gamma_3,p_gamma_4,
EvtBTo3piP00.F:		     Call hf1(4,Real(Weight),1.) 
EvtBTo3piP00.F:      N_gener=N_gener+1  
EvtBTo3piP00.F:      m_rho12=(p_pi_plus (4)+p_gamma_1(4)+p_gamma_2(4))**2 
EvtBTo3piP00.F:      m_rho13=(p_pi_plus (4)+p_gamma_3(4)+p_gamma_4(4))**2  
EvtBTo3piP00.F:      do j=1,3
EvtBTo3piP00.F:      m_rho12=m_rho12-(p_pi_plus (j)+p_gamma_1(j)+p_gamma_2(j))**2 
EvtBTo3piP00.F:      m_rho13=m_rho13-(p_pi_plus (j)+p_gamma_3(j)+p_gamma_4(j))**2  
EvtBTo3piP00.F:                     Call hf2(1,Real(m_rho12),Real(m_rho13),1.)
EvtBTo3piP00.F:      If(Tag.gt.0.5) Call hf2(2,Real(m_rho12),Real(m_rho13),1.) 
EvtBTo3piP00.F:      If(Tag.lt.0.5) Call hf2(3,Real(m_rho12),Real(m_rho13),1.)  
EvtBTo3piP00.F:		     Call hf1(5,Real(m_rho12),1.) 
EvtBTo3piP00.F:		     Call hf1(5,Real(m_rho13),1.)
EvtBTo3piP00.F:     + p_pi_1_gamma_1,p_pi_1_gamma_2,
EvtBTo3piP00.F:     + p_pi_2_gamma_1,p_pi_2_gamma_2,
EvtBTo3piP00.F:c       ---	          p_pi_1_gamma_1 : the four momentum of the first  photon   
EvtBTo3piP00.F:c       ---		  p_pi_1_gamma_2 : the four momentum of the second photon
EvtBTo3piP00.F:c       ---	          p_pi_2_gamma_1 : the four momentum of the first  photon   
EvtBTo3piP00.F:      Real*8  p_pi_1_gamma_1(4),p_pi_1_gamma_2(4)
EvtBTo3piP00.F:      Real*8  p_pi_2_gamma_1(4),p_pi_2_gamma_2(4)
EvtBTo3piP00.F:      Real*8  p1(5),p2(5),p3(5)
EvtBTo3piP00.F:      Real*8  Gamma1(5),Gamma2(5),Gamma3(5),Gamma4(5)
EvtBTo3piP00.F:	data factor_max/1.D+00/
EvtBTo3piP00.F:      p1(5)=M_pip**2
EvtBTo3piP00.F: 10   continue
EvtBTo3piP00.F:      call Evtfirst_step_P00(p1,p2,p3)
EvtBTo3piP00.F:      Call EvtCompute_P00(p1,p2,p3,
EvtBTo3piP00.F:	if(ierr.ne.0 ) Go To 10
EvtBTo3piP00.F:      Do i=1,4
EvtBTo3piP00.F:      p1(i)= p_pi_plus (i)
EvtBTo3piP00.F:      p2(i)= p_pi_1_gamma_1 (i) + p_pi_1_gamma_2 (i)
EvtBTo3piP00.F:      p3(i)= p_pi_2_gamma_1 (i) + p_pi_2_gamma_2 (i)
EvtBTo3piP00.F:      p1(5)= M_pip**2
EvtBTo3piP00.F:      Call EvtCompute_P00(p1,p2,p3,
EvtBTo3piP00.F:c      changed by ryd April 24 1998.
EvtBTo3piP00.F:      p1(5)=M_pip**2
EvtBTo3piP00.F:      Do number=1,iset
EvtBTo3piP00.F:      call Evtfirst_step_P00(p1,p2,p3)
EvtBTo3piP00.F:      Call EvtCompute_P00(p1,p2,p3,
EvtBTo3piP00.F:      factor_max=1.D+00/Dsqrt(factor_max)
EvtBTo3piP00.F:c     P1,p2,p3 ---> random rotation in B rest frame
EvtBTo3piP00.F:      Call EvtRotation(p1,1)
EvtBTo3piP00.F:      Call EvtGammaGamma(p2,Gamma1,Gamma2)
EvtBTo3piP00.F:      Do i=1,4
EvtBTo3piP00.F:      p_pi_plus      (i)=p1    (i)      
EvtBTo3piP00.F:      p_pi_1_gamma_1 (i)=Gamma1(i)
EvtBTo3piP00.F:      p_pi_1_gamma_2 (i)=Gamma2(i)
EvtBTo3piP00.F:      p_pi_2_gamma_1 (i)=Gamma3(i)
EvtBTo3piP00.F:      subroutine Evtfirst_step_P00(P1,P2,P3)
EvtBTo3piP00.F:c	--- This routine generates the 5-vectors P1,P2,P3 
EvtBTo3piP00.F:c	--- 		P1(1) = Px	
EvtBTo3piP00.F:c	--- 		P1(2) = Py
EvtBTo3piP00.F:c	--- 		P1(3) = Pz
EvtBTo3piP00.F:c	--- 		P1(4) = E
EvtBTo3piP00.F:c	--- 		P1(5) = M**2
EvtBTo3piP00.F:C 	---	Particle [1] is the pi+                                                       
EvtBTo3piP00.F:	 real*8 P1(5),P2(5),P3(5)
EvtBTo3piP00.F:      	real*8 m12,min_m12, max_m12
EvtBTo3piP00.F:      	real*8 m13,min_m13, max_m13
EvtBTo3piP00.F:      	Real*8 cost13,cost12,cost23
EvtBTo3piP00.F:      	real*8 p1mom,p2mom,p3mom
EvtBTo3piP00.F:      	max_m12 = M_B**2 
EvtBTo3piP00.F:      	min_m12 = P1(5) + P2(5) 
EvtBTo3piP00.F:      	max_m13 = M_B**2 
EvtBTo3piP00.F:      	min_m13 = P1(5) + P3(5)
EvtBTo3piP00.F:100   	Continue
EvtBTo3piP00.F:c	--- of a Rho+ = pi+ pi_0[1] or pi+ pi_0[2]
EvtBTo3piP00.F:		m12 = ranf()*(max_m12-min_m12)+min_m12
EvtBTo3piP00.F:	 	m12 = mass**2
EvtBTo3piP00.F:	m13 = ranf()*(max_m13-min_m13)+min_m13
EvtBTo3piP00.F:	m23 = MB2 - m12 - m13
EvtBTo3piP00.F:		m13 = ranf()*(max_m13-min_m13)+min_m13
EvtBTo3piP00.F:		m13 =  mass**2
EvtBTo3piP00.F:	m12 = ranf()*(max_m12-min_m12)+min_m12
EvtBTo3piP00.F:	m23 = MB2 - m12 - m13
EvtBTo3piP00.F:      	If(m23.lt.min_m23.or.m23.gt.max_m23) Go to 100
EvtBTo3piP00.F:      	If(m13.lt.min_m13.or.m13.gt.max_m13) Go to 100
EvtBTo3piP00.F:      	If(m12.lt.min_m12.or.m12.gt.max_m12) Go to 100
EvtBTo3piP00.F:c	--- Between -1 and +1 ?
EvtBTo3piP00.F:      	P1(4)=(M_B**2+P1(5)-m23)/(2.*M_B)
EvtBTo3piP00.F:      	P2(4)=(M_B**2+P2(5)-m13)/(2.*M_B)
EvtBTo3piP00.F:      	P3(4)=(M_B**2+P3(5)-m12)/(2.*M_B)
EvtBTo3piP00.F:      	p1mom=p1(4)**2-P1(5)      
EvtBTo3piP00.F:      	If(p1mom.lt.0) Go to 100
EvtBTo3piP00.F:      	If(p2mom.lt.0) Go to 100
EvtBTo3piP00.F:      	If(p3mom.lt.0) Go to 100
EvtBTo3piP00.F:      	p1mom=Dsqrt(p1mom)
EvtBTo3piP00.F:      	cost13=(2.*p1(4)*p3(4)+P1(5)+p3(5)-m13)/(2.*p1mom*p3mom)
EvtBTo3piP00.F:      	cost12=(2.*p1(4)*p2(4)+P1(5)+p2(5)-m12)/(2.*p1mom*p2mom)      
EvtBTo3piP00.F:      	If(Dabs(cost13).gt.1.) Go to 100
EvtBTo3piP00.F:      	If(Dabs(cost12).gt.1.) Go to 100
EvtBTo3piP00.F:      	If(Dabs(cost23).gt.1.) Go to 100
EvtBTo3piP00.F:c	--- Filling the 5-vectors P1,P2,P3
EvtBTo3piP00.F:      	P3(1) = 0
EvtBTo3piP00.F:      	P1(3) = p1mom*cost13
EvtBTo3piP00.F:      	P1(1) = p1mom*Dsqrt(1.D+00-cost13**2)
EvtBTo3piP00.F:      	p1(2) = 0.
EvtBTo3piP00.F:      	Do i=1,3
EvtBTo3piP00.F:      	P2(i)=-p1(i)-p3(i)
EvtBTo3piP00.F:      Subroutine EvtCompute_P00(p1,p2,p3,
EvtBTo3piP00.F:      	Real*8 m12, m13, W12, W13, Wtot
EvtBTo3piP00.F:      	Complex*16 MatBp,MatBm
EvtBTo3piP00.F:      	Real*8     p1(5),p2(5),p3(5)
EvtBTo3piP00.F:        Data    ASHQ/0.707107 D+00/
EvtBTo3piP00.F:        COMPLEX*16 Mat_rhop
EvtBTo3piP00.F:        Complex*16 BreitWigner
EvtBTo3piP00.F:	if(evt_gmas(p1,p2).lt.0.or.evt_gmas(p1,p3)
EvtBTo3piP00.F:		ierr=1
EvtBTo3piP00.F:      	m12 = sqrt(evt_gmas(p1,p2))
EvtBTo3piP00.F:      	m13 = sqrt(evt_gmas(p1,p3))
EvtBTo3piP00.F: 	W12 = (1./m12)*1./((Mass_rho - m12)**2+(Gam_rho/2.)**2)
EvtBTo3piP00.F:      	W13 = (1./m13)*1./((Mass_rho - m13)**2+(Gam_rho/2.)**2)
EvtBTo3piP00.F:      	Wtot = 1.D+00/Dsqrt(W12 + W13)                                        
EvtBTo3piP00.F:	Wtot =1.
EvtBTo3piP00.F:      	Mat_rhop = BreitWigner(p1,p2,p3,ierr) 
EvtBTo3piP00.F:     + 	+ BreitWigner(p1,p3,p2,ierr)                                                                               
EvtBTo3piP00.F:c       The factor ASHQ = 1./sqrt(2) is here just to stick to the notations
EvtBTo3piP00.F:      	MatBp    = Mat_s1 * Mat_rhop * Wtot * ASHQ 
EvtBTo3piP00.F:      	MatBm    = Nat_s1 * Mat_rhop * Wtot * ASHQ
EvtBTo4piCP.cc://      Copyright (C) 1998      Caltech, UCSB
EvtBTo4piCP.cc://    RYD     March 2, 1997         Module created
EvtBTo4piCP.cc:EvtComplex EvtAmpA2(const EvtVector4R& p4pi1,const EvtVector4R& p4pi2,
EvtBTo4piCP.cc:  p4rho=p4pi1+p4pi2;
EvtBTo4piCP.cc:  EvtVector4R p4b_a2,p4rho_a2,p4pi1_a2,p4a2_a2;
EvtBTo4piCP.cc:  p4pi1_a2=boostTo(p4pi1,p4a2);
EvtBTo4piCP.cc:  EvtVector4R p4pi1_rho;
EvtBTo4piCP.cc:  p4pi1_rho=boostTo(p4pi1_a2,p4rho_a2);
EvtBTo4piCP.cc:  vpi=p4pi1_rho/p4pi1_rho.d3mag();
EvtBTo4piCP.cc:  t.set(1.0,0.0,0.0,0.0);
EvtBTo4piCP.cc:  //  EvtComplex amp_a1,amp_a2;
EvtBTo4piCP.cc:  //  double bwm_a1=EvtPDL::getMeanMass(A1M);
EvtBTo4piCP.cc:  //  double gamma_a1=EvtPDL::getWidth(A1M);
EvtBTo4piCP.cc:    (vb.get(1)*vrho.get(1)+vb.get(2)*vrho.get(2)+vb.get(3)*vrho.get(3))*
EvtBTo4piCP.cc:     vpi.get(1)*(vb.get(2)*vrho.get(3)-vb.get(3)*vrho.get(2))+
EvtBTo4piCP.cc:     vpi.get(2)*(vb.get(3)*vrho.get(1)-vb.get(1)*vrho.get(3))+
EvtBTo4piCP.cc:     vpi.get(3)*(vb.get(1)*vrho.get(2)-vb.get(2)*vrho.get(1))
EvtBTo4piCP.cc:EvtComplex EvtAmpA1(const EvtVector4R& p4pi1,const EvtVector4R& p4pi2,
EvtBTo4piCP.cc:  static EvtId A1M=EvtPDL::getId("a_1-");
EvtBTo4piCP.cc:  EvtVector4R p4a1,p4rho,p4b;
EvtBTo4piCP.cc:  p4rho=p4pi1+p4pi2;
EvtBTo4piCP.cc:  p4a1=p4rho+p4pi3;
EvtBTo4piCP.cc:  p4b=p4a1+p4pi4;
EvtBTo4piCP.cc:  EvtVector4R p4b_a1,p4rho_a1,p4pi1_a1,p4a1_a1;
EvtBTo4piCP.cc:  p4b_a1=boostTo(p4b,p4a1);
EvtBTo4piCP.cc:  p4rho_a1=boostTo(p4rho,p4a1);
EvtBTo4piCP.cc:  p4pi1_a1=boostTo(p4pi1,p4a1);
EvtBTo4piCP.cc:  p4a1_a1=boostTo(p4a1,p4a1);
EvtBTo4piCP.cc:  EvtVector4R p4pi1_rho;
EvtBTo4piCP.cc:  p4pi1_rho=boostTo(p4pi1_a1,p4rho_a1);
EvtBTo4piCP.cc:  vb=p4b_a1/p4b_a1.d3mag();
EvtBTo4piCP.cc:  vrho=p4rho_a1/p4rho_a1.d3mag();
EvtBTo4piCP.cc:  vpi=p4pi1_rho/p4pi1_rho.d3mag();
EvtBTo4piCP.cc:  t.set(1.0,0.0,0.0,0.0);
EvtBTo4piCP.cc:  EvtComplex amp_a1;
EvtBTo4piCP.cc:  double bwm_a1=EvtPDL::getMeanMass(A1M);
EvtBTo4piCP.cc:  double gamma_a1=EvtPDL::getWidth(A1M);
EvtBTo4piCP.cc:  amp_a1=(sqrt(gamma_a1/EvtConst::twoPi)/
EvtBTo4piCP.cc:    ((p4a1).mass()-bwm_a1-EvtComplex(0.0,0.5*gamma_a1)))*
EvtBTo4piCP.cc:  return amp_a1*
EvtBTo4piCP.cc:    (vb.get(1)*vpi.get(1)+vb.get(2)*vpi.get(2)+vb.get(3)*vpi.get(3));
EvtBTo4piCP.cc:  // check that there are 18 arguments
EvtBTo4piCP.cc:  checkNArg(18);
EvtBTo4piCP.cc:  checkSpinDaughter(1,EvtSpinType::SCALAR);
EvtBTo4piCP.cc:  EvtVector4R mom1 = p->getDaug(0)->getP4();
EvtBTo4piCP.cc:  EvtVector4R mom2 = p->getDaug(1)->getP4();
EvtBTo4piCP.cc:  //double dm=getArg(1);
EvtBTo4piCP.cc:   EvtComplex A_a1p,Abar_a1p,A_a2p,Abar_a2p;
EvtBTo4piCP.cc:   EvtComplex A_a1m,Abar_a1m,A_a2m,Abar_a2m;
EvtBTo4piCP.cc:   A_a1p=EvtComplex(getArg(2)*cos(getArg(3)),getArg(2)*sin(getArg(3)));
EvtBTo4piCP.cc:   Abar_a1p=EvtComplex(getArg(4)*cos(getArg(5)),getArg(4)*sin(getArg(5)));
EvtBTo4piCP.cc:   A_a1m=EvtComplex(getArg(10)*cos(getArg(11)),getArg(10)*sin(getArg(11)));
EvtBTo4piCP.cc:   Abar_a1m=EvtComplex(getArg(12)*cos(getArg(13)),getArg(12)*sin(getArg(13)));
EvtBTo4piCP.cc:   A_a2m=EvtComplex(getArg(14)*cos(getArg(15)),getArg(14)*sin(getArg(15)));
EvtBTo4piCP.cc:   Abar_a2m=EvtComplex(getArg(16)*cos(getArg(17)),getArg(16)*sin(getArg(17)));
EvtBTo4piCP.cc:   EvtComplex a2p_amp=EvtAmpA2(mom1,mom2,mom3,mom4)+
EvtBTo4piCP.cc:                      EvtAmpA2(mom1,mom4,mom3,mom2)+
EvtBTo4piCP.cc:                      EvtAmpA2(mom3,mom2,mom1,mom4)+
EvtBTo4piCP.cc:                      EvtAmpA2(mom3,mom4,mom1,mom2);
EvtBTo4piCP.cc:   EvtComplex a2m_amp=EvtAmpA2(mom2,mom3,mom4,mom1)+
EvtBTo4piCP.cc:                      EvtAmpA2(mom2,mom1,mom4,mom3)+
EvtBTo4piCP.cc:                      EvtAmpA2(mom4,mom3,mom2,mom1)+
EvtBTo4piCP.cc:                      EvtAmpA2(mom4,mom1,mom2,mom3);
EvtBTo4piCP.cc:   EvtComplex a1p_amp=EvtAmpA1(mom1,mom2,mom3,mom4)+
EvtBTo4piCP.cc:                      EvtAmpA1(mom1,mom4,mom3,mom2)+
EvtBTo4piCP.cc:                      EvtAmpA1(mom3,mom2,mom1,mom4)+
EvtBTo4piCP.cc:                      EvtAmpA1(mom3,mom4,mom1,mom2);
EvtBTo4piCP.cc:   EvtComplex a1m_amp=EvtAmpA1(mom2,mom3,mom4,mom1)+
EvtBTo4piCP.cc:                      EvtAmpA1(mom2,mom1,mom4,mom3)+
EvtBTo4piCP.cc:                      EvtAmpA1(mom4,mom3,mom2,mom1)+
EvtBTo4piCP.cc:                      EvtAmpA1(mom4,mom1,mom2,mom3);
EvtBTo4piCP.cc:   A=A_a2p*a2p_amp+A_a1p*a1p_amp+
EvtBTo4piCP.cc:     A_a2m*a2m_amp+A_a1m*a1m_amp;
EvtBTo4piCP.cc:   Abar=Abar_a2p*a2p_amp+Abar_a1p*a1p_amp+
EvtBTo4piCP.cc:        Abar_a2m*a2m_amp+Abar_a1m*a1m_amp;
EvtBTo4piCP.cc:     amp=A*cos(getArg(1)*t/(2*EvtConst::c))+
EvtBTo4piCP.cc:       getArg(2)*EvtComplex(0.0,1.0)*Abar*sin(getArg(1)*t/(2*EvtConst::c));
EvtBTo4piCP.cc:       EvtComplex(0.0,1.0)*sin(getArg(1)*t/(2*EvtConst::c))+       
EvtBTo4piCP.cc:       getArg(2)*Abar*cos(getArg(1)*t/(2*EvtConst::c));
EvtBTo4piCP.hh://      Copyright (C) 1998      Caltech, UCSB
EvtBTo4piCP.hh://    DJL/RYD     August 11, 1998         Module created
EvtBtoKD3P.cc://      $Id: getName,v 1.1 2009/12/18 08:43:52 pingrg Exp $
EvtBtoKD3P.cc:  _model1(0),
EvtBtoKD3P.cc:  checkSpinDaughter(1,EvtSpinType::SCALAR);
EvtBtoKD3P.cc:  double phase = getArg(1);
EvtBtoKD3P.cc:  setProbMax(1); // this is later changed in decay()
EvtBtoKD3P.cc:  // the K is the 1st daughter of the B EvtParticle.
EvtBtoKD3P.cc:  const int D1IND = 1;
EvtBtoKD3P.cc:  EvtId tempDaug[2] = {getDaug(KIND), getDaug(D1IND)};
EvtBtoKD3P.cc:  EvtParticle * theD = p->getDaug(D1IND); 
EvtBtoKD3P.cc:  EvtPto3P * model1 = (EvtPto3P*)(EvtDecayTable::getDecayFunc(theD));
EvtBtoKD3P.cc:    _model1 = model1;
EvtBtoKD3P.cc:    std::string name1;
EvtBtoKD3P.cc:    model1->getName(name1);
EvtBtoKD3P.cc:    if (name1 != "PTO3P") {
EvtBtoKD3P.cc:	<< "    but found to decay via " << name1.c_str() 
EvtBtoKD3P.cc:    EvtId * daugs1 = model1->getDaugs();
EvtBtoKD3P.cc:      if (daugs1[d] != daugs2[d]) {
EvtBtoKD3P.cc:      for (d = 0; d < model1->getNDaug(); ++d) {
EvtBtoKD3P.cc:	report(ERROR,"") << "   " << EvtPDL::name(daugs1[d]).c_str() << " ";
EvtBtoKD3P.cc:      for (d = 0; d < model1->getNDaug(); ++d) {
EvtBtoKD3P.cc:    setProbMax(model1->getProbMax(0) 
EvtBtoKD3P.cc:	       + 2 * _r * sqrt(model1->getProbMax(0) * model2->getProbMax(0)));
EvtBtoKD3P.cc:  if (_model1 != model1 || _model2 != model2) {
EvtBtoKD3P.cc:      << "D daughters of EvtBtoKD3P decay should have only 1 decay modes, "
EvtBtoKD3P.cc:  // They are summed with coefficients 1 because we are willing to
EvtBtoKD3P.cc:  EvtPdfSum<EvtDalitzPoint> * pc1 = model1->getPC();
EvtBtoKD3P.cc:  pc.addTerm(1.0, *pc1);
EvtBtoKD3P.cc:  pc.addTerm(1.0, *pc2);
EvtBtoKD3P.cc:  EvtComplex amp1 = model1->amplNonCP(x);
EvtBtoKD3P.cc:  EvtComplex amp = amp1 + amp2 * _r * _exp;
EvtBtoKD3P.hh://      $Id: getName,v 1.1 2009/12/18 08:43:52 pingrg Exp $
EvtBtoKD3P.hh:// the total amplitude is \propto [A1 + A2 r exp(i(phase))], where
EvtBtoKD3P.hh:// A1 & A2 are the amplitudes of the D0 and D0bar to decay into that
EvtBtoKD3P.hh:  const EvtDecayBase * _model1;
EvtBtoKpiCPiso.cc://      Copyright (C) 1998      Caltech, UCSB
EvtBtoKpiCPiso.cc://    RYD/NK     Febuary 7, 1998         Module created
EvtBtoKpiCPiso.cc:  // check that there are 15 arguments
EvtBtoKpiCPiso.cc:  checkNArg(15);
EvtBtoKpiCPiso.cc:  checkSpinDaughter(1,EvtSpinType::SCALAR);
EvtBtoKpiCPiso.cc:if (((getDaug(0)==PI0) && (getDaug(1)==KP)) || ((getDaug(0)==KP) && (getDaug(1)==PI0)))  {
EvtBtoKpiCPiso.cc:   setProbMax(2.0*(getArg(2)*getArg(2) + getArg(10)*getArg(10)));
EvtBtoKpiCPiso.cc:if (((getDaug(0)==PI0) && (getDaug(1)==KM)) || ((getDaug(0)==KM) && (getDaug(1)==PI0)))  {
EvtBtoKpiCPiso.cc:   setProbMax( 2.0*(getArg(4)*getArg(4) + getArg(12)*getArg(12)));
EvtBtoKpiCPiso.cc:if (((getDaug(0)==PIP) && (getDaug(1)==K0)) || ((getDaug(0)==K0) && (getDaug(1)==PIP))) {
EvtBtoKpiCPiso.cc:   setProbMax( 4.0*(getArg(6)*getArg(6) + getArg(10)*getArg(10)));
EvtBtoKpiCPiso.cc:if (((getDaug(0)==PIM) && (getDaug(1)==KB)) || ((getDaug(0)==KB) && (getDaug(1)==PIM))) {
EvtBtoKpiCPiso.cc:   setProbMax( 4.0*(getArg(8)*getArg(8) + getArg(12)*getArg(12)));
EvtBtoKpiCPiso.cc:if (((getDaug(0)==PI0) && (getDaug(1)==K0)) || ((getDaug(0)==K0) && (getDaug(1)==PI0))) { 
EvtBtoKpiCPiso.cc:   setProbMax( 2.0*(getArg(2)*getArg(2) + getArg(10)*getArg(10))); 
EvtBtoKpiCPiso.cc:if (((getDaug(0)==PI0) && (getDaug(1)==KB)) || ((getDaug(0)==KB) && (getDaug(1)==PI0))) {
EvtBtoKpiCPiso.cc:   setProbMax( 2.0*(getArg(4)*getArg(4) + getArg(12)*getArg(12))); 
EvtBtoKpiCPiso.cc:if (((getDaug(0)==PIM) && (getDaug(1)==KP)) || ((getDaug(0)==KP) && (getDaug(1)==PIM))) {
EvtBtoKpiCPiso.cc:   setProbMax( 4.0*(getArg(6)*getArg(6) + getArg(10)*getArg(10)));
EvtBtoKpiCPiso.cc:if (((getDaug(0)==PIP) && (getDaug(1)==KM)) || ((getDaug(0)==KM) && (getDaug(1)==PIP))) {
EvtBtoKpiCPiso.cc:   setProbMax( 4.0*(getArg(8)*getArg(8) + getArg(12)*getArg(12)));
EvtBtoKpiCPiso.cc:   W = EvtComplex(getArg(10)*cos(getArg(11)),getArg(10)*sin(getArg(11)));
EvtBtoKpiCPiso.cc:   Wbar = EvtComplex(getArg(12)*cos(getArg(13)),getArg(12)*sin(getArg(13)));  
EvtBtoKpiCPiso.cc:if (((getDaug(0)==PI0) && (getDaug(1)==KP)) || ((getDaug(0)==KP) && (getDaug(1)==PI0)))  {
EvtBtoKpiCPiso.cc:if (((getDaug(0)==PI0) && (getDaug(1)==KM)) || ((getDaug(0)==KM) && (getDaug(1)==PI0)))  {
EvtBtoKpiCPiso.cc: if (((getDaug(0)==PIP) && (getDaug(1)==K0)) || ((getDaug(0)==K0) && (getDaug(1)==PIP))) {
EvtBtoKpiCPiso.cc: if (((getDaug(0)==PIM) && (getDaug(1)==KB)) || ((getDaug(0)==KB) && (getDaug(1)==PIM))) {
EvtBtoKpiCPiso.cc: if (((getDaug(0)==PI0) && (getDaug(1)==K0)) || ((getDaug(0)==K0) && (getDaug(1)==PI0))) { 
EvtBtoKpiCPiso.cc: if (((getDaug(0)==PI0) && (getDaug(1)==KB)) || ((getDaug(0)==KB) && (getDaug(1)==PI0))) {
EvtBtoKpiCPiso.cc: if (((getDaug(0)==PIM) && (getDaug(1)==KP)) || ((getDaug(0)==KP) && (getDaug(1)==PIM))) {
EvtBtoKpiCPiso.cc: if (((getDaug(0)==PIP) && (getDaug(1)==KM)) || ((getDaug(0)==KM) && (getDaug(1)==PIP))) {
EvtBtoKpiCPiso.hh://      Copyright (C) 1998      Caltech, UCSB
EvtBtoKpiCPiso.hh://    DJL/RYD     August 11, 1998         Module created
EvtBToKpipiCP.cc://      Copyright (C) 1998      Caltech, UCSB
EvtBToKpipiCP.cc://    Versille     September, 1997         Module created
EvtBToKpipiCP.cc:  checkSpinDaughter(1,EvtSpinType::SCALAR);
EvtBToKpipiCP.cc:  pim=p->getDaug(1);
EvtBToKpipiCP.cc:  double alpha=getArg(1);
EvtBToKpipiCP.cc:  static int first=1;
EvtBToKpipiCP.cc:  if (first==1) {
EvtBToKpipiCP.cc:    iset=10000;
EvtBToKpipiCP.cc:  double p4Kplus[4],p4piminus[4],p4gamm1[4],p4gamm2[4]; 
EvtBToKpipiCP.cc:  evtkpipi_(&alpha,&beta,&iset,p4Kplus,p4piminus,p4gamm1,p4gamm2,
EvtBToKpipiCP.cc:  p4[0].set(p4Kplus[3],p4Kplus[0],p4Kplus[1],p4Kplus[2]);
EvtBToKpipiCP.cc:  p4[1].set(p4piminus[3],p4piminus[0],p4piminus[1],p4piminus[2]);
EvtBToKpipiCP.cc:  p4[2].set(p4gamm1[3]+p4gamm2[3],p4gamm1[0]+p4gamm2[0],
EvtBToKpipiCP.cc:	    p4gamm1[1]+p4gamm2[1],p4gamm1[2]+p4gamm2[2]);
EvtBToKpipiCP.cc:   pim->init( getDaug(1), p4[1] );
EvtBToKpipiCP.hh://      Copyright (C) 1998      Caltech, UCSB
EvtBToKpipiCP.hh://    DJL/RYD     August 11, 1998         Module created
EvtBToKpipi.F:C      Copyright (C) 1998      Caltech, UCSB
EvtBToKpipi.F:C    DJL/RYD     August 11, 1998         Module created
EvtBToKpipi.F:C [1] first_step_Kpipi
EvtBToKpipi.F:C                 of Real*4 random number between 0 and 1	
EvtBToKpipi.F:C                 zero-helicity of the spin-1 resonances. There is two 
EvtBToKpipi.F:C      Common/Pawc/Hmemor(1000000)
EvtBToKpipi.F:C      Call Hlimit(1000000)
EvtBToKpipi.F:      Real*8  p_gamma_1(4),p_gamma_2(4)
EvtBToKpipi.F:      alphaCP      = 1.35
EvtBToKpipi.F:      N_asked    = 100000
EvtBToKpipi.F:      weight_max = 1.0
EvtBToKpipi.F:      Call hbook1(1,' Weight      ',500,0., 5.,0.)           
EvtBToKpipi.F:      Call hbook1(3,' K+pi0       ',300,0., 30.,0.)
EvtBToKpipi.F:      Call hbook1(4,' K+pi-       ',300,0., 30.,0.)
EvtBToKpipi.F:      Call hbook1(5,' pi-pi0      ',300,0., 30.,0.)
EvtBToKpipi.F:      Call hbook1(13,' K+pi0       ',300,0., 3.,0.)
EvtBToKpipi.F:      Call hbook1(14,' K+pi-       ',300,0., 3.,0.)
EvtBToKpipi.F:      Call hbook1(15,' pi-pi0      ',300,0., 3.,0.)     
EvtBToKpipi.F:      Do number=1,N_asked ! weighted events as generated here 
EvtBToKpipi.F:      If(number.eq.1) then
EvtBToKpipi.F:      iset=10000          ! 10^4 events are used to normalize amplitudes
EvtBToKpipi.F:     + p_gamma_1,p_gamma_2,
EvtBToKpipi.F:		     Call hf1(1,Real(Weight),1.)
EvtBToKpipi.F:      N_gener=N_gener+1  
EvtBToKpipi.F:      m_Kstarp=(p_K_plus   (4)+p_gamma_1(4)+p_gamma_2(4))**2 
EvtBToKpipi.F:      m_rhom  =(p_pi_minus (4)+p_gamma_1(4)+p_gamma_2(4))**2 
EvtBToKpipi.F:      do j=1,3
EvtBToKpipi.F:      m_Kstarp=m_Kstarp -(p_K_plus   (j)+p_gamma_1(j)+p_gamma_2(j))**2 
EvtBToKpipi.F:      m_rhom  =m_rhom   -(p_pi_minus (j)+p_gamma_1(j)+p_gamma_2(j))**2
EvtBToKpipi.F:                     Call hf2(2,Real(m_Kstarp),Real(m_Kstar0),1.)
EvtBToKpipi.F:		     Call hf1(3,Real(m_Kstarp),1.)                     
EvtBToKpipi.F:		     Call hf1(4,Real(m_Kstar0),1.) 
EvtBToKpipi.F:		     Call hf1(5,Real(m_rhom  ),1.)
EvtBToKpipi.F:		     Call hf1(13,Real(m_Kstarp),1.)                     
EvtBToKpipi.F:		     Call hf1(14,Real(m_Kstar0),1.) 
EvtBToKpipi.F:		     Call hf1(15,Real(m_rhom  ),1.)		     
EvtBToKpipi.F:      do j=1,3
EvtBToKpipi.F:      Wrong = Dsqrt(Wrong+0.139**2)
EvtBToKpipi.F:      m_Kstarp=(Wrong         +p_gamma_1(4)+p_gamma_2(4))**2 
EvtBToKpipi.F:      do j=1,3
EvtBToKpipi.F:      m_Kstarp=m_Kstarp -(p_K_plus   (j)+p_gamma_1(j)+p_gamma_2(j))**2 
EvtBToKpipi.F:		     Call hf2(6,Real(m_Kstarp),Real(m_rhom),1.)
EvtBToKpipi.F:     + p_gamma_1,p_gamma_2,
EvtBToKpipi.F:c       ---               p_gamma_1     : ........................ first  gamma of the pi0
EvtBToKpipi.F:      Real*8  p_gamma_1(4),p_gamma_2(4)
EvtBToKpipi.F:      Real*8  p1(5),p2(5),p3(5)
EvtBToKpipi.F:      Real*8  Gamma1(5),Gamma2(5)
EvtBToKpipi.F:	data factor_max/1.D+00/
EvtBToKpipi.F:      p1(5)= M_Kp **2
EvtBToKpipi.F: 10   continue
EvtBToKpipi.F:      call Evtfirst_step_Kpipi(p1,p2,p3)
EvtBToKpipi.F:      Call EvtCompute_Kpipi(p1,p2,p3,
EvtBToKpipi.F:	if(ierr.ne.0 ) Go To 10
EvtBToKpipi.F:      Do i=1,4
EvtBToKpipi.F:      p1(i)= p_K_plus  (i)
EvtBToKpipi.F:      p3(i)= p_gamma_1 (i) + p_gamma_2 (i)
EvtBToKpipi.F:      p1(5)= M_Kp **2
EvtBToKpipi.F:      Call EvtCompute_Kpipi(p1,p2,p3,
EvtBToKpipi.F:      p1(5)= M_Kp **2
EvtBToKpipi.F:      Do number=1,iset
EvtBToKpipi.F:      call Evtfirst_step_Kpipi(p1,p2,p3)
EvtBToKpipi.F:      Call EvtCompute_Kpipi(p1,p2,p3,
EvtBToKpipi.F:      factor_max=1.D+00/Dsqrt(factor_max)
EvtBToKpipi.F:c     P1,p2,p3 ---> random rotation in B rest frame
EvtBToKpipi.F:      Call EvtRotation(p1,1)
EvtBToKpipi.F:      Call EvtGammaGamma(p3,Gamma1,Gamma2)
EvtBToKpipi.F:      Do i=1,4
EvtBToKpipi.F:      p_K_plus  (i)=p1    (i)
EvtBToKpipi.F:      p_gamma_1 (i)=Gamma1(i)
EvtBToKpipi.F:      subroutine Evtfirst_step_Kpipi(P1,P2,P3)
EvtBToKpipi.F:c	--- This routine generates the 5-vectors P1,P2,P3 
EvtBToKpipi.F:c	--- 		P1(1) = Px	
EvtBToKpipi.F:c	--- 		P1(2) = Py
EvtBToKpipi.F:c	--- 		P1(3) = Pz
EvtBToKpipi.F:c	--- 		P1(4) = E
EvtBToKpipi.F:c	--- 		P1(5) = M**2
EvtBToKpipi.F:C 	---	Particle [1] is the K+                                                       
EvtBToKpipi.F:	 real*8 P1(5),P2(5),P3(5)
EvtBToKpipi.F:      	real*8 m12,min_m12, max_m12
EvtBToKpipi.F:      	real*8 m13,min_m13, max_m13
EvtBToKpipi.F:      	Real*8 cost13,cost12,cost23
EvtBToKpipi.F:      	real*8 p1mom,p2mom,p3mom
EvtBToKpipi.F:      	max_m12 = M_B**2 
EvtBToKpipi.F:      	min_m12 = P1(5) + P2(5) + 2.*Dsqrt(p1(5)*p2(5)) 
EvtBToKpipi.F:      	max_m13 = M_B**2 
EvtBToKpipi.F:      	min_m13 = P1(5) + P3(5) + 2.*Dsqrt(p1(5)*p3(5)) 
EvtBToKpipi.F:100   	Continue
EvtBToKpipi.F:	If(z.lt.1.) Then
EvtBToKpipi.F:		m13 = ranf()*(max_m13-min_m13)+min_m13
EvtBToKpipi.F:	 	m13 = mass**2
EvtBToKpipi.F:	m12 = ranf()*(max_m12-min_m12)+min_m12
EvtBToKpipi.F:	m23 = MC2 - m12 - m13
EvtBToKpipi.F:		m12 = ranf()*(max_m12-min_m12)+min_m12
EvtBToKpipi.F:		m12 =  mass**2
EvtBToKpipi.F:	m13 = ranf()*(max_m13-min_m13)+min_m13
EvtBToKpipi.F:	m23 = MC2 - m12 - m13
EvtBToKpipi.F:	m13 = ranf()*(max_m13-min_m13)+min_m13
EvtBToKpipi.F:	m12 = MC2 - m23 - m13
EvtBToKpipi.F:      	If(m23.lt.min_m23.or.m23.gt.max_m23) Go to 100
EvtBToKpipi.F:      	If(m13.lt.min_m13.or.m13.gt.max_m13) Go to 100
EvtBToKpipi.F:      	If(m12.lt.min_m12.or.m12.gt.max_m12) Go to 100
EvtBToKpipi.F:c	--- Between -1 and +1 ?
EvtBToKpipi.F:      	P1(4)=(M_B**2+P1(5)-m23)/(2.*M_B)
EvtBToKpipi.F:      	P2(4)=(M_B**2+P2(5)-m13)/(2.*M_B)
EvtBToKpipi.F:      	P3(4)=(M_B**2+P3(5)-m12)/(2.*M_B)
EvtBToKpipi.F:      	p1mom=p1(4)**2-P1(5)      
EvtBToKpipi.F:      	If(p1mom.lt.0) Go to 100
EvtBToKpipi.F:      	If(p2mom.lt.0) Go to 100
EvtBToKpipi.F:      	If(p3mom.lt.0) Go to 100
EvtBToKpipi.F:      	p1mom=Dsqrt(p1mom)
EvtBToKpipi.F:      	cost13=(2.*p1(4)*p3(4)+P1(5)+p3(5)-m13)/(2.*p1mom*p3mom)
EvtBToKpipi.F:      	cost12=(2.*p1(4)*p2(4)+P1(5)+p2(5)-m12)/(2.*p1mom*p2mom)      
EvtBToKpipi.F:      	If(Dabs(cost13).gt.1.) Go to 100
EvtBToKpipi.F:      	If(Dabs(cost12).gt.1.) Go to 100
EvtBToKpipi.F:      	If(Dabs(cost23).gt.1.) Go to 100
EvtBToKpipi.F:c	--- Filling the 5-vectors P1,P2,P3
EvtBToKpipi.F:      	P3(1) = 0
EvtBToKpipi.F:      	P1(3) = p1mom*cost13
EvtBToKpipi.F:      	P1(1) = p1mom*Dsqrt(1.D+00-cost13**2)
EvtBToKpipi.F:      	p1(2) = 0.
EvtBToKpipi.F:      	Do i=1,3
EvtBToKpipi.F:      	P2(i)=-p1(i)-p3(i)
EvtBToKpipi.F:      Subroutine EvtCompute_Kpipi(p1,p2,p3,
EvtBToKpipi.F:      	Real*8 m12, m13, m23, W12, W13, W23, Wtot
EvtBToKpipi.F:      	Complex*16 MatB0,MatB0bar,BW12,BW13,BW23
EvtBToKpipi.F:      	Real*8     p1(5),p2(5),p3(5)
EvtBToKpipi.F:        Complex*16 BrightWagner,BreitWigner
EvtBToKpipi.F:      	m12 = evt_gmas(p1,p2)
EvtBToKpipi.F:      	m13 = evt_gmas(p1,p3)
EvtBToKpipi.F:	if(m12.lt.0. .or. m13.lt.0. .or. m23.lt.0.) Then
EvtBToKpipi.F:		ierr=1
EvtBToKpipi.F:      	m12 = sqrt(m12)
EvtBToKpipi.F:      	m13 = sqrt(m13)
EvtBToKpipi.F: 	W12 = 1. / (((Mass_Kstar0 - m12)**2+(Gam_Kstar0/2.)**2)*m12)
EvtBToKpipi.F:      	W13 = 1. / (((Mass_Kstarp - m13)**2+(Gam_Kstarp/2.)**2)*m13)      	
EvtBToKpipi.F:      	W23 = 1. / (((Mass_rho    - m23)**2+(Gam_rho   /2.)**2)*m23)      	
EvtBToKpipi.F:      	Wtot = 1.D+00/Dsqrt(W12 + W13 + W23)                                        
EvtBToKpipi.F:	Wtot =1.
EvtBToKpipi.F:        BW13=BrightWagner(p1,p3,p2,Mass_Kstarp,Gam_Kstarp,ierr)
EvtBToKpipi.F:        BW12=BrightWagner(p1,p2,p3,Mass_Kstar0,Gam_Kstar0,ierr)
EvtBToKpipi.F:c        BW23=BrightWagner(p2,p3,p1,Mass_Rho   ,Gam_Rho   ,ierr)
EvtBToKpipi.F:        BW23=BreitWigner(p2,p3,p1,ierr)
EvtBToKpipi.F:      	MatB0    = MatKstarp * BW13
EvtBToKpipi.F:     >           + MatKstar0 * BW12                                                     	                                           
EvtBToKpipi.F:      	MatB0bar = NatKstarp * BW13
EvtBToKpipi.F:     >           + NatKstar0 * BW12                                                      	                                           
EvtBToKpipi.F:      Function BrightWagner(p1,p2,p3,Mass,Width,ierr)
EvtBToKpipi.F:      	Complex *16 BrightWagner,EvtRBW
EvtBToKpipi.F:      	Real*8     p1(5),p2(5),p3(5)                                              
EvtBToKpipi.F:      	Real*8 E12_2,m12_2,beta,gamma,argu,m13_2,costet,coscms,m12                             
EvtBToKpipi.F:      	Real *8 p1z,p1zcms12,e1cms12,p1cms12 
EvtBToKpipi.F:        	E12_2=(p1(4)+p2(4))**2                                                    
EvtBToKpipi.F:      	m12_2=E12_2                                                               
EvtBToKpipi.F:      	Do i=1,3                                                                  
EvtBToKpipi.F:      		m12_2=m12_2-(p1(i)+p2(i))**2                                              
EvtBToKpipi.F:      	Argu = 1.D+00 - m12_2 / E12_2                                             
EvtBToKpipi.F:      	If(m12_2.gt.0.)Then                                                       
EvtBToKpipi.F:      		m12     = Dsqrt(m12_2)                                                    
EvtBToKpipi.F:      		Print *,'Abnormal m12  ! m12_2 = ',m12_2 
EvtBToKpipi.F:      		Print*,'p1 = ',p1      		
EvtBToKpipi.F:      	gamma=Dsqrt(E12_2/m12_2)                                                    
EvtBToKpipi.F:      	m13_2=(p1(4)+p3(4))**2                                                    
EvtBToKpipi.F:      	Do i=1,3                                                                  
EvtBToKpipi.F:      		m13_2=m13_2-(p1(i)+p3(i))**2                                              
EvtBToKpipi.F:	if(m13_2.lt.0)            Go To 50
EvtBToKpipi.F:        if((p1(4)**2-p1(5)).lt.0) Go To 50
EvtBToKpipi.F:      	costet= (2.D+00*p1(4)*p3(4)-m13_2+p1(5)+p3(5))                            
EvtBToKpipi.F:     >        (2.D+00*Dsqrt( (p1(4)**2-p1(5)) * (p3(4)**2-p3(5)) ))              
EvtBToKpipi.F:C 	---	get the costet in the 1-2 CMS 
EvtBToKpipi.F:      	p1z=dsqrt(P1(4)**2-p1(5))*costet                                               
EvtBToKpipi.F:      	p1zcms12=gamma*(p1z+beta*P1(4))
EvtBToKpipi.F:      	e1cms12 =gamma*(p1(4)+beta*p1z)
EvtBToKpipi.F:      	p1cms12 =Dsqrt(e1cms12**2-p1(5))
EvtBToKpipi.F:      	coscms=p1zcms12/p1cms12   
EvtBToKpipi.F:      	        Am2Min       = p1(5) + p2(5) + 2.*Dsqrt( p1(5)*p2(5) )
EvtBToKpipi.F:      		BrightWagner = coscms * EvtRBW(m12_2,Mass**2,Width,Am2Min)
EvtBToKpipi.F:      	 Factor  = 2.D+00* ( (Mass-m12)**2+(0.5D+00*Width)**2 )              
EvtBToKpipi.F:      	 Num_real=  (Mass-m12)                    * Factor                     
EvtBToKpipi.F:      COMPLEX*16 EvtRBW
EvtBToKpipi.F:      G  =  Gam* (Am2/s) * ((s-Am2Min)/(Am2-Am2Min))**1.5
EvtbTosllAli.cc:  setWeight(p->initializePhaseSpace(getNDaug(),getDaugs(),_poleSize,1,2));
EvtbTosllAli.cc:  EvtId parnum,mesnum,l1num,l2num;
EvtbTosllAli.cc:  l1num = getDaug(1);
EvtbTosllAli.cc:					   l1num,l2num,
EvtbTosllAli.cc:                           << " a SCALAR or VECTOR 1st daughter, found:"<<
EvtbTosllAli.cc:  checkSpinDaughter(1,EvtSpinType::DIRAC);
EvtbTosllAli.cc:    _calcamp = new EvtbTosllScalarAmp(-0313,4.344,-4.669); 
EvtbTosllAli.cc:    _calcamp = new EvtbTosllVectorAmp(-0313,4.344,-4.669); 
EvtbTosllAliFF.cc:  fp = 0.278*exp(1.568*shat+0.470*shat2+0.885*shat3);
EvtbTosllAliFF.cc:  ft = 0.300*exp(1.600*shat+0.501*shat2+0.796*shat3);
EvtbTosllAliFF.cc:				  double& a1,double& a2,double& a0, double& v,
EvtbTosllAliFF.cc:				  double& t1, double& t2, double& t3 ){
EvtbTosllAliFF.cc:  a1=0.294*exp(0.656*shat+0.456*shat2);
EvtbTosllAliFF.cc:  a2=0.246*exp(1.237*shat+0.822*shat2);
EvtbTosllAliFF.cc:  a0=0.412*exp(1.543*shat+0.954*shat2);
EvtbTosllAliFF.cc:  v=0.399*exp(1.537*shat+1.123*shat2);
EvtbTosllAliFF.cc:  t1=0.334*exp(1.575*shat+1.140*shat2);
EvtbTosllAliFF.cc:  t2=0.334*exp(0.562*shat+0.481*shat2);
EvtbTosllAliFF.cc:  t3=0.234*exp(1.230*shat+1.089*shat2);
EvtbTosllAliFF.hh://      Copyright (C) 1998      Caltech, UCSB
EvtbTosllAliFF.hh:		   double& a1,double& a2,double& a0, double& v,
EvtbTosllAliFF.hh:		   double& t1, double& t2, double& t3 );
EvtbTosllAli.hh:// Description:Implementation of the b->sll decays according to Ali '01 et al.
EvtbTosllAmp.cc://      Copyright (C) 1998      Caltech, UCSB
EvtbTosllAmp.cc://    DJL       April 17,1998       Module created
EvtbTosllAmp.cc:				  EvtId lepton1, EvtId lepton2,
EvtbTosllAmp.cc:  EvtParticle *daughter, *lep1, *lep2;
EvtbTosllAmp.cc:  listdaug[1] = lepton1;
EvtbTosllAmp.cc:  lep1=root_part->getDaug(1);
EvtbTosllAmp.cc:  lep1->noLifeTime();
EvtbTosllAmp.cc:  EvtVector4R p4meson, p4lepton1, p4lepton2, p4w;
EvtbTosllAmp.cc:  double prob = -10.0;
EvtbTosllAmp.cc:    mass[1] = EvtPDL::getMeanMass(lepton1);
EvtbTosllAmp.cc:    if ( massiter==1 ) {
EvtbTosllAmp.cc:      if ( (mass[0]+mass[1]+mass[2])>m) mass[0]=m-mass[1]-mass[2]-0.00001; 
EvtbTosllAmp.cc:      q2 = ((i+1.5)*q2max)/26.0;
EvtbTosllAmp.cc:      if (i==0) q2=4*(mass[1]*mass[1]);
EvtbTosllAmp.cc:      p4meson.set(erho,0.0,0.0,-1.0*prho);
EvtbTosllAmp.cc:      elepton = (q2+mass[1]*mass[1])/(2.0*sqrt(q2));
EvtbTosllAmp.cc:      plepton = sqrt(elepton*elepton-mass[1]*mass[1]);
EvtbTosllAmp.cc:        costl = 0.99*(j - 1.0);
EvtbTosllAmp.cc:        p4lepton1.set(elepton,0.0,
EvtbTosllAmp.cc:		  plepton*sqrt(1.0-costl*costl),plepton*costl);
EvtbTosllAmp.cc:		 -1.0*plepton*sqrt(1.0-costl*costl),-1.0*plepton*costl);
EvtbTosllAmp.cc:	EvtVector4R boost((m-erho),0.0,0.0,1.0*prho);
EvtbTosllAmp.cc:        p4lepton1=boostTo(p4lepton1,boost);
EvtbTosllAmp.cc:        lep1->init(lepton1,p4lepton1);
EvtbTosllAmp.cc:      //probclt contains prob at ctl=-1,0,1.
EvtbTosllAmp.cc:      double a=probctl[1];
EvtbTosllAmp.cc:      double c=0.5*(probctl[2]+probctl[0])-probctl[1];
EvtbTosllAmp.cc:      if (probctl[1]>prob) prob=probctl[1];
EvtbTosllAmp.cc:      if (fabs(c)>1e-20){
EvtbTosllAmp.cc:	if (fabs(ctlx)<1.0){
EvtbTosllAmp.cc:      //			    << probctl[1]<<" "
EvtbTosllAmp.cc:  poleSize=0.04*(maxpole/maxfoundprob)*4*(mass[1]*mass[1]);
EvtbTosllAmp.cc:  maxfoundprob *=1.15;
EvtbTosllAmp.cc:  if (!nnlo) return -0.313;
EvtbTosllAmp.cc:  A8 = -0.164;
EvtbTosllAmp.cc:  A9 = 4.287 + (-0.218);
EvtbTosllAmp.cc:  double A10;
EvtbTosllAmp.cc:  A10 = -4.592 + 0.379;
EvtbTosllAmp.cc:  double C1;
EvtbTosllAmp.cc:  C1 = -0.697;
EvtbTosllAmp.cc:  C2 = 1.046;
EvtbTosllAmp.cc:  T9 = 0.114 + 0.280;
EvtbTosllAmp.cc:  W9 = 0.044 + 0.016;
EvtbTosllAmp.cc:  EvtComplex uniti(0.0,1.0);
EvtbTosllAmp.cc:  alphas = 0.215;
EvtbTosllAmp.cc:  A7 = -0.312 + 0.008;
EvtbTosllAmp.cc:  A8 = -0.148;
EvtbTosllAmp.cc:  A9 = 4.174 + (-0.035);
EvtbTosllAmp.cc:  A10 = -4.592 + 0.379;
EvtbTosllAmp.cc:  C1 = -0.487;
EvtbTosllAmp.cc:  C2 = 1.024;
EvtbTosllAmp.cc:  U9 = 0.033 + 0.015;
EvtbTosllAmp.cc:  W9 = 0.032 + 0.012;
EvtbTosllAmp.cc:  EvtComplex F71;
EvtbTosllAmp.cc:  EvtComplex f71;
EvtbTosllAmp.cc:  EvtComplex k7100(-0.68192,-0.074998);
EvtbTosllAmp.cc:  EvtComplex k7101(0.0,0.0);
EvtbTosllAmp.cc:  EvtComplex k7110(-0.23935,-0.12289);
EvtbTosllAmp.cc:  EvtComplex k7111(0.0027424,0.019676);
EvtbTosllAmp.cc:  EvtComplex k7120(-0.0018555,-0.175);
EvtbTosllAmp.cc:  EvtComplex k7121(0.022864,0.011456);
EvtbTosllAmp.cc:  EvtComplex k7130(0.28248,-0.12783);
EvtbTosllAmp.cc:  EvtComplex k7131(0.029027,-0.0082265);
EvtbTosllAmp.cc:  f71 = k7100 + k7101*logshat + shat*(k7110 + k7111*logshat) +
EvtbTosllAmp.cc:        shat*shat*(k7120 + k7121*logshat) + 
EvtbTosllAmp.cc:        shat*shat*shat*(k7130 + k7131*logshat); 
EvtbTosllAmp.cc:  F71 = (-208.0/243.0)*Lmu + f71;
EvtbTosllAmp.cc:  EvtComplex k7200(4.0915,0.44999);
EvtbTosllAmp.cc:  EvtComplex k7201(0.0,0.0);
EvtbTosllAmp.cc:  EvtComplex k7210(1.4361,0.73732);
EvtbTosllAmp.cc:  EvtComplex k7211(-0.016454,-0.11806);
EvtbTosllAmp.cc:  EvtComplex k7220(0.011133,1.05);
EvtbTosllAmp.cc:  EvtComplex k7221(-0.13718,-0.068733);
EvtbTosllAmp.cc:  EvtComplex k7230(-1.6949,0.76698);
EvtbTosllAmp.cc:  EvtComplex k7231(-0.17416,0.049359);
EvtbTosllAmp.cc:  f72 = k7200 + k7201*logshat + shat*(k7210 + k7211*logshat) +
EvtbTosllAmp.cc:        shat*shat*(k7220 + k7221*logshat) + 
EvtbTosllAmp.cc:        shat*shat*shat*(k7230 + k7231*logshat); 
EvtbTosllAmp.cc:  F72 = (416.0/81.0)*Lmu + f72;
EvtbTosllAmp.cc:        (32.0*EvtConst::pi*EvtConst::pi/9.0 - 316.0/9.0)*shat*shat +
EvtbTosllAmp.cc:  c7eff = A7 - alphas/(4.0*EvtConst::pi)*(C1*F71 + C2*F72 + A8*F78);
EvtbTosllAmp.cc:  A8 = -0.164;
EvtbTosllAmp.cc:  A9 = 4.287 + (-0.218);
EvtbTosllAmp.cc:  double A10;
EvtbTosllAmp.cc:  A10 = -4.592 + 0.379;
EvtbTosllAmp.cc:  double C1;
EvtbTosllAmp.cc:  C1 = -0.697;
EvtbTosllAmp.cc:  C2 = 1.046;
EvtbTosllAmp.cc:  T9 = 0.114 + 0.280;
EvtbTosllAmp.cc:  W9 = 0.044 + 0.016;
EvtbTosllAmp.cc:  EvtComplex uniti(0.0,1.0);
EvtbTosllAmp.cc:if (xarg < 1.0)
EvtbTosllAmp.cc:    hc = hc - 2.0/9.0*(2.0 + xarg)*sqrt(fabs(1.0 - xarg))*
EvtbTosllAmp.cc:      (log(fabs((sqrt(1.0 - xarg)+1.0)/(sqrt(1.0 - xarg) - 1.0))) -
EvtbTosllAmp.cc:    hc = hc - 2.0/9.0*(2.0 + xarg)*sqrt(fabs(1.0 - xarg))*
EvtbTosllAmp.cc:      2.0*atan(1.0/sqrt(xarg - 1.0));
EvtbTosllAmp.cc:  EvtComplex h1;
EvtbTosllAmp.cc:  h1 = 8.0/27.0 + 4.0*xarg/9.0;
EvtbTosllAmp.cc:  if (xarg < 1.0)
EvtbTosllAmp.cc:    h1 = h1 - 2.0/9.0*(2.0 + xarg)*sqrt(fabs(1.0 - xarg))*
EvtbTosllAmp.cc:      (log(fabs((sqrt(1.0 - xarg)+1.0)/(sqrt(1.0 - xarg) - 1.0))) -
EvtbTosllAmp.cc:    h1 = h1 - 2.0/9.0*(2.0 + xarg)*sqrt(fabs(1.0 - xarg))*
EvtbTosllAmp.cc:      2.0*atan(1.0/sqrt(xarg - 1.0));
EvtbTosllAmp.cc:  // X=V_{ud}^* V_ub / V_{td}^* V_tb * (4/3 C_1 +C_2) * (h(\hat m_c^2, hat s)-
EvtbTosllAmp.cc:  EvtComplex Vudstar(1.0 - 0.2279*0.2279/2.0, 0.0);
EvtbTosllAmp.cc:  EvtComplex Vub((0.118+0.273)/2.0, -1.0*(0.305+0.393)/2.0);
EvtbTosllAmp.cc:  EvtComplex Vtdstar(1.0 - (0.118+0.273)/2.0,(0.305+0.393)/2.0);
EvtbTosllAmp.cc:  EvtComplex Vtb(1.0,0.0);
EvtbTosllAmp.cc:  Xd = (Vudstar * Vub / Vtdstar * Vtb) * (4.0/3.0*C1 + C2) * (hc - h0);
EvtbTosllAmp.cc:   c9eff =  A9 + T9*hc + U9*h1 + W9*h0;
EvtbTosllAmp.cc:  alphas = 0.215;
EvtbTosllAmp.cc:  A9 = 4.174 + (-0.035);
EvtbTosllAmp.cc:  C1 = -0.487;
EvtbTosllAmp.cc:  C2 = 1.024;
EvtbTosllAmp.cc:  A8 = -0.148;
EvtbTosllAmp.cc:  U9 = 0.033 + 0.015;
EvtbTosllAmp.cc:  W9 = 0.032 + 0.012;
EvtbTosllAmp.cc:  EvtComplex F91;
EvtbTosllAmp.cc:  EvtComplex f91;
EvtbTosllAmp.cc:  EvtComplex k9100(-11.973,0.16371);
EvtbTosllAmp.cc:  EvtComplex k9101(-0.081271,-0.059691);
EvtbTosllAmp.cc:  EvtComplex k9110(-28.432,-0.25044);
EvtbTosllAmp.cc:  EvtComplex k9111(-0.040243,0.016442);
EvtbTosllAmp.cc:  EvtComplex k9120(-57.114,-0.86486);
EvtbTosllAmp.cc:  EvtComplex k9121(-0.035191,0.027909);
EvtbTosllAmp.cc:  EvtComplex k9130(-128.8,-2.5243);
EvtbTosllAmp.cc:  EvtComplex k9131(-0.017587,0.050639);
EvtbTosllAmp.cc:  f91 = k9100 + k9101*logshat + shat*(k9110 + k9111*logshat) +
EvtbTosllAmp.cc:        shat*shat*(k9120 + k9121*logshat) + 
EvtbTosllAmp.cc:        shat*shat*shat*(k9130 + k9131*logshat); 
EvtbTosllAmp.cc:  F91 = (-1424.0/729.0 + 16.0*uniti*EvtConst::pi/243.0 
EvtbTosllAmp.cc:         + 64.0/27.0*log(mchat))*Lmu - 16.0*Lmu*logshat/243.0 +
EvtbTosllAmp.cc:        (16.0/1215.0 - 32.0/135.0/mchat/mchat)*Lmu*shat +
EvtbTosllAmp.cc:        (4.0/2835.0 - 8.0/315.0/mchat/mchat/mchat/mchat)*Lmu*shat*shat +
EvtbTosllAmp.cc:    (16.0/76545.0 - 32.0/8505.0/mchat/mchat/mchat/mchat/mchat/mchat)*
EvtbTosllAmp.cc:    Lmu*shat*shat*shat -256.0*Lmu*Lmu/243.0 + f91;
EvtbTosllAmp.cc:  EvtComplex k9201(0.48763,0.35815);
EvtbTosllAmp.cc:  EvtComplex k9210(3.3585,1.5026);
EvtbTosllAmp.cc:  EvtComplex k9211(0.24146,-0.098649);
EvtbTosllAmp.cc:  EvtComplex k9220(-1.1906,5.1892);
EvtbTosllAmp.cc:  EvtComplex k9221(0.21115,-0.16745);
EvtbTosllAmp.cc:  EvtComplex k9230(-17.12,15.146);
EvtbTosllAmp.cc:  EvtComplex k9231(0.10552,-0.30383);
EvtbTosllAmp.cc:  f92 = k9200 + k9201*logshat + shat*(k9210 + k9211*logshat) +
EvtbTosllAmp.cc:        shat*shat*(k9220 + k9221*logshat) + 
EvtbTosllAmp.cc:        shat*shat*shat*(k9230 + k9231*logshat); 
EvtbTosllAmp.cc:  F92 = (256.0/243.0 - 32.0*uniti*EvtConst::pi/81.0 
EvtbTosllAmp.cc:         - 128.0/9.0*log(mchat))*Lmu + 32.0*Lmu*logshat/81.0 +
EvtbTosllAmp.cc:        (-8.0/945.0 + 16.0/105.0/mchat/mchat/mchat/mchat)*Lmu*shat*shat +
EvtbTosllAmp.cc:    (-32.0/25515.0 + 64.0/2835.0/mchat/mchat/mchat/mchat/mchat/mchat)*
EvtbTosllAmp.cc:    Lmu*shat*shat*shat + 512.0*Lmu*Lmu/81.0 + f92;
EvtbTosllAmp.cc:  F98 = 104.0/9.0 - 32.0*EvtConst::pi*EvtConst::pi/27.0 + 
EvtbTosllAmp.cc:        (1184.0/27.0 - 40.0*EvtConst::pi*EvtConst::pi/9.0)*shat +
EvtbTosllAmp.cc:        (14212.0/135.0 - 32.0*EvtConst::pi*EvtConst::pi/3.0)*shat*shat +
EvtbTosllAmp.cc:    (193444.0/945.0 - 560.0*EvtConst::pi*EvtConst::pi/27.0)*shat*shat*shat +
EvtbTosllAmp.cc:        16.0*logshat/9.0*(1.0 + shat + shat*shat + shat*shat*shat);
EvtbTosllAmp.cc:  Xd = (Vudstar * Vub / Vtdstar * Vtb) * (4.0/3.0*C1 + C2) * (hc - h0);
EvtbTosllAmp.cc:  c9eff = A9 + T9*hc + U9*h1 + W9*h0 -             
EvtbTosllAmp.cc:    alphas/(4.0*EvtConst::pi)*(C1*F91 + C2*F92 + A8*F98);
EvtbTosllAmp.cc:EvtComplex EvtbTosllAmp::GetC10Eff(double q2, bool nnlo) 
EvtbTosllAmp.cc:  double A10;
EvtbTosllAmp.cc:  A10 = -4.592 + 0.379;
EvtbTosllAmp.cc:  EvtComplex c10eff;
EvtbTosllAmp.cc:  c10eff = A10;
EvtbTosllAmp.cc:  return c10eff;
EvtbTosllAmp.cc:  double f1, f2, f3, f4;
EvtbTosllAmp.cc:  EvtComplex c10eff = EvtbTosllAmp::GetC10Eff(sh*mb);
EvtbTosllAmp.cc:  double alphas = 0.119/
EvtbTosllAmp.cc:     (1 + 0.119*log(pow(4.8,2)/pow(91.1867,2))*23.0/12.0/EvtConst::pi);
EvtbTosllAmp.cc:                 - 2.0/3.0*log(sh)*log(1.0-sh)
EvtbTosllAmp.cc:                 - (5.0+4.0*sh)/(3.0*(1.0+2.0*sh)) * log(1.0-sh)
EvtbTosllAmp.cc:                 - 2.0*sh*(1.0+sh)*(1.0-2.0*sh)
EvtbTosllAmp.cc:                 /(3.0*pow(1.0-sh,2)*(1.0+2.0*sh)) * log(sh)
EvtbTosllAmp.cc:                 + (5.0+9.0*sh-6.0*sh*sh)/(6.0*(1.0-sh)*(1.0+2.0*sh));
EvtbTosllAmp.cc:  double eta9 = 1.0 + alphas*omega9/EvtConst::pi;
EvtbTosllAmp.cc:                  -2.0/3.0*log(sh)*log(1.0-sh)
EvtbTosllAmp.cc:                  -log(1-sh)*(8.0+sh)/(2.0+sh)/3.0 
EvtbTosllAmp.cc:    -2.0/3.0*sh*(2.0 - 2.0*sh - sh*sh)*log(sh)/pow((1.0 - sh),2)/(2.0 + sh)
EvtbTosllAmp.cc:    -(16.0 - 11.0*sh - 17.0*sh*sh)/18.0/(2.0 + sh)/(1.0 - sh);
EvtbTosllAmp.cc:  double eta7 = 1.0 + alphas*omega7/EvtConst::pi;
EvtbTosllAmp.cc:                   -2.0/3.0*log(sh)*log(1.0-sh)
EvtbTosllAmp.cc:                   -1.0/9.0*(2.0+7.0*sh)*log(1.0 - sh)/sh
EvtbTosllAmp.cc:                   -2.0/9.0*sh*(3.0 - 2.0*sh)*log(sh)/pow((1.0 - sh),2) 
EvtbTosllAmp.cc:                   +1.0/18.0*(5.0 - 9.0*sh)/(1.0 - sh);
EvtbTosllAmp.cc:  double eta79 = 1.0 + alphas*omega79/EvtConst::pi;
EvtbTosllAmp.cc:  double c9c9plusc10c10 = pow(abs(c9eff),2) + pow(abs(c10eff),2);
EvtbTosllAmp.cc:  c9c9plusc10c10 *= pow(eta9,2);
EvtbTosllAmp.cc:  double c9c9minusc10c10 = pow(abs(c9eff),2) - pow(abs(c10eff),2);
EvtbTosllAmp.cc:  c9c9minusc10c10 *= pow(eta9,2);
EvtbTosllAmp.cc:  lambda = 1.0 + sh*sh + pow(msh,4) - 2.0*(sh + sh*msh*msh + msh*msh);
EvtbTosllAmp.cc:  f1 = pow(1.0-msh*msh,2) - sh*(1.0 + msh*msh);
EvtbTosllAmp.cc:  f2 = 2.0*(1.0 + msh*msh) * pow(1.0-msh*msh,2)
EvtbTosllAmp.cc:       - sh*(1.0 + 14.0*msh*msh + pow(msh,4)) - sh*sh*(1.0 + msh*msh);
EvtbTosllAmp.cc:  f3 = pow(1.0-msh*msh,2) + sh*(1.0 + msh*msh) - 2.0*sh*sh
EvtbTosllAmp.cc:  f4 = 1.0 - sh + msh*msh;
EvtbTosllAmp.cc:  delta = (  12.0*c7c9*f1 + 4.0*c7c7*f2/sh ) * (1.0 + 2.0*mlh*mlh/sh)
EvtbTosllAmp.cc:            + c9c9plusc10c10*f3 
EvtbTosllAmp.cc:            + 6.0*mlh*mlh*c9c9minusc10c10*f4;
EvtbTosllAmp.cc:  prob =  sqrt(lambda*(1.0 - 4.0*mlh*mlh/sh)) * delta;
EvtbTosllAmp.cc:  double f1sp, f2sp, f3sp;
EvtbTosllAmp.cc:  EvtComplex c10eff = EvtbTosllAmp::GetC10Eff(sh*mb);
EvtbTosllAmp.cc:  double alphas = 0.119/
EvtbTosllAmp.cc:     (1 + 0.119*log(pow(4.8,2)/pow(91.1867,2))*23.0/12.0/EvtConst::pi);
EvtbTosllAmp.cc:                 - 2.0/3.0*log(sh)*log(1.0-sh)
EvtbTosllAmp.cc:                 - (5.0+4.0*sh)/(3.0*(1.0+2.0*sh)) * log(1.0-sh)
EvtbTosllAmp.cc:                 - 2.0*sh*(1.0+sh)*(1.0-2.0*sh)
EvtbTosllAmp.cc:                 /(3.0*pow(1.0-sh,2)*(1.0+2.0*sh)) * log(sh)
EvtbTosllAmp.cc:                 + (5.0+9.0*sh-6.0*sh*sh)/(6.0*(1.0-sh)*(1.0+2.0*sh));
EvtbTosllAmp.cc:  double eta9 = 1.0 + alphas*omega9/EvtConst::pi;
EvtbTosllAmp.cc:                  -2.0/3.0*log(sh)*log(1.0-sh)
EvtbTosllAmp.cc:                  -log(1-sh)*(8.0+sh)/(2.0+sh)/3.0 
EvtbTosllAmp.cc:    -2.0/3.0*sh*(2.0 - 2.0*sh - sh*sh)*log(sh)/pow((1.0 - sh),2)/(2.0 + sh)
EvtbTosllAmp.cc:    -(16.0 - 11.0*sh - 17.0*sh*sh)/18.0/(2.0 + sh)/(1.0 - sh);
EvtbTosllAmp.cc:  double eta7 = 1.0 + alphas*omega7/EvtConst::pi;
EvtbTosllAmp.cc:                   -2.0/3.0*log(sh)*log(1.0-sh)
EvtbTosllAmp.cc:                   -1.0/9.0*(2.0+7.0*sh)*log(1.0 - sh)/sh
EvtbTosllAmp.cc:                   -2.0/9.0*sh*(3.0 - 2.0*sh)*log(sh)/pow((1.0 - sh),2) 
EvtbTosllAmp.cc:                   +1.0/18.0*(5.0 - 9.0*sh)/(1.0 - sh);
EvtbTosllAmp.cc:  double eta79 = 1.0 + alphas*omega79/EvtConst::pi;
EvtbTosllAmp.cc:  double c9c9plusc10c10 = pow(abs(c9eff),2) + pow(abs(c10eff),2);
EvtbTosllAmp.cc:  c9c9plusc10c10 *= pow(eta9,2);
EvtbTosllAmp.cc:  double c9c9minusc10c10 = pow(abs(c9eff),2) - pow(abs(c10eff),2);
EvtbTosllAmp.cc:  c9c9minusc10c10 *= pow(eta9,2);
EvtbTosllAmp.cc:  double c7c10 = abs(c7eff)*real(c10eff);
EvtbTosllAmp.cc:  c7c10 *= eta7; c7c10 *= eta9;
EvtbTosllAmp.cc:  double c9c10 = real(c9eff)*real(c10eff);
EvtbTosllAmp.cc:  c9c10 *= pow(eta9,2); 
EvtbTosllAmp.cc:  f1sp = ( pow(mb*mb-ms*ms,2) - s*s) * c9c9plusc10c10 
EvtbTosllAmp.cc:         + 4.0*( pow(mb,4) - ms*ms*mb*mb - pow(ms,4)*(1.0 - ms*ms/(mb*mb))
EvtbTosllAmp.cc:         - 8.0*s*ms*ms - s*s*(1.0 + ms*ms/(mb*mb) ))*mb*mb*c7c7/s
EvtbTosllAmp.cc:         *(1.0 + 2.0*ml*ml/s)
EvtbTosllAmp.cc:         *(1.0 + 2.0*ml*ml/s);
EvtbTosllAmp.cc:  f2sp = 4.0*s*c9c10 + 8.0*(mb*mb + ms*ms)*c7c10;
EvtbTosllAmp.cc:  f3sp = - (c9c9plusc10c10)
EvtbTosllAmp.cc:         + 4.0*(1.0 + pow(ms/mb,4)) * mb*mb*c7c7/s
EvtbTosllAmp.cc:         *(1.0 + 2.0*ml*ml/s);
EvtbTosllAmp.cc:  prob = (f1sp + f2sp*u + f3sp*u*u)/ pow(mb,3);
EvtbTosllAmp.hh://      Copyright (C) 1998      Caltech, UCSB
EvtbTosllAmp.hh:  EvtComplex GetC10Eff(double q2, bool nnlo=true);
EvtbTosllBall.cc:  setWeight(p->initializePhaseSpace(getNDaug(),getDaugs(),_poleSize,1,2));
EvtbTosllBall.cc:  EvtId parnum,mesnum,l1num,l2num;
EvtbTosllBall.cc:  l1num = getDaug(1);
EvtbTosllBall.cc:					   l1num,l2num,
EvtbTosllBall.cc:                           << " a SCALAR or VECTOR 1st daughter, found:"<<
EvtbTosllBall.cc:  checkSpinDaughter(1,EvtSpinType::DIRAC);
EvtbTosllBall.cc:    _calcamp = new EvtbTosllScalarAmp(-0.313,4.344,-4.669); 
EvtbTosllBall.cc:    _calcamp = new EvtbTosllVectorAmp(-0.313,4.344,-4.669); 
EvtbTosllBallFF.cc://              hep-ph/9910221v2
EvtbTosllBallFF.cc:  int model = 1;
EvtbTosllBallFF.cc:  if (model == 1) {
EvtbTosllBallFF.cc:        //this is Ali-Ball '01
EvtbTosllBallFF.cc:    fp = 0.278*exp(1.568*shat+0.470*shat2+0.885*shat3);
EvtbTosllBallFF.cc:    ft = 0.300*exp(1.600*shat+0.501*shat2+0.796*shat3);
EvtbTosllBallFF.cc:    fp = 0.319*exp(1.465*shat+0.372*shat2+0.782*shat3);
EvtbTosllBallFF.cc:    f0 = 0.319*exp(0.633*shat-0.095*shat2+0.591*shat3);
EvtbTosllBallFF.cc:    ft = 0.355*exp(1.478*shat+0.373*shat2+0.700*shat3);
EvtbTosllBallFF.cc:    fp = 0.25/(1.-t/(5.0*5.0));
EvtbTosllBallFF.cc:    f0 = 0.25/(1.-t/(7.0*7.0));
EvtbTosllBallFF.cc:    ft = - 0.14/((1.0 - t/(5.0*5.0))*(1.0 - t/(7.0*7.0)));
EvtbTosllBallFF.cc:    fp = 0.36/(1. - 0.048*t + 0.00063*t*t);
EvtbTosllBallFF.cc:    double fm = -0.30/(1. - 0.050*t + 0.00061*t*t);
EvtbTosllBallFF.cc:    ft  = -(m+md)*0.06/(1 -0.049*t + 0.00064*t*t);
EvtbTosllBallFF.cc:    fp = 0.341/(1. - 1.41*shat + 0.406*shat*shat);
EvtbTosllBallFF.cc:    f0 = 0.341/(1. - 0.41*shat -0.361*shat*shat);
EvtbTosllBallFF.cc:    ft = 0.374/(1. - 1.42*shat + 0.434*shat*shat);
EvtbTosllBallFF.cc:    fp = 0.261/(1. - 2.03*shat + 1.293*shat*shat);
EvtbTosllBallFF.cc:    f0 = 0.261/(1. - 0.27*shat  -0.752*shat*shat);
EvtbTosllBallFF.cc:    ft = 0.296/(1. - 1.28*shat + 0.193*shat*shat);
EvtbTosllBallFF.cc:				  double& a1,double& a2,double& a0, double& v,
EvtbTosllBallFF.cc:				  double& t1, double& t2, double& t3 ){
EvtbTosllBallFF.cc:  int model = 1;
EvtbTosllBallFF.cc:  if (model == 1) {
EvtbTosllBallFF.cc:        //this is Ali-Ball '01
EvtbTosllBallFF.cc:    a1 = 0.294*exp(0.656*shat+0.456*shat2);
EvtbTosllBallFF.cc:    a2 = 0.246*exp(1.237*shat+0.822*shat2);
EvtbTosllBallFF.cc:    a0 = 0.412*exp(1.543*shat+0.954*shat2);
EvtbTosllBallFF.cc:    v  = 0.399*exp(1.537*shat+1.123*shat2);
EvtbTosllBallFF.cc:    t1 = 0.334*exp(1.575*shat+1.140*shat2);
EvtbTosllBallFF.cc:    t2 = 0.334*exp(0.562*shat+0.481*shat2);
EvtbTosllBallFF.cc:    t3 = 0.234*exp(1.230*shat+1.089*shat2);
EvtbTosllBallFF.cc:    a1=0.337*exp(0.602*shat+0.258*shat2);
EvtbTosllBallFF.cc:    a2=0.282*exp(1.172*shat+0.567*shat2);
EvtbTosllBallFF.cc:    a0=0.471*exp(1.505*shat+0.710*shat2);
EvtbTosllBallFF.cc:    v=0.457*exp(1.482*shat+1.015*shat2);
EvtbTosllBallFF.cc:    t1=0.379*exp(1.519*shat+1.030*shat2);
EvtbTosllBallFF.cc:    t2=0.379*exp(0.517*shat+0.426*shat2);
EvtbTosllBallFF.cc:    t3=0.260*exp(1.129*shat+1.128*shat2);
EvtbTosllBallFF.cc:    a1 = 0.30*(1 - 0.023*t);
EvtbTosllBallFF.cc:    a2 = 0.40*(1 + 0.034*t);
EvtbTosllBallFF.cc:    a0 = 0.3/(1.- t/(4.8*4.8));
EvtbTosllBallFF.cc:    v = 0.47/(1.- t/(5.0*5.0));
EvtbTosllBallFF.cc:    t1 = 0.19/(1.-t/(5.3*5.3));
EvtbTosllBallFF.cc:    t2 = 0.19*(1. - 0.02*t);
EvtbTosllBallFF.cc:    t3 = -0.7*(1. + 0.005*t); 
EvtbTosllBallFF.cc:    a1 = 1.6/(1 - 0.0288*t + 0.00028*t*t); a1 = a1/(m+md);
EvtbTosllBallFF.cc:    a2 = (m+md)*0.036/(1. - 0.053*t + 0.00082*t*t);
EvtbTosllBallFF.cc:    double aminus = 0.041/(1. - 0.055*t + 0.00088*t*t);
EvtbTosllBallFF.cc:    double f =  1.60/(1. - 0.0288*t + 0.00028*t*t);
EvtbTosllBallFF.cc:    double aplus = -0.036/(1. - 0.053*t + 0.00082*t*t);
EvtbTosllBallFF.cc:    v = (m+md)*0.048/(1. - 0.057*t + 0.00085*t*t);
EvtbTosllBallFF.cc:    t1 = 0.28/(1. - 0.058*t + 0.0009*t*t);
EvtbTosllBallFF.cc:    double gplus = -0.28/(1. - 0.058*t + 0.0009*t*t);
EvtbTosllBallFF.cc:    double gminus = 0.24/(1. - 0.059*t + 0.00096*t*t);
EvtbTosllBallFF.cc:    double h = 0.0037/(1. - 0.075*t + 0.0016*t*t);
EvtbTosllBallFF.cc:    a1 = 0.337/(1. - 0.60*shat - 0.023*shat*shat);
EvtbTosllBallFF.cc:    a2 = 0.283/(1. - 1.18*shat + 0.281*shat*shat);
EvtbTosllBallFF.cc:    a0 = 0.470/(1. - 1.55*shat + 0.680*shat*shat);
EvtbTosllBallFF.cc:    v  = 0.458/(1. - 1.55*shat + 0.575*shat*shat);
EvtbTosllBallFF.cc:    t1 = 0.379/(1. - 1.59*shat + 0.615*shat*shat);
EvtbTosllBallFF.cc:    t2 = 0.379/(1. - 0.49*shat - 0.241*shat*shat);
EvtbTosllBallFF.cc:    t3 = 0.261/(1. - 1.20*shat + 0.098*shat*shat);
EvtbTosllBallFF.cc:    a1 = 0.261/(1. - 0.29*shat - 0.415*shat*shat);
EvtbTosllBallFF.cc:    a2 = 0.223/(1. - 0.93*shat - 0.092*shat*shat);
EvtbTosllBallFF.cc:    a0 = 0.372/(1. - 1.40*shat + 0.437*shat*shat);
EvtbTosllBallFF.cc:    v  = 0.338/(1. - 1.37*shat + 0.315*shat*shat);
EvtbTosllBallFF.cc:    t1 = 0.285/(1. - 1.41*shat + 0.361*shat*shat);
EvtbTosllBallFF.cc:    t2 = 0.285/(1. - 0.28*shat - 0.500*shat*shat);
EvtbTosllBallFF.cc:    t3 = 0.202/(1. - 1.06*shat - 0.076*shat*shat);
EvtbTosllBallFF.cc:  //cout << "shat "<<shat<<"\t"<<"a1 "<<a1<<"\t"<<"a2 "<<a2<<"\t"
EvtbTosllBallFF.cc:  // cout << "\t"<<"v  "<<v<<"\t"<<"t1 "<<t1<<"\t"<<"t2 "<<t2<<"\t"
EvtbTosllBallFF.hh://      Copyright (C) 1998      Caltech, UCSB
EvtbTosllBallFF.hh://              hep-ph/9910221v2
EvtbTosllBallFF.hh:		   double& a1,double& a2,double& a0, double& v,
EvtbTosllBallFF.hh:		   double& t1, double& t2, double& t3 );
EvtbTosllFF.hh:			   double& a1,double& a2,double& a0, double& v,
EvtbTosllFF.hh:			   double& t1, double& t2, double& t3 ) {return;}
EvtbTosllScalarAmp.cc:  EvtVector4R q = parent->getDaug(1)->getP4() 
EvtbTosllScalarAmp.cc:  EvtVector4C l11,l12;
EvtbTosllScalarAmp.cc:  EvtVector4C l21,l22;
EvtbTosllScalarAmp.cc:  EvtVector4C a11,a12;
EvtbTosllScalarAmp.cc:  EvtVector4C a21,a22;
EvtbTosllScalarAmp.cc:  EvtId l_num = parent->getDaug(1)->getId();
EvtbTosllScalarAmp.cc:  EvtVector4C T1,T2;
EvtbTosllScalarAmp.cc:  EvtComplex c10eff = EvtbTosllAmp::GetC10Eff(q2,nnlo);
EvtbTosllScalarAmp.cc:  //double mbhat=1;
EvtbTosllScalarAmp.cc:  //double mkhat = 0.15;
EvtbTosllScalarAmp.cc:  double fm=(f0-fp)*(1-mkhat*mkhat)/shat;
EvtbTosllScalarAmp.cc:  aprime = c9eff*fp+2.0*mbhat*c7eff*ft/(1+mkhat);
EvtbTosllScalarAmp.cc:  bprime = c9eff*fm-2*mbhat*c7eff*ft*(1-mkhat)/shat;
EvtbTosllScalarAmp.cc:  cprime = c10eff*fp;
EvtbTosllScalarAmp.cc:  dprime = c10eff*fm;
EvtbTosllScalarAmp.cc:    T1=aprime*phat+bprime*qhat;
EvtbTosllScalarAmp.cc:    l11=EvtLeptonVCurrent(parent->getDaug(1)->spParent(0),
EvtbTosllScalarAmp.cc:    l21=EvtLeptonVCurrent(parent->getDaug(1)->spParent(1),
EvtbTosllScalarAmp.cc:    l12=EvtLeptonVCurrent(parent->getDaug(1)->spParent(0),
EvtbTosllScalarAmp.cc:                          parent->getDaug(2)->spParent(1));
EvtbTosllScalarAmp.cc:    l22=EvtLeptonVCurrent(parent->getDaug(1)->spParent(1),
EvtbTosllScalarAmp.cc:                          parent->getDaug(2)->spParent(1));
EvtbTosllScalarAmp.cc:    a11=EvtLeptonACurrent(parent->getDaug(1)->spParent(0),
EvtbTosllScalarAmp.cc:    a21=EvtLeptonACurrent(parent->getDaug(1)->spParent(1),
EvtbTosllScalarAmp.cc:    a12=EvtLeptonACurrent(parent->getDaug(1)->spParent(0),
EvtbTosllScalarAmp.cc:                          parent->getDaug(2)->spParent(1));
EvtbTosllScalarAmp.cc:    a22=EvtLeptonACurrent(parent->getDaug(1)->spParent(1),
EvtbTosllScalarAmp.cc:                          parent->getDaug(2)->spParent(1));
EvtbTosllScalarAmp.cc:    T1=aprime*phat+bprime*qhat;
EvtbTosllScalarAmp.cc:    l11=EvtLeptonVCurrent(parent->getDaug(1)->spParent(1),
EvtbTosllScalarAmp.cc:                          parent->getDaug(2)->spParent(1));
EvtbTosllScalarAmp.cc:    l21=EvtLeptonVCurrent(parent->getDaug(1)->spParent(0),
EvtbTosllScalarAmp.cc:                          parent->getDaug(2)->spParent(1));
EvtbTosllScalarAmp.cc:    l12=EvtLeptonVCurrent(parent->getDaug(1)->spParent(1),
EvtbTosllScalarAmp.cc:    l22=EvtLeptonVCurrent(parent->getDaug(1)->spParent(0),
EvtbTosllScalarAmp.cc:    a11=EvtLeptonACurrent(parent->getDaug(1)->spParent(1),
EvtbTosllScalarAmp.cc:                          parent->getDaug(2)->spParent(1));
EvtbTosllScalarAmp.cc:    a21=EvtLeptonACurrent(parent->getDaug(1)->spParent(0),
EvtbTosllScalarAmp.cc:                          parent->getDaug(2)->spParent(1));
EvtbTosllScalarAmp.cc:    a12=EvtLeptonACurrent(parent->getDaug(1)->spParent(1),
EvtbTosllScalarAmp.cc:    a22=EvtLeptonACurrent(parent->getDaug(1)->spParent(0),
EvtbTosllScalarAmp.cc:  amp.vertex(0,0,l11*T1+a11*T2);
EvtbTosllScalarAmp.cc:  amp.vertex(0,1,l12*T1+a12*T2);
EvtbTosllScalarAmp.cc:  amp.vertex(1,0,l21*T1+a21*T2);
EvtbTosllScalarAmp.cc:  amp.vertex(1,1,l22*T1+a22*T2);
EvtbTosllScalarAmp.hh://      Copyright (C) 1998      Caltech, UCSB
EvtbTosllScalarAmp.hh: EvtbTosllScalarAmp(double c7, double c9, double c10):_c7(c7),_c9(c9),_c10(c10){}
EvtbTosllScalarAmp.hh:  double _c7,_c9,_c10;
EvtbTosllVectorAmp.cc:  EvtVector4R q = parent->getDaug(1)->getP4() 
EvtbTosllVectorAmp.cc:  double a1,a2,a0,v,t1,t2,t3;
EvtbTosllVectorAmp.cc:                           a1,a2,a0,v,t1,t2,t3);
EvtbTosllVectorAmp.cc:  EvtVector4C l11,l12;
EvtbTosllVectorAmp.cc:  EvtVector4C l21,l22;
EvtbTosllVectorAmp.cc:  EvtVector4C a11,a12;
EvtbTosllVectorAmp.cc:  EvtVector4C a21,a22;
EvtbTosllVectorAmp.cc:      //EvtId l_num = parent->getDaug(1)->getId();
EvtbTosllVectorAmp.cc:  EvtComplex c10eff = EvtbTosllAmp::GetC10Eff(q2,nnlo);
EvtbTosllVectorAmp.cc:  EvtComplex uniti(0.0,1.0);
EvtbTosllVectorAmp.cc:  a=c9eff*v*2/(1+mhatkstar)+4*mhatb*c7eff*t1/shat;
EvtbTosllVectorAmp.cc:  b=(1+mhatkstar)*(c9eff*a1+2*mhatb*(1-mhatkstar)*c7eff*t2/shat);
EvtbTosllVectorAmp.cc:  c=((1-mhatkstar)*c9eff*a2+
EvtbTosllVectorAmp.cc:	    2*mhatb*c7eff*(t3+(1-mhatkstar*mhatkstar)*t2/shat))/
EvtbTosllVectorAmp.cc:    (1-mhatkstar*mhatkstar);
EvtbTosllVectorAmp.cc:  d=(c9eff*((1+mhatkstar)*a1-(1-mhatkstar)*a2-2*mhatkstar*a0)
EvtbTosllVectorAmp.cc:  e=2*c10eff*v/(1+mhatkstar);
EvtbTosllVectorAmp.cc:  f=(1+mhatkstar)*c10eff*a1;
EvtbTosllVectorAmp.cc:  g=c10eff*a2/(1+mhatkstar);
EvtbTosllVectorAmp.cc:  h=c10eff*((1+mhatkstar)*a1-(1-mhatkstar)*a2-2*mhatkstar*a0)/shat;
EvtbTosllVectorAmp.cc:  EvtTensor4C T1,T2;
EvtbTosllVectorAmp.cc:  int charge1 = EvtPDL::chg3(parent->getDaug(1)->getId());
EvtbTosllVectorAmp.cc:  lepPlus = (charge1 > charge2) ? parent->getDaug(1) : parent->getDaug(2);
EvtbTosllVectorAmp.cc:  lepMinus = (charge1 < charge2) ? parent->getDaug(1) : parent->getDaug(2);
EvtbTosllVectorAmp.cc:    T1=a*dual(directProd(pbhat,pkstarhat))
EvtbTosllVectorAmp.cc:    l11=EvtLeptonVCurrent(lepPlus->spParent(0),
EvtbTosllVectorAmp.cc:    l21=EvtLeptonVCurrent(lepPlus->spParent(1),
EvtbTosllVectorAmp.cc:    l12=EvtLeptonVCurrent(lepPlus->spParent(0), 
EvtbTosllVectorAmp.cc:                          lepMinus->spParent(1));
EvtbTosllVectorAmp.cc:    l22=EvtLeptonVCurrent(lepPlus->spParent(1),
EvtbTosllVectorAmp.cc:                          lepMinus->spParent(1));
EvtbTosllVectorAmp.cc:    a11=EvtLeptonACurrent(lepPlus->spParent(0),
EvtbTosllVectorAmp.cc:    a21=EvtLeptonACurrent(lepPlus->spParent(1),
EvtbTosllVectorAmp.cc:    a12=EvtLeptonACurrent(lepPlus->spParent(0),
EvtbTosllVectorAmp.cc:                          lepMinus->spParent(1));
EvtbTosllVectorAmp.cc:    a22=EvtLeptonACurrent(lepPlus->spParent(1),
EvtbTosllVectorAmp.cc:                          lepMinus->spParent(1));
EvtbTosllVectorAmp.cc:      T1=-a*dual(directProd(pbhat,pkstarhat))
EvtbTosllVectorAmp.cc:      l11=EvtLeptonVCurrent(lepPlus->spParent(1),
EvtbTosllVectorAmp.cc:                            lepMinus->spParent(1));
EvtbTosllVectorAmp.cc:      l21=EvtLeptonVCurrent(lepPlus->spParent(0),
EvtbTosllVectorAmp.cc:                            lepMinus->spParent(1));
EvtbTosllVectorAmp.cc:      l12=EvtLeptonVCurrent(lepPlus->spParent(1),
EvtbTosllVectorAmp.cc:      a11=EvtLeptonACurrent(lepPlus->spParent(1),
EvtbTosllVectorAmp.cc:                            lepMinus->spParent(1));
EvtbTosllVectorAmp.cc:      a21=EvtLeptonACurrent(lepPlus->spParent(0),
EvtbTosllVectorAmp.cc:                            lepMinus->spParent(1));
EvtbTosllVectorAmp.cc:      a12=EvtLeptonACurrent(lepPlus->spParent(1),
EvtbTosllVectorAmp.cc:    EvtVector4C E1=T1.cont1(eps);
EvtbTosllVectorAmp.cc:    EvtVector4C E2=T2.cont1(eps);
EvtbTosllVectorAmp.cc:    amp.vertex(i,0,0,l11*E1+a11*E2);
EvtbTosllVectorAmp.cc:    amp.vertex(i,0,1,l12*E1+a12*E2);
EvtbTosllVectorAmp.cc:    amp.vertex(i,1,0,l21*E1+a21*E2);
EvtbTosllVectorAmp.cc:    amp.vertex(i,1,1,l22*E1+a22*E2);
EvtbTosllVectorAmp.hh://      Copyright (C) 1998      Caltech, UCSB
EvtbTosllVectorAmp.hh:  EvtbTosllVectorAmp(double c7, double c9, double c10):_c7(c7),_c9(c9),_c10(c10){}
EvtbTosllVectorAmp.hh:  double _c7,_c9,_c10;
EvtBtoXsEtap.cc://    Adlene Hicheur       January 10, 2001       Module created
EvtBtoXsEtap.cc:  //  //Will end up here because maxrate multiplies by 1.2
EvtBtoXsEtap.cc:  mass[1] = EvtPDL::getMass(getDaug(1));
EvtBtoXsEtap.cc:  //  double par[18];
EvtBtoXsEtap.cc:    //    par[0]=-2057.2380371094;
EvtBtoXsEtap.cc:    par[0]=2.36816;
EvtBtoXsEtap.cc:    //    par[1]=2502.2556152344;
EvtBtoXsEtap.cc:    par[1]=0.62325725;
EvtBtoXsEtap.cc:    //    par[2]=1151.5632324219;
EvtBtoXsEtap.cc:    //    par[3]=0.82431584596634;
EvtBtoXsEtap.cc:    par[3]=-0.2109375;
EvtBtoXsEtap.cc:    //    par[4]=-4110.5234375000;
EvtBtoXsEtap.cc:    //    par[5]=8445.6757812500;
EvtBtoXsEtap.cc:    //    par[6]=-3034.1894531250;
EvtBtoXsEtap.cc:    //    par[7]=1.1557708978653;
EvtBtoXsEtap.cc:    //    par[8]=1765.9311523438;
EvtBtoXsEtap.cc:    //    par[9]=1.3730158805847;
EvtBtoXsEtap.cc:    //    par[10]=0.51371538639069;
EvtBtoXsEtap.cc:    //    par[11]=2.0056934356689;
EvtBtoXsEtap.cc:    //    par[12]=37144.097656250;
EvtBtoXsEtap.cc:    //    par[13]=-50296.781250000;
EvtBtoXsEtap.cc:    //    par[14]=27319.095703125;
EvtBtoXsEtap.cc:    //    par[15]=-7408.0678710938;
EvtBtoXsEtap.cc:    //    par[16]=1000.8093261719;
EvtBtoXsEtap.cc:    //    par[17]=-53.834449768066;
EvtBtoXsEtap.cc:      hichfit=(1/sqrt(TwoPi*par[1]))*exp(-0.5*pow((xbox-par[0])/par[1],2));      
EvtBtoXsEtap.cc:      //      alifit=par[0]+par[1]*xbox+par[2]*pow(xbox,2);
EvtBtoXsEtap.cc:      //    } else if (xbox<par[11]) {
EvtBtoXsEtap.cc:      //      alifit=par[8]*exp(-0.5*pow((xbox-par[9])/par[10],2));
EvtBtoXsEtap.cc:      //      alifit=par[12]+par[13]*xbox+par[14]*pow(xbox,2)+par[15]*pow(xbox,3)+par[16]*pow(xbox,4)+par[17]*pow(xbox,5);
EvtBtoXsEtap.cc:  // debug stuff:  report(INFO,"EvtGen") << "Xscode " << Xscode << " daughter 1 mass " << mass[0] << " daughter 2 mass " << mass[1] << endl;
EvtBtoXsEtap.hh://    Adlene Hicheur       Jannuary 10, 2001       Module created
EvtBtoXsgammaAbsModel.cc://    Jane Tinslay            March 21, 2000      Module Created
EvtBtoXsgammaAbsModel.hh://    Jane Tinslay            March 21, 2000      Module Created
EvtBtoXsgammaAliGreub.cc://    Mark Ian Williams       July 21, 2000       Module works
EvtBtoXsgammaAliGreub.cc://    Mark Ian Williams       Sept 06, 2000       14 parameter M_Xs function
EvtBtoXsgammaAliGreub.cc://    Mark Ian Williams       Sept 07, 2000       18 parameter M_Xs function
EvtBtoXsgammaAliGreub.cc://    Mark Ian Williams       Sept 10, 2000       Updated parameters
EvtBtoXsgammaAliGreub.cc://    Mark Ian Williams       Sept 11, 2000       Finalised code
EvtBtoXsgammaAliGreub.cc://    Jane Tinslay            March 21, 2000      Separated from EvtBtoXsgamma 
EvtBtoXsgammaAliGreub.cc:  if ((nArg - 1) != 0) {
EvtBtoXsgammaAliGreub.cc:			   << "zero arguments but found: "<<nArg-1<<endl;
EvtBtoXsgammaAliGreub.cc:  // An 18 parameter function fitted to the theoretical mass spectrum
EvtBtoXsgammaAliGreub.cc:  // 174.3 GeV; strange quark mass of 0.48 GeV (tuned to give minimum 
EvtBtoXsgammaAliGreub.cc:  // mass of 150 MeV (from CLEO fit). Truncated at max on high side
EvtBtoXsgammaAliGreub.cc:  double par[18];
EvtBtoXsgammaAliGreub.cc:    par[0]=-2057.2380371094;
EvtBtoXsgammaAliGreub.cc:    par[1]=2502.2556152344;
EvtBtoXsgammaAliGreub.cc:    par[2]=1151.5632324219;
EvtBtoXsgammaAliGreub.cc:    par[3]=0.82431584596634;
EvtBtoXsgammaAliGreub.cc:    par[4]=-4110.5234375000;
EvtBtoXsgammaAliGreub.cc:    par[5]=8445.6757812500;
EvtBtoXsgammaAliGreub.cc:    par[6]=-3034.1894531250;
EvtBtoXsgammaAliGreub.cc:    par[7]=1.1557708978653;
EvtBtoXsgammaAliGreub.cc:    par[8]=1765.9311523438;
EvtBtoXsgammaAliGreub.cc:    par[9]=1.3730158805847;
EvtBtoXsgammaAliGreub.cc:    par[10]=0.51371538639069;
EvtBtoXsgammaAliGreub.cc:    par[11]=2.0056934356689;
EvtBtoXsgammaAliGreub.cc:    par[12]=37144.097656250;
EvtBtoXsgammaAliGreub.cc:    par[13]=-50296.781250000;
EvtBtoXsgammaAliGreub.cc:    par[14]=27319.095703125;
EvtBtoXsgammaAliGreub.cc:    par[15]=-7408.0678710938;
EvtBtoXsgammaAliGreub.cc:    par[16]=1000.8093261719;
EvtBtoXsgammaAliGreub.cc:    par[17]=-53.834449768066;
EvtBtoXsgammaAliGreub.cc:    par[0]=-32263.908203125;
EvtBtoXsgammaAliGreub.cc:    par[1]=57186.589843750;
EvtBtoXsgammaAliGreub.cc:    par[2]=-24230.728515625;
EvtBtoXsgammaAliGreub.cc:    par[3]=1.1155973672867;
EvtBtoXsgammaAliGreub.cc:    par[4]=-12161.131835938;
EvtBtoXsgammaAliGreub.cc:    par[5]=20162.146484375;
EvtBtoXsgammaAliGreub.cc:    par[6]=-7198.8564453125;
EvtBtoXsgammaAliGreub.cc:    par[7]=1.3783323764801;
EvtBtoXsgammaAliGreub.cc:    par[8]=1995.1691894531;
EvtBtoXsgammaAliGreub.cc:    par[9]=1.4655895233154;
EvtBtoXsgammaAliGreub.cc:    par[10]=0.48869228363037;
EvtBtoXsgammaAliGreub.cc:    par[11]=2.1038570404053;
EvtBtoXsgammaAliGreub.cc:    par[12]=55100.058593750;
EvtBtoXsgammaAliGreub.cc:    par[13]=-75201.703125000;
EvtBtoXsgammaAliGreub.cc:    par[14]=41096.066406250;
EvtBtoXsgammaAliGreub.cc:    par[15]=-11205.986328125;
EvtBtoXsgammaAliGreub.cc:    par[16]=1522.4024658203;
EvtBtoXsgammaAliGreub.cc:    par[17]=-82.379623413086;
EvtBtoXsgammaAliGreub.cc:      alifit=par[0]+par[1]*xbox+par[2]*pow(xbox,2);
EvtBtoXsgammaAliGreub.cc:    } else if (xbox<par[11]) {
EvtBtoXsgammaAliGreub.cc:      alifit=par[8]*exp(-0.5*pow((xbox-par[9])/par[10],2));
EvtBtoXsgammaAliGreub.cc:      alifit=par[12]+par[13]*xbox+par[14]*pow(xbox,2)+par[15]*pow(xbox,3)+par[16]*pow(xbox,4)+par[17]*pow(xbox,5);
EvtBtoXsgammaAliGreub.hh://    Jane Tinslay            March 21, 2000      Separated from EvtBtoXsgamma 
EvtBtoXsgamma.cc://              Set the first input parameter to 1 to use the Ali-Greub model,
EvtBtoXsgamma.cc://    Mark Ian Williams       July 21, 2000       Module works
EvtBtoXsgamma.cc://    Mark Ian Williams       Sept 06, 2000       14 parameter M_Xs function
EvtBtoXsgamma.cc://    Mark Ian Williams       Sept 07, 2000       18 parameter M_Xs function
EvtBtoXsgamma.cc://    Mark Ian Williams       Sept 10, 2000       Updated parameters
EvtBtoXsgamma.cc://    Mark Ian Williams       Sept 11, 2000       Finalised code
EvtBtoXsgamma.cc://    Jane Tinslay            March 21, 2001      Re-worked so that you can choose
EvtBtoXsgamma.cc:  // 0: Ali-Greub model = 1, Kagan model = 2
EvtBtoXsgamma.cc:  // 1:
EvtBtoXsgamma.cc:                           << " at least 1 argument but found: "<<getNArg()<<endl;
EvtBtoXsgamma.cc:    if (getArg(0) == 1) _model = new EvtBtoXsgammaAliGreub();
EvtBtoXsgamma.cc:			     << "Set arg(0) to 1 for Ali-Greub model or 2 for "
EvtBtoXsgamma.cc:    //Will end up here because maxrate multiplies by 1.2
EvtBtoXsgamma.cc:  mass[1] = EvtPDL::getMass(getDaug(1));
EvtBtoXsgammaFermiUtil.cc://      Jane Tinslay       March 21, 2001       Module created
EvtBtoXsgammaFermiUtil.cc:  //coeffs: 1 = lambdabar, 2 = a, 3 = lam1, 4 = norm
EvtBtoXsgammaFermiUtil.cc:  return (pow(1. - (y/coeffs[1]),coeffs[2])*exp((-3.*pow(coeffs[1],2.)/coeffs[3])*y/coeffs[1]))/coeffs[4];
EvtBtoXsgammaFermiUtil.cc:  //coeffs: 1 = lambdabar, 2 = a, 3 = c, 4 = norm
EvtBtoXsgammaFermiUtil.cc:  return (pow(1. - (y/coeffs[1]),coeffs[2])*exp(-pow(coeffs[3],2.)*pow(1. - (y/coeffs[1]),2.)))/coeffs[4];
EvtBtoXsgammaFermiUtil.cc:double EvtBtoXsgammaFermiUtil::FermiGaussFuncRoot(double lambdabar, double lam1, double mb, std::vector<double> &gammaCoeffs) {
EvtBtoXsgammaFermiUtil.cc:  std::vector<double> coeffs1(3);
EvtBtoXsgammaFermiUtil.cc:  coeffs1[0]=0.2;
EvtBtoXsgammaFermiUtil.cc:  coeffs1[1]=lambdabar;
EvtBtoXsgammaFermiUtil.cc:  coeffs1[2]=0.0;
EvtBtoXsgammaFermiUtil.cc:  coeffs2[1]=lambdabar;
EvtBtoXsgammaFermiUtil.cc:  coeffs2[2]=-lam1/3.;
EvtBtoXsgammaFermiUtil.cc:  EvtItgTwoCoeffFcn *lhFunc = new EvtItgTwoCoeffFcn(&FermiGaussRootFcnA, -mb, lambdabar, coeffs1, gammaCoeffs);
EvtBtoXsgammaFermiUtil.cc:  double root = rootFinder->GetGaussIntegFcnRoot(lhFunc, rhFunc, 1.0e-4, 1.0e-4, 40, 40, -mb, lambdabar, 0.2, 0.4, 1.0e-6);
EvtBtoXsgammaFermiUtil.cc:double EvtBtoXsgammaFermiUtil::FermiGaussRootFcnA(double y, const std::vector<double> &coeffs1, const std::vector<double> &coeffs2) {
EvtBtoXsgammaFermiUtil.cc:  //coeffs1: 0=ap, 1=lambdabar, coeffs2=gamma function coeffs
EvtBtoXsgammaFermiUtil.cc:  double cp = Gamma((2.0 + coeffs1[0])/2., coeffs2)/Gamma((1.0 + coeffs1[0])/2., coeffs2);
EvtBtoXsgammaFermiUtil.cc:  return (y*y)*pow((1. - (y/coeffs1[1])),coeffs1[0])*exp(-pow(cp,2)*pow((1.-(y/coeffs1[1])),2.));
EvtBtoXsgammaFermiUtil.cc:double EvtBtoXsgammaFermiUtil::FermiGaussRootFcnB(double y, const std::vector<double> &coeffs1, const std::vector<double> &coeffs2) {
EvtBtoXsgammaFermiUtil.cc:  //coeffs1: 0=ap, 1=lambdabar, coeffs2=gamma function coeffs
EvtBtoXsgammaFermiUtil.cc:  double cp = Gamma((2.0 + coeffs1[0])/2., coeffs2)/Gamma((1.0 + coeffs1[0])/2., coeffs2);
EvtBtoXsgammaFermiUtil.cc:  return pow((1. - (y/coeffs1[1])),coeffs1[0])*exp(-pow(cp,2)*pow((1.-(y/coeffs1[1])),2.));
EvtBtoXsgammaFermiUtil.cc:  ser=1.000000000190015;
EvtBtoXsgammaFermiUtil.cc:    y = y +1.0;
EvtBtoXsgammaFermiUtil.cc:  return exp(-tmp+log(2.5066282746310005*ser/x));
EvtBtoXsgammaFermiUtil.cc:double EvtBtoXsgammaFermiUtil::BesselK1(double x) {
EvtBtoXsgammaFermiUtil.cc:  //function K_1(x) for positive real x
EvtBtoXsgammaFermiUtil.cc:    ans = (log(x/2.0)*BesselI1(x))+(1.0/x)*(1.0+y*(0.15443144+y*(-0.67278579+y*(-0.18156897+y*(-0.1919402e-1+y*(-0.110404e-2+y*(-0.4686e-4)))))));
EvtBtoXsgammaFermiUtil.cc:    ans=(exp(-x)/sqrt(x))*(1.25331414+y*(0.23498619+y*(-0.3655620e-1+y*(0.1504268e-1+y*(-0.780353e-2+y*(0.325614e-2+y*(-0.68245e-3)))))));
EvtBtoXsgammaFermiUtil.cc:double EvtBtoXsgammaFermiUtil::BesselI1(double x) {
EvtBtoXsgammaFermiUtil.cc:  //function I_1(x) for any real x
EvtBtoXsgammaFermiUtil.cc:    ans=ax*(0.5+y*(0.87890594+y*(0.51498869+y*(0.15084934+y*(0.2658733e-1+y*(0.301532e-2+y*0.32411e-3))))));
EvtBtoXsgammaFermiUtil.cc:    ans=0.2282967e-1+y*(-0.2895312e-1+y*(0.1787654e-1 -y*0.420059e-2));
EvtBtoXsgammaFermiUtil.cc:    ans=0.398914228+y*(-0.3988024e-1+y*(-0.362018e-2+y*(0.163801e-2+y*(-0.1031555e-1+y*ans))));
EvtBtoXsgammaFermiUtil.cc:double EvtBtoXsgammaFermiUtil::FermiRomanFuncRoot(double lambdabar, double lam1) {
EvtBtoXsgammaFermiUtil.cc:  EvtItgFunction *lhFunc = new EvtItgFunction(&FermiRomanRootFcnA, -1.e-6, 1.e6);
EvtBtoXsgammaFermiUtil.cc:  double rhSide = 1.0 - (lam1/(3.0*lambdabar*lambdabar));
EvtBtoXsgammaFermiUtil.cc:  double rho = rootFinder->GetRootSingleFunc(lhFunc, rhSide, 0.1, 0.4, 1.0e-6);
EvtBtoXsgammaFermiUtil.cc:  report(INFO,"EvtGen")<<"rho/2 "<<rho/2.<<" bessel "<<BesselK1(rho/2.)<<endl;
EvtBtoXsgammaFermiUtil.cc:  double pF = lambdabar*sqrt(EvtConst::pi)/(rho*exp(rho/2.)*BesselK1(rho/2.));
EvtBtoXsgammaFermiUtil.cc:   return EvtConst::pi*(2. + y)*pow(y,-2.)*exp(-y)*pow(BesselK1(y/2.),-2.);
EvtBtoXsgammaFermiUtil.cc:  if (y == (coeffs[1]-coeffs[2])) y=0.99999999*(coeffs[1]-coeffs[2]);
EvtBtoXsgammaFermiUtil.cc:  //coeffs: 1 = mB, 2=mb, 3=rho, 4=lambdabar, 5=norm
EvtBtoXsgammaFermiUtil.cc:  double pF = coeffs[4]*sqrt(EvtConst::pi)/(coeffs[3]*exp(coeffs[3]/2.)*BesselK1(coeffs[3]/2.));
EvtBtoXsgammaFermiUtil.cc:  //  report(INFO,"EvtGen")<<" pf "<<y<<" "<<pF<<" "<<coeffs[1]<<" "<<coeffs[2]<<" "<<coeffs[3]<<" "<<coeffs[4]<<" "<<coeffs[5]<<endl;
EvtBtoXsgammaFermiUtil.cc:  //report(INFO,"EvtGen")<<(coeffs[1]-coeffs[2])*(1./(sqrt(EvtConst::pi)*pF))<<endl;
EvtBtoXsgammaFermiUtil.cc:  //report(INFO,"EvtGen")<<(1.-y/(coeffs[1]-coeffs[2]))<<endl;
EvtBtoXsgammaFermiUtil.cc:  //report(INFO,"EvtGen")<<(coeffs[1]-coeffs[2])<<endl;
EvtBtoXsgammaFermiUtil.cc:  //report(INFO,"EvtGen")<<(coeffs[1]-coeffs[2])*(1.-y/(coeffs[1]-coeffs[2]))<<endl;
EvtBtoXsgammaFermiUtil.cc:  //report(INFO,"EvtGen")<<" "<<pF*coeffs[3]/((coeffs[1]-coeffs[2])*(1.-y/(coeffs[1]-coeffs[2])))<<endl;
EvtBtoXsgammaFermiUtil.cc:  // report(INFO,"EvtGen")<<" "<<((coeffs[1]-coeffs[2])/pF)*(1. -y/(coeffs[1]-coeffs[2]))<<endl;
EvtBtoXsgammaFermiUtil.cc:  //report(INFO,"EvtGen")<<"result "<<(coeffs[1]-coeffs[2])*(1./(sqrt(EvtConst::pi)*pF))*exp(-(1./4.)*pow(pF*(coeffs[3]/((coeffs[1]-coeffs[2])*(1.-y/(coeffs[1]-coeffs[2])))) - ((coeffs[1]-coeffs[2])/pF)*(1. -y/(coeffs[1]-coeffs[2])),2.))/coeffs[5];
EvtBtoXsgammaFermiUtil.cc:  return (coeffs[1]-coeffs[2])*(1./(sqrt(EvtConst::pi)*pF))*exp(-(1./4.)*pow(pF*(coeffs[3]/((coeffs[1]-coeffs[2])*(1.-y/(coeffs[1]-coeffs[2])))) - ((coeffs[1]-coeffs[2])/pF)*(1. -y/(coeffs[1]-coeffs[2])),2.))/coeffs[5];
EvtBtoXsgammaFermiUtil.hh://      Copyright (C) 2001      Brunel University
EvtBtoXsgammaFermiUtil.hh://       Jane Tinslay     March 21, 2001         Module created
EvtBtoXsgammaFermiUtil.hh:  static double FermiGaussRootFcnA(double, const std::vector<double> &coeffs1, const std::vector<double> &coeffs2);
EvtBtoXsgammaFermiUtil.hh:  static double FermiGaussRootFcnB(double, const std::vector<double> &coeffs1, const std::vector<double> &coeffs2);
EvtBtoXsgammaFermiUtil.hh:  static double BesselI1(double);
EvtBtoXsgammaFermiUtil.hh:  static double BesselK1(double);
EvtBtoXsgammaFixedMass.cc://       The input parameters are 1: the hadronic mass
EvtBtoXsgammaFixedMass.cc://      Jim Libby October 11 2002
EvtBtoXsgammaFixedMass.cc:  if ((nArg) > 2 || (nArg > 1 && nArg <2)){
EvtBtoXsgammaFixedMass.cc:			 << "either 1(default config) or two arguments but found: "<<nArg<<endl;
EvtBtoXsgammaFixedMass.cc:  if(nArg == 1){
EvtBtoXsgammaFixedMass.cc:    _mH=args[1];
EvtBtoXsgammaFixedMass.hh://      Copyright (C) 2001      Brunel University, University of Wisconsin
EvtBtoXsgammaFixedMass.hh://       Jim Libby     October 11, 2002  Module created
EvtBtoXsgammaFlatEnergy.cc://       The input parameters are 1: the hadronic mass
EvtBtoXsgammaFlatEnergy.cc://      Jim Libby October 11 2002
EvtBtoXsgammaFlatEnergy.cc:  if ((nArg) > 3 || (nArg > 1 && nArg <3)){
EvtBtoXsgammaFlatEnergy.cc:			 << "either 1(default config) or two arguments but found: "<<nArg<<endl;
EvtBtoXsgammaFlatEnergy.cc:  double mPi = 0.140;
EvtBtoXsgammaFlatEnergy.cc:  if(nArg == 1){
EvtBtoXsgammaFlatEnergy.cc:    _eMin = 1.7;
EvtBtoXsgammaFlatEnergy.cc:    _eMin=args[1];
EvtBtoXsgammaFlatEnergy.hh://      Copyright (C) 2001      Brunel University, University of Wisconsin
EvtBtoXsgammaFlatEnergy.hh://       Jim Libby     October 11, 2002  Module created
EvtBtoXsgammaKagan.cc://       The input parameters are 1:fermi_model, 2:mB, 3:mb, 4:mu, 5:lam1, 
EvtBtoXsgammaKagan.cc://       6:delta, 7:z, 8:nIntervalS, 9:nIntervalmH. Choosing fermi_model=1 
EvtBtoXsgammaKagan.cc://      Jane Tinslay, Francesca Di Lodovico  March 21, 2001       Module created
EvtBtoXsgammaKagan.cc:  if ((nArg) > 12 || (nArg > 1 && nArg <10) || nArg == 11){
EvtBtoXsgammaKagan.cc:			 << "either 1(default config) or " 
EvtBtoXsgammaKagan.cc:			 << "10 (default mass range) or " 
EvtBtoXsgammaKagan.cc:			 << "12 (user range) arguments but found: "
EvtBtoXsgammaKagan.cc:  if(nArg == 1){
EvtBtoXsgammaKagan.cc:  if (nArg>10){
EvtBtoXsgammaKagan.cc:    _mHmin = args[10];
EvtBtoXsgammaKagan.cc:    _mHmax = args[11]; 
EvtBtoXsgammaKagan.cc:    massHad = new double[81];
EvtBtoXsgammaKagan.cc:    brHad = new double[81];
EvtBtoXsgammaKagan.cc:    double mass[81] = { 0, 0.0625995, 0.125199, 0.187798, 0.250398, 0.312997, 0.375597, 0.438196, 0.500796, 0.563395, 0.625995, 0.688594, 0.751194, 0.813793, 0.876392, 0.938992, 1.00159, 1.06419, 1.12679, 1.18939, 1.25199, 1.31459, 1.37719, 1.43979, 1.50239, 1.56499, 1.62759, 1.69019, 1.75278, 1.81538, 1.87798, 1.94058, 2.00318, 2.06578, 2.12838, 2.19098, 2.25358, 2.31618, 2.37878, 2.44138, 2.50398, 2.56658, 2.62918, 2.69178, 2.75438, 2.81698, 2.87958, 2.94217, 3.00477, 3.06737, 3.12997, 3.19257, 3.25517, 3.31777, 3.38037, 3.44297, 3.50557, 3.56817, 3.63077, 3.69337, 3.75597, 3.81857, 3.88117, 3.94377, 4.00637, 4.06896, 4.13156, 4.19416, 4.25676, 4.31936, 4.38196, 4.44456, 4.50716, 4.56976, 4.63236, 4.69496, 4.75756, 4.82016, 4.88276, 4.94536, 5.00796};
EvtBtoXsgammaKagan.cc:    double br[81] = { 0, 1.03244e-09, 3.0239e-08, 1.99815e-07, 7.29392e-07, 1.93129e-06, 4.17806e-06, 7.86021e-06, 1.33421e-05, 2.09196e-05, 3.07815e-05, 4.29854e-05, 5.74406e-05, 7.3906e-05, 9.2003e-05, 0.000111223, 0.000130977, 0.000150618, 0.000169483, 0.000186934, 0.000202392, 0.000215366, 0.000225491, 0.000232496, 0.000236274, 0.000236835, 0.000234313, 0.000228942, 0.000221042, 0.000210994, 0.000199215, 0.000186137, 0.000172194, 0.000157775, 0.000143255, 0.000128952, 0.000115133, 0.000102012, 8.97451e-05, 7.84384e-05, 6.81519e-05, 5.89048e-05, 5.06851e-05, 4.34515e-05, 3.71506e-05, 3.1702e-05, 2.70124e-05, 2.30588e-05, 1.96951e-05, 1.68596e-05, 1.44909e-05, 1.25102e-05, 1.08596e-05, 9.48476e-06, 8.34013e-06, 7.38477e-06, 6.58627e-06, 5.91541e-06, 5.35022e-06, 4.87047e-06, 4.46249e-06, 4.11032e-06, 3.80543e-06, 3.54051e-06, 3.30967e-06, 3.10848e-06, 2.93254e-06, 2.78369e-06, 2.65823e-06, 2.55747e-06, 2.51068e-06, 2.57179e-06, 2.74684e-06, 3.02719e-06, 3.41182e-06, 3.91387e-06, 4.56248e-06, 5.40862e-06, 6.53915e-06, 8.10867e-06, 1.04167e-05 };
EvtBtoXsgammaKagan.cc:  for(int i=0; i<81; i++){
EvtBtoXsgammaKagan.cc:  int fermiFunction = (int)args[1];
EvtBtoXsgammaKagan.cc:  _lam1 = args[5];
EvtBtoXsgammaKagan.cc:  std::vector<double> mHVect(int(_nIntervalmH+1.0));
EvtBtoXsgammaKagan.cc:  massHad = new double[int(_nIntervalmH+1.0)];
EvtBtoXsgammaKagan.cc:  brHad = new double[int(_nIntervalmH+1.0)];
EvtBtoXsgammaKagan.cc:  _mt = 175.0;
EvtBtoXsgammaKagan.cc:  _alpha = 1./137.036;
EvtBtoXsgammaKagan.cc:  _kappabar = 3.382 - 4.14*(sqrt(_z) - 0.29);
EvtBtoXsgammaKagan.cc:  _r7 = (-10./3.) - (8./9.)*pow(EvtConst::pi,2.);
EvtBtoXsgammaKagan.cc:  _rer2 = -4.092 + 12.78*(sqrt(_z) -.29);
EvtBtoXsgammaKagan.cc:  _gam27 = 416./81.;
EvtBtoXsgammaKagan.cc:  _lam2 = .12;
EvtBtoXsgammaKagan.cc:  _beta1 = 116./3.;
EvtBtoXsgammaKagan.cc:  _alphasmZ = .118;
EvtBtoXsgammaKagan.cc:  _mZ = 91.187;
EvtBtoXsgammaKagan.cc:  double eGammaMin = 0.5*_mB*(1. - _delta);
EvtBtoXsgammaKagan.cc:  double Nsl = 1.0;
EvtBtoXsgammaKagan.cc:  _kSLemmu = (12./23.)*((1./_etamu) -1.);
EvtBtoXsgammaKagan.cc:  std::vector<double> s22Coeffs(int(_nIntervalS+1.0));
EvtBtoXsgammaKagan.cc:  std::vector<double> s27Coeffs(int(_nIntervalS+1.0));
EvtBtoXsgammaKagan.cc:  std::vector<double> s28Coeffs(int(_nIntervalS+1.0));
EvtBtoXsgammaKagan.cc:  std::vector<double> sCoeffs(1);
EvtBtoXsgammaKagan.cc:  EvtItgPtrFunction *mys22Func = new EvtItgPtrFunction(&s22Func, 0., yMax+0.1, sCoeffs);
EvtBtoXsgammaKagan.cc:  EvtItgPtrFunction *mys27Func = new EvtItgPtrFunction(&s27Func, 0., yMax+0.1, sCoeffs);
EvtBtoXsgammaKagan.cc:  EvtItgAbsIntegrator *mys22Simp = new EvtItgSimpsonIntegrator(*mys22Func, 1.0e-4, 20);
EvtBtoXsgammaKagan.cc:  EvtItgAbsIntegrator *mys27Simp = new EvtItgSimpsonIntegrator(*mys27Func, 1.0e-4, 50);
EvtBtoXsgammaKagan.cc:  for (i=0;i<int(_nIntervalS+1.0);i++) {
EvtBtoXsgammaKagan.cc:    s22Coeffs[i] = (16./27.)*mys22Simp->evaluate(1.0e-20,yp);
EvtBtoXsgammaKagan.cc:    s27Coeffs[i] = (-8./9.)*_z*mys27Simp->evaluate(1.0e-20,yp);
EvtBtoXsgammaKagan.cc:  std::vector<double> DeltaCoeffs(1);
EvtBtoXsgammaKagan.cc:  varCoeffs[1] = _mb;
EvtBtoXsgammaKagan.cc:  s88Coeffs[1] = _ms;
EvtBtoXsgammaKagan.cc:  sInitCoeffs[1] = yMin;
EvtBtoXsgammaKagan.cc:  FermiCoeffs[1]=0.0;
EvtBtoXsgammaKagan.cc:  gammaCoeffs[0]=76.18009172947146;
EvtBtoXsgammaKagan.cc:  gammaCoeffs[1]=-86.50532032941677;
EvtBtoXsgammaKagan.cc:  gammaCoeffs[2]=24.01409824083091;
EvtBtoXsgammaKagan.cc:  gammaCoeffs[3]=-1.231739572450155;
EvtBtoXsgammaKagan.cc:  gammaCoeffs[4]=0.1208650973866179e-2;
EvtBtoXsgammaKagan.cc:  if (fermiFunction == 1) {
EvtBtoXsgammaKagan.cc:    FermiCoeffs[1]=_lambdabar;
EvtBtoXsgammaKagan.cc:    FermiCoeffs[2]=(-3.*pow(_lambdabar,2.)/_lam1) - 1.;
EvtBtoXsgammaKagan.cc:    FermiCoeffs[3]=_lam1;
EvtBtoXsgammaKagan.cc:    FermiCoeffs[4]=1.0;
EvtBtoXsgammaKagan.cc:    EvtItgAbsIntegrator *myNormSimp = new EvtItgSimpsonIntegrator(*myNormFunc, 1.0e-4, 40);
EvtBtoXsgammaKagan.cc:    double a = EvtBtoXsgammaFermiUtil::FermiGaussFuncRoot(_lambdabar, _lam1, _mb, gammaCoeffs);
EvtBtoXsgammaKagan.cc:    FermiCoeffs[1]=_lambdabar;
EvtBtoXsgammaKagan.cc:      EvtBtoXsgammaFermiUtil::Gamma((1.0 + a)/2., gammaCoeffs);
EvtBtoXsgammaKagan.cc:    FermiCoeffs[4]=1.0;
EvtBtoXsgammaKagan.cc:    EvtItgAbsIntegrator *myNormSimp = new EvtItgSimpsonIntegrator(*myNormFunc, 1.0e-4, 40);
EvtBtoXsgammaKagan.cc:    double rho = EvtBtoXsgammaFermiUtil::FermiRomanFuncRoot(_lambdabar, _lam1);
EvtBtoXsgammaKagan.cc:    FermiCoeffs[1]=_mB;
EvtBtoXsgammaKagan.cc:    FermiCoeffs[5]=1.0;
EvtBtoXsgammaKagan.cc:    EvtItgAbsIntegrator *myNormSimp = new EvtItgSimpsonIntegrator(*myNormFunc, 1.0e-4, 40);
EvtBtoXsgammaKagan.cc:    new EvtItgSimpsonIntegrator(*myDeltaFermiFunc, 1.0e-4, 40);
EvtBtoXsgammaKagan.cc:    new EvtItgSimpsonIntegrator(*mys77FermiFunc, 1.0e-4, 40);
EvtBtoXsgammaKagan.cc:    new EvtItgSimpsonIntegrator(*mys88FermiFunc, 1.0e-4, 40);
EvtBtoXsgammaKagan.cc:    new EvtItgSimpsonIntegrator(*mys78FermiFunc, 1.0e-4, 40);
EvtBtoXsgammaKagan.cc:    new EvtItgSimpsonIntegrator(*mys22FermiFunc, 1.0e-4, 40);
EvtBtoXsgammaKagan.cc:    new EvtItgSimpsonIntegrator(*mys27FermiFunc, 1.0e-4, 40);
EvtBtoXsgammaKagan.cc:    new EvtItgSimpsonIntegrator(*mys28FermiFunc, 1.0e-4, 40);
EvtBtoXsgammaKagan.cc:  for (i=0;i<int(_nIntervalmH+1.0);i++) {
EvtBtoXsgammaKagan.cc:    double ymH = 1. - ((mH*mH)/(_mB*_mB));
EvtBtoXsgammaKagan.cc:    mHVect[i] = 2.*(mH/(_mB*_mB))*0.105*Nsl*py;
EvtBtoXsgammaKagan.cc:    brHad[i] =  2.*(mH/(_mB*_mB))*0.105*Nsl*py;
EvtBtoXsgammaKagan.cc:  if(bbprod)min=1.1;
EvtBtoXsgammaKagan.cc:  for (int i=0;i<int(intervalMH+1.0);i++) {
EvtBtoXsgammaKagan.cc:    for (int i=0;i<int(intervalMH+1.0);i++) {
EvtBtoXsgammaKagan.cc:	trueHeight=(brHad[i]+brHad[i+1])/2.;
EvtBtoXsgammaKagan.cc:  double v = 1. -_beta0*(_alphasmZ/(2.*EvtConst::pi))*(log(_mZ/scale));
EvtBtoXsgammaKagan.cc:  return (_alphasmZ/v)*(1. - ((_beta1/_beta0)*(_alphasmZ/(4.*EvtConst::pi))*(log(v)/v)));
EvtBtoXsgammaKagan.cc:   double mtatmw=_mt*pow((_alphasmW/_alphasmt),(12./23.))*(1 + (12./23.)*((253./18.) - (116./23.))*((_alphasmW - _alphasmt)/(4.0*EvtConst::pi)) - (4./3.)*(_alphasmt/EvtConst::pi));
EvtBtoXsgammaKagan.cc:  _c2mu = .5*pow(_etamu,(-12./23.)) + .5*pow(_etamu,(6./23.));
EvtBtoXsgammaKagan.cc:  double c7mWsm = ((3.*pow(xt,3.) - 2.*pow(xt,2.))/(4.*pow((xt - 1.),4.)))*log(xt)
EvtBtoXsgammaKagan.cc:    + ((-8.*pow(xt,3.) - 5.*pow(xt,2.) + 7.*xt)/(24.*pow((xt - 1.),3.) )) ;
EvtBtoXsgammaKagan.cc:  double c8mWsm =  ((-3.*pow(xt,2.))/(4.*pow((xt - 1.),4.)))*log(xt)
EvtBtoXsgammaKagan.cc:    + ((- pow(xt,3.) + 5.*pow(xt,2.) + 2.*xt)/(8.*pow((xt - 1.),3.)));
EvtBtoXsgammaKagan.cc:  double c7constmu = (626126./272277.)*pow(_etamu,(14./23.))
EvtBtoXsgammaKagan.cc:    - (56281./51730.)*pow(_etamu,(16./23.)) - (3./7.)*pow(_etamu,(6./23.)) 
EvtBtoXsgammaKagan.cc:    - (1./14.)*pow(_etamu,(-12./23.)) - .6494*pow(_etamu,.4086) - .038*pow(_etamu,-.423) 
EvtBtoXsgammaKagan.cc:    - .0186*pow(_etamu,-.8994) - .0057*pow(_etamu,.1456);
EvtBtoXsgammaKagan.cc:  _c70mu = c7mWsm*pow(_etamu,(16./23.)) + (8./3.)*(pow(_etamu,(14./23.))
EvtBtoXsgammaKagan.cc:    -pow(_etamu,(16./23.)))*c8mWsm + c7constmu;
EvtBtoXsgammaKagan.cc:  double c8constmu =  (313063./363036.)*pow(_etamu,(14./23.))
EvtBtoXsgammaKagan.cc:    -.9135*pow(_etamu,.4086) + .0873*pow(_etamu,-.423) - .0571*pow(_etamu,-.8994)
EvtBtoXsgammaKagan.cc:    + .0209*pow(_etamu,.1456);
EvtBtoXsgammaKagan.cc:  _c80mu = c8mWsm*pow(_etamu,(14./23.)) + c8constmu;
EvtBtoXsgammaKagan.cc: //The dilogarithm is defined as: Li_2(x)=Int_0^x(-log(1.-z)/z)
EvtBtoXsgammaKagan.cc: //however, Mathematica implements it as  Sum[z^k/k^2,{k,1,Infinity}], so, althought the two
EvtBtoXsgammaKagan.cc: // EvtItgFunction *myDiLogFunc = new EvtItgFunction(&diLogFunc, 0., 1.-1./xt);
EvtBtoXsgammaKagan.cc: //EvtItgAbsIntegrator *myDiLogSimp = new EvtItgSimpsonIntegrator(*myDiLogFunc, 1.0e-4, 50);
EvtBtoXsgammaKagan.cc: //double li2 = myDiLogSimp->evaluate(1.0e-20,1.-1./xt);
EvtBtoXsgammaKagan.cc: double li2=diLogMathematica(1.-1./xt);
EvtBtoXsgammaKagan.cc:double c7mWsm1 = ( (-16. *pow(xt,4.) -122. *pow(xt,3.) + 80. *pow(xt,2.) -8. *xt)/
EvtBtoXsgammaKagan.cc:(9. *pow((xt -1.),4.)) * li2 +
EvtBtoXsgammaKagan.cc:(6. *pow(xt,4.) + 46. *pow(xt,3.) -28. *pow(xt,2.))/(3. *pow((xt-1.),5.)) *pow(log(xt),2.)
EvtBtoXsgammaKagan.cc:+ (-102. *pow(xt,5.) -588. *pow(xt,4.) -2262. *pow(xt,3.) + 3244. *pow(xt,2.) -1364. *xt
EvtBtoXsgammaKagan.cc:+ 208.)/(81. *pow((xt-1),5.)) *log(xt)
EvtBtoXsgammaKagan.cc:+ (1646. *pow(xt,4.) + 12205. *pow(xt,3.) -10740. *pow(xt,2.) + 2509. *xt -436.)/
EvtBtoXsgammaKagan.cc:(486. *pow((xt-1),4.)) );
EvtBtoXsgammaKagan.cc:double c8mWsm1 = ((-4. *pow(xt,4.) + 40. *pow(xt,3.) + 41. *pow(xt,2.) + xt)/
EvtBtoXsgammaKagan.cc:(6. *pow((xt-1.),4.))  * li2
EvtBtoXsgammaKagan.cc:+ (-17. *pow(xt,3.) -31. *pow(xt,2.))/(2. *pow((xt-1.),5.) ) *pow(log(xt),2.)
EvtBtoXsgammaKagan.cc:+ (-210. *pow(xt,5.) + 1086. *pow(xt,4.) + 4893. *pow(xt,3.) + 2857. *pow(xt,2.)
EvtBtoXsgammaKagan.cc:-1994. *xt + 280.)/(216. *pow((xt-1),5.)) *log(xt)
EvtBtoXsgammaKagan.cc:+ (737. *pow(xt,4.) -14102. *pow(xt,3.) -28209. *pow(xt,2.) + 610. *xt -508.)/
EvtBtoXsgammaKagan.cc:(1296. *pow((xt-1),4.)) );
EvtBtoXsgammaKagan.cc:double E1 = (xt *(18. -11. *xt -pow(xt,2.))/(12.*pow( (1. -xt),3.))
EvtBtoXsgammaKagan.cc:+ pow(xt,2.)* (15. -16. *xt + 4. *pow(xt,2.))/(6. *pow((1. -xt),4.)) *log(xt)
EvtBtoXsgammaKagan.cc:double e1 = 4661194./816831.;
EvtBtoXsgammaKagan.cc:double e2 = -8516./2217. ;
EvtBtoXsgammaKagan.cc:double e5 = -1.9043;
EvtBtoXsgammaKagan.cc:double e6 = -.1008;
EvtBtoXsgammaKagan.cc:double e7 = .1216;
EvtBtoXsgammaKagan.cc:double e8 = .0183;
EvtBtoXsgammaKagan.cc:double f1 = -17.3023;
EvtBtoXsgammaKagan.cc:double f4 = .7519;
EvtBtoXsgammaKagan.cc:double f8 = .0914;
EvtBtoXsgammaKagan.cc:double g1 = 14.8088;
EvtBtoXsgammaKagan.cc:double g2 = -10.809;
EvtBtoXsgammaKagan.cc:double g4 = .4218;
EvtBtoXsgammaKagan.cc:double g6 = .3971;
EvtBtoXsgammaKagan.cc:double g7 = .1600;
EvtBtoXsgammaKagan.cc:double c71constmu  = ((e1 *_etamu *E1 + f1 + g1 *_etamu) *pow(_etamu,(14./23.))
EvtBtoXsgammaKagan.cc:+ (e2 *_etamu *E1 + f2 + g2 *_etamu) *pow(_etamu,(16./23.))
EvtBtoXsgammaKagan.cc:+ (e3 *_etamu *E1 + f3 + g3 *_etamu) *pow(_etamu,(6./23.))
EvtBtoXsgammaKagan.cc:+ (e4 *_etamu *E1 + f4 + g4 *_etamu) *pow(_etamu,(-12./23.))
EvtBtoXsgammaKagan.cc:+ (e5 *_etamu *E1 + f5 + g5 *_etamu) *pow(_etamu,.4086)
EvtBtoXsgammaKagan.cc:+ (e6 *_etamu *E1 + f6 + g6 *_etamu) *pow(_etamu,(-.423))
EvtBtoXsgammaKagan.cc:+ (e7 *_etamu *E1 + f7 + g7 *_etamu) *pow(_etamu,(-.8994))
EvtBtoXsgammaKagan.cc:+ (e8 *_etamu *E1 + f8 + g8 *_etamu) *pow(_etamu,.1456 ));
EvtBtoXsgammaKagan.cc:double c71pmu = ( ((297664./14283. *pow(_etamu,(16./23.))
EvtBtoXsgammaKagan.cc:-7164416./357075. *pow(_etamu,(14./23.))
EvtBtoXsgammaKagan.cc:+ 256868./14283. *pow(_etamu,(37./23.)) - 6698884./357075. *pow(_etamu,(39./23.)))
EvtBtoXsgammaKagan.cc:+ 37208./4761. *(pow(_etamu,(39./23.)) - pow(_etamu,(16./23.))) *(c7mWsm)
EvtBtoXsgammaKagan.cc:+ c71constmu );
EvtBtoXsgammaKagan.cc:_c71mu = (_alphasmW/_alphasmu *(pow(_etamu,(16./23.))* c7mWsm1 + 8./3. *(pow(_etamu,(14./23.))
EvtBtoXsgammaKagan.cc:- pow(_etamu,(16./23.)) ) *c8mWsm1 ) + c71pmu);
EvtBtoXsgammaKagan.cc:               88./575. *pow(_etamu,(16./23.))) *c7mWsm + (-32./575. *pow(_etamu,(-9./23.)) +
EvtBtoXsgammaKagan.cc:               32./1449. *pow(_etamu,(-7./23.)) + 640./1449.*pow(_etamu,(14./23.)) -
EvtBtoXsgammaKagan.cc:               704./1725.*pow(_etamu,(16./23.)) ) *c8mWsm
EvtBtoXsgammaKagan.cc:         - 190./8073.*pow(_etamu,(-35./23.))  - 359./3105. *pow(_etamu,(-17./23.)) +
EvtBtoXsgammaKagan.cc:         4276./121095. *pow(_etamu,(-12./23.)) + 350531./1009125.*pow(_etamu,(-9./23.))
EvtBtoXsgammaKagan.cc:         + 2./4347. *pow(_etamu,(-7./23.)) - 5956./15525. *pow(_etamu,(6./23.)) +
EvtBtoXsgammaKagan.cc:         38380./169533. *pow(_etamu,(14./23.))   - 748./8625. *pow(_etamu,(16./23.)));
EvtBtoXsgammaKagan.cc:// _c2mu=1.10566;
EvtBtoXsgammaKagan.cc://_c70mu=-0.314292;
EvtBtoXsgammaKagan.cc:// _c80mu=-0.148954; 
EvtBtoXsgammaKagan.cc:// _c71mu=0.480964;
EvtBtoXsgammaKagan.cc:// _c7emmu=0.0323219;
EvtBtoXsgammaKagan.cc:  double cDelta77 = (1. + (_alphasmu/(2.*EvtConst::pi)) *(_r7 - (16./3.) + _gam77*log(_mb/_mu)) + ( (pow((1. - _z),4.)/_fz) - 1.)*(6.*_lam2/pow(_mb,2.)) + (_alphasmubar/(2.*EvtConst::pi))*_kappabar )*pow(_c70mu,2.);
EvtBtoXsgammaKagan.cc:  _cDeltatot = cDelta77  + cDelta27 + cDelta78 + (_alphasmu/(2.*EvtConst::pi))*_c71mu*_c70mu + (_alpha/_alphasmu)*(2.*_c7emmu*_c70mu - _kSLemmu*pow(_c70mu,2.));
EvtBtoXsgammaKagan.cc:  if (y >= 1.0) y = 0.9999999999;
EvtBtoXsgammaKagan.cc:  return ( - 4.*(alphasMu/(3.*EvtConst::pi*(1. - y)))*(log(1. - y) + 7./4.)*
EvtBtoXsgammaKagan.cc:	   exp(-2.*(alphasMu/(3.*EvtConst::pi))*(pow(log(1. - y),2) + (7./2.)*log(1. - y))));
EvtBtoXsgammaKagan.cc:  if (y >= 1.0) y = 0.9999999999;
EvtBtoXsgammaKagan.cc:  return ((1./3.)*(7. + y - 2.*pow(y,2) - 2.*(1. + y)*log(1. - y)));
EvtBtoXsgammaKagan.cc:  if (y >= 1.0) y = 0.9999999999;
EvtBtoXsgammaKagan.cc:  return ((1./27.)*((2.*(2. - 2.*y + pow(y,2))/y)*(log(1. - y) + 2.*log(mb/ms))
EvtBtoXsgammaKagan.cc:		    - 2.*pow(y,2) - y - 8.*((1. - y)/y)));
EvtBtoXsgammaKagan.cc:  if (y >= 1.0) y = 0.9999999999;
EvtBtoXsgammaKagan.cc:  return ((8./9.)*(((1. - y)/y)*log(1. - y) + 1. + (pow(y,2)/4.)));
EvtBtoXsgammaKagan.cc:    return 2.*(pow(log((sqrt(y) + sqrt(y - 4.))/2.),2.)) - (1./2.)*pow(EvtConst::pi,2.);
EvtBtoXsgammaKagan.cc:  return (1. - y)*((pow(coeffs[0],2.)/pow(y,2.))*(pow(ReG(y/coeffs[0]),2.) + pow(ImG(y/coeffs[0]),2.)) + (coeffs[0]/y)*ReG(y/coeffs[0]) + (1./4.));
EvtBtoXsgammaKagan.cc:double EvtBtoXsgammaKagan::DeltaFermiFunc(double y, const std::vector<double> &coeffs1, 
EvtBtoXsgammaKagan.cc:  //coeffs1=fermi function coeffs, coeffs2[0]=mB, coeffs2[1]=mb, 
EvtBtoXsgammaKagan.cc:  return FermiFunc(y,coeffs1)*(coeffs2[0]/(coeffs2[1]+y))*
EvtBtoXsgammaKagan.cc:    Delta((coeffs2[0]*coeffs2[2])/(coeffs2[1]+y),coeffs3[0]);
EvtBtoXsgammaKagan.cc:double EvtBtoXsgammaKagan::s77FermiFunc(double y, const std::vector<double> &coeffs1, 
EvtBtoXsgammaKagan.cc:  //coeffs1=fermi function coeffs, coeffs2[0]=mB, coeffs2[1]=mb, 
EvtBtoXsgammaKagan.cc:  return FermiFunc(y,coeffs1)*(coeffs2[0]/(coeffs2[1]+y))*
EvtBtoXsgammaKagan.cc:    s77((coeffs2[0]*coeffs2[2])/(coeffs2[1]+y));
EvtBtoXsgammaKagan.cc:double EvtBtoXsgammaKagan::s88FermiFunc(double y, const std::vector<double> &coeffs1,  
EvtBtoXsgammaKagan.cc:  //coeffs1=fermi function coeffs, coeffs2[0]=mB, coeffs2[1]=mb, 
EvtBtoXsgammaKagan.cc:  return FermiFunc(y,coeffs1)*(coeffs2[0]/(coeffs2[1]+y))*
EvtBtoXsgammaKagan.cc:   s88((coeffs2[0]*coeffs2[2])/(coeffs2[1]+y),coeffs3[0], coeffs3[1]);
EvtBtoXsgammaKagan.cc:double EvtBtoXsgammaKagan::s78FermiFunc(double y, const std::vector<double> &coeffs1, 
EvtBtoXsgammaKagan.cc:  //coeffs1=fermi function coeffs, coeffs2[0]=mB, coeffs2[1]=mb, 
EvtBtoXsgammaKagan.cc:  return FermiFunc(y,coeffs1)*(coeffs2[0]/(coeffs2[1]+y))*
EvtBtoXsgammaKagan.cc:    s78((coeffs2[0]*coeffs2[2])/(coeffs2[1]+y));
EvtBtoXsgammaKagan.cc:double EvtBtoXsgammaKagan::sFermiFunc(double y, const std::vector<double> &coeffs1, 
EvtBtoXsgammaKagan.cc:  //coeffs1=fermi function coeffs, coeffs2[0]=mB, coeffs2[1]=mb, 
EvtBtoXsgammaKagan.cc:  //coeffs2[2]=ymH, coeffs3[0]=nIntervals in s22 or s27 array, coeffs3[1]=yMin,
EvtBtoXsgammaKagan.cc:  return FermiFunc(y,coeffs1)*(coeffs2[0]/(coeffs2[1]+y))*
EvtBtoXsgammaKagan.cc:    GetArrayVal(coeffs2[0]*coeffs2[2]/(coeffs2[1]+y), coeffs3[0], coeffs3[1], coeffs3[2], coeffs4);
EvtBtoXsgammaKagan.cc:  return (1. -8.*z + 8.*pow(z,3.) - pow(z,4.) - 12.*pow(z,2.)*log(z));
EvtBtoXsgammaKagan.cc:  int bin1 = int(((xp-xMin)/(xMax - xMin))*nInterval);
EvtBtoXsgammaKagan.cc:  double x1 = double(bin1)*dx + xMin;
EvtBtoXsgammaKagan.cc:  if (xp == x1) return array[bin1];
EvtBtoXsgammaKagan.cc:  if (xp > x1) {
EvtBtoXsgammaKagan.cc:    bin2 = bin1 + 1;
EvtBtoXsgammaKagan.cc:  else if (xp < x1) {
EvtBtoXsgammaKagan.cc:    bin2 = bin1 - 1;
EvtBtoXsgammaKagan.cc:  if (bin1 <= 0) {
EvtBtoXsgammaKagan.cc:    bin1=0;
EvtBtoXsgammaKagan.cc:    bin2 = 1;
EvtBtoXsgammaKagan.cc:  if (bin1 == (int)nInterval){
EvtBtoXsgammaKagan.cc:    bin1 = (int)nInterval - 1;
EvtBtoXsgammaKagan.cc:    x1 = double(bin1)*dx + xMin;
EvtBtoXsgammaKagan.cc:  double y1 = array[bin1];
EvtBtoXsgammaKagan.cc:  double m = (y2 - y1)/(x2 - x1);
EvtBtoXsgammaKagan.cc:  double c =  y1 - m*x1;
EvtBtoXsgammaKagan.cc:  //Fermi shape functions :1=exponential, 2=gaussian, 3=roman
EvtBtoXsgammaKagan.cc:  if (int(coeffs[0]) == 1) return EvtBtoXsgammaFermiUtil::FermiExpFunc(y, coeffs);
EvtBtoXsgammaKagan.cc:  return 1.;
EvtBtoXsgammaKagan.cc:  return -log(fabs(1. - y))/y;
EvtBtoXsgammaKagan.cc:  for(int i=1; i<1000; i++){ //the value 1000 should actually be Infinite...
EvtBtoXsgammaKagan.hh://      Copyright (C) 2001      Brunel University, University of Wisconsin
EvtBtoXsgammaKagan.hh://       Jane Tinslay, Francesca Di Lodovico     March 27, 2001  Module created
EvtBtoXsgammaKagan.hh:  double _lam1;
EvtBtoXsgammaKagan.hh:  double _beta1;
EvtBtoXsgammaKagan.hh:  double _c71mu;
EvtBtoXsgammaKagan.hh:  static double DeltaFermiFunc(double, const std::vector<double> &coeffs1, const std::vector<double> &coeffs2, const std::vector<double> &coeffs3);
EvtBtoXsgammaKagan.hh:  static double s77FermiFunc(double, const std::vector<double> &coeffs1, const std::vector<double> &coeffs2);
EvtBtoXsgammaKagan.hh:  static double s88FermiFunc(double, const std::vector<double> &coeffs1, const std::vector<double> &coeffs2, const std::vector<double> &coeffs3);
EvtBtoXsgammaKagan.hh:  static double s78FermiFunc(double, const std::vector<double> &coeffs1, const std::vector<double> &coeffs2);
EvtBtoXsgammaKagan.hh:  static double sFermiFunc(double, const std::vector<double> &coeffs1, const std::vector<double> &coeffs2, 
EvtBtoXsgammaRootFinder.cc://      Jane Tinslay       March 21, 2001       Module created
EvtBtoXsgammaRootFinder.cc:#define EVTITGROOTFINDER_MAXIT 100
EvtBtoXsgammaRootFinder.cc:#define EVTITGROOTFINDER_RELATIVEPRECISION 1.0e-16
EvtBtoXsgammaRootFinder.cc:  double f1 = theFunc->value(lowerValue) - functionValue;
EvtBtoXsgammaRootFinder.cc:  if ( f1*f2 > 0.0 ) {
EvtBtoXsgammaRootFinder.cc:  if (fabs(f1) < precision) {
EvtBtoXsgammaRootFinder.cc:  if (f1 < 0.0) {
EvtBtoXsgammaRootFinder.cc:EvtBtoXsgammaRootFinder::GetGaussIntegFcnRoot(EvtItgAbsFunction *theFunc1, EvtItgAbsFunction *theFunc2, double integ1Precision, double integ2Precision, int maxLoop1, int maxLoop2, double integLower, double integUpper, double lowerValue, double upperValue, double precision) {
EvtBtoXsgammaRootFinder.cc:  EvtItgAbsIntegrator *func1Integ = new EvtItgSimpsonIntegrator(*theFunc1, integ1Precision, maxLoop1);
EvtBtoXsgammaRootFinder.cc:  //coefficient 1 of the integrators is the root to be found
EvtBtoXsgammaRootFinder.cc:  theFunc1->setCoeff(1,0,lowerValue);
EvtBtoXsgammaRootFinder.cc:  theFunc2->setCoeff(1,0,lowerValue);
EvtBtoXsgammaRootFinder.cc:  double f1 = func1Integ->evaluate(integLower,integUpper) - theFunc2->getCoeff(1,2)*func2Integ->evaluate(integLower,integUpper);
EvtBtoXsgammaRootFinder.cc:  theFunc1->setCoeff(1,0,upperValue);
EvtBtoXsgammaRootFinder.cc:  theFunc2->setCoeff(1,0,upperValue);
EvtBtoXsgammaRootFinder.cc:  double f2 = func1Integ->evaluate(integLower,integUpper) - theFunc2->getCoeff(1,2)*func2Integ->evaluate(integLower,integUpper);
EvtBtoXsgammaRootFinder.cc:  if ( f1*f2 > 0.0 ) {
EvtBtoXsgammaRootFinder.cc:  if (fabs(f1) < precision) {
EvtBtoXsgammaRootFinder.cc:  if (f1 < 0.0) {
EvtBtoXsgammaRootFinder.cc:  theFunc1->setCoeff(1,0,rootGuess);
EvtBtoXsgammaRootFinder.cc:  theFunc2->setCoeff(1,0,rootGuess);
EvtBtoXsgammaRootFinder.cc:  double f = func1Integ->evaluate(integLower,integUpper) - theFunc2->getCoeff(1,2)*func2Integ->evaluate(integLower,integUpper);
EvtBtoXsgammaRootFinder.cc:    theFunc1->setCoeff(1,0,rootGuess);
EvtBtoXsgammaRootFinder.cc:    theFunc2->setCoeff(1,0,rootGuess);
EvtBtoXsgammaRootFinder.cc:    f = func1Integ->evaluate(integLower,integUpper) - theFunc2->getCoeff(1,2)*func2Integ->evaluate(integLower,integUpper);
EvtBtoXsgammaRootFinder.hh://      Copyright (C) 2001      Brunel University
EvtBtoXsgammaRootFinder.hh://       Jane Tinslay     March 21, 2001         Module created
EvtBtoXsgammaRootFinder.hh:  double GetGaussIntegFcnRoot(EvtItgAbsFunction *theFunc1, EvtItgAbsFunction *theFunc2, 
EvtBtoXsgammaRootFinder.hh:			      double integ1Precision, double integ2Precision, 
EvtBtoXsgammaRootFinder.hh:			      int maxLoop1, int maxLoop2, double integLower, 
EvtBtoXsll.cc://    Stephane Willocq     Jan  17, 2001    Module created
EvtBtoXsll.cc://    Stephane Willocq     Jul  15, 2003    Input model parameters
EvtBtoXsll.cc:  EvtId lepton1type = getDaug(1);
EvtBtoXsll.cc:  if ( lepton1type == EvtPDL::getId("e+") ||
EvtBtoXsll.cc:       lepton1type == EvtPDL::getId("e-") ) { etyp++;}
EvtBtoXsll.cc:  if ( lepton1type == EvtPDL::getId("mu+") ||
EvtBtoXsll.cc:       lepton1type == EvtPDL::getId("mu-") ) { mutyp++;}
EvtBtoXsll.cc:  if ( lepton1type == EvtPDL::getId("tau+") ||
EvtBtoXsll.cc:       lepton1type == EvtPDL::getId("tau-") ) { tautyp++;}
EvtBtoXsll.cc:  if ( lepton1type == EvtPDL::getId("e+")  ||
EvtBtoXsll.cc:       lepton1type == EvtPDL::getId("mu+") ||
EvtBtoXsll.cc:       lepton1type == EvtPDL::getId("tau+") ) { lpos++;}
EvtBtoXsll.cc:  if ( lpos != 1 || lneg != 1 ) {
EvtBtoXsll.cc:  _pf=0.41;
EvtBtoXsll.cc:  _mxmin=1.1;
EvtBtoXsll.cc:    _ms = getArg(1);
EvtBtoXsll.cc:  double ml = EvtPDL::getMeanMass(getDaug(1));
EvtBtoXsll.cc:  int nsteps  = 100;
EvtBtoXsll.cc:  double probMax  = -10000.0;
EvtBtoXsll.cc:  double sProbMax = -10.0;
EvtBtoXsll.cc:  double uProbMax = -10.0;
EvtBtoXsll.cc:  probMax  = -10000.0;
EvtBtoXsll.cc:  sProbMax = -10.0;
EvtBtoXsll.cc:  EvtParticle* leptonp = p->getDaug(1);
EvtBtoXsll.cc:  double ml = mass[1];
EvtBtoXsll.cc:    msdilep[1] = sqrt(s);
EvtBtoXsll.cc:    mll[1] = ml;
EvtBtoXsll.cc:      EvtGenKine::PhaseSpace(2, mll, p4ll, msdilep[1]);
EvtBtoXsll.cc:      p4ll[0] = boostTo(p4ll[0], p4sdilep[1]);
EvtBtoXsll.cc:      p4ll[1] = boostTo(p4ll[1], p4sdilep[1]);
EvtBtoXsll.cc:      EvtVector4R p4sln = p4sdilep[0] + p4ll[1];
EvtBtoXsll.cc:        tmp = 1.0;
EvtBtoXsll.cc:    double costh = EvtRandom::Flat( -1.0, 1.0 );
EvtBtoXsll.cc:    double sinth = sqrt(1.0 - costh*costh);
EvtBtoXsll.cc:    //    p4leptonn       = boostTo(p4ll[1],     p4B);
EvtBtoXsll.cc:    p4leptonn       = boostTo(p4ll[1],     p4b);
EvtBtoXsll.cc:    EvtVector4R p4q( sqrt(pb*pb + _mq*_mq), -p4b.get(1), -p4b.get(2), -p4b.get(3) );
EvtBtoXsll.cc:    leptonp->init(getDaug(1), p4leptonp);
EvtBtoXsll.cc:    leptonp->init(getDaug(1), p4leptonn);
EvtBtoXsll.hh://    Stephane Willocq       Jan  17, 2001       Module created
EvtBtoXsllUtil.cc:// F.Kruger and L.M.Sehgal, Phys. Lett. B380, 199 (1996)
EvtBtoXsllUtil.cc:// A.Ali, G.Hiller, L.T.Handoko and T.Morozumi, Phys. Rev. D55, 4105 (1997).
EvtBtoXsllUtil.cc:// and C.Bobeth, M.Misiak and J.Urban, Nucl. Phys. B574, 291 (2000).
EvtBtoXsllUtil.cc://    Stephane Willocq    Jan 19, 2001   Module created
EvtBtoXsllUtil.cc:  if (!nnlo) return -0.313;
EvtBtoXsllUtil.cc:  A7 = -0.312 + 0.008;
EvtBtoXsllUtil.cc:EvtComplex EvtBtoXsllUtil::GetC7Eff1(double sh, double mbeff, bool nnlo) 
EvtBtoXsllUtil.cc:  EvtComplex uniti(0.0,1.0);
EvtBtoXsllUtil.cc:  double alphas = 0.215;
EvtBtoXsllUtil.cc:  //double A7 = -0.312 + 0.008;
EvtBtoXsllUtil.cc:  double A8 = -0.148;
EvtBtoXsllUtil.cc:  //double A9 = 4.174 + (-0.035);
EvtBtoXsllUtil.cc:  //double A10 = -4.592 + 0.379;
EvtBtoXsllUtil.cc:  double C1 = -0.487;
EvtBtoXsllUtil.cc:  double C2 = 1.024;
EvtBtoXsllUtil.cc:  //double U9 = 0.033 + 0.015;
EvtBtoXsllUtil.cc:  //double W9 = 0.032 + 0.012;
EvtBtoXsllUtil.cc:  EvtComplex F71;
EvtBtoXsllUtil.cc:  EvtComplex f71;
EvtBtoXsllUtil.cc:  EvtComplex k7100(-0.68192,-0.074998);
EvtBtoXsllUtil.cc:  EvtComplex k7101(0.0,0.0);
EvtBtoXsllUtil.cc:  EvtComplex k7110(-0.23935,-0.12289);
EvtBtoXsllUtil.cc:  EvtComplex k7111(0.0027424,0.019676);
EvtBtoXsllUtil.cc:  EvtComplex k7120(-0.0018555,-0.175);
EvtBtoXsllUtil.cc:  EvtComplex k7121(0.022864,0.011456);
EvtBtoXsllUtil.cc:  EvtComplex k7130(0.28248,-0.12783);
EvtBtoXsllUtil.cc:  EvtComplex k7131(0.029027,-0.0082265);
EvtBtoXsllUtil.cc:  f71 = k7100 + k7101*logsh + sh*(k7110 + k7111*logsh) +
EvtBtoXsllUtil.cc:        sh*sh*(k7120 + k7121*logsh) + 
EvtBtoXsllUtil.cc:        sh*sh*sh*(k7130 + k7131*logsh); 
EvtBtoXsllUtil.cc:  F71 = (-208.0/243.0)*Lmu + f71;
EvtBtoXsllUtil.cc:  EvtComplex k7200(4.0915,0.44999);
EvtBtoXsllUtil.cc:  EvtComplex k7201(0.0,0.0);
EvtBtoXsllUtil.cc:  EvtComplex k7210(1.4361,0.73732);
EvtBtoXsllUtil.cc:  EvtComplex k7211(-0.016454,-0.11806);
EvtBtoXsllUtil.cc:  EvtComplex k7220(0.011133,1.05);
EvtBtoXsllUtil.cc:  EvtComplex k7221(-0.13718,-0.068733);
EvtBtoXsllUtil.cc:  EvtComplex k7230(-1.6949,0.76698);
EvtBtoXsllUtil.cc:  EvtComplex k7231(-0.17416,0.049359);
EvtBtoXsllUtil.cc:  f72 = k7200 + k7201*logsh + sh*(k7210 + k7211*logsh) +
EvtBtoXsllUtil.cc:        sh*sh*(k7220 + k7221*logsh) + 
EvtBtoXsllUtil.cc:        sh*sh*sh*(k7230 + k7231*logsh); 
EvtBtoXsllUtil.cc:  F72 = (416.0/81.0)*Lmu + f72;
EvtBtoXsllUtil.cc:        (32.0*EvtConst::pi*EvtConst::pi/9.0 - 316.0/9.0)*sh*sh +
EvtBtoXsllUtil.cc:  c7eff = - alphas/(4.0*EvtConst::pi)*(C1*F71 + C2*F72 + A8*F78);
EvtBtoXsllUtil.cc:  A8 = -0.164;
EvtBtoXsllUtil.cc:  A9 = 4.287 + (-0.218);
EvtBtoXsllUtil.cc:  double A10;
EvtBtoXsllUtil.cc:  A10 = -4.592 + 0.379;
EvtBtoXsllUtil.cc:  double C1;
EvtBtoXsllUtil.cc:  C1 = -0.697;
EvtBtoXsllUtil.cc:  C2 = 1.046;
EvtBtoXsllUtil.cc:  T9 = 0.114 + 0.280;
EvtBtoXsllUtil.cc:  W9 = 0.044 + 0.016;
EvtBtoXsllUtil.cc:  EvtComplex uniti(0.0,1.0);
EvtBtoXsllUtil.cc:  if (xarg < 1.0)
EvtBtoXsllUtil.cc:    hc = hc - 2.0/9.0*(2.0 + xarg)*sqrt(fabs(1.0 - xarg))*
EvtBtoXsllUtil.cc:      (log((sqrt(1.0 - xarg)+1.0)/(sqrt(1.0 - xarg) - 1.0)) - 
EvtBtoXsllUtil.cc:    hc = hc - 2.0/9.0*(2.0 + xarg)*sqrt(fabs(1.0 - xarg))*
EvtBtoXsllUtil.cc:      2.0*atan(1.0/sqrt(xarg - 1.0));
EvtBtoXsllUtil.cc:  EvtComplex h1;
EvtBtoXsllUtil.cc:  h1 = 8.0/27.0 + 4.0*xarg/9.0;
EvtBtoXsllUtil.cc:  if (xarg < 1.0)
EvtBtoXsllUtil.cc:    h1 = h1 - 2.0/9.0*(2.0 + xarg)*sqrt(fabs(1.0 - xarg))*
EvtBtoXsllUtil.cc:      (log((sqrt(1.0 - xarg)+1.0)/(sqrt(1.0 - xarg) - 1.0)) - 
EvtBtoXsllUtil.cc:    h1 = h1 - 2.0/9.0*(2.0 + xarg)*sqrt(fabs(1.0 - xarg))*
EvtBtoXsllUtil.cc:      2.0*atan(1.0/sqrt(xarg - 1.0));
EvtBtoXsllUtil.cc:  // X=V_{ud}^* V_ub / V_{td}^* V_tb * (4/3 C_1 +C_2) * (h(\hat m_c^2, hat s)-
EvtBtoXsllUtil.cc:  EvtComplex Vudstar(1.0 - 0.2279*0.2279/2.0, 0.0);
EvtBtoXsllUtil.cc:  EvtComplex Vub((0.118+0.273)/2.0, -1.0*(0.305+0.393)/2.0);
EvtBtoXsllUtil.cc:  EvtComplex Vtdstar(1.0 - (0.118+0.273)/2.0,(0.305+0.393)/2.0);
EvtBtoXsllUtil.cc:  EvtComplex Vtb(1.0,0.0);
EvtBtoXsllUtil.cc:  Xd = (Vudstar * Vub / Vtdstar * Vtb) * (4.0/3.0*C1 + C2) * (hc - h0);
EvtBtoXsllUtil.cc:    c9eff =  A9 + T9*hc + U9*h1 + W9*h0;
EvtBtoXsllUtil.cc:  alphas = 0.215;
EvtBtoXsllUtil.cc:  A9 = 4.174 + (-0.035);
EvtBtoXsllUtil.cc:  C1 = -0.487;
EvtBtoXsllUtil.cc:  C2 = 1.024;
EvtBtoXsllUtil.cc:  A8 = -0.148;
EvtBtoXsllUtil.cc:  U9 = 0.033 + 0.015;
EvtBtoXsllUtil.cc:  W9 = 0.032 + 0.012;
EvtBtoXsllUtil.cc:  Xd = (Vudstar * Vub / Vtdstar * Vtb) * (4.0/3.0*C1 + C2) * (hc - h0);
EvtBtoXsllUtil.cc:  c9eff = A9 + T9*hc + U9*h1 + W9*h0;
EvtBtoXsllUtil.cc:EvtComplex EvtBtoXsllUtil::GetC9Eff1(double sh, double mbeff,
EvtBtoXsllUtil.cc:  EvtComplex uniti(0.0,1.0);
EvtBtoXsllUtil.cc:  double alphas = 0.215;
EvtBtoXsllUtil.cc:  double C1 = -0.487;
EvtBtoXsllUtil.cc:  double C2 = 1.024;
EvtBtoXsllUtil.cc:  double A8 = -0.148;
EvtBtoXsllUtil.cc:  EvtComplex F91;
EvtBtoXsllUtil.cc:  EvtComplex f91;
EvtBtoXsllUtil.cc:  EvtComplex k9100(-11.973,0.16371);
EvtBtoXsllUtil.cc:  EvtComplex k9101(-0.081271,-0.059691);
EvtBtoXsllUtil.cc:  EvtComplex k9110(-28.432,-0.25044);
EvtBtoXsllUtil.cc:  EvtComplex k9111(-0.040243,0.016442);
EvtBtoXsllUtil.cc:  EvtComplex k9120(-57.114,-0.86486);
EvtBtoXsllUtil.cc:  EvtComplex k9121(-0.035191,0.027909);
EvtBtoXsllUtil.cc:  EvtComplex k9130(-128.8,-2.5243);
EvtBtoXsllUtil.cc:  EvtComplex k9131(-0.017587,0.050639);
EvtBtoXsllUtil.cc:  f91 = k9100 + k9101*logsh + sh*(k9110 + k9111*logsh) +
EvtBtoXsllUtil.cc:        sh*sh*(k9120 + k9121*logsh) + 
EvtBtoXsllUtil.cc:        sh*sh*sh*(k9130 + k9131*logsh); 
EvtBtoXsllUtil.cc:  F91 = (-1424.0/729.0 + 16.0*uniti*EvtConst::pi/243.0 
EvtBtoXsllUtil.cc:         + 64.0/27.0*log(mch))*Lmu - 16.0*Lmu*logsh/243.0 +
EvtBtoXsllUtil.cc:        (16.0/1215.0 - 32.0/135.0/mch/mch)*Lmu*sh +
EvtBtoXsllUtil.cc:        (4.0/2835.0 - 8.0/315.0/mch/mch/mch/mch)*Lmu*sh*sh +
EvtBtoXsllUtil.cc:    (16.0/76545.0 - 32.0/8505.0/mch/mch/mch/mch/mch/mch)*
EvtBtoXsllUtil.cc:    Lmu*sh*sh*sh -256.0*Lmu*Lmu/243.0 + f91;
EvtBtoXsllUtil.cc:  EvtComplex k9201(0.48763,0.35815);
EvtBtoXsllUtil.cc:  EvtComplex k9210(3.3585,1.5026);
EvtBtoXsllUtil.cc:  EvtComplex k9211(0.24146,-0.098649);
EvtBtoXsllUtil.cc:  EvtComplex k9220(-1.1906,5.1892);
EvtBtoXsllUtil.cc:  EvtComplex k9221(0.21115,-0.16745);
EvtBtoXsllUtil.cc:  EvtComplex k9230(-17.12,15.146);
EvtBtoXsllUtil.cc:  EvtComplex k9231(0.10552,-0.30383);
EvtBtoXsllUtil.cc:  f92 = k9200 + k9201*logsh + sh*(k9210 + k9211*logsh) +
EvtBtoXsllUtil.cc:        sh*sh*(k9220 + k9221*logsh) + 
EvtBtoXsllUtil.cc:        sh*sh*sh*(k9230 + k9231*logsh); 
EvtBtoXsllUtil.cc:  F92 = (256.0/243.0 - 32.0*uniti*EvtConst::pi/81.0 
EvtBtoXsllUtil.cc:         - 128.0/9.0*log(mch))*Lmu + 32.0*Lmu*logsh/81.0 +
EvtBtoXsllUtil.cc:        (-8.0/945.0 + 16.0/105.0/mch/mch/mch/mch)*Lmu*sh*sh +
EvtBtoXsllUtil.cc:    (-32.0/25515.0 + 64.0/2835.0/mch/mch/mch/mch/mch/mch)*
EvtBtoXsllUtil.cc:    Lmu*sh*sh*sh + 512.0*Lmu*Lmu/81.0 + f92;
EvtBtoXsllUtil.cc:  F98 = 104.0/9.0 - 32.0*EvtConst::pi*EvtConst::pi/27.0 + 
EvtBtoXsllUtil.cc:        (1184.0/27.0 - 40.0*EvtConst::pi*EvtConst::pi/9.0)*sh +
EvtBtoXsllUtil.cc:        (14212.0/135.0 - 32.0*EvtConst::pi*EvtConst::pi/3.0)*sh*sh +
EvtBtoXsllUtil.cc:    (193444.0/945.0 - 560.0*EvtConst::pi*EvtConst::pi/27.0)*sh*sh*sh +
EvtBtoXsllUtil.cc:        16.0*logsh/9.0*(1.0 + sh + sh*sh + sh*sh*sh);
EvtBtoXsllUtil.cc:  c9eff = - alphas/(4.0*EvtConst::pi)*(C1*F91 + C2*F92 + A8*F98);
EvtBtoXsllUtil.cc:EvtComplex EvtBtoXsllUtil::GetC10Eff(double sh, bool nnlo) 
EvtBtoXsllUtil.cc:  double A10;
EvtBtoXsllUtil.cc:  A10 = -4.592 + 0.379;
EvtBtoXsllUtil.cc:  EvtComplex c10eff;
EvtBtoXsllUtil.cc:  c10eff = A10;
EvtBtoXsllUtil.cc:  return c10eff;
EvtBtoXsllUtil.cc:  // F.Kruger and L.M.Sehgal, Phys. Lett. B380, 199 (1996)
EvtBtoXsllUtil.cc:  // in this latter paper reduces to Eq.(12) in ALGH's 2002 paper
EvtBtoXsllUtil.cc:  double f1, f2, f3, f4;
EvtBtoXsllUtil.cc:  EvtComplex c7eff1 = EvtBtoXsllUtil::GetC7Eff1(sh,mbeff,nnlo);
EvtBtoXsllUtil.cc:  EvtComplex c9eff1 = EvtBtoXsllUtil::GetC9Eff1(sh,mbeff,nnlo,btod);
EvtBtoXsllUtil.cc:  EvtComplex c10eff = EvtBtoXsllUtil::GetC10Eff(sh,nnlo);
EvtBtoXsllUtil.cc:  double alphas = 0.119/
EvtBtoXsllUtil.cc:     (1 + 0.119*log(pow(4.8,2)/pow(91.1867,2))*23.0/12.0/EvtConst::pi);
EvtBtoXsllUtil.cc:                  -2.0/3.0*log(sh)*log(1.0-sh)
EvtBtoXsllUtil.cc:                  -log(1-sh)*(8.0+sh)/(2.0+sh)/3.0 
EvtBtoXsllUtil.cc:    -2.0/3.0*sh*(2.0 - 2.0*sh - sh*sh)*log(sh)/pow((1.0 - sh),2)/(2.0 + sh)
EvtBtoXsllUtil.cc:    -(16.0 - 11.0*sh - 17.0*sh*sh)/18.0/(2.0 + sh)/(1.0 - sh);
EvtBtoXsllUtil.cc:  double eta7 = 1.0 + alphas*omega7/EvtConst::pi;
EvtBtoXsllUtil.cc:                   -2.0/3.0*log(sh)*log(1.0-sh)
EvtBtoXsllUtil.cc:                   -1.0/9.0*(2.0+7.0*sh)*log(1.0 - sh)/sh
EvtBtoXsllUtil.cc:                   -2.0/9.0*sh*(3.0 - 2.0*sh)*log(sh)/pow((1.0 - sh),2) 
EvtBtoXsllUtil.cc:                   +1.0/18.0*(5.0 - 9.0*sh)/(1.0 - sh);
EvtBtoXsllUtil.cc:  double eta79 = 1.0 + alphas*omega79/EvtConst::pi;
EvtBtoXsllUtil.cc:                 - 2.0/3.0*log(sh)*log(1.0-sh)
EvtBtoXsllUtil.cc:                 - (5.0+4.0*sh)/(3.0*(1.0+2.0*sh)) * log(1.0-sh)
EvtBtoXsllUtil.cc:                 - 2.0*sh*(1.0+sh)*(1.0-2.0*sh)
EvtBtoXsllUtil.cc:                 /(3.0*pow(1.0-sh,2)*(1.0+2.0*sh)) * log(sh)
EvtBtoXsllUtil.cc:                 + (5.0+9.0*sh-6.0*sh*sh)/(6.0*(1.0-sh)*(1.0+2.0*sh));
EvtBtoXsllUtil.cc:  double eta9 = 1.0 + alphas*omega9/EvtConst::pi;
EvtBtoXsllUtil.cc:  EvtComplex c7eff = eta7*c7eff0 + c7eff1;
EvtBtoXsllUtil.cc:  EvtComplex c9eff = eta9*c9eff0 + c9eff1;
EvtBtoXsllUtil.cc:  c10eff *= eta9;
EvtBtoXsllUtil.cc:  double c7c9 = real((eta79*c7eff0 + c7eff1)*conj(eta79*c9eff0 + c9eff1));
EvtBtoXsllUtil.cc:  double c9c9plusc10c10  = abs2(c9eff) + abs2(c10eff);
EvtBtoXsllUtil.cc:  double c9c9minusc10c10 = abs2(c9eff) - abs2(c10eff);
EvtBtoXsllUtil.cc:  double lambda_1 = -0.2;
EvtBtoXsllUtil.cc:  double lambda_2 = 0.12;
EvtBtoXsllUtil.cc:  double C1 = -0.487;
EvtBtoXsllUtil.cc:  double C2 = 1.024;
EvtBtoXsllUtil.cc:  EvtComplex uniti(0.0,1.0);
EvtBtoXsllUtil.cc:  if (r < 1)
EvtBtoXsllUtil.cc:    F *= 1.0/sqrt(r*(1.0-r))*atan(sqrt(r/(1.0-r)))-1.0;
EvtBtoXsllUtil.cc:    F *= 0.5/sqrt(r*(r-1.0))*(log((1.0-sqrt(1.0-1.0/r))/(1.0+sqrt(1.0-1.0/r)))
EvtBtoXsllUtil.cc:                              +uniti*EvtConst::pi)-1.0;
EvtBtoXsllUtil.cc:  double G1 = 1.0 + lambda_1 / (2.0 * mb * mb)
EvtBtoXsllUtil.cc:                  + 3.0 * (1.0 - 15.0*sh*sh + 10.0*sh*sh*sh)
EvtBtoXsllUtil.cc:                        / ((1.0 - sh)*(1.0 -sh)*(1.0 + 2.0*sh))
EvtBtoXsllUtil.cc:  double G2 = 1.0 + lambda_1 / (2.0 * mb * mb)
EvtBtoXsllUtil.cc:                        / ((1.0 - sh)*(1.0 -sh)*(2.0 + sh))
EvtBtoXsllUtil.cc:  double G3 = 1.0 + lambda_1 / (2.0 * mb * mb)
EvtBtoXsllUtil.cc:                     / ((1.0 - sh)*(1.0 -sh))
EvtBtoXsllUtil.cc:  double Gc = -8.0/9.0 * (C2 - C1/6.0) * lambda_2/(mc*mc) 
EvtBtoXsllUtil.cc:    * real(F*(conj(c9eff)*(2.0+sh)+conj(c7eff)*(1.0 + 6.0*sh - sh*sh)/sh));
EvtBtoXsllUtil.cc:  lambda = 1.0 + sh*sh + pow(msh,4) - 2.0*(sh + sh*msh*msh + msh*msh);
EvtBtoXsllUtil.cc:  f1 = pow(1.0-msh*msh,2) - sh*(1.0 + msh*msh);
EvtBtoXsllUtil.cc:  f2 = 2.0*(1.0 + msh*msh) * pow(1.0-msh*msh,2)
EvtBtoXsllUtil.cc:       - sh*(1.0 + 14.0*msh*msh + pow(msh,4)) - sh*sh*(1.0 + msh*msh);
EvtBtoXsllUtil.cc:  f3 = pow(1.0-msh*msh,2) + sh*(1.0 + msh*msh) - 2.0*sh*sh
EvtBtoXsllUtil.cc:  f4 = 1.0 - sh + msh*msh;
EvtBtoXsllUtil.cc:  delta = (  12.0*c7c9*f1*G3 + 4.0*c7c7*f2*G2/sh ) * (1.0 + 2.0*mlh*mlh/sh)
EvtBtoXsllUtil.cc:            + c9c9plusc10c10*f3*G1 
EvtBtoXsllUtil.cc:            + 6.0*mlh*mlh*c9c9minusc10c10*f4
EvtBtoXsllUtil.cc:  prob =  sqrt(lambda*(1.0 - 4.0*mlh*mlh/sh)) * delta;
EvtBtoXsllUtil.cc:  // according to Ali-Hiller-Handoko-Morozumi's 1997 paper
EvtBtoXsllUtil.cc:  double f1sp, f2sp, f3sp;
EvtBtoXsllUtil.cc:  EvtComplex c7eff1 = EvtBtoXsllUtil::GetC7Eff1(sh,mbeff,nnlo);
EvtBtoXsllUtil.cc:  EvtComplex c9eff1 = EvtBtoXsllUtil::GetC9Eff1(sh,mbeff,nnlo,btod);
EvtBtoXsllUtil.cc:  EvtComplex c10eff = EvtBtoXsllUtil::GetC10Eff(sh,nnlo);
EvtBtoXsllUtil.cc:  double alphas = 0.119/
EvtBtoXsllUtil.cc:     (1 + 0.119*log(pow(4.8,2)/pow(91.1867,2))*23.0/12.0/EvtConst::pi);
EvtBtoXsllUtil.cc:                  -2.0/3.0*log(sh)*log(1.0-sh)
EvtBtoXsllUtil.cc:                  -log(1-sh)*(8.0+sh)/(2.0+sh)/3.0 
EvtBtoXsllUtil.cc:    -2.0/3.0*sh*(2.0 - 2.0*sh - sh*sh)*log(sh)/pow((1.0 - sh),2)/(2.0 + sh)
EvtBtoXsllUtil.cc:    -(16.0 - 11.0*sh - 17.0*sh*sh)/18.0/(2.0 + sh)/(1.0 - sh);
EvtBtoXsllUtil.cc:  double eta7 = 1.0 + alphas*omega7/EvtConst::pi;
EvtBtoXsllUtil.cc:                   -2.0/3.0*log(sh)*log(1.0-sh)
EvtBtoXsllUtil.cc:                   -1.0/9.0*(2.0+7.0*sh)*log(1.0 - sh)/sh
EvtBtoXsllUtil.cc:                   -2.0/9.0*sh*(3.0 - 2.0*sh)*log(sh)/pow((1.0 - sh),2) 
EvtBtoXsllUtil.cc:                   +1.0/18.0*(5.0 - 9.0*sh)/(1.0 - sh);
EvtBtoXsllUtil.cc:  double eta79 = 1.0 + alphas*omega79/EvtConst::pi;
EvtBtoXsllUtil.cc:                 - 2.0/3.0*log(sh)*log(1.0-sh)
EvtBtoXsllUtil.cc:                 - (5.0+4.0*sh)/(3.0*(1.0+2.0*sh)) * log(1.0-sh)
EvtBtoXsllUtil.cc:                 - 2.0*sh*(1.0+sh)*(1.0-2.0*sh)
EvtBtoXsllUtil.cc:                 /(3.0*pow(1.0-sh,2)*(1.0+2.0*sh)) * log(sh)
EvtBtoXsllUtil.cc:                 + (5.0+9.0*sh-6.0*sh*sh)/(6.0*(1.0-sh)*(1.0+2.0*sh));
EvtBtoXsllUtil.cc:  double eta9 = 1.0 + alphas*omega9/EvtConst::pi;
EvtBtoXsllUtil.cc:  EvtComplex c7eff = eta7*c7eff0 + c7eff1;
EvtBtoXsllUtil.cc:  EvtComplex c9eff = eta9*c9eff0 + c9eff1;
EvtBtoXsllUtil.cc:  c10eff *= eta9;
EvtBtoXsllUtil.cc:  double c7c9  = real((eta79*c7eff0 + c7eff1)*conj(eta79*c9eff0 + c9eff1));
EvtBtoXsllUtil.cc:  double c7c10 = real((eta79*c7eff0 + c7eff1)*conj(eta9*c10eff));
EvtBtoXsllUtil.cc:  double c9c10 = real((eta9*c9eff0  + c9eff1)*conj(eta9*c10eff));
EvtBtoXsllUtil.cc:  double c9c9plusc10c10  = abs2(c9eff) + abs2(c10eff);
EvtBtoXsllUtil.cc:  //double c9c9minusc10c10 = abs2(c9eff) - abs2(c10eff);
EvtBtoXsllUtil.cc:  f1sp = ( pow(mb*mb-ms*ms,2) - s*s) * c9c9plusc10c10 
EvtBtoXsllUtil.cc:         + 4.0*( pow(mb,4) - ms*ms*mb*mb - pow(ms,4)*(1.0 - ms*ms/(mb*mb))
EvtBtoXsllUtil.cc:         - 8.0*s*ms*ms - s*s*(1.0 + ms*ms/(mb*mb) ))*mb*mb*c7c7/s
EvtBtoXsllUtil.cc:         *(1.0 + 2.0*ml*ml/s)
EvtBtoXsllUtil.cc:         *(1.0 + 2.0*ml*ml/s);
EvtBtoXsllUtil.cc:  f2sp = 4.0*s*c9c10 + 8.0*(mb*mb + ms*ms)*c7c10;
EvtBtoXsllUtil.cc:  f3sp = - (c9c9plusc10c10)
EvtBtoXsllUtil.cc:         + 4.0*(1.0 + pow(ms/mb,4)) * mb*mb*c7c7/s
EvtBtoXsllUtil.cc:         *(1.0 + 2.0*ml*ml/s);
EvtBtoXsllUtil.cc:  prob = (f1sp + f2sp*u + f3sp*u*u)/ pow(mb,3);
EvtBtoXsllUtil.cc:  // the function chosen has a convenient maximum value of 1 for pb = pf
EvtBtoXsllUtil.cc:  double prob = prsq * exp(1.0 - prsq);
EvtBtoXsllUtil.hh://    Stephane Willocq    Jan 19, 2001   Module created
EvtBtoXsllUtil.hh:  EvtComplex GetC7Eff1(double sh, double mb, bool nnlo=true);
EvtBtoXsllUtil.hh:  EvtComplex GetC9Eff1(double sh, double mb, bool nnlo=true, bool btod=false);
EvtBtoXsllUtil.hh:  EvtComplex GetC10Eff(double sh, bool nnlo=true);
EvtCBTo3piMPP.cc://      Copyright (C) 1998      Caltech, UCSB
EvtCBTo3piMPP.cc://    RYD/Versille     May 6, 1997         Module created
EvtCBTo3piMPP.cc:  // check that there are 1 argument
EvtCBTo3piMPP.cc:  checkNArg(1);
EvtCBTo3piMPP.cc:  checkSpinDaughter(1,EvtSpinType::SCALAR);
EvtCBTo3piMPP.cc:  setProbMax(1.5);
EvtCBTo3piMPP.cc:  EvtParticle *pi1,*pi2,*pi3;
EvtCBTo3piMPP.cc:  pi1=p->getDaug(0);
EvtCBTo3piMPP.cc:  pi2=p->getDaug(1);
EvtCBTo3piMPP.cc:  static int first=1;
EvtCBTo3piMPP.cc:  if (first==1) {
EvtCBTo3piMPP.cc:    iset=10000;
EvtCBTo3piMPP.cc:  double p4pi1[4],p4pi2[4],p4pi3[4]; 
EvtCBTo3piMPP.cc:  evt3pionsmpp_(&alpha,&iset,p4pi1,p4pi2,p4pi3,
EvtCBTo3piMPP.cc:  p4[0].set(p4pi1[3],p4pi1[0],p4pi1[1],p4pi1[2]);
EvtCBTo3piMPP.cc:  p4[1].set(p4pi2[3],p4pi2[0],p4pi2[1],p4pi2[2]);
EvtCBTo3piMPP.cc:  p4[2].set(p4pi3[3],p4pi3[0],p4pi3[1],p4pi3[2]);
EvtCBTo3piMPP.cc:  pi1->init( getDaug(0), p4[0] );
EvtCBTo3piMPP.cc:  pi2->init( getDaug(1), p4[1] );
EvtCBTo3piMPP.hh://      Copyright (C) 1998      Caltech, UCSB
EvtCBTo3piMPP.hh://    DJL/RYD     August 11, 1998         Module created
EvtCBTo3piP00.cc://      Copyright (C) 1998      Caltech, UCSB
EvtCBTo3piP00.cc://    RYD,Versille     May 6, 1997         Module created
EvtCBTo3piP00.cc:  // check that there are 1 argument
EvtCBTo3piP00.cc:  checkNArg(1);
EvtCBTo3piP00.cc:  checkSpinDaughter(1,EvtSpinType::SCALAR);
EvtCBTo3piP00.cc:  setProbMax(1.5);
EvtCBTo3piP00.cc:  EvtParticle *pi1,*pi2,*pi3;
EvtCBTo3piP00.cc:  pi1=p->getDaug(0);
EvtCBTo3piP00.cc:  pi2=p->getDaug(1);
EvtCBTo3piP00.cc:  static int first=1;
EvtCBTo3piP00.cc:  if (first==1) {
EvtCBTo3piP00.cc:    iset=10000;
EvtCBTo3piP00.cc:  double p4pi1[4],p4Gamma11[4],p4Gamma12[4];
EvtCBTo3piP00.cc:  double p4Gamma21[4],p4Gamma22[4];
EvtCBTo3piP00.cc:		 p4pi1,
EvtCBTo3piP00.cc:		 p4Gamma11,p4Gamma12,
EvtCBTo3piP00.cc:		 p4Gamma21,p4Gamma22,
EvtCBTo3piP00.cc:  p4[0].set(p4pi1[3],p4pi1[0],p4pi1[1],p4pi1[2]);
EvtCBTo3piP00.cc:  p4[1].set(p4Gamma11[3]+p4Gamma12[3],
EvtCBTo3piP00.cc:	    p4Gamma11[0]+p4Gamma12[0],
EvtCBTo3piP00.cc:	    p4Gamma11[1]+p4Gamma12[1],
EvtCBTo3piP00.cc:	    p4Gamma11[2]+p4Gamma12[2]);
EvtCBTo3piP00.cc:  p4[2].set(p4Gamma21[3]+p4Gamma22[3],
EvtCBTo3piP00.cc:	    p4Gamma21[0]+p4Gamma22[0],
EvtCBTo3piP00.cc:	    p4Gamma21[1]+p4Gamma22[1],
EvtCBTo3piP00.cc:	    p4Gamma21[2]+p4Gamma22[2]);
EvtCBTo3piP00.cc:  pi1->init( getDaug(0), p4[0] );
EvtCBTo3piP00.cc:  pi2->init( getDaug(1), p4[1] );
EvtCBTo3piP00.hh://      Copyright (C) 1998      Caltech, UCSB
EvtCBTo3piP00.hh://    DJL/RYD     August 11, 1998         Module created
EvtChi0BB1.cc:// Module: EvtChi0BB1.cc
EvtChi0BB1.cc:#include "EvtChi0BB1.hh"
EvtChi0BB1.cc:EvtChi0BB1::~EvtChi0BB1() {}
EvtChi0BB1.cc:void EvtChi0BB1::getName(std::string& model_name){
EvtChi0BB1.cc:  model_name="Chi0BB1";     
EvtChi0BB1.cc:EvtDecayBase* EvtChi0BB1::clone(){
EvtChi0BB1.cc:  return new EvtChi0BB1;
EvtChi0BB1.cc:void EvtChi0BB1::init(){
EvtChi0BB1.cc:// check that there are 1 arguments
EvtChi0BB1.cc:// checkNArg(1); 
EvtChi0BB1.cc: checkSpinDaughter(1,EvtSpinType::DIRAC);
EvtChi0BB1.cc:void EvtChi0BB1::initProbMax() {
EvtChi0BB1.cc: setProbMax(10.0);
EvtChi0BB1.cc:void EvtChi0BB1::decay( EvtParticle *p){
EvtChi0BB1.cc:  EvtParticle *v,*s1;
EvtChi0BB1.cc:  s1=p->getDaug(1); 
EvtChi0BB1.cc:  ps=s1->getP4();
EvtChi0BB1.cc:  double theta =angles.getHelAng(1); 
EvtChi0BB1.cc: double F00=1.0;
EvtChi0BB1.cc: double F11=F00;
EvtChi0BB1.cc: vertex(1,1,F11);
EvtChi0BB1.hh:// Module: EvtChi0BB1.cc
EvtChi0BB1.hh:#ifndef EVTChi0BB1_HH
EvtChi0BB1.hh:#define EVTChi0BB1_HH
EvtChi0BB1.hh:class EvtChi0BB1:public  EvtDecayAmp  {
EvtChi0BB1.hh:  EvtChi0BB1() {}
EvtChi0BB1.hh:  virtual ~EvtChi0BB1();
EvtChi0BB2.cc:// check that there are 1 arguments
EvtChi0BB2.cc: checkSpinDaughter(1,EvtSpinType::RARITASCHWINGER);
EvtChi0BB2.cc: setProbMax(10.0);
EvtChi0BB2.cc:  EvtParticle *v,*s1;
EvtChi0BB2.cc:  s1=p->getDaug(1); 
EvtChi0BB2.cc:  ps=s1->getP4();
EvtChi0BB2.cc:  double theta =angles.getHelAng(1); 
EvtChi0BB2.cc: double F11=getArg(1);
EvtChi0BB2.cc: double F22=F11;
EvtChi0BB2.cc://cout<<"************F00,F11,F22,F33="<<F00<<F11<<F22<<F33<<endl;
EvtChi0BB2.cc: vertex(1,1,F11);
EvtChi0BB2.hh:// Description: Routine to decay Xi0 to B10 B10bar.
EvtChi1BB1.cc:// Module: EvtChi1BB1.cc
EvtChi1BB1.cc:// Description: Routine to decay Chi1 to B8 B8bar.
EvtChi1BB1.cc:#include "EvtChi1BB1.hh"
EvtChi1BB1.cc:EvtChi1BB1::~EvtChi1BB1() {}
EvtChi1BB1.cc:void EvtChi1BB1::getName(std::string& model_name){
EvtChi1BB1.cc:  model_name="Chi1BB1";     
EvtChi1BB1.cc:EvtDecayBase* EvtChi1BB1::clone(){
EvtChi1BB1.cc:  return new EvtChi1BB1;
EvtChi1BB1.cc:void EvtChi1BB1::init(){
EvtChi1BB1.cc:// check that there are 1 arguments
EvtChi1BB1.cc: checkSpinDaughter(1,EvtSpinType::DIRAC);
EvtChi1BB1.cc:void EvtChi1BB1::initProbMax() {
EvtChi1BB1.cc: setProbMax(100.0);
EvtChi1BB1.cc:void EvtChi1BB1::decay( EvtParticle *p){
EvtChi1BB1.cc:  EvtParticle *v,*s1;
EvtChi1BB1.cc:  s1=p->getDaug(1); 
EvtChi1BB1.cc:  ps=s1->getP4();
EvtChi1BB1.cc: double theta =angles.getHelAng(1); 
EvtChi1BB1.cc: double F01=sqrt((1+alpha)/2);
EvtChi1BB1.cc: double F00=sqrt((1-alpha)/4);
EvtChi1BB1.cc: double F01=getArg(0);
EvtChi1BB1.cc: double F00=getArg(1);
EvtChi1BB1.cc: double F10=-F01;
EvtChi1BB1.cc: double F11=-F00;
EvtChi1BB1.cc://cout<<"**************F00,F01,F10,F11="<<F00<<F01<<F10<<F11<<endl;
EvtChi1BB1.cc: vertex(0,0,0,Djmn(1, 1, 0,phi,theta,gamma)*F00);//Chi1  helicity =1 corresponding index=0
EvtChi1BB1.cc: vertex(0,0,1,Djmn(1, 1, 1,phi,theta,gamma)*F01);
EvtChi1BB1.cc: vertex(0,1,0,Djmn(1, 1,-1,phi,theta,gamma)*F10);
EvtChi1BB1.cc: vertex(0,1,1,Djmn(1, 1, 0,phi,theta,gamma)*F11);
EvtChi1BB1.cc: vertex(1,0,0,Djmn(1,-1, 0,phi,theta,gamma)*F00);//Chi1  helicity =-1 corresponding index=1
EvtChi1BB1.cc: vertex(1,0,1,Djmn(1,-1, 1,phi,theta,gamma)*F01);
EvtChi1BB1.cc: vertex(1,1,0,Djmn(1,-1,-1,phi,theta,gamma)*F10);
EvtChi1BB1.cc: vertex(1,1,1,Djmn(1,-1, 0,phi,theta,gamma)*F11);
EvtChi1BB1.cc: vertex(2,0,0,Djmn(1, 0, 0,phi,theta,gamma)*F00);//Chi1  helicity =0 corresponding index=2
EvtChi1BB1.cc: vertex(2,0,1,Djmn(1, 0, 1,phi,theta,gamma)*F01);
EvtChi1BB1.cc: vertex(2,1,0,Djmn(1, 0,-1,phi,theta,gamma)*F10);
EvtChi1BB1.cc: vertex(2,1,1,Djmn(1, 0, 0,phi,theta,gamma)*F11);
EvtChi1BB1.hh:// Module: EvtChi0BB1.cc
EvtChi1BB1.hh:// Description: Routine to decay Xi1 to B8 B8bar.
EvtChi1BB1.hh:#ifndef EVTChi1BB1_HH
EvtChi1BB1.hh:#define EVTChi1BB1_HH
EvtChi1BB1.hh:class EvtChi1BB1:public  EvtDecayAmp  {
EvtChi1BB1.hh:  EvtChi1BB1() {}
EvtChi1BB1.hh:  virtual ~EvtChi1BB1();
EvtChi1BB2.cc:// Module: EvtChi1BB2.cc
EvtChi1BB2.cc:// Description: Routine to decay Chi1 to B10 B10bar.
EvtChi1BB2.cc:#include "EvtChi1BB2.hh"
EvtChi1BB2.cc:EvtChi1BB2::~EvtChi1BB2() {}
EvtChi1BB2.cc:void EvtChi1BB2::getName(std::string& model_name){
EvtChi1BB2.cc:  model_name="Chi1BB2";     
EvtChi1BB2.cc:EvtDecayBase* EvtChi1BB2::clone(){
EvtChi1BB2.cc:  return new EvtChi1BB2;
EvtChi1BB2.cc:void EvtChi1BB2::init(){
EvtChi1BB2.cc:// check that there are 1 arguments
EvtChi1BB2.cc: checkSpinDaughter(1,EvtSpinType::RARITASCHWINGER);
EvtChi1BB2.cc:void EvtChi1BB2::initProbMax() {
EvtChi1BB2.cc:void EvtChi1BB2::decay( EvtParticle *p){
EvtChi1BB2.cc:  EvtParticle *v,*s1;
EvtChi1BB2.cc:  s1=p->getDaug(1); 
EvtChi1BB2.cc:  ps=s1->getP4();
EvtChi1BB2.cc: double theta =angles.getHelAng(1); 
EvtChi1BB2.cc: double F01=sqrt((1+alpha)/2);
EvtChi1BB2.cc: double F00=sqrt((1-alpha)/4);
EvtChi1BB2.cc: double F01=getArg(1);
EvtChi1BB2.cc: double F11=getArg(3);
EvtChi1BB2.cc: double F33=-F00; double F32=-F01; double F30=-F03;
EvtChi1BB2.cc: double F10=F01; double F23=-F10; double F22=-F11;
EvtChi1BB2.cc://cout<<"********F00,F01,F03,F10,F11,F22,F23,F30,F32,F33="<<F00<<F01<<F03<<F10<<F11<<F22<<F23<<F30<<F32<<F33<<endl;
EvtChi1BB2.cc:/*cout<<"********Djmn(1, 1, 0,phi,theta,gamma)="<<Djmn(1, 1, 0,phi,theta,gamma);
EvtChi1BB2.cc:cout<<"********Djmn(1, 1,-1,phi,theta,gamma)="<<Djmn(1, 1,-1,phi,theta,gamma);
EvtChi1BB2.cc:cout<<"********Djmn(1, 1, 1,phi,theta,gamma)="<<Djmn(1, 1, 1,phi,theta,gamma);
EvtChi1BB2.cc: int j1,j2,j3;
EvtChi1BB2.cc: for(j1=0;j1<=2;){
EvtChi1BB2.cc: vertex(j1,j2,j3,0.0);j3++;}
EvtChi1BB2.cc:j1++;}
EvtChi1BB2.cc: vertex(0,0,0,Djmn(1, 1, 0,phi,theta,gamma)*F00);//Chi1  helicity =1 corresponding index=0
EvtChi1BB2.cc: vertex(0,0,1,Djmn(1, 1,-1,phi,theta,gamma)*F01);
EvtChi1BB2.cc: vertex(0,0,3,Djmn(1, 1, 1,phi,theta,gamma)*F03);
EvtChi1BB2.cc: vertex(0,1,0,Djmn(1, 1, 1,phi,theta,gamma)*F10);
EvtChi1BB2.cc: vertex(0,1,1,Djmn(1, 1, 0,phi,theta,gamma)*F11);
EvtChi1BB2.cc: vertex(0,2,2,Djmn(1, 1, 0,phi,theta,gamma)*F22);
EvtChi1BB2.cc: vertex(0,2,3,Djmn(1, 1,-1,phi,theta,gamma)*F23);
EvtChi1BB2.cc: vertex(0,3,0,Djmn(1, 1,-1,phi,theta,gamma)*F30);
EvtChi1BB2.cc: vertex(0,3,2,Djmn(1, 1, 1,phi,theta,gamma)*F32);
EvtChi1BB2.cc: vertex(0,3,3,Djmn(1, 1, 0,phi,theta,gamma)*F33);
EvtChi1BB2.cc: vertex(1,0,0,Djmn(1,-1, 0,phi,theta,gamma)*F00);//Chi1  helicity =-1 corresponding index=1
EvtChi1BB2.cc: vertex(1,0,1,Djmn(1,-1,-1,phi,theta,gamma)*F01);
EvtChi1BB2.cc: vertex(1,0,3,Djmn(1,-1, 1,phi,theta,gamma)*F03);
EvtChi1BB2.cc: vertex(1,1,0,Djmn(1,-1, 1,phi,theta,gamma)*F10);
EvtChi1BB2.cc: vertex(1,1,1,Djmn(1,-1, 0,phi,theta,gamma)*F11);
EvtChi1BB2.cc: vertex(1,2,2,Djmn(1,-1, 0,phi,theta,gamma)*F22);
EvtChi1BB2.cc: vertex(1,2,3,Djmn(1,-1,-1,phi,theta,gamma)*F23);
EvtChi1BB2.cc: vertex(1,3,0,Djmn(1,-1,-1,phi,theta,gamma)*F30);
EvtChi1BB2.cc: vertex(1,3,2,Djmn(1,-1, 1,phi,theta,gamma)*F32);
EvtChi1BB2.cc: vertex(1,3,3,Djmn(1,-1, 0,phi,theta,gamma)*F33);
EvtChi1BB2.cc: vertex(2,0,0,Djmn(1, 0, 0,phi,theta,gamma)*F00);//Chi1  helicity =0 corresponding index=2
EvtChi1BB2.cc: vertex(2,0,1,Djmn(1, 0,-1,phi,theta,gamma)*F01);
EvtChi1BB2.cc: vertex(2,0,3,Djmn(1, 0, 1,phi,theta,gamma)*F03);
EvtChi1BB2.cc: vertex(2,1,0,Djmn(1, 0, 1,phi,theta,gamma)*F10);
EvtChi1BB2.cc: vertex(2,1,1,Djmn(1, 0, 0,phi,theta,gamma)*F11);
EvtChi1BB2.cc: vertex(2,2,2,Djmn(1, 0, 0,phi,theta,gamma)*F22);
EvtChi1BB2.cc: vertex(2,2,3,Djmn(1, 0,-1,phi,theta,gamma)*F23);
EvtChi1BB2.cc: vertex(2,3,0,Djmn(1, 0,-1,phi,theta,gamma)*F30);
EvtChi1BB2.cc: vertex(2,3,2,Djmn(1, 0, 1,phi,theta,gamma)*F32);
EvtChi1BB2.cc: vertex(2,3,3,Djmn(1, 0, 0,phi,theta,gamma)*F33);
EvtChi1BB2.hh:// Description: Routine to decay Xi1 to B10 B10bar.
EvtChi1BB2.hh:#ifndef EVTChi1BB2_HH
EvtChi1BB2.hh:#define EVTChi1BB2_HH
EvtChi1BB2.hh:class EvtChi1BB2:public  EvtDecayAmp  {
EvtChi1BB2.hh:  EvtChi1BB2() {}
EvtChi1BB2.hh:  virtual ~EvtChi1BB2();
EvtChi2BB1.cc:// Module: EvtChi2BB1.cc
EvtChi2BB1.cc:#include "EvtChi2BB1.hh"
EvtChi2BB1.cc:EvtChi2BB1::~EvtChi2BB1() {}
EvtChi2BB1.cc:void EvtChi2BB1::getName(std::string& model_name){
EvtChi2BB1.cc:  model_name="Chi2BB1";     
EvtChi2BB1.cc:EvtDecayBase* EvtChi2BB1::clone(){
EvtChi2BB1.cc:  return new EvtChi2BB1;
EvtChi2BB1.cc:void EvtChi2BB1::init(){
EvtChi2BB1.cc: checkSpinDaughter(1,EvtSpinType::DIRAC);
EvtChi2BB1.cc:void EvtChi2BB1::initProbMax() {
EvtChi2BB1.cc: setProbMax(100.0);
EvtChi2BB1.cc:void EvtChi2BB1::decay( EvtParticle *p){
EvtChi2BB1.cc:  EvtParticle *v,*s1;
EvtChi2BB1.cc:  s1=p->getDaug(1); 
EvtChi2BB1.cc:  ps=s1->getP4();
EvtChi2BB1.cc:  double theta =angles.getHelAng(1); 
EvtChi2BB1.cc:  double F01=getArg(0);
EvtChi2BB1.cc:  double F00=getArg(1); 
EvtChi2BB1.cc:  double F10=F01;
EvtChi2BB1.cc:  double F11=F00;
EvtChi2BB1.cc: vertex(0,0,0,Djmn(2, 0, 0,phi,theta,gamma)*F00);//Chi1  helicity =0 corresponding index=0
EvtChi2BB1.cc: vertex(0,0,1,Djmn(2, 0, 1,phi,theta,gamma)*F01);
EvtChi2BB1.cc: vertex(0,1,0,Djmn(2, 0,-1,phi,theta,gamma)*F10);
EvtChi2BB1.cc: vertex(0,1,1,Djmn(2, 0, 0,phi,theta,gamma)*F11);
EvtChi2BB1.cc: vertex(1,0,0,Djmn(2, 2, 0,phi,theta,gamma)*F00);//Chi1  helicity =2 corresponding index=1
EvtChi2BB1.cc: vertex(1,0,1,Djmn(2, 2, 1,phi,theta,gamma)*F01);
EvtChi2BB1.cc: vertex(1,1,0,Djmn(2, 2,-1,phi,theta,gamma)*F10);
EvtChi2BB1.cc: vertex(1,1,1,Djmn(2, 2, 0,phi,theta,gamma)*F11);
EvtChi2BB1.cc: vertex(2,0,0,Djmn(2,-2, 0,phi,theta,gamma)*F00);//Chi1  helicity =-2 corresponding index=2
EvtChi2BB1.cc: vertex(2,0,1,Djmn(2,-2, 1,phi,theta,gamma)*F01);
EvtChi2BB1.cc: vertex(2,1,0,Djmn(2,-2,-1,phi,theta,gamma)*F10);
EvtChi2BB1.cc: vertex(2,1,1,Djmn(2,-2, 0,phi,theta,gamma)*F11);
EvtChi2BB1.cc: vertex(3,0,0,Djmn(2, 1, 0,phi,theta,gamma)*F00);//Chi1  helicity =1 corresponding index=3
EvtChi2BB1.cc: vertex(3,0,1,Djmn(2, 1, 1,phi,theta,gamma)*F01);
EvtChi2BB1.cc: vertex(3,1,0,Djmn(2, 1,-1,phi,theta,gamma)*F10);
EvtChi2BB1.cc: vertex(3,1,1,Djmn(2, 1, 0,phi,theta,gamma)*F11);
EvtChi2BB1.cc: vertex(4,0,0,Djmn(2,-1, 0,phi,theta,gamma)*F00);//Chi1  helicity =-1 corresponding index=4
EvtChi2BB1.cc: vertex(4,0,1,Djmn(2,-1, 1,phi,theta,gamma)*F01);
EvtChi2BB1.cc: vertex(4,1,0,Djmn(2,-1,-1,phi,theta,gamma)*F10);
EvtChi2BB1.cc: vertex(4,1,1,Djmn(2,-1, 0,phi,theta,gamma)*F11);
EvtChi2BB1.hh:// Module: EvtChi0BB1.cc
EvtChi2BB1.hh:// Description: Routine to decay Xi1 to B8 B8bar.
EvtChi2BB1.hh:#ifndef EVTChi2BB1_HH
EvtChi2BB1.hh:#define EVTChi2BB1_HH
EvtChi2BB1.hh:class EvtChi2BB1:public  EvtDecayAmp  {
EvtChi2BB1.hh:  EvtChi2BB1() {}
EvtChi2BB1.hh:  virtual ~EvtChi2BB1();
EvtChi2BB2.cc:// Description: Routine to decay Chi2 to B10 B10bar.
EvtChi2BB2.cc: checkSpinDaughter(1,EvtSpinType::RARITASCHWINGER);
EvtChi2BB2.cc: setProbMax(100.0);
EvtChi2BB2.cc:  EvtParticle *v,*s1;
EvtChi2BB2.cc:  s1=p->getDaug(1); 
EvtChi2BB2.cc:  ps=s1->getP4();
EvtChi2BB2.cc:  double theta =angles.getHelAng(1); 
EvtChi2BB2.cc:  double F00,F01,F02,F03,F10,F11,F13,F20,F22,F23,F30,F31,F32,F33;
EvtChi2BB2.cc:  F01=getArg(1); 
EvtChi2BB2.cc:  F11=getArg(4);
EvtChi2BB2.cc:  F33=F00;  F32=F01;  F31=F02; F30=F03; F22=F11;
EvtChi2BB2.cc:  F10=F01;  F20=F02;  F23=F10; F13=F20; 
EvtChi2BB2.cc://cout<<"********F00,F01,F02,F03,F10,F11,F13,F20,F22,F23,F30,F31,F32,F33="<<F00<<F01<<F02<<F03<<F10<<F11<<F13<<F20<<F22<<F23<<F30<<F31<<F32<<F33<<endl;
EvtChi2BB2.cc: vertex(0,0,1,Djmn(2, 0,-1,phi,theta,gamma)*F01);
EvtChi2BB2.cc: vertex(0,0,3,Djmn(2, 0, 1,phi,theta,gamma)*F03);
EvtChi2BB2.cc: vertex(0,1,0,Djmn(2, 0, 1,phi,theta,gamma)*F10);
EvtChi2BB2.cc: vertex(0,1,1,Djmn(2, 0, 0,phi,theta,gamma)*F11);
EvtChi2BB2.cc: vertex(0,1,2,0.0);
EvtChi2BB2.cc: vertex(0,1,3,Djmn(2, 0, 2,phi,theta,gamma)*F13);
EvtChi2BB2.cc: vertex(0,2,1,0.0);
EvtChi2BB2.cc: vertex(0,2,3,Djmn(2, 0,-1,phi,theta,gamma)*F23);
EvtChi2BB2.cc: vertex(0,3,0,Djmn(2, 0,-1,phi,theta,gamma)*F30);
EvtChi2BB2.cc: vertex(0,3,1,Djmn(2, 0,-2,phi,theta,gamma)*F31);
EvtChi2BB2.cc: vertex(0,3,2,Djmn(2, 0, 1,phi,theta,gamma)*F32);
EvtChi2BB2.cc: vertex(1,0,0,Djmn(2, 2, 0,phi,theta,gamma)*F00);//Chi2  helicity =2 corresponding index 1;
EvtChi2BB2.cc: vertex(1,0,1,Djmn(2, 2,-1,phi,theta,gamma)*F01);
EvtChi2BB2.cc: vertex(1,0,2,Djmn(2, 2, 2,phi,theta,gamma)*F02);
EvtChi2BB2.cc: vertex(1,0,3,Djmn(2, 2, 1,phi,theta,gamma)*F03);
EvtChi2BB2.cc: vertex(1,1,0,Djmn(2, 2, 1,phi,theta,gamma)*F10);
EvtChi2BB2.cc: vertex(1,1,1,Djmn(2, 2, 0,phi,theta,gamma)*F11);
EvtChi2BB2.cc: vertex(1,1,2,0.0);
EvtChi2BB2.cc: vertex(1,1,3,Djmn(2, 2, 2,phi,theta,gamma)*F13);
EvtChi2BB2.cc: vertex(1,2,0,Djmn(2, 2,-2,phi,theta,gamma)*F20);
EvtChi2BB2.cc: vertex(1,2,1,0.0);
EvtChi2BB2.cc: vertex(1,2,2,Djmn(2, 2, 0,phi,theta,gamma)*F22);
EvtChi2BB2.cc: vertex(1,2,3,Djmn(2, 2,-1,phi,theta,gamma)*F23);
EvtChi2BB2.cc: vertex(1,3,0,Djmn(2, 2,-1,phi,theta,gamma)*F30);
EvtChi2BB2.cc: vertex(1,3,1,Djmn(2, 2,-2,phi,theta,gamma)*F31);
EvtChi2BB2.cc: vertex(1,3,2,Djmn(2, 2, 1,phi,theta,gamma)*F32);
EvtChi2BB2.cc: vertex(1,3,3,Djmn(2, 2, 0,phi,theta,gamma)*F33);
EvtChi2BB2.cc: vertex(2,0,1,Djmn(2,-2,-1,phi,theta,gamma)*F01);
EvtChi2BB2.cc: vertex(2,0,3,Djmn(2,-2, 1,phi,theta,gamma)*F03);
EvtChi2BB2.cc: vertex(2,1,0,Djmn(2,-2, 1,phi,theta,gamma)*F10);
EvtChi2BB2.cc: vertex(2,1,1,Djmn(2,-2, 0,phi,theta,gamma)*F11);
EvtChi2BB2.cc: vertex(2,1,2,0.0); 
EvtChi2BB2.cc: vertex(2,1,3,Djmn(2,-2, 2,phi,theta,gamma)*F13);
EvtChi2BB2.cc: vertex(2,2,1,0.0);
EvtChi2BB2.cc: vertex(2,2,3,Djmn(2,-2,-1,phi,theta,gamma)*F23);
EvtChi2BB2.cc: vertex(2,3,0,Djmn(2,-2,-1,phi,theta,gamma)*F30);
EvtChi2BB2.cc: vertex(2,3,1,Djmn(2,-2,-2,phi,theta,gamma)*F31);
EvtChi2BB2.cc: vertex(2,3,2,Djmn(2,-2, 1,phi,theta,gamma)*F32);
EvtChi2BB2.cc: vertex(3,0,0,Djmn(2, 1, 0,phi,theta,gamma)*F00);//Chi2  helicity =1 corresponding index 3;
EvtChi2BB2.cc: vertex(3,0,1,Djmn(2, 1,-1,phi,theta,gamma)*F01);
EvtChi2BB2.cc: vertex(3,0,2,Djmn(2, 1, 2,phi,theta,gamma)*F02);
EvtChi2BB2.cc: vertex(3,0,3,Djmn(2, 1, 1,phi,theta,gamma)*F03);
EvtChi2BB2.cc: vertex(3,1,0,Djmn(2, 1, 1,phi,theta,gamma)*F10);
EvtChi2BB2.cc: vertex(3,1,1,Djmn(2, 1, 0,phi,theta,gamma)*F11);
EvtChi2BB2.cc: vertex(3,1,2,0.0); 
EvtChi2BB2.cc: vertex(3,1,3,Djmn(2, 1, 2,phi,theta,gamma)*F13);
EvtChi2BB2.cc: vertex(3,2,0,Djmn(2, 1,-2,phi,theta,gamma)*F20);
EvtChi2BB2.cc: vertex(3,2,1,0.0);
EvtChi2BB2.cc: vertex(3,2,2,Djmn(2, 1, 0,phi,theta,gamma)*F22);
EvtChi2BB2.cc: vertex(3,2,3,Djmn(2, 1,-1,phi,theta,gamma)*F23);
EvtChi2BB2.cc: vertex(3,3,0,Djmn(2, 1,-1,phi,theta,gamma)*F30);
EvtChi2BB2.cc: vertex(3,3,1,Djmn(2, 1,-2,phi,theta,gamma)*F31);
EvtChi2BB2.cc: vertex(3,3,2,Djmn(2, 1, 1,phi,theta,gamma)*F32);
EvtChi2BB2.cc: vertex(3,3,3,Djmn(2, 1, 0,phi,theta,gamma)*F33);
EvtChi2BB2.cc: vertex(4,0,0,Djmn(2,-1, 0,phi,theta,gamma)*F00);//Chi2  helicity =-1 corresponding index 4;
EvtChi2BB2.cc: vertex(4,0,1,Djmn(2,-1,-1,phi,theta,gamma)*F01);
EvtChi2BB2.cc: vertex(4,0,2,Djmn(2,-1, 2,phi,theta,gamma)*F02);
EvtChi2BB2.cc: vertex(4,0,3,Djmn(2,-1, 1,phi,theta,gamma)*F03);
EvtChi2BB2.cc: vertex(4,1,0,Djmn(2,-1, 1,phi,theta,gamma)*F10);
EvtChi2BB2.cc: vertex(4,1,1,Djmn(2,-1, 0,phi,theta,gamma)*F11);
EvtChi2BB2.cc: vertex(4,1,2,0.0);
EvtChi2BB2.cc: vertex(4,1,3,Djmn(2,-1, 2,phi,theta,gamma)*F13);
EvtChi2BB2.cc: vertex(4,2,0,Djmn(2,-1,-2,phi,theta,gamma)*F20);
EvtChi2BB2.cc: vertex(4,2,1,0.0);
EvtChi2BB2.cc: vertex(4,2,2,Djmn(2,-1, 0,phi,theta,gamma)*F22);
EvtChi2BB2.cc: vertex(4,2,3,Djmn(2,-1,-1,phi,theta,gamma)*F23);
EvtChi2BB2.cc: vertex(4,3,0,Djmn(2,-1,-1,phi,theta,gamma)*F30);
EvtChi2BB2.cc: vertex(4,3,1,Djmn(2,-1,-2,phi,theta,gamma)*F31);
EvtChi2BB2.cc: vertex(4,3,2,Djmn(2,-1, 1,phi,theta,gamma)*F32);
EvtChi2BB2.cc: vertex(4,3,3,Djmn(2,-1, 0,phi,theta,gamma)*F33);
EvtChi2BB2.hh:// Description: Routine to decay Xi1 to B10 B10bar.
EvtD0mixDalitz.cc: *    File: $Id: getName,v 1.1 2009/12/18 08:43:52 pingrg Exp $
EvtD0mixDalitz.cc:	_y = getArg( 1 );
EvtD0mixDalitz.cc:	_y = getArg( 1 );
EvtD0mixDalitz.cc:	_y = getArg( 1 );
EvtD0mixDalitz.cc:	exit( 1 );
EvtD0mixDalitz.cc:  checkSpinDaughter( 1, _SCALAR );
EvtD0mixDalitz.cc:	_d1 = index;
EvtD0mixDalitz.cc:	_d1 = index;
EvtD0mixDalitz.cc:  EvtVector4R pA = part->getDaug( _d1 )->getP4();
EvtD0mixDalitz.cc:  //_i1    += ampDalitz     * conj( ampDalitz     ) / 1.e8;
EvtD0mixDalitz.cc:  //_iChi  += ampAntiDalitz * conj( ampDalitz     ) / 1.e8;
EvtD0mixDalitz.cc:  //_iChi2 += ampAntiDalitz * conj( ampAntiDalitz ) / 1.e8;
EvtD0mixDalitz.cc:  //std::cout << "INTEGRALS: " << _i1 << " " << _iChi << " " << _iChi2 << " " << _iChi / _i1 << " " << _iChi2 / _i1 << std::endl;
EvtD0mixDalitz.cc:  // Generate a negative exponential life time. p( gt ) = ( 1 - y ) * e^{ - ( 1 - y ) gt }
EvtD0mixDalitz.cc:  double gt = -log( EvtRandom::Flat() ) / ( 1. - _y );
EvtD0mixDalitz.cc:  EvtComplex amp = .5 * ampDalitz * exp( - _y * gt / 2. ) * ( ( 1. + chi ) * h1( gt ) + ( 1. - chi ) * h2( gt ) );
EvtD0mixDalitz.cc:  //_iChi  = _qp * EvtComplex( 0.0481807, 0.0003043  ); // KStarm only
EvtD0mixDalitz.cc:  //_iChi  = _qp * EvtComplex( 0.0780186, 0.000417646 ); // All resonances for KsKK
EvtD0mixDalitz.cc:  //_iChi2 = _qp * 1.;
EvtD0mixDalitz.cc:  double factorY = ( 1. + abs( _iChi2 ) ) / 2. - _y * real( _iChi );
EvtD0mixDalitz.cc:  double factorX = ( 1. - abs( _iChi2 ) ) / 2. + _x * imag( _iChi );
EvtD0mixDalitz.cc:  double norm = factorY / ( 1. - pow( _y, 2 ) ) + factorX / ( 1. + pow( _x, 2 ) );
EvtD0mixDalitz.cc:  double termY = ( 1. + abs( _iChi2 ) ) / 2. - 2. * _y / ( 1. + pow( _y, 2 ) ) * real( _iChi );
EvtD0mixDalitz.cc:  double termX = ( 1. - abs( _iChi2 ) ) / 2. + 2. * _x / ( 1. - pow( _x, 2 ) ) * imag( _iChi );
EvtD0mixDalitz.cc:  double quotientY = ( 1. + pow( _y, 2 ) ) / pow( 1. - pow( _y, 2 ), 2 );
EvtD0mixDalitz.cc:  double quotientX = ( 1. - pow( _x, 2 ) ) / pow( 1. + pow( _x, 2 ), 2 );
EvtD0mixDalitz.cc:  _gamma = 1. / _ctau; // ALERT: Gamma is not 1 / tau.
EvtD0mixDalitz.cc:      static EvtDalitzReso rho0        ( plot, _AC, _BC, _VECTOR, 0.7758  , 0.1464   , _GS  );
EvtD0mixDalitz.cc:      static EvtDalitzReso f0_1370     ( plot, _AC, _BC, _SCALAR, 1.434   , 0.173    , _RBW );
EvtD0mixDalitz.cc:      static EvtDalitzReso f2_1270     ( plot, _AC, _BC, _TENSOR, 1.2754  , 0.1851   , _RBW );
EvtD0mixDalitz.cc:      static EvtDalitzReso K0Starm_1430( plot, _BC, _AC, _SCALAR, 1.459   , 0.175    , _RBW );
EvtD0mixDalitz.cc:      static EvtDalitzReso K0Starp_1430( plot, _BC, _AB, _SCALAR, 1.459   , 0.175    , _RBW );
EvtD0mixDalitz.cc:      static EvtDalitzReso K2Starm_1430( plot, _BC, _AC, _TENSOR, 1.4256  , 0.0985   , _RBW );
EvtD0mixDalitz.cc:      static EvtDalitzReso K2Starp_1430( plot, _BC, _AB, _TENSOR, 1.4256  , 0.0985   , _RBW );
EvtD0mixDalitz.cc:      static EvtDalitzReso sigma       ( plot, _AC, _BC, _SCALAR, 0.527699, 0.511861 , _RBW );
EvtD0mixDalitz.cc:      static EvtDalitzReso sigma2      ( plot, _AC, _BC, _SCALAR, 1.03327 , 0.0987890, _RBW );
EvtD0mixDalitz.cc:      static EvtDalitzReso KStarm_1680 ( plot, _BC, _AC, _VECTOR, 1.677   , 0.205    , _RBW );
EvtD0mixDalitz.cc:      amp += EvtComplex(   .848984 ,   .893618  );
EvtD0mixDalitz.cc:      amp += EvtComplex( -1.16356  ,  1.19933   ) * KStarm      .evaluate( point );
EvtD0mixDalitz.cc:      amp += EvtComplex(   .106051 , - .118513  ) * KStarp      .evaluate( point );
EvtD0mixDalitz.cc:      amp += EvtComplex(  1.0      ,  0.0       ) * rho0        .evaluate( point );
EvtD0mixDalitz.cc:      amp += EvtComplex( -2.16486  ,  3.62385   ) * f0_1370     .evaluate( point );
EvtD0mixDalitz.cc:      amp += EvtComplex(   .217748 , - .133327  ) * f2_1270     .evaluate( point );
EvtD0mixDalitz.cc:      amp += EvtComplex(  1.62128  ,  1.06816   ) * K0Starm_1430.evaluate( point );
EvtD0mixDalitz.cc:      amp += EvtComplex(   .148802 ,   .0897144 ) * K0Starp_1430.evaluate( point );
EvtD0mixDalitz.cc:      amp += EvtComplex(  1.15489  , - .773363  ) * K2Starm_1430.evaluate( point );
EvtD0mixDalitz.cc:      amp += EvtComplex(   .140865 , - .165378  ) * K2Starp_1430.evaluate( point );
EvtD0mixDalitz.cc:      amp += EvtComplex( -1.55556  , - .931685  ) * sigma       .evaluate( point );
EvtD0mixDalitz.cc:      amp += EvtComplex( - .273791 , - .0535596 ) * sigma2      .evaluate( point );
EvtD0mixDalitz.cc:      amp += EvtComplex( -1.69720  ,   .128038  ) * KStarm_1680 .evaluate( point );
EvtD0mixDalitz.cc:      static EvtDalitzReso KStarm      ( plot, _BC, _AC, _VECTOR, 0.893619, 0.0466508, _RBW );
EvtD0mixDalitz.cc:      static EvtDalitzReso KStarp      ( plot, _BC, _AB, _VECTOR, 0.893619, 0.0466508, _RBW );
EvtD0mixDalitz.cc:      static EvtDalitzReso rho0        ( plot, _AC, _BC, _VECTOR, 0.7758  , 0.1464   , _GS  );
EvtD0mixDalitz.cc:      static EvtDalitzReso f2_1270     ( plot, _AC, _BC, _TENSOR, 1.2754  , 0.1851   , _RBW );
EvtD0mixDalitz.cc:      static EvtDalitzReso K0Starm_1430( plot, _AC, 1.46312, 0.232393, 1.0746, -1.83214, .803516, 2.32788, 1., -5.31306 ); // LASS
EvtD0mixDalitz.cc:      static EvtDalitzReso K0Starp_1430( plot, _AB, 1.46312, 0.232393, 1.0746, -1.83214, .803516, 2.32788, 1., -5.31306 ); // LASS
EvtD0mixDalitz.cc:      static EvtDalitzReso K2Starm_1430( plot, _BC, _AC, _TENSOR, 1.4256  , 0.0985   , _RBW );
EvtD0mixDalitz.cc:      static EvtDalitzReso K2Starp_1430( plot, _BC, _AB, _TENSOR, 1.4256  , 0.0985   , _RBW );
EvtD0mixDalitz.cc:      static EvtDalitzReso KStarm_1680 ( plot, _BC, _AC, _VECTOR, 1.677   , 0.205    , _RBW );
EvtD0mixDalitz.cc:      static EvtComplex fr12( 1.87981, -.628378 );
EvtD0mixDalitz.cc:      static EvtComplex fr13( 4.3242 , 2.75019  );
EvtD0mixDalitz.cc:      static EvtComplex fr14( 3.22336,  .271048 );
EvtD0mixDalitz.cc:      static EvtComplex fr15(  .0    ,  .0      );
EvtD0mixDalitz.cc:      static EvtDalitzReso Pole1  ( plot, _BC, "Pole1"  , _KMAT, fr12, fr13, fr14, fr15, -.0694725 );
EvtD0mixDalitz.cc:      static EvtDalitzReso Pole2  ( plot, _BC, "Pole2"  , _KMAT, fr12, fr13, fr14, fr15, -.0694725 );
EvtD0mixDalitz.cc:      static EvtDalitzReso Pole3  ( plot, _BC, "Pole3"  , _KMAT, fr12, fr13, fr14, fr15, -.0694725 );
EvtD0mixDalitz.cc:      static EvtDalitzReso Pole4  ( plot, _BC, "Pole4"  , _KMAT, fr12, fr13, fr14, fr15, -.0694725 );
EvtD0mixDalitz.cc:      static EvtDalitzReso kmatrix( plot, _BC, "f11prod", _KMAT, fr12, fr13, fr14, fr15, -.0694725 );
EvtD0mixDalitz.cc:      amp += EvtComplex( - 1.31394   ,  1.14072   ) * KStarm      .evaluate( point );
EvtD0mixDalitz.cc:      amp += EvtComplex(    .116239  , - .107287  ) * KStarp      .evaluate( point );
EvtD0mixDalitz.cc:      amp += EvtComplex(   1.0       ,  0.0       ) * rho0        .evaluate( point );
EvtD0mixDalitz.cc:      amp += EvtComplex( -  .0313343 ,   .0424013 ) * omega       .evaluate( point );
EvtD0mixDalitz.cc:      amp += EvtComplex(    .559412  , - .232336  ) * f2_1270     .evaluate( point );
EvtD0mixDalitz.cc:      amp += EvtComplex(   7.35400   , -3.67637   ) * K0Starm_1430.evaluate( point );
EvtD0mixDalitz.cc:      amp += EvtComplex(    .255913  , - .190459  ) * K0Starp_1430.evaluate( point );
EvtD0mixDalitz.cc:      amp += EvtComplex(   1.05397   , - .936297  ) * K2Starm_1430.evaluate( point );
EvtD0mixDalitz.cc:      amp += EvtComplex( -  .00760136, - .0908624 ) * K2Starp_1430.evaluate( point );
EvtD0mixDalitz.cc:      amp += EvtComplex( - 1.45336   , - .164494  ) * KStarm_1680 .evaluate( point );
EvtD0mixDalitz.cc:      amp += EvtComplex( - 1.81830   ,  9.10680   ) * Pole1       .evaluate( point );
EvtD0mixDalitz.cc:      amp += EvtComplex(  10.1751    ,  3.87961   ) * Pole2       .evaluate( point );
EvtD0mixDalitz.cc:      amp += EvtComplex(  23.6569    , -4.94551   ) * Pole3       .evaluate( point );
EvtD0mixDalitz.cc:      amp += EvtComplex(    .0725431 , -9.16264   ) * Pole4       .evaluate( point );
EvtD0mixDalitz.cc:      amp += EvtComplex( - 2.19449   , -7.62666   ) * kmatrix     .evaluate( point );
EvtD0mixDalitz.cc:  static EvtDalitzReso a00_980 ( plot, _AC, _BC, _SCALAR, 0.999  , _RBW, .550173, .324, _EtaPic   );
EvtD0mixDalitz.cc:  static EvtDalitzReso phi     ( plot, _AC, _BC, _VECTOR, 1.01943,       .00459319    , _RBW      );
EvtD0mixDalitz.cc:  static EvtDalitzReso a0p_980 ( plot, _AC, _AB, _SCALAR, 0.999  , _RBW, .550173, .324, _EtaPic   );
EvtD0mixDalitz.cc:  static EvtDalitzReso f0_1370 ( plot, _AC, _BC, _SCALAR, 1.350  ,       .265         , _RBW      );
EvtD0mixDalitz.cc:  static EvtDalitzReso a0m_980 ( plot, _AB, _AC, _SCALAR, 0.999  , _RBW, .550173, .324, _EtaPic   );
EvtD0mixDalitz.cc:  static EvtDalitzReso f0_980  ( plot, _AC, _BC, _SCALAR, 0.965  , _RBW, .695   , .165, _PicPicKK );
EvtD0mixDalitz.cc:  static EvtDalitzReso f2_1270 ( plot, _AC, _BC, _TENSOR, 1.2754 ,       .1851        , _RBW      );
EvtD0mixDalitz.cc:  static EvtDalitzReso a00_1450( plot, _AC, _BC, _SCALAR, 1.474  ,       .265         , _RBW      );
EvtD0mixDalitz.cc:  static EvtDalitzReso a0p_1450( plot, _AC, _AB, _SCALAR, 1.474  ,       .265         , _RBW      );
EvtD0mixDalitz.cc:  static EvtDalitzReso a0m_1450( plot, _AB, _AC, _SCALAR, 1.474  ,       .265         , _RBW      );
EvtD0mixDalitz.cc:  amp += EvtComplex( 1.0          , 0.0        ) * a00_980 .evaluate( point );
EvtD0mixDalitz.cc:  amp += EvtComplex( -.126314     ,  .188701   ) * phi     .evaluate( point );
EvtD0mixDalitz.cc:  amp += EvtComplex( -.561428     ,  .0135338  ) * a0p_980 .evaluate( point );
EvtD0mixDalitz.cc:  amp += EvtComplex(  .035        , -.00110488 ) * f0_1370 .evaluate( point );
EvtD0mixDalitz.cc:  amp += EvtComplex( -.0872735    ,  .0791190  ) * a0m_980 .evaluate( point );
EvtD0mixDalitz.cc:  amp += EvtComplex(  .257341     , -.0408343  ) * f2_1270 .evaluate( point );
EvtD0mixDalitz.cc:  amp += EvtComplex( -.0614342    , -.649930   ) * a00_1450.evaluate( point );
EvtD0mixDalitz.cc:  amp += EvtComplex( -.104629     ,  .830120   ) * a0p_1450.evaluate( point );
EvtD0mixDalitz.cc:  amp += EvtComplex( 0.           , 0.         ) * a0m_1450.evaluate( point );
EvtD0mixDalitz.cc:// < f | H | D^0 (t) > = 1/2 * [ ( 1 + \chi_f ) * A_f * e_1(gt) + ( 1 - \chi_f ) * A_f * e_2(gt) ]
EvtD0mixDalitz.cc:// < f | H | D^0 (t) > = 1/2 * exp( -gamma t / 2 ) * [ ( 1 + \chi_f ) * A_f * h_1(t) + ( 1 - \chi_f ) * A_f * h_2(t) ]
EvtD0mixDalitz.cc:// e{1,2}( gt ) = exp( -gt / 2 ) * h{1,2}( gt ).
EvtD0mixDalitz.cc:EvtComplex EvtD0mixDalitz::h1( const double& gt ) const
EvtD0mixDalitz.hh: *    File: $Id: getName,v 1.1 2009/12/18 08:43:52 pingrg Exp $
EvtD0mixDalitz.hh:  int _d1;
EvtD0mixDalitz.hh:  EvtComplex h1( const double& ct ) const;
EvtD0mixDalitz.hh:    exit( 1 );
EvtD0mixDalitz.hh:  EvtD0mixDalitz() : _d1( 0 ), _d2( 0 ), _d3( 0 ),
EvtD0mixDalitz.hh:		     _x( 0. ), _y( 0. ), _qp( 1. ),
EvtDDalitz.cc://      Copyright (C) 1998      Caltech, UCSB
EvtDDalitz.cc://    NK     September 3, 1997         Module created
EvtDDalitz.cc:  checkSpinDaughter(1,EvtSpinType::SCALAR);
EvtDDalitz.cc:  EvtId d1=getDaug(0);
EvtDDalitz.cc:  EvtId d2=getDaug(1);
EvtDDalitz.cc:    if ( d1==KM && d2==PIP && d3==PI0 ) { _flag=4; _d1=0; _d2=1; _d3=2;}
EvtDDalitz.cc:    if ( d1==KM && d3==PIP && d2==PI0 ) { _flag=4; _d1=0; _d2=2; _d3=1;}
EvtDDalitz.cc:    if ( d2==KM && d1==PIP && d3==PI0 ) { _flag=4; _d1=1; _d2=0; _d3=2;}
EvtDDalitz.cc:    if ( d2==KM && d3==PIP && d1==PI0 ) { _flag=4; _d1=1; _d2=2; _d3=0;}
EvtDDalitz.cc:    if ( d3==KM && d1==PIP && d2==PI0 ) { _flag=4; _d1=2; _d2=0; _d3=1;}
EvtDDalitz.cc:    if ( d3==KM && d2==PIP && d1==PI0 ) { _flag=4; _d1=2; _d2=1; _d3=0;}
EvtDDalitz.cc:    if ( d1==KB && d2==PIP && d3==PIM )  { _flag=3; _d1=0; _d2=2; _d3=1;}
EvtDDalitz.cc:    if ( d1==KB && d3==PIP && d2==PIM ) { _flag=3; _d1=0; _d2=1; _d3=2;}
EvtDDalitz.cc:    if ( d2==KB && d1==PIP && d3==PIM ) { _flag=3; _d1=1; _d2=2; _d3=0;}
EvtDDalitz.cc:    if ( d2==KB && d3==PIP && d1==PIM ) { _flag=3; _d1=1; _d2=0; _d3=2;}
EvtDDalitz.cc:    if ( d3==KB && d1==PIP && d2==PIM ) { _flag=3; _d1=2; _d2=1; _d3=0;}
EvtDDalitz.cc:    if ( d3==KB && d2==PIP && d1==PIM ) { _flag=3; _d1=2; _d2=0; _d3=1;}
EvtDDalitz.cc:    if ( d1==KL && d2==PIP && d3==PIM )  { _flag=3; _d1=0; _d2=2; _d3=1;}
EvtDDalitz.cc:    if ( d1==KL && d3==PIP && d2==PIM ) { _flag=3; _d1=0; _d2=1; _d3=2;}
EvtDDalitz.cc:    if ( d2==KL && d1==PIP && d3==PIM ) { _flag=3; _d1=1; _d2=2; _d3=0;}
EvtDDalitz.cc:    if ( d2==KL && d3==PIP && d1==PIM ) { _flag=3; _d1=1; _d2=0; _d3=2;}
EvtDDalitz.cc:    if ( d3==KL && d1==PIP && d2==PIM ) { _flag=3; _d1=2; _d2=1; _d3=0;}
EvtDDalitz.cc:    if ( d3==KL && d2==PIP && d1==PIM ) { _flag=3; _d1=2; _d2=0; _d3=1;}
EvtDDalitz.cc:    if ( d1==KS && d2==PIP && d3==PIM )  { _flag=3; _d1=0; _d2=2; _d3=1;}
EvtDDalitz.cc:    if ( d1==KS && d3==PIP && d2==PIM ) { _flag=3; _d1=0; _d2=1; _d3=2;}
EvtDDalitz.cc:    if ( d2==KS && d1==PIP && d3==PIM ) { _flag=3; _d1=1; _d2=2; _d3=0;}
EvtDDalitz.cc:    if ( d2==KS && d3==PIP && d1==PIM ) { _flag=3; _d1=1; _d2=0; _d3=2;}
EvtDDalitz.cc:    if ( d3==KS && d1==PIP && d2==PIM ) { _flag=3; _d1=2; _d2=1; _d3=0;}
EvtDDalitz.cc:    if ( d3==KS && d2==PIP && d1==PIM ) { _flag=3; _d1=2; _d2=0; _d3=1;}
EvtDDalitz.cc:    if ( d1==KS && d2==KP && d3==KM ) {_flag=5;_d1=0;_d2=2;_d3=1;}///////////////////////
EvtDDalitz.cc:    if ( d1==KS && d3==KP && d2==KM ) {_flag=5;_d1=0;_d2=1;_d3=2;}//////////////////////////
EvtDDalitz.cc:    if ( d2==KS && d1==KP && d3==KM ) {_flag=5;_d1=1;_d2=2;_d3=0;}////////////////////////
EvtDDalitz.cc:    if ( d2==KS && d3==KP && d1==KM ) {_flag=5;_d1=1;_d2=0;_d3=2;}///////////////////////////
EvtDDalitz.cc:    if ( d3==KS && d1==KP && d2==KM ) {_flag=5;_d1=2;_d2=1;_d3=0;}/////////////////////////
EvtDDalitz.cc:    if ( d3==KS && d2==KP && d1==KM ) {_flag=5;_d1=2;_d2=0;_d3=1;}///////////////////////////
EvtDDalitz.cc:    if ( d1==KL && d2==KP && d3==KM ) {_flag=5;_d1=0;_d2=2;_d3=1;}////////////////////////////
EvtDDalitz.cc:    if ( d1==KL && d3==KP && d2==KM ) {_flag=5;_d1=0;_d2=1;_d3=2;}////////////////////////////
EvtDDalitz.cc:    if ( d2==KL && d1==KP && d3==KM ) {_flag=5;_d1=1;_d2=2;_d3=0;}////////////////////////////
EvtDDalitz.cc:    if ( d2==KL && d3==KP && d1==KM ) {_flag=5;_d1=1;_d2=0;_d3=2;}////////////////////////////
EvtDDalitz.cc:    if ( d3==KL && d1==KP && d2==KM ) {_flag=5;_d1=2;_d2=1;_d3=0;}////////////////////////////
EvtDDalitz.cc:    if ( d3==KL && d2==KP && d1==KM ) {_flag=5;_d1=2;_d2=0;_d3=1;}////////////////////////////  
EvtDDalitz.cc:    if ( d1==K0 && d2==KP && d3==KM ) {_flag=5;_d1=0;_d2=2;_d3=1;}////////////////////////////
EvtDDalitz.cc:    if ( d1==K0 && d3==KP && d2==KM ) {_flag=5;_d1=0;_d2=1;_d3=2;}////////////////////////////
EvtDDalitz.cc:    if ( d2==K0 && d1==KP && d3==KM ) {_flag=5;_d1=1;_d2=2;_d3=0;}////////////////////////////
EvtDDalitz.cc:    if ( d2==K0 && d3==KP && d1==KM ) {_flag=5;_d1=1;_d2=0;_d3=2;}////////////////////////////
EvtDDalitz.cc:    if ( d3==K0 && d1==KP && d2==KM ) {_flag=5;_d1=2;_d2=1;_d3=0;}////////////////////////////
EvtDDalitz.cc:    if ( d3==K0 && d2==KP && d1==KM ) {_flag=5;_d1=2;_d2=0;_d3=1;}////////////////////////////
EvtDDalitz.cc:    if ( d1==KP && d2==PIM && d3==PI0 )  { _flag=4; _d1=0; _d2=1; _d3=2;}
EvtDDalitz.cc:    if ( d1==KP && d3==PIM && d2==PI0 ) { _flag=4; _d1=0; _d2=2; _d3=1;}
EvtDDalitz.cc:    if ( d2==KP && d1==PIM && d3==PI0 ) { _flag=4; _d1=1; _d2=0; _d3=2;}
EvtDDalitz.cc:    if ( d2==KP && d3==PIM && d1==PI0 ) { _flag=4; _d1=1; _d2=2; _d3=0;}
EvtDDalitz.cc:    if ( d3==KP && d1==PIM && d2==PI0 ) { _flag=4; _d1=2; _d2=0; _d3=1;}
EvtDDalitz.cc:    if ( d3==KP && d2==PIM && d1==PI0 ) { _flag=4; _d1=2; _d2=1; _d3=0;}
EvtDDalitz.cc:    if ( d1==K0 && d2==PIP && d3==PIM )  { _flag=3; _d1=0; _d2=1; _d3=2;}
EvtDDalitz.cc:    if ( d1==K0 && d3==PIP && d2==PIM ) { _flag=3; _d1=0; _d2=2; _d3=1;}
EvtDDalitz.cc:    if ( d2==K0 && d1==PIP && d3==PIM ) { _flag=3; _d1=1; _d2=0; _d3=2;}
EvtDDalitz.cc:    if ( d2==K0 && d3==PIP && d1==PIM ) { _flag=3; _d1=1; _d2=2; _d3=0;}
EvtDDalitz.cc:    if ( d3==K0 && d1==PIP && d2==PIM ) { _flag=3; _d1=2; _d2=0; _d3=1;}
EvtDDalitz.cc:    if ( d3==K0 && d2==PIP && d1==PIM ) { _flag=3; _d1=2; _d2=1; _d3=0;}
EvtDDalitz.cc:    if ( d1==KL && d2==PIP && d3==PIM )  { _flag=3; _d1=0; _d2=1; _d3=2;}
EvtDDalitz.cc:    if ( d1==KL && d3==PIP && d2==PIM ) { _flag=3; _d1=0; _d2=2; _d3=1;}
EvtDDalitz.cc:    if ( d2==KL && d1==PIP && d3==PIM ) { _flag=3; _d1=1; _d2=0; _d3=2;}
EvtDDalitz.cc:    if ( d2==KL && d3==PIP && d1==PIM ) { _flag=3; _d1=1; _d2=2; _d3=0;}
EvtDDalitz.cc:    if ( d3==KL && d1==PIP && d2==PIM ) { _flag=3; _d1=2; _d2=0; _d3=1;}
EvtDDalitz.cc:    if ( d3==KL && d2==PIP && d1==PIM ) { _flag=3; _d1=2; _d2=1; _d3=0;}
EvtDDalitz.cc:    if ( d1==KS && d2==PIP && d3==PIM )  { _flag=3; _d1=0; _d2=1; _d3=2;}
EvtDDalitz.cc:    if ( d1==KS && d3==PIP && d2==PIM ) { _flag=3; _d1=0; _d2=2; _d3=1;}
EvtDDalitz.cc:    if ( d2==KS && d1==PIP && d3==PIM ) { _flag=3; _d1=1; _d2=0; _d3=2;}
EvtDDalitz.cc:    if ( d2==KS && d3==PIP && d1==PIM ) { _flag=3; _d1=1; _d2=2; _d3=0;}
EvtDDalitz.cc:    if ( d3==KS && d1==PIP && d2==PIM ) { _flag=3; _d1=2; _d2=0; _d3=1;}
EvtDDalitz.cc:    if ( d3==KS && d2==PIP && d1==PIM ) { _flag=3; _d1=2; _d2=1; _d3=0;}
EvtDDalitz.cc:    if ( d1==KS && d2==KP && d3==KM ) {_flag=5;_d1=0;_d2=1;_d3=2;}//////////////////////////////
EvtDDalitz.cc:    if ( d1==KS && d3==KP && d2==KM ) {_flag=5;_d1=0;_d2=2;_d3=1;}//////////////////////////////
EvtDDalitz.cc:    if ( d2==KS && d1==KP && d3==KM ) {_flag=5;_d1=1;_d2=0;_d3=2;}//////////////////////////////
EvtDDalitz.cc:    if ( d2==KS && d3==KP && d1==KM ) {_flag=5;_d1=1;_d2=2;_d3=0;}//////////////////////////////
EvtDDalitz.cc:    if ( d3==KS && d1==KP && d2==KM ) {_flag=5;_d1=2;_d2=0;_d3=1;}//////////////////////////////
EvtDDalitz.cc:    if ( d3==KS && d2==KP && d1==KM ) {_flag=5;_d1=2;_d2=1;_d3=0;}//////////////////////////////
EvtDDalitz.cc:    if ( d1==KL && d2==KP && d3==KM ) {_flag=5;_d1=0;_d2=1;_d3=2;}//////////////////////////////
EvtDDalitz.cc:    if ( d1==KL && d3==KP && d2==KM ) {_flag=5;_d1=0;_d2=2;_d3=1;}//////////////////////////////
EvtDDalitz.cc:    if ( d2==KL && d1==KP && d3==KM ) {_flag=5;_d1=1;_d2=0;_d3=2;}//////////////////////////////
EvtDDalitz.cc:    if ( d2==KL && d3==KP && d1==KM ) {_flag=5;_d1=1;_d2=2;_d3=0;}//////////////////////////////
EvtDDalitz.cc:    if ( d3==KL && d1==KP && d2==KM ) {_flag=5;_d1=2;_d2=0;_d3=1;}//////////////////////////////
EvtDDalitz.cc:    if ( d3==KL && d2==KP && d1==KM ) {_flag=5;_d1=2;_d2=1;_d3=0;} ////////////////////////////// 
EvtDDalitz.cc:    if ( d1==K0 && d2==KP && d3==KM ) {_flag=5;_d1=0;_d2=1;_d3=2;}//////////////////////////////
EvtDDalitz.cc:    if ( d1==K0 && d3==KP && d2==KM ) {_flag=5;_d1=0;_d2=2;_d3=1;}//////////////////////////////
EvtDDalitz.cc:    if ( d2==K0 && d1==KP && d3==KM ) {_flag=5;_d1=1;_d2=0;_d3=2;}//////////////////////////////
EvtDDalitz.cc:    if ( d2==K0 && d3==KP && d1==KM ) {_flag=5;_d1=1;_d2=2;_d3=0;}//////////////////////////////
EvtDDalitz.cc:    if ( d3==K0 && d1==KP && d2==KM ) {_flag=5;_d1=2;_d2=0;_d3=1;}//////////////////////////////
EvtDDalitz.cc:    if ( d3==K0 && d2==KP && d1==KM ) {_flag=5;_d1=2;_d2=1;_d3=0;}//////////////////////////////
EvtDDalitz.cc:    if ( d1==KB && d2==PIP && d3==PI0 )  { _flag=2; _d1=0; _d2=1; _d3=2;}
EvtDDalitz.cc:    if ( d1==KB && d3==PIP && d2==PI0 ) { _flag=2; _d1=0; _d2=2; _d3=1;}
EvtDDalitz.cc:    if ( d2==KB && d1==PIP && d3==PI0 ) { _flag=2; _d1=1; _d2=0; _d3=2;}
EvtDDalitz.cc:    if ( d2==KB && d3==PIP && d1==PI0 ) { _flag=2; _d1=1; _d2=2; _d3=0;}
EvtDDalitz.cc:    if ( d3==KB && d1==PIP && d2==PI0 ) { _flag=2; _d1=2; _d2=0; _d3=1;}
EvtDDalitz.cc:    if ( d3==KB && d2==PIP && d1==PI0 ) { _flag=2; _d1=2; _d2=1; _d3=0;}
EvtDDalitz.cc:    if ( d1==KL && d2==PIP && d3==PI0 )  { _flag=2; _d1=0; _d2=1; _d3=2;}
EvtDDalitz.cc:    if ( d1==KL && d3==PIP && d2==PI0 ) { _flag=2; _d1=0; _d2=2; _d3=1;}
EvtDDalitz.cc:    if ( d2==KL && d1==PIP && d3==PI0 ) { _flag=2; _d1=1; _d2=0; _d3=2;}
EvtDDalitz.cc:    if ( d2==KL && d3==PIP && d1==PI0 ) { _flag=2; _d1=1; _d2=2; _d3=0;}
EvtDDalitz.cc:    if ( d3==KL && d1==PIP && d2==PI0 ) { _flag=2; _d1=2; _d2=0; _d3=1;}
EvtDDalitz.cc:    if ( d3==KL && d2==PIP && d1==PI0 ) { _flag=2; _d1=2; _d2=1; _d3=0;}
EvtDDalitz.cc:    if ( d1==KS && d2==PIP && d3==PI0 )  { _flag=2; _d1=0; _d2=1; _d3=2;}
EvtDDalitz.cc:    if ( d1==KS && d3==PIP && d2==PI0 ) { _flag=2; _d1=0; _d2=2; _d3=1;}
EvtDDalitz.cc:    if ( d2==KS && d1==PIP && d3==PI0 ) { _flag=2; _d1=1; _d2=0; _d3=2;}
EvtDDalitz.cc:    if ( d2==KS && d3==PIP && d1==PI0 ) { _flag=2; _d1=1; _d2=2; _d3=0;}
EvtDDalitz.cc:    if ( d3==KS && d1==PIP && d2==PI0 ) { _flag=2; _d1=2; _d2=0; _d3=1;}
EvtDDalitz.cc:    if ( d3==KS && d2==PIP && d1==PI0 ) { _flag=2; _d1=2; _d2=1; _d3=0;}
EvtDDalitz.cc:    if ( d1==KM && d2==PIP && d3==PIP )  { _flag=1; _d1=0; _d2=1; _d3=2;}
EvtDDalitz.cc:    if ( d2==KM && d1==PIP && d3==PIP ) { _flag=1; _d1=1; _d2=0; _d3=2;}
EvtDDalitz.cc:    if ( d3==KM && d1==PIP && d2==PIP ) { _flag=1; _d1=2; _d2=0; _d3=1;}
EvtDDalitz.cc:    if ( d1==K0 && d2==PIM && d3==PI0 )  { _flag=2; _d1=0; _d2=1; _d3=2;}
EvtDDalitz.cc:    if ( d1==K0 && d3==PIM && d2==PI0 ) { _flag=2; _d1=0; _d2=2; _d3=1;}
EvtDDalitz.cc:    if ( d2==K0 && d1==PIM && d3==PI0 ) { _flag=2; _d1=1; _d2=0; _d3=2;}
EvtDDalitz.cc:    if ( d2==K0 && d3==PIM && d1==PI0 ) { _flag=2; _d1=1; _d2=2; _d3=0;}
EvtDDalitz.cc:    if ( d3==K0 && d1==PIM && d2==PI0 ) { _flag=2; _d1=2; _d2=0; _d3=1;}
EvtDDalitz.cc:    if ( d3==K0 && d2==PIM && d1==PI0 ) { _flag=2; _d1=2; _d2=1; _d3=0;}
EvtDDalitz.cc:    if ( d1==KL && d2==PIM && d3==PI0 )  { _flag=2; _d1=0; _d2=1; _d3=2;}
EvtDDalitz.cc:    if ( d1==KL && d3==PIM && d2==PI0 ) { _flag=2; _d1=0; _d2=2; _d3=1;}
EvtDDalitz.cc:    if ( d2==KL && d1==PIM && d3==PI0 ) { _flag=2; _d1=1; _d2=0; _d3=2;}
EvtDDalitz.cc:    if ( d2==KL && d3==PIM && d1==PI0 ) { _flag=2; _d1=1; _d2=2; _d3=0;}
EvtDDalitz.cc:    if ( d3==KL && d1==PIM && d2==PI0 ) { _flag=2; _d1=2; _d2=0; _d3=1;}
EvtDDalitz.cc:    if ( d3==KL && d2==PIM && d1==PI0 ) { _flag=2; _d1=2; _d2=1; _d3=0;}
EvtDDalitz.cc:    if ( d1==KS && d2==PIM && d3==PI0 )  { _flag=2; _d1=0; _d2=1; _d3=2;}
EvtDDalitz.cc:    if ( d1==KS && d3==PIM && d2==PI0 ) { _flag=2; _d1=0; _d2=2; _d3=1;}
EvtDDalitz.cc:    if ( d2==KS && d1==PIM && d3==PI0 ) { _flag=2; _d1=1; _d2=0; _d3=2;}
EvtDDalitz.cc:    if ( d2==KS && d3==PIM && d1==PI0 ) { _flag=2; _d1=1; _d2=2; _d3=0;}
EvtDDalitz.cc:    if ( d3==KS && d1==PIM && d2==PI0 ) { _flag=2; _d1=2; _d2=0; _d3=1;}
EvtDDalitz.cc:    if ( d3==KS && d2==PIM && d1==PI0 ) { _flag=2; _d1=2; _d2=1; _d3=0;}
EvtDDalitz.cc:    if ( d1==KP && d2==PIM && d3==PIM )  { _flag=1; _d1=0; _d2=1; _d3=2;}
EvtDDalitz.cc:    if ( d2==KP && d1==PIM && d3==PIM ) { _flag=1; _d1=1; _d2=0; _d3=2;}
EvtDDalitz.cc:    if ( d3==KP && d1==PIM && d2==PIM ) { _flag=1; _d1=2; _d2=0; _d3=1;}
EvtDDalitz.cc:     if ( d1==KM && d2==KP && d3==PIP ) { _flag=6; _d1=0; _d2=1; _d3=2; }/////////////////////////////////////////////////////////
EvtDDalitz.cc:     if ( d1==KM && d3==KP && d2==PIP ) { _flag=6; _d1=0; _d2=2; _d3=1; }/////////////////////////////////////////////////////////
EvtDDalitz.cc:     if ( d2==KM && d1==KP && d3==PIP ) { _flag=6; _d1=1; _d2=0; _d3=2; }/////////////////////////////////////////////////////////
EvtDDalitz.cc:     if ( d2==KM && d3==KP && d1==PIP ) { _flag=6; _d1=1; _d2=2; _d3=0; }/////////////////////////////////////////////////////////
EvtDDalitz.cc:     if ( d3==KM && d1==KP && d2==PIP ) { _flag=6; _d1=2; _d2=0; _d3=1; }/////////////////////////////////////////////////////////
EvtDDalitz.cc:     if ( d3==KM && d2==KP && d1==PIP ) { _flag=6; _d1=2; _d2=1; _d3=0; }/////////////////////////////////////////////////////////
EvtDDalitz.cc:     if ( d1==KP && d2==KM && d3==PIM ) { _flag=6; _d1=0; _d2=1; _d3=2; }/////////////////////////////////////////////////////////
EvtDDalitz.cc:     if ( d1==KP && d3==KM && d2==PIM ) { _flag=6; _d1=0; _d2=2; _d3=1; }/////////////////////////////////////////////////////////
EvtDDalitz.cc:     if ( d2==KP && d1==KM && d3==PIM ) { _flag=6; _d1=1; _d2=0; _d3=2; }/////////////////////////////////////////////////////////
EvtDDalitz.cc:     if ( d2==KP && d3==KM && d1==PIM ) { _flag=6; _d1=1; _d2=2; _d3=0; }/////////////////////////////////////////////////////////
EvtDDalitz.cc:     if ( d3==KP && d1==KM && d2==PIM ) { _flag=6; _d1=2; _d2=0; _d3=1; }/////////////////////////////////////////////////////////
EvtDDalitz.cc:     if ( d3==KP && d2==KM && d1==PIM ) { _flag=6; _d1=2; _d2=1; _d3=0; }/////////////////////////////////////////////////////////
EvtDDalitz.cc:  if ( _flag==1 ) {setProbMax(9.6);}
EvtDDalitz.cc:  if ( _flag==2 ) {setProbMax(147.9);}
EvtDDalitz.cc:  if ( _flag==5 ) {setProbMax(10000000.0);}/////////////////////////////////////
EvtDDalitz.cc:  double oneby2 = 0.707106782;
EvtDDalitz.cc:  EvtVector4R moms1 = p->getDaug(_d1)->getP4();
EvtDDalitz.cc:  EvtComplex amp(1.0,0.0);
EvtDDalitz.cc://data from Anjos et al, Phys.Rev.D 1993, v.48,num.1,p.56 (E691 resuls)
EvtDDalitz.cc://for D+ -> K- pi+ pi+, and from Adler et al, Phys.Lett. B196 (1987), 107
EvtDDalitz.cc:  if ( _flag==1) {
EvtDDalitz.cc://Anjos etal e691 - Phys Rev D48, 56 (1993) 
EvtDDalitz.cc:    EvtResonance DplusRes11(p4_p,moms1,moms2,0.78,-60.0,0.0498,0.89610,1);
EvtDDalitz.cc:    EvtResonance DplusRes12(p4_p,moms3,moms1,0.78,-60.0,0.0498,0.89610,1);//K*(892)
EvtDDalitz.cc:    EvtResonance DplusRes21(p4_p,moms1,moms2,0.53,132.0,0.287,1.429,0);
EvtDDalitz.cc:    EvtResonance DplusRes22(p4_p,moms3,moms1,0.53,132.0,0.287,1.429,0);//K*(1430)
EvtDDalitz.cc:    EvtResonance DplusRes31(p4_p,moms1,moms2,0.47,-51.0,0.323,1.714,1);
EvtDDalitz.cc:    EvtResonance DplusRes32(p4_p,moms3,moms1,0.47,-51.0,0.323,1.714,1);//K*(1680)
EvtDDalitz.cc:    amp = amp + oneby2*(-DplusRes11.resAmpl()+DplusRes12.resAmpl()) + oneby2*(DplusRes21.resAmpl() + DplusRes22.resAmpl()) + oneby2*(-DplusRes31.resAmpl()+ DplusRes32.resAmpl());
EvtDDalitz.cc://adler etal MarkIII - Phys Lett B196, 107 (1987)    
EvtDDalitz.cc://   Kbar rho+    FitFraction = 68+/-8+/-12    Phase   0
EvtDDalitz.cc://   Kbar* pi+                  19+/-6+/-6            43+/-23
EvtDDalitz.cc://   nonres                     13+/-7+/-8           250+/-19   
EvtDDalitz.cc:// the phases are equiv to -106=254 and 41
EvtDDalitz.cc:    EvtResonance DplusKpipi0Res1(p4_p,moms2,moms3,1.00,0.00,0.1512,0.7699,1); //rho+  
EvtDDalitz.cc:    EvtResonance DplusKpipi0Res2(p4_p,moms3,moms1,0.8695,0.7191,0.0498,0.89159,1); //K*0
EvtDDalitz.cc:    amp = 0.9522*EvtComplex(cos(-1.8565),sin(-1.8565)) + 1.00*DplusKpipi0Res1.relBrWig(0) + 0.8695*EvtComplex(cos(0.7191),sin(0.7191))*DplusKpipi0Res2.relBrWig(1);//////////////////////////////////////////////////////////////////////////////////
EvtDDalitz.cc://    EvtResonance DK2piRes1(p4_p,moms1,moms2,2.31,109.0,0.0498,0.89610,1);//K*(892)
EvtDDalitz.cc://    EvtResonance DK2piRes2(p4_p,moms3,moms2,1.59,-123.0,0.1491,0.7683,1);//RHO(770)
EvtDDalitz.cc://    amp = amp + DK2piRes1.resAmpl() + DK2piRes2.resAmpl();
EvtDDalitz.cc:    // if p4_p is D0, moms1 is K0, moms2 is pi-, moms3 is pi+
EvtDDalitz.cc:    // if p4_p is D0bar, moms1 is K0, moms2 is pi+, moms3 is pi-
EvtDDalitz.cc:        -> getArg( 1 )  ;///////////////////////////////////////////////////////
EvtDDalitz.cc:          amp = amplDtoK0PiPi( p4_p , moms1 , moms3 , moms2 ) +/////////////////////
EvtDDalitz.cc:            Factor * amplDtoK0PiPi( p4_p , moms1 , moms2 , moms3 ) ;///////////////
EvtDDalitz.cc:          amp = amplDtoK0PiPi( p4_p , moms1 , moms2 , moms3 ) +//////////////////
EvtDDalitz.cc:            Factor * amplDtoK0PiPi( p4_p , moms1 , moms3 , moms2 ) ;//////////////
EvtDDalitz.cc:          amp = amplDtoK0PiPi( p4_p , moms1 , moms2 , moms3 ) +///////////////////
EvtDDalitz.cc:            Factor * amplDtoK0PiPi( p4_p , moms1 , moms3 , moms2 ) ;///////////////
EvtDDalitz.cc:          amp = amplDtoK0PiPi( p4_p , moms1 , moms3 , moms2 ) +///////////////////
EvtDDalitz.cc:            Factor * amplDtoK0PiPi( p4_p , moms1 , moms2 , moms3 ) ;/////////////
EvtDDalitz.cc:      amp = amplDtoK0PiPi( p4_p , moms1 , moms2 , moms3 ) ;//////////////////////
EvtDDalitz.cc:    EvtResonance2 DKpipi0Res1(p4_p,moms2,moms3,1.0  ,0.0   ,0.1507,0.770 ,1); //rho
EvtDDalitz.cc:    EvtResonance2 DKpipi0Res2(p4_p,moms1,moms2,0.39, -0.2  ,0.0505,0.8961,1); //k*0
EvtDDalitz.cc:    EvtResonance2 DKpipi0Res3(p4_p,moms1,moms3,0.44, 163.0 ,0.050 ,0.8915,1); //k*-
EvtDDalitz.cc:    EvtResonance2 DKpipi0Res4(p4_p,moms1,moms3,0.77 ,55.5  ,0.294 ,1.412 ,0); //k01430-
EvtDDalitz.cc:    EvtResonance2 DKpipi0Res5(p4_p,moms1,moms2,0.85 ,166.0 ,0.294 ,1.412 ,0); //k01430bar
EvtDDalitz.cc:    EvtResonance2 DKpipi0Res6(p4_p,moms2,moms3,2.5  ,171.0 ,0.240 ,1.700 ,1); //rho1700
EvtDDalitz.cc:    EvtResonance2 DKpipi0Res7(p4_p,moms1,moms3,2.5  ,103.0 ,0.322 ,1.717 ,1); //K*1680-
EvtDDalitz.cc:    double pi180inv = 1.0/EvtConst::radToDegrees;
EvtDDalitz.cc:    amp = EvtComplex(1.75*cos(31.2*pi180inv),1.75*sin(31.2*pi180inv)) 
EvtDDalitz.cc:      + DKpipi0Res1.resAmpl() + DKpipi0Res2.resAmpl() + DKpipi0Res3.resAmpl()
EvtDDalitz.cc:    // if p4_p is D0, moms1 is K0, moms2 is pi-, moms3 is pi+
EvtDDalitz.cc:    // if p4_p is D0bar, moms1 is K0, moms2 is pi+, moms3 is pi-
EvtDDalitz.cc:        -> getArg( 1 )  ;//////////////////////////////////////////////////////
EvtDDalitz.cc:          amp = amplDtoK0KK( p4_p , moms1 , moms3 , moms2 ) +//////////////////////////
EvtDDalitz.cc:            Factor * amplDtoK0KK( p4_p , moms1 , moms2 , moms3 ) ;////////////////////
EvtDDalitz.cc:          amp = amplDtoK0KK( p4_p , moms1 , moms2 , moms3 ) +/////////////////////
EvtDDalitz.cc:            Factor * amplDtoK0KK( p4_p , moms1 , moms3 , moms2 ) ;//////////////////
EvtDDalitz.cc:          amp = amplDtoK0KK( p4_p , moms1 , moms2 , moms3 ) +///////////////////////////////
EvtDDalitz.cc:            Factor * amplDtoK0KK( p4_p , moms1 , moms3 , moms2 ) ;////////////////////////
EvtDDalitz.cc:          amp = amplDtoK0KK( p4_p , moms1 , moms3 , moms2 ) +//////////////////////////////////
EvtDDalitz.cc:            Factor * amplDtoK0KK( p4_p , moms1 , moms2 , moms3 ) ;////////////////////
EvtDDalitz.cc:      amp = amplDtoK0KK( p4_p , moms1 , moms2 , moms3 ) ;/////////////////////////////
EvtDDalitz.cc:     EvtResonance2 DsKKpiRes1(p4_p, moms3, moms1, 1.0, 0.0, 0.0455, 0.8944, 1, true); // K*(892)//////////////////////////////////////////////////////
EvtDDalitz.cc:     EvtResonance2 DsKKpiRes2(p4_p, moms3, moms1, 1.48, 138., 0.290, 1.414, 0); // K*_0(1430)////////////////////////////////////////////////////
EvtDDalitz.cc:     EvtFlatte     DsKKpiRes3(p4_p, moms1, moms2, 5.07, 156., 0.965, _kkpi_params); // f_0(980)/////////////////////////////////////////////////////////
EvtDDalitz.cc:     EvtResonance2 DsKKpiRes4(p4_p, moms1, moms2, 1.15, -10., 0.00426, 1.019455, 1, true); // phi(1020)//////////////////////////////////////////
EvtDDalitz.cc:     EvtResonance2 DsKKpiRes5(p4_p, moms1, moms2, 1.28, 53., 0.265, 1.350, 0); // f_0(1370)///////////////////////////////////////////////
EvtDDalitz.cc:     EvtResonance2 DsKKpiRes6(p4_p, moms1, moms2, 1.19, 87., 0.137, 1.724, 0); // f_0(1710)///////////////////////////////////////////////
EvtDDalitz.cc:     amp = DsKKpiRes1.resAmpl() + DsKKpiRes2.resAmpl() + DsKKpiRes3.resAmpl()////////////////////////////
EvtDDalitz.cc:EvtComplex EvtDDalitz::amplDtoK0PiPi(EvtVector4R p4_p,  EvtVector4R moms1, //////////////////////////////////////////////////////////////////////
EvtDDalitz.cc:    EvtResonance2 DK2piRes1(p4_p,moms1,moms2,1.418,-190.0,0.0508,0.89166,1);//////////////////////////////////////////////////////////////////////
EvtDDalitz.cc:    //K0*(1430)
EvtDDalitz.cc:    EvtResonance2 DK2piRes2(p4_p,moms1,moms2,1.818,-337.0,0.294 ,1.412  ,0);//////////////////////////////////////////////////////////////////////
EvtDDalitz.cc:    //K2*(1430)
EvtDDalitz.cc:    EvtResonance2 DK2piRes3(p4_p,moms1,moms2,0.909,  -5.0,0.0985,1.4256 ,2);//////////////////////////////////////////////////////////////////////
EvtDDalitz.cc:    //K*(1680)
EvtDDalitz.cc:    EvtResonance2 DK2piRes4(p4_p,moms1,moms2,5.091,-166.0,0.322 ,1.717  ,1);//////////////////////////////////////////////////////////////////////
EvtDDalitz.cc:    EvtResonance2 DK2piRes5(p4_p,moms1,moms3,0.100, -19.0,0.0508,0.89166,1);//////////////////////////////////////////////////////////////////////
EvtDDalitz.cc:    EvtResonance2 DK2piRes6(p4_p,moms3,moms2,0.909,-340.0,0.1502,0.7693,1);//////////////////////////////////////////////////////////////////////
EvtDDalitz.cc:    EvtResonance2 DK2piRes7(p4_p,moms3,moms2,.0336,-226.0,0.00844,0.78257,1);//////////////////////////////////////////////////////////////////////
EvtDDalitz.cc:    EvtResonance2 DK2piRes8(p4_p,moms3,moms2,0.309,-152.0,0.05,0.977,0);//////////////////////////////////////////////////////////////////////
EvtDDalitz.cc:    //f0(1370)
EvtDDalitz.cc:    EvtResonance2 DK2piRes9(p4_p,moms3,moms2,1.636,-255.0,0.272,1.31,0);//////////////////////////////////////////////////////////////////////
EvtDDalitz.cc:    //f2(1270)
EvtDDalitz.cc:    EvtResonance2 DK2piRes10(p4_p,moms3,moms2,0.636,-32.0,0.1851,1.2754,2);//////////////////////////////////////////////////////////////////////
EvtDDalitz.cc:    return EvtComplex(1.0,0.0) + //////////////////////////////////////////////////////////////////////
EvtDDalitz.cc:      DK2piRes1.resAmpl() + DK2piRes2.resAmpl() +//////////////////////////////////////////////////////////////////////
EvtDDalitz.cc:      DK2piRes9.resAmpl() + DK2piRes10.resAmpl();//////////////////////////////////////////////////////////////////////
EvtDDalitz.cc:// moms1 is K0s
EvtDDalitz.cc:// with convention : Non Resonant = Amp 1. / Phase 0. 
EvtDDalitz.cc:EvtComplex EvtDDalitz::amplDtoK0KK(EvtVector4R p4_p,  EvtVector4R moms1, //////////////////////////////////////////////////////////////////////
EvtDDalitz.cc:    EvtResonance DK0KKRes1( p4_p, moms2, moms3, 113.75, -40.0, 0.0043,//////////////////////////////////////////////////////////////////////
EvtDDalitz.cc:                            1.019456, 1 ) ;//////////////////////////////////////////////////////////////////////
EvtDDalitz.cc:    EvtResonance DK0KKRes2( p4_p, moms2, moms3, 152.25, 69.0, 0.1196 , 0.9847,//////////////////////////////////////////////////////////////////////
EvtDDalitz.cc:    EvtResonance DK0KKRes3( p4_p, moms2, moms3, 30.5, -201.0, 0.05, 0.980 , //////////////////////////////////////////////////////////////////////
EvtDDalitz.cc:    EvtResonance DK0KKRes4( p4_p, moms1, moms2, 85.75, -93.0, 0.1196 , 0.9847,//////////////////////////////////////////////////////////////////////
EvtDDalitz.cc:    EvtResonance DK0KKRes5( p4_p, moms3, moms1, 8. , -53.0 ,0.1196, 0.9847,//////////////////////////////////////////////////////////////////////
EvtDDalitz.cc:    return EvtComplex(1.0,0.0) +//////////////////////////////////////////////////////////////////////
EvtDDalitz.cc:      DK0KKRes1.resAmpl() + DK0KKRes2.resAmpl() +//////////////////////////////////////////////////////////////////////
EvtDDalitz.hh://      Copyright (C) 1998      Caltech, UCSB
EvtDDalitz.hh://    DJL/RYD     August 11, 1998         Module created
EvtDDalitz.hh:  int _d1,_d2,_d3,_flag;
EvtDDalitz.hh:  EvtComplex amplDtoK0PiPi(EvtVector4R p4_p,  EvtVector4R moms1, //////////////
EvtDDalitz.hh:  EvtComplex amplDtoK0KK(EvtVector4R p4_p,  EvtVector4R moms1, ////////////////////////////
EvtDeBD.cc:   checkSpinDaughter(1,EvtSpinType::SCALAR);
EvtDeBD.cc:  setProbMax(10.0);
EvtDeBD.cc:  EvtParticle *l1, *l2;
EvtDeBD.cc:  l1 = p->getDaug(0);
EvtDeBD.cc:  l2 = p->getDaug(1);
EvtDeBD.cc:  EvtId p1,d1,d2;
EvtDeBD.cc:  p1=p ->getId();
EvtDeBD.cc:  d1=l1->getId();
EvtDeBD.cc:  EvtVector4R pDaug=l1->getP4();
EvtDeBD.cc:  pv=l1->getP4Lab(); //baryon
EvtDeBD.cc:  theta=angles.getHelAng(1);
EvtDeBD.cc:  if((p1==OM)&&(d1==L0)){
EvtDeBD.cc:    alpha=0.0175;
EvtDeBD.cc:  else if((p1==OMB)&&(d1==LB)){ 
EvtDeBD.cc:   alpha=-0.0175;
EvtDeBD.cc:  else if((p1==OM)&&(d1==X0)){
EvtDeBD.cc:  else if((p1==OMB)||(d1==X0B)){
EvtDeBD.cc:  else if((p1==OM)||(d1==XM)){
EvtDeBD.cc:  else if((p1==OMB)||(d1==XMB)){
EvtDeBD.cc:  if(p1==OM||p1==OMB){
EvtDeBD.cc:    FM=sqrt((1+alpha)/2.);
EvtDeBD.cc:    FP=sqrt((1-alpha)/2.);
EvtDeBD.cc:    FP=1;FM=1;
EvtDeBD.cc:  vertex(0,0,Djmn(1.5, 0.5, 0.5,phi,theta,gamma)*FP);
EvtDeBD.cc:  vertex(0,1,Djmn(1.5, 0.5,-0.5,phi,theta,gamma)*FM);
EvtDeBD.cc:  vertex(1,0,Djmn(1.5, 1.5, 0.5,phi,theta,gamma)*FP);
EvtDeBD.cc:  vertex(1,1,Djmn(1.5, 1.5,-0.5,phi,theta,gamma)*FM);
EvtDeBD.cc:  vertex(2,0,Djmn(1.5,-1.5, 0.5,phi,theta,gamma)*FP);
EvtDeBD.cc:  vertex(2,1,Djmn(1.5,-1.5,-0.5,phi,theta,gamma)*FM);
EvtDeBD.cc:  vertex(3,0,Djmn(1.5,-0.5, 0.5,phi,theta,gamma)*FP);
EvtDeBD.cc:  vertex(3,1,Djmn(1.5,-0.5,-0.5,phi,theta,gamma)*FM);
EvtDIY.cc:// check that there are 1 arguments:angular distribution parameter 
EvtDIY.cc:static int nrun=1;
EvtDIY.cc:double amps,SamAmps,rd1;
EvtDIY.cc:  if(nrun==1){
EvtDIY.cc:       for(i=0;i<=nd-1;i++){
EvtDIY.cc:       if(amps>max_amps) max_amps=amps*1.01;
EvtDIY.cc:  for(i=0;i<=p->getNDaug()-1;i++){
EvtDIY.cc:   rd1=EvtRandom::Flat(0.0, 1.0);
EvtDIY.cc:  if(rd1>=SamAmps) goto loop;
EvtDIY.hh: EvtVector4R _p4Lab[10],_p4CM[10],_p4Hel[10];
EvtDMix.cc://      Copyright (C) 1998      Caltech, UCSB
EvtDMix.cc://    RYD       January 8, 1997       Module created
EvtDMix.cc:  _xpr=getArg(1);
EvtDMix.cc:  //unneeded - lange - may13-02
EvtDMix.cc:    //Will end up here because maxrate multiplies by 1.2
EvtDMix.cc:    pdf*=exp(-1.0*gt);
EvtDMix.hh://      Copyright (C) 1998      Caltech, UCSB
EvtDMix.hh://    DJL/RYD     August 11, 1998         Module created
EvtEtaDalitz.cc://      Copyright (C) 1998      Caltech, UCSB
EvtEtaDalitz.cc://    DJL/RYD     July 23, 1997        Module created
EvtEtaDalitz.cc:  checkSpinDaughter(1,EvtSpinType::SCALAR);
EvtEtaDalitz.cc:  setProbMax(2.1);
EvtEtaDalitz.cc:  double masspim = p->getDaug(1)->mass();
EvtEtaDalitz.cc:  y=(mompi0.get(0)-masspi0)*(3.0/(m_eta-masspip-masspim-masspi0))-1.0;
EvtEtaDalitz.cc:  EvtComplex amp(sqrt(1.0-1.07*y),0.0);
EvtEtaDalitz.hh://      Copyright (C) 1998      Caltech, UCSB
EvtEtaDalitz.hh://    DJL/RYD     August 11, 1998         Module created
EvtFlatQ2.cc://      Copyright (C) 1998      Caltech, UCSB
EvtFlatQ2.cc://    David Cote, U. de Montreal, 11/02/2003    Module created
EvtFlatQ2.cc:  setProbMax(100);
EvtFlatQ2.cc:  checkSpinDaughter(1,EvtSpinType::DIRAC);
EvtFlatQ2.cc:  double pXu_x2=p4Xu.get(1)*p4Xu.get(1);
EvtFlatQ2.cc:  double prob=1/pXu;
EvtFlatQ2.cc:  if(pXu>0.01) setProb(prob);
EvtFlatQ2.hh://      Copyright (C) 1998      Caltech, UCSB
EvtFlatQ2.hh://    David Cote, U. de Montreal, 11/02/2003    Module created
EvtGoityRoberts.cc://      Copyright (C) 1998      Caltech, UCSB
EvtGoityRoberts.cc://    RYD     November 24, 1996        Module created
EvtGoityRoberts.cc:  checkSpinDaughter(1,EvtSpinType::SCALAR);
EvtGoityRoberts.cc:    DecayBDstarpilnuGR(p,getDaug(0),getDaug(1),getDaug(2),getDaug(3));
EvtGoityRoberts.cc:      DecayBDpilnuGR(p,getDaug(0),getDaug(1),getDaug(2),getDaug(3));
EvtGoityRoberts.cc:  pion=pb->getDaug(1);
EvtGoityRoberts.cc:  EvtVector4C l1, l2, et0, et1, et2;
EvtGoityRoberts.cc:  v.set(1.0,0.0,0.0,0.0);       //4-velocity of B meson
EvtGoityRoberts.cc:  vp=(1.0/dstar->getP4().mass())*dstar->getP4();  //4-velocity of D*
EvtGoityRoberts.cc:  EvtComplex dmb(0.0460,-0.5*0.00001);   // B*-B mass splitting ?
EvtGoityRoberts.cc:  EvtComplex dmd(0.1421,-0.5*0.00006);
EvtGoityRoberts.cc:  double alpha1 = -1.430;
EvtGoityRoberts.cc:  double alpha2 = -0.140;
EvtGoityRoberts.cc:  EvtComplex dmt3(0.563,-0.5*0.191); // Mass splitting = dmt - iGamma/2  
EvtGoityRoberts.cc:  EvtComplex dmt1(0.392,-0.5*1.040);
EvtGoityRoberts.cc:  double betap=0.280;      // magic number for meson wave function state "1"
EvtGoityRoberts.cc:  double lambdabar=0.750;  //M(0-,1-) - mQ From Goity&Roberts's code
EvtGoityRoberts.cc:  double xi = exp(lambdabar*lambdabar*(1.0-w*w)/(4*betas*betas));
EvtGoityRoberts.cc:  double xi1= -1.0*sqrt(2.0/3.0)*(
EvtGoityRoberts.cc:       lambdabar*lambdabar*(w*w-1.0)/(4*betas*betas))*
EvtGoityRoberts.cc:       exp(lambdabar*lambdabar*(1.0-w*w)/(4*betas*betas));
EvtGoityRoberts.cc:  double rho1= sqrt(1.0/2.0)*(lambdabar/betas)*
EvtGoityRoberts.cc:               exp(lambdabar*lambdabar*(1.0-w*w)/(2*betasp));
EvtGoityRoberts.cc:  double rho2= sqrt(1.0/8.0)*(lambdabar*lambdabar/(betas*betas))*
EvtGoityRoberts.cc:               exp(lambdabar*lambdabar*(1.0-w*w)/(2*betasd));
EvtGoityRoberts.cc:  //report(INFO,"EvtGen") <<"rho's:"<<rho1<<rho2<<endl;
EvtGoityRoberts.cc:  EvtComplex h1nr,h2nr,h3nr,f1nr,f2nr;
EvtGoityRoberts.cc:  EvtComplex f3nr,f4nr,f5nr,f6nr,knr,g1nr,g2nr,g3nr,g4nr,g5nr;
EvtGoityRoberts.cc:  EvtComplex h1r,h2r,h3r,f1r,f2r,f3r,f4r,f5r,f6r,kr,g1r,g2r,g3r,g4r,g5r;
EvtGoityRoberts.cc:  EvtComplex h1,h2,h3,f1,f2,f3,f4,f5,f6,k,g1,g2,g3,g4,g5;
EvtGoityRoberts.cc:  h1nr = -g*xi*(p4_pi*v)/(f0*mb*md*(EvtComplex(p4_pi*v,0.0)+dmb));
EvtGoityRoberts.cc:  h3nr = -(g*xi/(f0*md))*(1.0/(EvtComplex(p4_pi*v,0.0)+dmb)
EvtGoityRoberts.cc:                         -EvtComplex((1.0+w)/(p4_pi*vp),0.0));
EvtGoityRoberts.cc:  f1nr = -(g*xi/(2*f0*mb))*(1.0/(EvtComplex(p4_pi*v,0.0)+dmb) -
EvtGoityRoberts.cc:         1.0/(EvtComplex(p4_pi*vp,0.0)+dmd));
EvtGoityRoberts.cc:  f2nr = f1nr*mb/md;
EvtGoityRoberts.cc:  f5nr = (g*xi/(2*f0*mb*md))*(EvtComplex(1.0,0.0)
EvtGoityRoberts.cc:  f6nr = (g*xi/(2*f0*mb))*(1.0/(EvtComplex(p4_pi*v,0.0)+dmb)
EvtGoityRoberts.cc:                 -EvtComplex(1.0/(p4_pi*vp),0.0));
EvtGoityRoberts.cc:  g1nr = EvtComplex(0.0);
EvtGoityRoberts.cc:  h1r = -alpha1*rho1*(p4_pi*v)/(f0*mb*md*(EvtComplex(p4_pi*v,0.0)+dmt1)) +
EvtGoityRoberts.cc:        alpha3*xi1*(p4_pi*v)/(f0*mb*md*EvtComplex(p4_pi*v,0.0)+dmt3); 
EvtGoityRoberts.cc:  h2r = -alpha2*(1+w)*rho2/(3*f0*mb*(EvtComplex(p4_pi*v,0.0)+dmt2)) -
EvtGoityRoberts.cc:        alpha3*xi1/(f0*mb*(EvtComplex(p4_pi*v,0.0)+dmt3));
EvtGoityRoberts.cc:  h3r = alpha2*rho2*(1+w)/(3*f0*md*(EvtComplex(p4_pi*v,0.0)+dmt2)) -
EvtGoityRoberts.cc:        alpha3*xi1/(f0*md*(EvtComplex(p4_pi*v,0.0)+dmt3));
EvtGoityRoberts.cc:  f1r = -alpha2*rho2*(w-1.0)/(6*f0*mb*(EvtComplex(p4_pi*v,0.0)+dmt2)) -
EvtGoityRoberts.cc:        alpha3*xi1/(2*f0*mb*(EvtComplex(p4_pi*v,0.0)+dmt3));
EvtGoityRoberts.cc:  f2r = f1r*mb/md;
EvtGoityRoberts.cc:  f5r = alpha1*rho1*(p4_pi*v)/(2*f0*mb*md*(EvtComplex(p4_pi*v,0.0)+dmt1)) +
EvtGoityRoberts.cc:        alpha3*xi1*(p4_pi*v)/(2*f0*mb*md*(EvtComplex(p4_pi*v,0.0)+dmt3));
EvtGoityRoberts.cc:  f6r = alpha2*rho2*(w-1.0)/(6*f0*mb*(EvtComplex(p4_pi*v,0.0)+dmt2)) +
EvtGoityRoberts.cc:        alpha3*xi1/(2*f0*mb*(EvtComplex(p4_pi*v,0.0)+dmt3));
EvtGoityRoberts.cc:  kr = -alpha1*rho1*(w-1.0)*(p4_pi*v)/(2*f0*(EvtComplex(p4_pi*v,0.0)+dmt1)) -
EvtGoityRoberts.cc:       alpha2*rho2*(w-1.0)*(p4_pi*(vp-w*v))
EvtGoityRoberts.cc:       alpha3*xi1*(p4_pi*(vp-w*v))/(2*f0*(EvtComplex(p4_pi*v,0.0)+dmt3));
EvtGoityRoberts.cc:  g1r = EvtComplex(0.0);
EvtGoityRoberts.cc:  h1 = h1nr + h1r;
EvtGoityRoberts.cc:  f1 = f1nr + f1r;
EvtGoityRoberts.cc:  g1 = g1nr + g1r;
EvtGoityRoberts.cc:  g_metric.setdiag(1.0,-1.0,-1.0,-1.0);
EvtGoityRoberts.cc:    omega=EvtComplex(0.0,0.5)*dual(h1*mb*md*directProd(v,vp)+
EvtGoityRoberts.cc:        f1*mb*directProd(v,p4_pi)+f2*md*directProd(vp,p4_pi)+
EvtGoityRoberts.cc:                              (g1*p4_pi+g2*mb*v))+
EvtGoityRoberts.cc:   l1=EvtLeptonVACurrent(lepton->spParent(0),neutrino->spParentNeutrino());
EvtGoityRoberts.cc:   l2=EvtLeptonVACurrent(lepton->spParent(1),neutrino->spParentNeutrino());
EvtGoityRoberts.cc:      omega=EvtComplex(0.0,-0.5)*dual(h1*mb*md*directProd(v,vp)+
EvtGoityRoberts.cc:        f1*mb*directProd(v,p4_pi)+f2*md*directProd(vp,p4_pi)+
EvtGoityRoberts.cc:                              (g1*p4_pi+g2*mb*v))+
EvtGoityRoberts.cc:   l1=EvtLeptonVACurrent(neutrino->spParentNeutrino(),lepton->spParent(0));
EvtGoityRoberts.cc:   l2=EvtLeptonVACurrent(neutrino->spParentNeutrino(),lepton->spParent(1));
EvtGoityRoberts.cc:  et1=omega.cont2( dstar->epsParent(1).conj() );
EvtGoityRoberts.cc:  vertex(0,0,l1.cont(et0));
EvtGoityRoberts.cc:  vertex(0,1,l2.cont(et0));
EvtGoityRoberts.cc:  vertex(1,0,l1.cont(et1));
EvtGoityRoberts.cc:  vertex(1,1,l2.cont(et1));
EvtGoityRoberts.cc:  vertex(2,0,l1.cont(et2));
EvtGoityRoberts.cc:  vertex(2,1,l2.cont(et2));
EvtGoityRoberts.cc:  pion=pb->getDaug(1);
EvtGoityRoberts.cc:  EvtVector4C l1, l2, et0, et1, et2;
EvtGoityRoberts.cc:  v.set(1.0,0.0,0.0,0.0);       //4-velocity of B meson
EvtGoityRoberts.cc:  vp=(1.0/d->getP4().mass())*d->getP4();  //4-velocity of D
EvtGoityRoberts.cc:  EvtComplex dmb(0.0460,-0.5*0.00001);   //B mass splitting ?
EvtGoityRoberts.cc:  double alpha1 = -1.430;
EvtGoityRoberts.cc:  double alpha2 = -0.140;
EvtGoityRoberts.cc:  EvtComplex dmt3(0.563,-0.5*0.191); // Mass splitting = dmt - iGamma/2  
EvtGoityRoberts.cc:  EvtComplex dmt1(0.392,-0.5*1.040);
EvtGoityRoberts.cc:  double betap=0.280;      // magic number for meson wave function state "1"
EvtGoityRoberts.cc:  double lambdabar=0.750;  //M(0-,1-) - mQ From Goity&Roberts's code
EvtGoityRoberts.cc:  double xi = exp(lambdabar*lambdabar*(1.0-w*w)/(4*betas*betas));
EvtGoityRoberts.cc:  double xi1= -1.0*sqrt(2.0/3.0)*(lambdabar*lambdabar*(w*w-1.0)/(4*betas*betas))*
EvtGoityRoberts.cc:              exp(lambdabar*lambdabar*(1.0-w*w)/(4*betas*betas));
EvtGoityRoberts.cc:  double rho1= sqrt(1.0/2.0)*(lambdabar/betas)*
EvtGoityRoberts.cc:               exp(lambdabar*lambdabar*(1.0-w*w)/(2*betasp));
EvtGoityRoberts.cc:  double rho2= sqrt(1.0/8.0)*(lambdabar*lambdabar/(betas*betas))*
EvtGoityRoberts.cc:               exp(lambdabar*lambdabar*(1.0-w*w)/(2*betasd));
EvtGoityRoberts.cc:  EvtComplex h,a1,a2,a3;
EvtGoityRoberts.cc:  EvtComplex hnr,a1nr,a2nr,a3nr;
EvtGoityRoberts.cc:  EvtComplex hr,a1r,a2r,a3r;
EvtGoityRoberts.cc:  hnr = g*xi*(1.0/(EvtComplex(p4_pi*v,0.0)+dmb))/(2*f0*mb*md);
EvtGoityRoberts.cc:  a1nr= -1.0*g*xi*(1+w)*(1.0/(EvtComplex(p4_pi*v,0.0)+dmb))/(2*f0);
EvtGoityRoberts.cc:  hr = alpha2*rho2*(w-1)*(1.0/(EvtComplex(p4_pi*v,0.0)+dmt2))/(6*f0*mb*md) +
EvtGoityRoberts.cc:       alpha3*xi1*(1.0/(EvtComplex(p4_pi*v,0.0)+dmt3))/(2*f0*mb*md);
EvtGoityRoberts.cc:  a1r= -1.0*alpha2*rho2*(w*w-1)*(1.0/(EvtComplex(p4_pi*v,0.0)+dmt2))/(6*f0) -
EvtGoityRoberts.cc:       alpha3*xi1*(1+w)*(1.0/(EvtComplex(p4_pi*v,0.0)+dmt3))/(2*f0);
EvtGoityRoberts.cc:  a2r= alpha1*rho1*((p4_pi*v)/(EvtComplex(p4_pi*v,0.0)+dmt1))/(2*f0*mb) +
EvtGoityRoberts.cc:       alpha3*xi1*((p4_pi*(v+vp))/(EvtComplex(p4_pi*v,0.0)+dmt3))/(2*f0*mb);
EvtGoityRoberts.cc:  a3r= -1.0*alpha1*rho1*((p4_pi*v)/(EvtComplex(p4_pi*v,0.0)+dmt1))/(2*f0*md) -
EvtGoityRoberts.cc:  a1=a1nr+a1r;
EvtGoityRoberts.cc:    omega=EvtComplex(0.0,-1.0)*h*mb*md*dual(directProd(vp,p4_pi)).cont2(v)+
EvtGoityRoberts.cc:                 a1*p4_pi+a2*mb*v+a3*md*vp;
EvtGoityRoberts.cc:    l1=EvtLeptonVACurrent(
EvtGoityRoberts.cc:             lepton->spParent(1),neutrino->spParentNeutrino());
EvtGoityRoberts.cc:     omega=EvtComplex(0.0,1.0)*h*mb*md*dual(directProd(vp,p4_pi)).cont2(v)+
EvtGoityRoberts.cc:                 a1*p4_pi+a2*mb*v+a3*md*vp;
EvtGoityRoberts.cc:     l1=EvtLeptonVACurrent(
EvtGoityRoberts.cc:              neutrino->spParentNeutrino(),lepton->spParent(1));
EvtGoityRoberts.cc:  vertex(0,l1*omega);
EvtGoityRoberts.cc:  vertex(1,l2*omega);
EvtGoityRoberts.hh://      Copyright (C) 1998      Caltech, UCSB
EvtGoityRoberts.hh://    DJL/RYD     August 11, 1998         Module created
EvtHelAmp.cc://      Copyright (C) 1998      Caltech, UCSB
EvtHelAmp.cc://    RYD       March 14, 1999       Module created
EvtHelAmp.cc:  int _nC=EvtSpinType::getSpinStates(EvtPDL::getSpinType(getDaug(1)));
EvtHelAmp.cc:  int _JC2=EvtSpinType::getSpin2(EvtPDL::getSpinType(getDaug(1)));
EvtHelAmp.cc://   fillHelicity(_lambdaC2,_nC,_JC2,EvtPDL::getSpinType(getDaug(1)));//////////////////
EvtHelAmp.cc:  fillHelicity(_lambdaC2,_nC,_JC2,getDaug(1));/////////////////////////////////////////////
EvtHelAmp.cc:	_HBC[ib][ic]=getArg(argcounter)*exp(EvtComplex(0.0,getArg(argcounter+1)));;
EvtHelAmp.cc:				EvtPDL::getSpinType(getDaug(1)),////////////////////////////////////////
EvtHelAmp.cc:    lambda2[1]=-2;
EvtHelAmp.cc:  if (n==1&&J2==1) {////////////////////////////////////////////////////////
EvtHelAmp.cc:      lambda2[0]=-1;////////////////////////////////////////////////////////
EvtHelAmp.cc:      lambda2[0]=1;///////////////////////////////////////////////////////
EvtHelAmp.cc:  assert(n==J2+1);
EvtHelAmp.cc:    lambda2[i]=n-i*2-1;
EvtHelAmp.hh://      Copyright (C) 1998      Caltech, UCSB
EvtHelAmp.hh://    RYD      March 14, 1999         Module created
EvtHelPPJ.cc:// using the chiral effective formula: Z.Phys.C73,541 by Mannel 
EvtHelPPJ.cc:  checkSpinDaughter(1,EvtSpinType::SCALAR);
EvtHelPPJ.cc:  EvtParticle *l1, *l2,*l3;
EvtHelPPJ.cc:  l1 = p->getDaug(0);
EvtHelPPJ.cc:  l2 = p->getDaug(1);
EvtHelPPJ.cc:  EvtVector4R VP4 =l1->getP4(); //Vector Daughter
EvtHelPPJ.cc:  EvtVector4R S1P4=l2->getP4(); //Scalar Daughter
EvtHelPPJ.cc:  EvtVector4R PRP4=S1P4+S2P4+VP4;  //Parent Momentum
EvtHelPPJ.cc:  PRP4.set(1,0);
EvtHelPPJ.cc:  double mpipi2=(S1P4+S2P4).mass2();
EvtHelPPJ.cc:  double e1pi  =S1P4.get(0);  
EvtHelPPJ.cc:  double g1    =-0.11;
EvtHelPPJ.cc:  double mpi   =0.1396;
EvtHelPPJ.cc:  double amp1  =(mpipi2-2*mpi*mpi)*g0/2+g1*e1pi*e2pi;
EvtHelPPJ.cc:  double amp0  =amp1*epsi/mpsi;
EvtHelPPJ.cc:  double tht=angles.getHelAng(1);
EvtHelPPJ.cc:  vertex(0,0,Djmn(1, 1, 1,phi,tht,gamma)*amp1);
EvtHelPPJ.cc:  vertex(0,1,Djmn(1, 1,-1,phi,tht,gamma)*amp1);
EvtHelPPJ.cc:  vertex(0,2,Djmn(1, 1, 0,phi,tht,gamma)*amp0);
EvtHelPPJ.cc:  vertex(1,0,Djmn(1,-1, 1,phi,tht,gamma)*amp1);
EvtHelPPJ.cc:  vertex(1,1,Djmn(1,-1,-1,phi,tht,gamma)*amp1);
EvtHelPPJ.cc:  vertex(1,2,Djmn(1,-1, 0,phi,tht,gamma)*amp0);
EvtHelPPJ.cc:  vertex(2,0,Djmn(1, 0, 1,phi,tht,gamma)*amp1);
EvtHelPPJ.cc:  vertex(2,1,Djmn(1, 0,-1,phi,tht,gamma)*amp1);
EvtHelPPJ.cc:  vertex(2,2,Djmn(1, 0, 0,phi,tht,gamma)*amp0);
EvtHQET2.cc://      Copyright (C) 1998      Caltech, UCSB
EvtHQET2.cc://   Lange Nov9/01 adding Dlnu and possible (w-1)^2 term
EvtHQET2.cc://    Marco Bomben     March 10, 2003       Module created
EvtHQET2.cc:lnum = getDaug(1);
EvtHQET2.cc:  checkSpinDaughter(1,EvtSpinType::DIRAC);
EvtHQET2.cc:  EvtSpinType::spintype d1type = EvtPDL::getSpinType(getDaug(0));
EvtHQET2.cc:  if ( d1type==EvtSpinType::SCALAR) {
EvtHQET2.cc:    if ( getNArg()==2 ) {hqetffmodel = new EvtHQET2FF(getArg(0),getArg(1)); 
EvtHQET2.cc:  else if ( d1type==EvtSpinType::VECTOR) {
EvtHQET2.cc:    if ( getNArg()==4 ){ hqetffmodel = new EvtHQET2FF(getArg(0),getArg(1),getArg(2),getArg(3));
EvtHQET2FF.cc://    Marco Bomben     March 10, 2003        Module created
EvtHQET2FF.cc:EvtHQET2FF::EvtHQET2FF(double hqetrho2, double hqetha1_1 , double hqetr1_1, double hqetr2_1) {
EvtHQET2FF.cc:  r1_1 = hqetr1_1;
EvtHQET2FF.cc:  r2_1 = hqetr2_1;
EvtHQET2FF.cc:  ha1_1 = hqetha1_1;
EvtHQET2FF.cc:EvtHQET2FF::EvtHQET2FF(double hqetrho2, double hqetv1_1) {
EvtHQET2FF.cc:  v1_1 = hqetv1_1;
EvtHQET2FF.cc:  // I.Caprini, L.Lelluch, M.Neubert, Nucl. Phys. B 530,153(1998)
EvtHQET2FF.cc:  const double z = (sqrt(w+1)-sqrt(2.))/(sqrt(w+1)+sqrt(2.));
EvtHQET2FF.cc:  double v1 = v1_1*(1.- 8.*rho2*z + (51.*rho2-10.)*z*z - (252.*rho2-84.)*z*z*z)
EvtHQET2FF.cc:  *f0p=v1;
EvtHQET2FF.cc:			    double t, double mass, double *a1f,
EvtHQET2FF.cc:  // I.Caprini, L.Lelluch, M.Neubert, Nucl. Phys. B 530,153(1998)
EvtHQET2FF.cc:  const double z = (sqrt(w+1)-sqrt(2.))/(sqrt(w+1)+sqrt(2.));
EvtHQET2FF.cc:  double ha1 =ha1_1*(1.- 8.*rho2*z + (53.*rho2-15.)*z*z - (231.*rho2-91.)*z*z*z);
EvtHQET2FF.cc:  double r1 = r1_1-0.12*(w-1)+0.05*(w-1)*(w-1);
EvtHQET2FF.cc:  double r2 = r2_1+0.11*(w-1)-0.06*(w-1)*(w-1);
EvtHQET2FF.cc:  *a1f = (1.0 - (t/((mb+mass)*(mb+mass))))*ha1;
EvtHQET2FF.cc:  *a1f = (*a1f)/rstar;
EvtHQET2FF.cc:  *a2f = (r2/rstar)*ha1;
EvtHQET2FF.cc:  *vf = (r1/rstar)*ha1;
EvtHQET2FF.hh://    Marco Bomben   March 10, 2003         Module created
EvtHQET2FF.hh:  EvtHQET2FF(double hqetrho2, double hqetha1_1, double hqetr1_1, double hqetr2_1);
EvtHQET2FF.hh:  EvtHQET2FF(double hqetrho2, double hqetv1_1);
EvtHQET2FF.hh:                       double t, double mass, double *a1f,
EvtHQET2FF.hh:  double r1_1;
EvtHQET2FF.hh:  double r2_1;
EvtHQET2FF.hh:  double ha1_1;
EvtHQET2FF.hh:  double v1_1;
EvtHQET2.hh://    Marco Bomben   March 11, 2003         Module created
EvtHQET.cc://      Copyright (C) 1998      Caltech, UCSB
EvtHQET.cc://   Lange Nov9/01 adding Dlnu and possible (w-1)^2 term
EvtHQET.cc://    DJL     April 20, 1998        Module created
EvtHQET.cc:lnum = getDaug(1);
EvtHQET.cc:  checkSpinDaughter(1,EvtSpinType::DIRAC);
EvtHQET.cc:  EvtSpinType::spintype d1type = EvtPDL::getSpinType(getDaug(0));
EvtHQET.cc:  if ( d1type==EvtSpinType::SCALAR) {
EvtHQET.cc:    checkNArg(1,2);
EvtHQET.cc:    if ( getNArg()==1 ) hqetffmodel = new EvtHQETFF(getArg(0));
EvtHQET.cc:    else hqetffmodel = new EvtHQETFF(getArg(0),getArg(1));
EvtHQET.cc:  else if ( d1type==EvtSpinType::VECTOR) {
EvtHQET.cc:    if ( getNArg()==3 ) hqetffmodel = new EvtHQETFF(getArg(0),getArg(1),getArg(2));
EvtHQET.cc:    else hqetffmodel = new EvtHQETFF(getArg(0),getArg(1),getArg(2),getArg(3));
EvtHQETFF.cc://      Copyright (C) 1998      Caltech, UCSB
EvtHQETFF.cc://    DJL     April 17, 1998        Module created
EvtHQETFF.cc:EvtHQETFF::EvtHQETFF(double hqetrho2, double hqetr1, double hqetr2, double quadTerm) {
EvtHQETFF.cc:  r1 = hqetr1;
EvtHQETFF.cc:  double ha1 = 1-rho2*(w-1)+c*(w-1)*(w-1);
EvtHQETFF.cc:  *f0p=ha1;
EvtHQETFF.cc:			    double t, double mass, double *a1f,
EvtHQETFF.cc:  double ha1 = 1-rho2*(w-1);
EvtHQETFF.cc:  *a1f = (1.0 - (t/((mb+mass)*(mb+mass))))*ha1;
EvtHQETFF.cc:  *a1f = (*a1f)/rstar;
EvtHQETFF.cc:  *a2f = (r2/rstar)*ha1;
EvtHQETFF.cc:  *vf = (r1/rstar)*ha1;
EvtHQETFF.hh://      Copyright (C) 1998      Caltech, UCSB
EvtHQETFF.hh://    DJL     April 11, 1998         Module created
EvtHQETFF.hh:  EvtHQETFF(double hqetrho2, double hqetr1, double hqetr2, double hqetc=0.);
EvtHQETFF.hh:                       double t, double mass, double *a1f,
EvtHQETFF.hh:  double r1;
EvtHQET.hh://      Copyright (C) 1998      Caltech, UCSB
EvtHQET.hh://    DJL     April 20, 1998         Module created
EvtHypNonLepton.cc:// Desription: Routine to implement Hyperon(s=1/2) -> Baryon(s=1/2) + Scalar decays accroding to
EvtHypNonLepton.cc:    report(INFO ,"EvtGen") << "  1. Decay asymmetry parameter - alpha" << std::endl;
EvtHypNonLepton.cc:  if(EvtSpinType::getSpin2(EvtPDL::getSpinType(getParentId()))!=1){
EvtHypNonLepton.cc:  if(EvtSpinType::getSpin2(EvtPDL::getSpinType(getDaug(0)))!=1){
EvtHypNonLepton.cc:  if(EvtSpinType::getSpin2(EvtPDL::getSpinType(getDaug(1)))!=0){
EvtHypNonLepton.cc:    report(ERROR,"EvtGen") << " ERROR: EvtHypNonLepton generator expected the second child to be scalar particle, but found " << EvtSpinType::getSpin2(EvtPDL::getSpinType(getDaug(1))) << " spin degrees of freedom" << std::endl;
EvtHypNonLepton.cc:  m_phi   = getArg(1)*EvtConst::pi/180;
EvtHypNonLepton.cc:  double p,M,m1,m2;
EvtHypNonLepton.cc:  m1 = EvtPDL::getMass(getDaug(0));
EvtHypNonLepton.cc:  m2 = EvtPDL::getMass(getDaug(1));
EvtHypNonLepton.cc:  if(m1+m2>=M){
EvtHypNonLepton.cc:    report(ERROR,"EvtGen") << " ERROR: EvtHypNonLepton found impossible decay: " << M << " --> " << m1 << " + " << m2 << " GeV\n" << std::endl;
EvtHypNonLepton.cc:  p = sqrt(M*M-(m1+m2)*(m1+m2))*sqrt(M*M-(m1-m2)*(m1-m2))/2./M;
EvtHypNonLepton.cc:  beta = sqrt(1.-m_alpha*m_alpha)*sin(m_phi);
EvtHypNonLepton.cc:  gamma = sqrt(1.-m_alpha*m_alpha-beta*beta);
EvtHypNonLepton.cc:  p_to_s = sqrt((1.-gamma)/(1.+gamma));
EvtHypNonLepton.cc:  m_B_to_A = p_to_s*(m1+sqrt(p*p+m1*m1))/p*EvtComplex(cos(delta),sin(delta));
EvtHypNonLepton.cc:  double maxProb,m1,m2,M,p;
EvtHypNonLepton.cc:  m1=EvtPDL::getMass(getDaug(0));
EvtHypNonLepton.cc:  m2=EvtPDL::getMass(getDaug(1));
EvtHypNonLepton.cc:  if(m1+m2>=M){
EvtHypNonLepton.cc:    report(ERROR,"EvtGen") << " ERROR: EvtHypNonLepton found impossible decay: " << M << " --> " << m1 << " + " << m2 << " GeV\n" << std::endl;
EvtHypNonLepton.cc:  p=sqrt(M*M-(m1+m2)*(m1+m2))*sqrt(M*M-(m1-m2)*(m1-m2))/2/M;
EvtHypNonLepton.cc:  maxProb=16*M*(sqrt(p*p+m1*m1)+m1+abs(m_B_to_A)*abs(m_B_to_A)*(sqrt(p*p+m1*m1)-m1));
EvtHypNonLepton.cc:  //G_F  = 1.16637e-5;
EvtHypNonLepton.cc:  //M_pi = 0.13957;
EvtHypNonLepton.hh:// Desription: Routine to implement Hyperon(s=1/2) -> Baryon(s=1/2) + Scalar decays accroding to
EvtHypWK.cc:   checkSpinDaughter(1,EvtSpinType::SCALAR);
EvtHypWK.cc://  checkSpinDaughter(1,EvtSpinType::DIRAC);
EvtHypWK.cc:  count+=1;
EvtHypWK.cc:  EvtParticle *l1, *l2;
EvtHypWK.cc:  l1 = p->getDaug(0);
EvtHypWK.cc:  l2 = p->getDaug(1);
EvtHypWK.cc:  EvtVector4R DRP4=l1->getP4(); //Dirac Daughter
EvtHypWK.cc:  double tht=angles.getHelAng(1);
EvtHypWK.cc:  EvtVector4R pDaug=l1->getP4();
EvtHypWK.cc:  double m=l1->mass();
EvtHypWK.cc:  EvtId p1,d1,d2;
EvtHypWK.cc:  p1=p->getId();
EvtHypWK.cc:  d1=l1->getId();
EvtHypWK.cc:  if(p1==XP){ alpha=-0.46;phi=-2.1; }
EvtHypWK.cc:    else if(p1==XM){alpha=0.46;phi=-2.1;}
EvtHypWK.cc:    else if(p1==X0P){alpha=-0.41;phi=21.0;}
EvtHypWK.cc:    else if(p1==X0M){alpha=0.41;phi=21.0; }
EvtHypWK.cc:    else if(p1==LP){alpha=0.64;phi=-6.5; }
EvtHypWK.cc:    else if(p1==LM){ alpha=-0.64;phi=-6.5; }
EvtHypWK.cc:    else if(p1==SMP){alpha=-0.07;phi=10.0;}
EvtHypWK.cc:    else if(p1==SMM){alpha=0.07;phi=10.0; }
EvtHypWK.cc:    else if(p1==SPP){                                
EvtHypWK.cc:      if (d1==PP){  alpha=-0.98;phi=36.0; }
EvtHypWK.cc:      else if(d1==NP){ alpha=0.07;phi=167.0; }
EvtHypWK.cc:    else if(p1==SPM){
EvtHypWK.cc:      if (d1==PM){  alpha=0.98;phi=36.0; }
EvtHypWK.cc:      else if(d1==NM){ alpha=-0.07;phi=167.0; }
EvtHypWK.cc:  double FP=sqrt((1+alpha)/2.);
EvtHypWK.cc:  double FM=sqrt((1-alpha)/2.);
EvtHypWK.cc:  vertex(0,1,Djmn(0.5, 0.5,-0.5,ph,tht,gmm)*FM);
EvtHypWK.cc:  vertex(1,0,Djmn(0.5,-0.5, 0.5,ph,tht,gmm)*FP);
EvtHypWK.cc:  vertex(1,1,Djmn(0.5,-0.5,-0.5,ph,tht,gmm)*FM);
EvtHypWK.cc-ok://      Copyright (C) 1998      Caltech, UCSB
EvtHypWK.cc-ok://              or generally, two spin 1/2 particles.
EvtHypWK.cc-ok://    RYD       January 17, 1997       Module created
EvtHypWK.cc-ok:   checkSpinDaughter(1,EvtSpinType::SCALAR);
EvtHypWK.cc-ok://  checkSpinDaughter(1,EvtSpinType::DIRAC);
EvtHypWK.cc-ok:  EvtParticle *l1, *l2;
EvtHypWK.cc-ok:  l1 = p->getDaug(0);
EvtHypWK.cc-ok:  l2 = p->getDaug(1);
EvtHypWK.cc-ok:  EvtComplex P11,P12,P21,P22,R11,R12,R21,R22;
EvtHypWK.cc-ok:  R11=EvtLeptonPCurrent(l1->spParent(0),p->spParent(0));
EvtHypWK.cc-ok:  R12=EvtLeptonPCurrent(l1->spParent(0),p->spParent(1));
EvtHypWK.cc-ok:  R21=EvtLeptonPCurrent(l1->spParent(1),p->spParent(0));
EvtHypWK.cc-ok:  R22=EvtLeptonPCurrent(l1->spParent(1),p->spParent(1));
EvtHypWK.cc-ok:  P11=EvtLeptonSCurrent(l1->spParent(0),p->spParent(0));
EvtHypWK.cc-ok:  P12=EvtLeptonSCurrent(l1->spParent(0),p->spParent(1));
EvtHypWK.cc-ok:  P21=EvtLeptonSCurrent(l1->spParent(1),p->spParent(0));
EvtHypWK.cc-ok:  P22=EvtLeptonSCurrent(l1->spParent(1),p->spParent(1));
EvtHypWK.cc-ok:  EvtVector4R pDaug=l1->getP4();
EvtHypWK.cc-ok:  double m=l1->mass();
EvtHypWK.cc-ok:  EvtId p1,d1,d2;
EvtHypWK.cc-ok:  p1=p->getId();
EvtHypWK.cc-ok:  d1=l1->getId();
EvtHypWK.cc-ok:  if((p1==XP)||(p1==XM)){
EvtHypWK.cc-ok:   alpha=-0.46;phi=-2.1;
EvtHypWK.cc-ok:  else if((p1==X0P)||(p1==X0M)){ 
EvtHypWK.cc-ok:   alpha=-0.41;phi=21.0;
EvtHypWK.cc-ok:  else if((p1==SMP)||(p1==SMM)){
EvtHypWK.cc-ok:   alpha=-0.07;phi=10.0;
EvtHypWK.cc-ok:  else if((p1==SPP)||(p1==SPM)){
EvtHypWK.cc-ok:    if ((d1==PP)||(d1==PM)){
EvtHypWK.cc-ok:    else if((d1==NP)||(d1==NM)){
EvtHypWK.cc-ok:       alpha=0.07;phi=167.0;
EvtHypWK.cc-ok:   else if((p1==LP)||(p1==LM)){
EvtHypWK.cc-ok:    if (p1==LP){
EvtHypWK.cc-ok:    else if(p1==LM){
EvtHypWK.cc-ok: ga=sqrt((1-alpha*alpha)*cos(phi)*cos(phi));
EvtHypWK.cc-ok:  cons=((m+sqrt(m2+p3*p3))/p3)*sqrt((1-ga)/(1+ga))*exp(EvtComplex(0,theta));
EvtHypWK.cc-ok:  double norm=1.0/sqrt(2*M2+4*m2-4*m2*m2/M2);
EvtHypWK.cc-ok:  //vertex(0,0,norm*(P11+cons*R11));
EvtHypWK.cc-ok:  //vertex(0,1,norm*(P12+cons*R12));
EvtHypWK.cc-ok:  vertex(1,0,norm*(P21+cons*R21));
EvtHypWK.cc-ok:  vertex(1,1,norm*(P22+cons*R22));
EvtHypWK.hh-ok://      Copyright (C) 1998      Caltech, UCSB
EvtHypWK.hh-ok://    DJL/RYD     August 11, 1998         Module created
EvtInclusiveGenRandom.cc://     Rlu in lund_crm1_evtgen.F as EvtGen 
EvtIntervalDecayAmp.hh://      $Id: getName,v 1.1 2009/12/18 08:43:52 pingrg Exp $
EvtIntervalDecayAmp.hh://      Copyright (C) 1998 Caltech, UCSB
EvtIntervalDecayAmp.hh://      Alexei Dvoretskii, Caltech, 2001-2002.
EvtIntervalDecayAmp.hh:      double factor = 1.2; // increase maximum probability by 20%
EvtISGW2.cc://      Copyright (C) 1998      Caltech, UCSB
EvtISGW2.cc://    DJL/RYD     September 25, 1996         Module created
EvtISGW2.cc:  static EvtId D1P1P=EvtPDL::getId("D_1+");
EvtISGW2.cc:  static EvtId D1P1N=EvtPDL::getId("D_1-");
EvtISGW2.cc:  static EvtId D1P10=EvtPDL::getId("D_10");
EvtISGW2.cc:  static EvtId D1P1B=EvtPDL::getId("anti-D_10");
EvtISGW2.cc:  static EvtId D3P1P=EvtPDL::getId("D'_1+");
EvtISGW2.cc:  static EvtId D3P1N=EvtPDL::getId("D'_1-");
EvtISGW2.cc:  static EvtId D3P10=EvtPDL::getId("D'_10");
EvtISGW2.cc:  static EvtId D3P1B=EvtPDL::getId("anti-D'_10");
EvtISGW2.cc:  static EvtId D21S0P=EvtPDL::getId("D(2S)+");
EvtISGW2.cc:  static EvtId D21S0N=EvtPDL::getId("D(2S)-");
EvtISGW2.cc:  static EvtId D21S00=EvtPDL::getId("D(2S)0");
EvtISGW2.cc:  static EvtId D21S0B=EvtPDL::getId("anti-D(2S)0");
EvtISGW2.cc:  static EvtId D23S1P=EvtPDL::getId("D*(2S)+");
EvtISGW2.cc:  static EvtId D23S1N=EvtPDL::getId("D*(2S)-");
EvtISGW2.cc:  static EvtId D23S10=EvtPDL::getId("D*(2S)0");
EvtISGW2.cc:  static EvtId D23S1B=EvtPDL::getId("anti-D*(2S)0");
EvtISGW2.cc:  static EvtId A1P=EvtPDL::getId("a_1+");
EvtISGW2.cc:  static EvtId A1M=EvtPDL::getId("a_1-");
EvtISGW2.cc:  static EvtId A10=EvtPDL::getId("a_10");
EvtISGW2.cc:  static EvtId B1P=EvtPDL::getId("b_1+");
EvtISGW2.cc:  static EvtId B1M=EvtPDL::getId("b_1-");
EvtISGW2.cc:  static EvtId B10=EvtPDL::getId("b_10");
EvtISGW2.cc:  static EvtId H1=EvtPDL::getId("h_1");
EvtISGW2.cc:  static EvtId H1PR=EvtPDL::getId("h'_1");
EvtISGW2.cc:  static EvtId F1=EvtPDL::getId("f_1");
EvtISGW2.cc:  static EvtId F1PR=EvtPDL::getId("f'_1");
EvtISGW2.cc:  static EvtId K1P=EvtPDL::getId("K_1+");
EvtISGW2.cc:  static EvtId K1M=EvtPDL::getId("K_1-");
EvtISGW2.cc:  static EvtId K10=EvtPDL::getId("K_10");
EvtISGW2.cc:  static EvtId K1B=EvtPDL::getId("anti-K_10");
EvtISGW2.cc:  static EvtId K1STP=EvtPDL::getId("K'_1+");
EvtISGW2.cc:  static EvtId K1STM=EvtPDL::getId("K'_1-");
EvtISGW2.cc:  static EvtId K1ST0=EvtPDL::getId("K'_10");
EvtISGW2.cc:  static EvtId K1STB=EvtPDL::getId("anti-K'_10");
EvtISGW2.cc:  static EvtId DS1P=EvtPDL::getId("D_s1+");//////////////////////////////////////
EvtISGW2.cc:  static EvtId DS1M=EvtPDL::getId("D_s1-");////////////////////////////////////////
EvtISGW2.cc:  static EvtId DPS1P=EvtPDL::getId("D'_s1+");//////////////////////////////////////
EvtISGW2.cc:  static EvtId DPS1M=EvtPDL::getId("D'_s1-");////////////////////////////////////
EvtISGW2.cc:lnum = getDaug(1);
EvtISGW2.cc:       setProbMax(10000.0);
EvtISGW2.cc:  if ( mesnum==D1P1P||mesnum==D1P1N||mesnum==D1P10||mesnum==D1P1B||mesnum==DS1P||mesnum==DS1M) {/////////////////////////////////////////////////////////
EvtISGW2.cc:      setProbMax(1300.0);////////////////////////////////////////////////////////
EvtISGW2.cc:  if ( mesnum==D3P1P||mesnum==D3P1N||mesnum==D3P10||mesnum==D3P1B||mesnum==DS0STP||mesnum==DS0STM) {//////////////////////////////////////////////
EvtISGW2.cc:  if ( mesnum==D3P0P||mesnum==D3P0N||mesnum==D3P00||mesnum==D3P0B||mesnum==DPS1P||mesnum==DPS1M) {///////////////////////////////////////////////////////////////////
EvtISGW2.cc:  if ( mesnum==D21S0P||mesnum==D21S0N||mesnum==D21S00||mesnum==D21S0B) {
EvtISGW2.cc:       setProbMax(16.0);
EvtISGW2.cc:  if ( mesnum==D23S1P||mesnum==D23S1N||mesnum==D23S10||mesnum==D23S1B) {
EvtISGW2.cc:       setProbMax(1200.0);
EvtISGW2.cc:       setProbMax(1150.0);
EvtISGW2.cc:       setProbMax(1800.0);
EvtISGW2.cc:       setProbMax(1900.0);
EvtISGW2.cc:  if ( mesnum==B1P||mesnum==B1M||mesnum==B10) {
EvtISGW2.cc:       setProbMax(1700.0);
EvtISGW2.cc:  if ( mesnum==A1P||mesnum==A1M||mesnum==A10) {
EvtISGW2.cc:       setProbMax(1200.0);
EvtISGW2.cc:       setProbMax(1000.0);
EvtISGW2.cc:  if ( mesnum==H1) {
EvtISGW2.cc:  if ( mesnum==H1PR) {
EvtISGW2.cc:       setProbMax(1400.0);
EvtISGW2.cc:       setProbMax(1500.0);
EvtISGW2.cc:       setProbMax(1100.0);
EvtISGW2.cc:       setProbMax(1100.0);
EvtISGW2.cc:  if ( mesnum==F1) {
EvtISGW2.cc:  if ( mesnum==F1PR) {
EvtISGW2.cc:       setProbMax(1700.0);
EvtISGW2.cc:       setProbMax(120.0);
EvtISGW2.cc:       setProbMax(120.0);
EvtISGW2.cc:       setProbMax(1600.0);
EvtISGW2.cc:       setProbMax(1400.0) ;
EvtISGW2.cc:       mesnum==K1P||mesnum==K1M||mesnum==K1STP||mesnum==K1STM) {//////////////////////////
EvtISGW2.cc:      setProbMax(1000.0);////////////////////////////////////////////
EvtISGW2.cc:      setProbMax(10000.0);////////////////////////////////////////////////////////
EvtISGW2.cc:       setProbMax(110.0);
EvtISGW2.cc:  if ( mesnum==K1STP||mesnum==K1STM||mesnum==K1ST0||mesnum==K1STB) {
EvtISGW2.cc:  if ( mesnum==K1P||mesnum==K1M||mesnum==K10||mesnum==K1B) {
EvtISGW2.cc:       setProbMax( 100.0);
EvtISGW2.cc:       setProbMax( 135.0);
EvtISGW2.cc:      //Lange - Oct 26,2001 - increasing from 0.75 to 
EvtISGW2.cc:      setProbMax(1.0);/////////////////////////////////////////////////////////
EvtISGW2.cc:      setProbMax( 100.0) ;//////////////////////////////////////////////////////
EvtISGW2.cc:      setProbMax(1.0);//////////////////////////////////////////////////////////
EvtISGW2.cc:   setProbMax(1000.0 );//////////////////////////////////////////////////////////
EvtISGW2.cc:  checkSpinDaughter(1,EvtSpinType::DIRAC);
EvtISGW2FF.cc://      Copyright (C) 1998      Caltech, UCSB
EvtISGW2FF.cc://    DJL     April 17, 1998        Module created
EvtISGW2FF.cc:  static EvtId D1P1P=EvtPDL::getId("D_1+");
EvtISGW2FF.cc:  static EvtId D1P1N=EvtPDL::getId("D_1-");
EvtISGW2FF.cc:  static EvtId D1P10=EvtPDL::getId("D_10");
EvtISGW2FF.cc:  static EvtId D1P1B=EvtPDL::getId("anti-D_10");
EvtISGW2FF.cc:  static EvtId D3P1P=EvtPDL::getId("D'_1+");
EvtISGW2FF.cc:  static EvtId D3P1N=EvtPDL::getId("D'_1-");
EvtISGW2FF.cc:  static EvtId D3P10=EvtPDL::getId("D'_10");
EvtISGW2FF.cc:  static EvtId D3P1B=EvtPDL::getId("anti-D'_10");
EvtISGW2FF.cc:  static EvtId D21S0P=EvtPDL::getId("D(2S)+");
EvtISGW2FF.cc:  static EvtId D21S0N=EvtPDL::getId("D(2S)-");
EvtISGW2FF.cc:  static EvtId D21S00=EvtPDL::getId("D(2S)0");
EvtISGW2FF.cc:  static EvtId D21S0B=EvtPDL::getId("anti-D(2S)0");
EvtISGW2FF.cc:  static EvtId D23S1P=EvtPDL::getId("D*(2S)+");
EvtISGW2FF.cc:  static EvtId D23S1N=EvtPDL::getId("D*(2S)-");
EvtISGW2FF.cc:  static EvtId D23S10=EvtPDL::getId("D*(2S)0");
EvtISGW2FF.cc:  static EvtId D23S1B=EvtPDL::getId("anti-D*(2S)0");
EvtISGW2FF.cc:  static EvtId A1P=EvtPDL::getId("a_1+");
EvtISGW2FF.cc:  static EvtId A1M=EvtPDL::getId("a_1-");
EvtISGW2FF.cc:  static EvtId A10=EvtPDL::getId("a_10");
EvtISGW2FF.cc:  static EvtId B1P=EvtPDL::getId("b_1+");
EvtISGW2FF.cc:  static EvtId B1M=EvtPDL::getId("b_1-");
EvtISGW2FF.cc:  static EvtId B10=EvtPDL::getId("b_10");
EvtISGW2FF.cc:  static EvtId H1=EvtPDL::getId("h_1");
EvtISGW2FF.cc:  static EvtId H1PR=EvtPDL::getId("h'_1");
EvtISGW2FF.cc:  static EvtId F1=EvtPDL::getId("f_1");
EvtISGW2FF.cc:  static EvtId F1PR=EvtPDL::getId("f'_1");
EvtISGW2FF.cc:  static EvtId K1P=EvtPDL::getId("K_1+");
EvtISGW2FF.cc:  static EvtId K1M=EvtPDL::getId("K_1-");
EvtISGW2FF.cc:  static EvtId K10=EvtPDL::getId("K_10");
EvtISGW2FF.cc:  static EvtId K1B=EvtPDL::getId("anti-K_10");
EvtISGW2FF.cc:  static EvtId K1STP=EvtPDL::getId("K'_1+");
EvtISGW2FF.cc:  static EvtId K1STM=EvtPDL::getId("K'_1-");
EvtISGW2FF.cc:  static EvtId K1ST0=EvtPDL::getId("K'_10");
EvtISGW2FF.cc:  static EvtId K1STB=EvtPDL::getId("anti-K'_10");
EvtISGW2FF.cc:  static EvtId D1P1SP=EvtPDL::getId("D_s1+");
EvtISGW2FF.cc:  static EvtId D1P1SN=EvtPDL::getId("D_s1-");
EvtISGW2FF.cc:  static EvtId D3P1SP=EvtPDL::getId("D'_s1+");
EvtISGW2FF.cc:  static EvtId D3P1SN=EvtPDL::getId("D'_s1-");
EvtISGW2FF.cc:      EvtISGW2FF1S0(parent,daught,t,mass,fpf,&fmf);
EvtISGW2FF.cc:      daught==D21S0P||daught==D21S0B||daught==D21S0N||daught==D21S00){
EvtISGW2FF.cc:      EvtISGW2FF21S0(parent,daught,t,mass,fpf,&fmf);
EvtISGW2FF.cc:  static EvtId D1P1P=EvtPDL::getId("D_1+");
EvtISGW2FF.cc:  static EvtId D1P1N=EvtPDL::getId("D_1-");
EvtISGW2FF.cc:  static EvtId D1P10=EvtPDL::getId("D_10");
EvtISGW2FF.cc:  static EvtId D1P1B=EvtPDL::getId("anti-D_10");
EvtISGW2FF.cc:  static EvtId D3P1P=EvtPDL::getId("D'_1+");
EvtISGW2FF.cc:  static EvtId D3P1N=EvtPDL::getId("D'_1-");
EvtISGW2FF.cc:  static EvtId D3P10=EvtPDL::getId("D'_10");
EvtISGW2FF.cc:  static EvtId D3P1B=EvtPDL::getId("anti-D'_10");
EvtISGW2FF.cc:  static EvtId D21S0P=EvtPDL::getId("D(2S)+");
EvtISGW2FF.cc:  static EvtId D21S0N=EvtPDL::getId("D(2S)-");
EvtISGW2FF.cc:  static EvtId D21S00=EvtPDL::getId("D(2S)0");
EvtISGW2FF.cc:  static EvtId D21S0B=EvtPDL::getId("anti-D(2S)0");
EvtISGW2FF.cc:  static EvtId D23S1P=EvtPDL::getId("D*(2S)+");
EvtISGW2FF.cc:  static EvtId D23S1N=EvtPDL::getId("D*(2S)-");
EvtISGW2FF.cc:  static EvtId D23S10=EvtPDL::getId("D*(2S)0");
EvtISGW2FF.cc:  static EvtId D23S1B=EvtPDL::getId("anti-D*(2S)0");
EvtISGW2FF.cc:  static EvtId A1P=EvtPDL::getId("a_1+");
EvtISGW2FF.cc:  static EvtId A1M=EvtPDL::getId("a_1-");
EvtISGW2FF.cc:  static EvtId A10=EvtPDL::getId("a_10");
EvtISGW2FF.cc:  static EvtId B1P=EvtPDL::getId("b_1+");
EvtISGW2FF.cc:  static EvtId B1M=EvtPDL::getId("b_1-");
EvtISGW2FF.cc:  static EvtId B10=EvtPDL::getId("b_10");
EvtISGW2FF.cc:  static EvtId H1=EvtPDL::getId("h_1");
EvtISGW2FF.cc:  static EvtId H1PR=EvtPDL::getId("h'_1");
EvtISGW2FF.cc:  static EvtId F1=EvtPDL::getId("f_1");
EvtISGW2FF.cc:  static EvtId F1PR=EvtPDL::getId("f'_1");
EvtISGW2FF.cc:  static EvtId K1P=EvtPDL::getId("K_1+");
EvtISGW2FF.cc:  static EvtId K1M=EvtPDL::getId("K_1-");
EvtISGW2FF.cc:  static EvtId K10=EvtPDL::getId("K_10");
EvtISGW2FF.cc:  static EvtId K1B=EvtPDL::getId("anti-K_10");
EvtISGW2FF.cc:  static EvtId K1STP=EvtPDL::getId("K'_1+");
EvtISGW2FF.cc:  static EvtId K1STM=EvtPDL::getId("K'_1-");
EvtISGW2FF.cc:  static EvtId K1ST0=EvtPDL::getId("K'_10");
EvtISGW2FF.cc:  static EvtId K1STB=EvtPDL::getId("anti-K'_10");
EvtISGW2FF.cc:  static EvtId D1P1SP=EvtPDL::getId("D_s1+");
EvtISGW2FF.cc:  static EvtId D1P1SN=EvtPDL::getId("D_s1-");
EvtISGW2FF.cc:  static EvtId D3P1SP=EvtPDL::getId("D'_s1+");
EvtISGW2FF.cc:  static EvtId D3P1SN=EvtPDL::getId("D'_s1-");
EvtISGW2FF.cc:                       double t, double mass, double *a1f,
EvtISGW2FF.cc:  static EvtId D1P1P=EvtPDL::getId("D_1+");
EvtISGW2FF.cc:  static EvtId D1P1N=EvtPDL::getId("D_1-");
EvtISGW2FF.cc:  static EvtId D1P10=EvtPDL::getId("D_10");
EvtISGW2FF.cc:  static EvtId D1P1B=EvtPDL::getId("anti-D_10");
EvtISGW2FF.cc:  static EvtId D3P1P=EvtPDL::getId("D'_1+");
EvtISGW2FF.cc:  static EvtId D3P1N=EvtPDL::getId("D'_1-");
EvtISGW2FF.cc:  static EvtId D3P10=EvtPDL::getId("D'_10");
EvtISGW2FF.cc:  static EvtId D3P1B=EvtPDL::getId("anti-D'_10");
EvtISGW2FF.cc:  static EvtId D21S0P=EvtPDL::getId("D(2S)+");
EvtISGW2FF.cc:  static EvtId D21S0N=EvtPDL::getId("D(2S)-");
EvtISGW2FF.cc:  static EvtId D21S00=EvtPDL::getId("D(2S)0");
EvtISGW2FF.cc:  static EvtId D21S0B=EvtPDL::getId("anti-D(2S)0");
EvtISGW2FF.cc:  static EvtId D23S1P=EvtPDL::getId("D*(2S)+");
EvtISGW2FF.cc:  static EvtId D23S1N=EvtPDL::getId("D*(2S)-");
EvtISGW2FF.cc:  static EvtId D23S10=EvtPDL::getId("D*(2S)0");
EvtISGW2FF.cc:  static EvtId D23S1B=EvtPDL::getId("anti-D*(2S)0");
EvtISGW2FF.cc:  static EvtId A1P=EvtPDL::getId("a_1+");
EvtISGW2FF.cc:  static EvtId A1M=EvtPDL::getId("a_1-");
EvtISGW2FF.cc:  static EvtId A10=EvtPDL::getId("a_10");
EvtISGW2FF.cc:  static EvtId B1P=EvtPDL::getId("b_1+");
EvtISGW2FF.cc:  static EvtId B1M=EvtPDL::getId("b_1-");
EvtISGW2FF.cc:  static EvtId B10=EvtPDL::getId("b_10");
EvtISGW2FF.cc:  static EvtId H1=EvtPDL::getId("h_1");
EvtISGW2FF.cc:  static EvtId H1PR=EvtPDL::getId("h'_1");
EvtISGW2FF.cc:  static EvtId F1=EvtPDL::getId("f_1");
EvtISGW2FF.cc:  static EvtId F1PR=EvtPDL::getId("f'_1");
EvtISGW2FF.cc:  static EvtId K1P=EvtPDL::getId("K_1+");
EvtISGW2FF.cc:  static EvtId K1M=EvtPDL::getId("K_1-");
EvtISGW2FF.cc:  static EvtId K10=EvtPDL::getId("K_10");
EvtISGW2FF.cc:  static EvtId K1B=EvtPDL::getId("anti-K_10");
EvtISGW2FF.cc:  static EvtId K1STP=EvtPDL::getId("K'_1+");
EvtISGW2FF.cc:  static EvtId K1STM=EvtPDL::getId("K'_1-");
EvtISGW2FF.cc:  static EvtId K1ST0=EvtPDL::getId("K'_10");
EvtISGW2FF.cc:  static EvtId K1STB=EvtPDL::getId("anti-K'_10");
EvtISGW2FF.cc:  static EvtId D1P1SP=EvtPDL::getId("D_s1+");
EvtISGW2FF.cc:  static EvtId D1P1SN=EvtPDL::getId("D_s1-");
EvtISGW2FF.cc:  static EvtId D3P1SP=EvtPDL::getId("D'_s1+");
EvtISGW2FF.cc:  static EvtId D3P1SN=EvtPDL::getId("D'_s1-");
EvtISGW2FF.cc:     EvtISGW2FF3S1(parent,daught,t,mass,&ff,&gf,&apf,&amf);
EvtISGW2FF.cc:   if (daught==B10||daught==B1P||daught==B1M||daught==H1||
EvtISGW2FF.cc:       daught==H1PR||daught==D1P1P||daught==D1P10||daught==D1P1B||
EvtISGW2FF.cc:       daught==D1P1SP||daught==D1P1SN||
EvtISGW2FF.cc:       daught==D1P1N||daught==K10||daught==K1B||daught==K1P||
EvtISGW2FF.cc:       daught==K1M) {
EvtISGW2FF.cc:     EvtISGW2FF1P1(parent,daught,t,mass,&ff,&gf,&apf,&amf);
EvtISGW2FF.cc:       daught==D23S1P||daught==D23S1B||daught==D23S1N||daught==D23S10){
EvtISGW2FF.cc:     EvtISGW2FF23S1(parent,daught,t,mass,&ff,&gf,&apf,&amf);
EvtISGW2FF.cc:   if (daught==A10||daught==A1P||daught==A1M||daught==F1||
EvtISGW2FF.cc:                  daught==F1PR||daught==D3P1P||daught==D3P10||daught==D3P1B||
EvtISGW2FF.cc:       daught==D3P1N||daught==K1STM||daught==K1STB||daught==K1STP||
EvtISGW2FF.cc:       daught==D3P1SP||daught==D3P1SN||
EvtISGW2FF.cc:       daught==K1ST0) {
EvtISGW2FF.cc:     EvtISGW2FF3P1(parent,daught,t,mass,&ff,&gf,&apf,&amf);
EvtISGW2FF.cc:   *a1f = (ff)/(mb+mass);
EvtISGW2FF.cc:   *a2f = -1.0*(apf)*(mb+mass);
EvtISGW2FF.cc:   double a3f = ((mb+mass)/(2.0*mass))*(*a1f) -
EvtISGW2FF.cc:void EvtISGW2FF::EvtISGW2FF1S0 (EvtId parent,EvtId daugt,
EvtISGW2FF.cc:  static EvtId D1P1P=EvtPDL::getId("D_1+");
EvtISGW2FF.cc:  static EvtId D1P1N=EvtPDL::getId("D_1-");
EvtISGW2FF.cc:  static EvtId D1P10=EvtPDL::getId("D_10");
EvtISGW2FF.cc:  static EvtId D1P1B=EvtPDL::getId("anti-D_10");
EvtISGW2FF.cc:  static EvtId D3P1P=EvtPDL::getId("D'_1+");
EvtISGW2FF.cc:  static EvtId D3P1N=EvtPDL::getId("D'_1-");
EvtISGW2FF.cc:  static EvtId D3P10=EvtPDL::getId("D'_10");
EvtISGW2FF.cc:  static EvtId D3P1B=EvtPDL::getId("anti-D'_10");
EvtISGW2FF.cc:  static EvtId D21S0P=EvtPDL::getId("D(2S)+");
EvtISGW2FF.cc:  static EvtId D21S0N=EvtPDL::getId("D(2S)-");
EvtISGW2FF.cc:  static EvtId D21S00=EvtPDL::getId("D(2S)0");
EvtISGW2FF.cc:  static EvtId D21S0B=EvtPDL::getId("anti-D(2S)0");
EvtISGW2FF.cc:  static EvtId D23S1P=EvtPDL::getId("D*(2S)+");
EvtISGW2FF.cc:  static EvtId D23S1N=EvtPDL::getId("D*(2S)-");
EvtISGW2FF.cc:  static EvtId D23S10=EvtPDL::getId("D*(2S)0");
EvtISGW2FF.cc:  static EvtId D23S1B=EvtPDL::getId("anti-D*(2S)0");
EvtISGW2FF.cc:  static EvtId A1P=EvtPDL::getId("a_1+");
EvtISGW2FF.cc:  static EvtId A1M=EvtPDL::getId("a_1-");
EvtISGW2FF.cc:  static EvtId A10=EvtPDL::getId("a_10");
EvtISGW2FF.cc:  static EvtId B1P=EvtPDL::getId("b_1+");
EvtISGW2FF.cc:  static EvtId B1M=EvtPDL::getId("b_1-");
EvtISGW2FF.cc:  static EvtId B10=EvtPDL::getId("b_10");
EvtISGW2FF.cc:  static EvtId H1=EvtPDL::getId("h_1");
EvtISGW2FF.cc:  static EvtId H1PR=EvtPDL::getId("h'_1");
EvtISGW2FF.cc:  static EvtId F1=EvtPDL::getId("f_1");
EvtISGW2FF.cc:  static EvtId F1PR=EvtPDL::getId("f'_1");
EvtISGW2FF.cc:  static EvtId K1P=EvtPDL::getId("K_1+");
EvtISGW2FF.cc:  static EvtId K1M=EvtPDL::getId("K_1-");
EvtISGW2FF.cc:  static EvtId K10=EvtPDL::getId("K_10");
EvtISGW2FF.cc:  static EvtId K1B=EvtPDL::getId("anti-K_10");
EvtISGW2FF.cc:  static EvtId K1STP=EvtPDL::getId("K'_1+");
EvtISGW2FF.cc:  static EvtId K1STM=EvtPDL::getId("K'_1-");
EvtISGW2FF.cc:  static EvtId K1ST0=EvtPDL::getId("K'_10");
EvtISGW2FF.cc:  static EvtId K1STB=EvtPDL::getId("anti-K'_10");
EvtISGW2FF.cc:  static EvtId D1P1SP=EvtPDL::getId("D_s1+");
EvtISGW2FF.cc:  static EvtId D1P1SN=EvtPDL::getId("D_s1-");
EvtISGW2FF.cc:  static EvtId D3P1SP=EvtPDL::getId("D'_s1+");
EvtISGW2FF.cc:  static EvtId D3P1SN=EvtPDL::getId("D'_s1-");
EvtISGW2FF.cc:    bb2=0.431*0.431;
EvtISGW2FF.cc:    mbb=5.31;
EvtISGW2FF.cc:      mbx=0.75*0.770+0.25*0.14;
EvtISGW2FF.cc:	msq=1.82;
EvtISGW2FF.cc:	mbx=0.75*2.01+0.25*1.87;
EvtISGW2FF.cc:      report(ERROR,"EvtGen") << "Not implemented daugt:"<<daugt.getId()<<" in get_isgw_ff_1S0.\n";
EvtISGW2FF.cc:      msb=1.82;
EvtISGW2FF.cc:      mbb=1.963;
EvtISGW2FF.cc:	mbx=0.75*0.770+0.25*0.14;
EvtISGW2FF.cc:      report(ERROR,"EvtGen") << "Not implemented daugt:"<<daugt.getId()<<" in get_isgw_ff_1S0.\n";
EvtISGW2FF.cc:	msb=1.82;
EvtISGW2FF.cc:	mbb=1.968;
EvtISGW2FF.cc:	  mbx=0.75*0.770+0.25*0.14;
EvtISGW2FF.cc:	    report(ERROR,"EvtGen") << "Not implemented daugt:"<<daugt.getId()<<" in get_isgw_ff_1S0.\n";
EvtISGW2FF.cc:      //BS -> cs constants added by djl on Jan. 21,1998
EvtISGW2FF.cc:	  msq=1.82;
EvtISGW2FF.cc:	  mbx=0.75*2.11+0.25*1.97;
EvtISGW2FF.cc:	    report(ERROR,"EvtGen") << "Not implemented daugt:"<<daugt.getId()<<" in get_isgw_ff_1S0.\n";
EvtISGW2FF.cc:	report(ERROR,"EvtGen") << "Not implemented parent in get_isgw_ff_1S0.\n";
EvtISGW2FF.cc:  mup=1.0/(1.0/msq+1.0/msb);
EvtISGW2FF.cc:  mum=1.0/(1.0/msq-1.0/msb);
EvtISGW2FF.cc:  wt=1.0+(tm-t)/(2.0*mbb*mbx);
EvtISGW2FF.cc:  mqm = 0.1;
EvtISGW2FF.cc:    (16.0/(mbb*mbx*(33.0-2.0*nfp)))*
EvtISGW2FF.cc:  f3 = sqrt(mtx/mtb)*pow(sqrt(bx2*bb2)/bbx2,1.5) /
EvtISGW2FF.cc:    ((1.0+r2*(tm-t)/12.0)*(1.0+r2*(tm-t)/12.0));
EvtISGW2FF.cc:  w = 1.0 + (( tm - t ) / ( 2.0* mb * mx ));
EvtISGW2FF.cc:  rcji = ( 1/sqrt(w*w -1 ))*log( w + sqrt( w*w -1 ));
EvtISGW2FF.cc:  al = (8.0 / ( 33.0 - 2.0*nfp ))*(w*rcji -1.0 );
EvtISGW2FF.cc:  ai = -1.0* ( 6.0/( 33.0 - 2.0*nf));  
EvtISGW2FF.cc:  chiji = -1.0 - ( gammaji / ( 1- zji ));
EvtISGW2FF.cc:  rfppfm = cji *(1.0 + betaji_fppfm*EvtGetas( msq,sqrt(msb*msq) )/EvtConst::pi);
EvtISGW2FF.cc:  rfpmfm = cji *(1.0 + betaji_fpmfm*EvtGetas( msq,sqrt(msb*msq) )/EvtConst::pi);
EvtISGW2FF.cc:  fppfm = f3fppfm* rfppfm * ( 2.0 - ( ( mtx/msq)*(1- ( (msd*msq*bb2)
EvtISGW2FF.cc:  fpmfm = f3fpmfm* rfpmfm * ( mtb/msq) * ( 1 - ( ( msd*msq*bb2)/
EvtISGW2FF.cc:} //get_ff_isgw_1s0
EvtISGW2FF.cc:void  EvtISGW2FF::EvtISGW2FF3S1(EvtId parent,EvtId daugt,double t,double mass,
EvtISGW2FF.cc:  static EvtId D1P1P=EvtPDL::getId("D_1+");
EvtISGW2FF.cc:  static EvtId D1P1N=EvtPDL::getId("D_1-");
EvtISGW2FF.cc:  static EvtId D1P10=EvtPDL::getId("D_10");
EvtISGW2FF.cc:  static EvtId D1P1B=EvtPDL::getId("anti-D_10");
EvtISGW2FF.cc:  static EvtId D3P1P=EvtPDL::getId("D'_1+");
EvtISGW2FF.cc:  static EvtId D3P1N=EvtPDL::getId("D'_1-");
EvtISGW2FF.cc:  static EvtId D3P10=EvtPDL::getId("D'_10");
EvtISGW2FF.cc:  static EvtId D3P1B=EvtPDL::getId("anti-D'_10");
EvtISGW2FF.cc:  static EvtId D21S0P=EvtPDL::getId("D(2S)+");
EvtISGW2FF.cc:  static EvtId D21S0N=EvtPDL::getId("D(2S)-");
EvtISGW2FF.cc:  static EvtId D21S00=EvtPDL::getId("D(2S)0");
EvtISGW2FF.cc:  static EvtId D21S0B=EvtPDL::getId("anti-D(2S)0");
EvtISGW2FF.cc:  static EvtId D23S1P=EvtPDL::getId("D*(2S)+");
EvtISGW2FF.cc:  static EvtId D23S1N=EvtPDL::getId("D*(2S)-");
EvtISGW2FF.cc:  static EvtId D23S10=EvtPDL::getId("D*(2S)0");
EvtISGW2FF.cc:  static EvtId D23S1B=EvtPDL::getId("anti-D*(2S)0");
EvtISGW2FF.cc:  static EvtId A1P=EvtPDL::getId("a_1+");
EvtISGW2FF.cc:  static EvtId A1M=EvtPDL::getId("a_1-");
EvtISGW2FF.cc:  static EvtId A10=EvtPDL::getId("a_10");
EvtISGW2FF.cc:  static EvtId B1P=EvtPDL::getId("b_1+");
EvtISGW2FF.cc:  static EvtId B1M=EvtPDL::getId("b_1-");
EvtISGW2FF.cc:  static EvtId B10=EvtPDL::getId("b_10");
EvtISGW2FF.cc:  static EvtId H1=EvtPDL::getId("h_1");
EvtISGW2FF.cc:  static EvtId H1PR=EvtPDL::getId("h'_1");
EvtISGW2FF.cc:  static EvtId F1=EvtPDL::getId("f_1");
EvtISGW2FF.cc:  static EvtId F1PR=EvtPDL::getId("f'_1");
EvtISGW2FF.cc:  static EvtId K1P=EvtPDL::getId("K_1+");
EvtISGW2FF.cc:  static EvtId K1M=EvtPDL::getId("K_1-");
EvtISGW2FF.cc:  static EvtId K10=EvtPDL::getId("K_10");
EvtISGW2FF.cc:  static EvtId K1B=EvtPDL::getId("anti-K_10");
EvtISGW2FF.cc:  static EvtId K1STP=EvtPDL::getId("K'_1+");
EvtISGW2FF.cc:  static EvtId K1STM=EvtPDL::getId("K'_1-");
EvtISGW2FF.cc:  static EvtId K1ST0=EvtPDL::getId("K'_10");
EvtISGW2FF.cc:  static EvtId K1STB=EvtPDL::getId("anti-K'_10");
EvtISGW2FF.cc:  static EvtId D1P1SP=EvtPDL::getId("D_s1+");
EvtISGW2FF.cc:  static EvtId D1P1SN=EvtPDL::getId("D_s1-");
EvtISGW2FF.cc:  static EvtId D3P1SP=EvtPDL::getId("D'_s1+");
EvtISGW2FF.cc:  static EvtId D3P1SN=EvtPDL::getId("D'_s1-");
EvtISGW2FF.cc:    bb2=0.431*0.431;
EvtISGW2FF.cc:    mbb=5.31;
EvtISGW2FF.cc:      msq=1.82;
EvtISGW2FF.cc:      mbx=0.75*2.01+0.25*1.87;
EvtISGW2FF.cc:	mbx=0.75*0.770+0.25*0.14;
EvtISGW2FF.cc:	report(ERROR,"EvtGen") << "Not implemented daugt:"<<daugt.getId()<<" in get_isgw_ff_3S1.\n";
EvtISGW2FF.cc:      msb=1.82;
EvtISGW2FF.cc:      mbb=1.963;
EvtISGW2FF.cc:	  mbx=0.75*0.770+0.25*0.14;
EvtISGW2FF.cc:	  report(ERROR,"EvtGen") << "Not implemented daugt:"<<daugt.getId()<<" in get_isgw_ff_3S1.\n";
EvtISGW2FF.cc:	msb=1.82;
EvtISGW2FF.cc:	mbb=1.968;
EvtISGW2FF.cc:	  cf=0.8731;
EvtISGW2FF.cc:	    cf=0.911;
EvtISGW2FF.cc:	report(ERROR,"EvtGen") << "Not implemented daugt:"<<daugt.getId()<<" in get_isgw_ff_3S1.\n";
EvtISGW2FF.cc:      //BS -> cs constants added by djl on Jan. 21,1998
EvtISGW2FF.cc:	  msq=1.82;
EvtISGW2FF.cc:	  mbx=0.75*2.11+0.25*1.97;
EvtISGW2FF.cc:	    report(ERROR,"EvtGen") << "Not implemented daugt:"<<daugt.getId()<<" in get_isgw_ff_1S0.\n";
EvtISGW2FF.cc:	report(ERROR,"EvtGen") << "Not implemented parent in get_isgw2_ff_3S1.\n";
EvtISGW2FF.cc:  mup=1.0/(1.0/msq+1.0/msb);
EvtISGW2FF.cc:  mum=1.0/(1.0/msq-1.0/msb);
EvtISGW2FF.cc:  wt=1.0+(tm-t)/(2.0*mbb*mbx);
EvtISGW2FF.cc:  mqm = 0.1;
EvtISGW2FF.cc:    (16.0/(mbb*mbx*(33.0-2.0*nfp)))*
EvtISGW2FF.cc:  w = 1.0 + (( tm - t ) / ( 2.0* mb * mx ));
EvtISGW2FF.cc:  rcji = ( 1/sqrt(w*w -1 ))*log( w + sqrt( w*w -1 ));
EvtISGW2FF.cc:  al = (8.0 / ( 33.0 - 2.0*nfp ))*(w*rcji -1.0 );
EvtISGW2FF.cc:  ai = -1.0* ( 6.0/( 33.0 - 2.0*nf));  
EvtISGW2FF.cc:  chiji = -1.0 - ( gammaji / ( 1- zji ));
EvtISGW2FF.cc:  betaji_appam = -1.0-chiji+(4.0/(3.0*(1.0-zji)))+
EvtISGW2FF.cc:                 (2.0*(1+zji)*gammaji/(3.0*(1.0-zji)*(1.0-zji)));
EvtISGW2FF.cc:  betaji_apmam = (1.0/3.0)-chiji-(4.0/(3.0*(1.0-zji)))-
EvtISGW2FF.cc:                 (2.0*(1+zji)*gammaji/(3.0*(1.0-zji)*(1.0-zji)))+
EvtISGW2FF.cc:  r_g = cji*(1+(betaji_g*EvtGetas( msq,sqrt(mb*msq) )/(EvtConst::pi)));
EvtISGW2FF.cc:  r_f = cji*(1+(betaji_f*EvtGetas( msq,sqrt(mb*msq) )/(EvtConst::pi)));
EvtISGW2FF.cc:  r_appam = cji*(1+(betaji_appam*EvtGetas( msq,sqrt(mb*msq) )/(EvtConst::pi)));
EvtISGW2FF.cc:  r_apmam = cji*(1+(betaji_apmam*EvtGetas( msq,sqrt(mb*msq) )/(EvtConst::pi)));
EvtISGW2FF.cc:  f3=sqrt(mtx/mtb)*pow(sqrt(bx2*bb2)/bbx2,1.5)/
EvtISGW2FF.cc:    ((1.0+r2*(tm-t)/12.0)*(1.0+r2*(tm-t)/12.0));
EvtISGW2FF.cc:  *f=cf*mtb*(1+wt+msd*(wt-1)/(2*mup))*f3f*r_f;
EvtISGW2FF.cc:  *g=0.5*(1/msq-msd*bb2/(2*mum*mtx*bbx2))*f3g*r_g;
EvtISGW2FF.cc:  appam=cji*(msd*bx2*(1-msd*bx2/(2*mtb*bbx2))/ 
EvtISGW2FF.cc:	     ((1+wt)*msq*msb*bbx2)-
EvtISGW2FF.cc:  apmam=-1.0*(mtb/msb-msd*bx2/(2*mup*bbx2)+wt*msd*mtb*bx2*
EvtISGW2FF.cc:	      (1-msd*bx2/(2*mtb*bbx2))/((wt+1)*msq*msb*bbx2))*
EvtISGW2FF.cc:void EvtISGW2FF::EvtISGW2FF21S0 (EvtId parent,EvtId daugt,
EvtISGW2FF.cc:  static EvtId D1P1P=EvtPDL::getId("D_1+");
EvtISGW2FF.cc:  static EvtId D1P1N=EvtPDL::getId("D_1-");
EvtISGW2FF.cc:  static EvtId D1P10=EvtPDL::getId("D_10");
EvtISGW2FF.cc:  static EvtId D1P1B=EvtPDL::getId("anti-D_10");
EvtISGW2FF.cc:  static EvtId D3P1P=EvtPDL::getId("D'_1+");
EvtISGW2FF.cc:  static EvtId D3P1N=EvtPDL::getId("D'_1-");
EvtISGW2FF.cc:  static EvtId D3P10=EvtPDL::getId("D'_10");
EvtISGW2FF.cc:  static EvtId D3P1B=EvtPDL::getId("anti-D'_10");
EvtISGW2FF.cc:  static EvtId D21S0P=EvtPDL::getId("D(2S)+");
EvtISGW2FF.cc:  static EvtId D21S0N=EvtPDL::getId("D(2S)-");
EvtISGW2FF.cc:  static EvtId D21S00=EvtPDL::getId("D(2S)0");
EvtISGW2FF.cc:  static EvtId D21S0B=EvtPDL::getId("anti-D(2S)0");
EvtISGW2FF.cc:  static EvtId D23S1P=EvtPDL::getId("D*(2S)+");
EvtISGW2FF.cc:  static EvtId D23S1N=EvtPDL::getId("D*(2S)-");
EvtISGW2FF.cc:  static EvtId D23S10=EvtPDL::getId("D*(2S)0");
EvtISGW2FF.cc:  static EvtId D23S1B=EvtPDL::getId("anti-D*(2S)0");
EvtISGW2FF.cc:  static EvtId A1P=EvtPDL::getId("a_1+");
EvtISGW2FF.cc:  static EvtId A1M=EvtPDL::getId("a_1-");
EvtISGW2FF.cc:  static EvtId A10=EvtPDL::getId("a_10");
EvtISGW2FF.cc:  static EvtId B1P=EvtPDL::getId("b_1+");
EvtISGW2FF.cc:  static EvtId B1M=EvtPDL::getId("b_1-");
EvtISGW2FF.cc:  static EvtId B10=EvtPDL::getId("b_10");
EvtISGW2FF.cc:  static EvtId H1=EvtPDL::getId("h_1");
EvtISGW2FF.cc:  static EvtId H1PR=EvtPDL::getId("h'_1");
EvtISGW2FF.cc:  static EvtId F1=EvtPDL::getId("f_1");
EvtISGW2FF.cc:  static EvtId F1PR=EvtPDL::getId("f'_1");
EvtISGW2FF.cc:  static EvtId K1P=EvtPDL::getId("K_1+");
EvtISGW2FF.cc:  static EvtId K1M=EvtPDL::getId("K_1-");
EvtISGW2FF.cc:  static EvtId K10=EvtPDL::getId("K_10");
EvtISGW2FF.cc:  static EvtId K1B=EvtPDL::getId("anti-K_10");
EvtISGW2FF.cc:  static EvtId K1STP=EvtPDL::getId("K'_1+");
EvtISGW2FF.cc:  static EvtId K1STM=EvtPDL::getId("K'_1-");
EvtISGW2FF.cc:  static EvtId K1ST0=EvtPDL::getId("K'_10");
EvtISGW2FF.cc:  static EvtId K1STB=EvtPDL::getId("anti-K'_10");
EvtISGW2FF.cc:  static EvtId D1P1SP=EvtPDL::getId("D_s1+");
EvtISGW2FF.cc:  static EvtId D1P1SN=EvtPDL::getId("D_s1-");
EvtISGW2FF.cc:  static EvtId D3P1SP=EvtPDL::getId("D'_s1+");
EvtISGW2FF.cc:  static EvtId D3P1SN=EvtPDL::getId("D'_s1-");
EvtISGW2FF.cc:    bb2=0.431*0.431;
EvtISGW2FF.cc:      mbx=0.75*1.45+0.25*1.300;
EvtISGW2FF.cc:      if (dgt==D21S0P||dgt==D21S0B||dgt==D21S0N||dgt==D21S00) {
EvtISGW2FF.cc:	msq=1.82;
EvtISGW2FF.cc:      report(ERROR,"EvtGen") << "Not implemented daugt in get_EvtISGW2_ff_21S0.\n";
EvtISGW2FF.cc:      msb=1.82;
EvtISGW2FF.cc:      mbb=1.963;
EvtISGW2FF.cc:	mbx=0.75*1.45+0.25*1.300;
EvtISGW2FF.cc:	report(ERROR,"EvtGen") << "Not implemented daugt in get_EvtISGW2_ff_21S0.\n";
EvtISGW2FF.cc:      report(ERROR,"EvtGen") << "Not implemented parent in get_EvtISGW2_ff_21S0.\n";
EvtISGW2FF.cc:  mup=1.0/(1.0/msq+1.0/msb);
EvtISGW2FF.cc:  mum=1.0/(1.0/msq-1.0/msb);
EvtISGW2FF.cc:  wt=1.0+(tm-t)/(2.0*mbb*mbx);
EvtISGW2FF.cc:  mqm = 0.1;
EvtISGW2FF.cc:    (16.0/(mbb*mbx*(33.0-2.0*nfp)))*
EvtISGW2FF.cc:    (pow((1.0+r2*(tm-t)/24.0),4.0));
EvtISGW2FF.cc:  tau = msd*msd*bx2*(wt-1)/(bb2*bbx2);
EvtISGW2FF.cc:  vdef = (bb2*(1.0+(msq/msb))/(6.0*bbx2))*(7.0 - ((bb2/bbx2)*(5+tau)));
EvtISGW2FF.cc:  fppfm = f3fppfm*sqrt(1.5)*((1.0-(msd/msq))*udef-(msd*vdef/msq));
EvtISGW2FF.cc:  fpmfm = f3fpmfm*sqrt(1.5)*(mtb/msq)*(udef+(msd*vdef/mtx));
EvtISGW2FF.cc:} //get_ff_isgw_21s0
EvtISGW2FF.cc:void EvtISGW2FF::EvtISGW2FF23S1 (EvtId parent,EvtId daugt,
EvtISGW2FF.cc:  static EvtId D1P1P=EvtPDL::getId("D_1+");
EvtISGW2FF.cc:  static EvtId D1P1N=EvtPDL::getId("D_1-");
EvtISGW2FF.cc:  static EvtId D1P10=EvtPDL::getId("D_10");
EvtISGW2FF.cc:  static EvtId D1P1B=EvtPDL::getId("anti-D_10");
EvtISGW2FF.cc:  static EvtId D3P1P=EvtPDL::getId("D'_1+");
EvtISGW2FF.cc:  static EvtId D3P1N=EvtPDL::getId("D'_1-");
EvtISGW2FF.cc:  static EvtId D3P10=EvtPDL::getId("D'_10");
EvtISGW2FF.cc:  static EvtId D3P1B=EvtPDL::getId("anti-D'_10");
EvtISGW2FF.cc:  static EvtId D21S0P=EvtPDL::getId("D(2S)+");
EvtISGW2FF.cc:  static EvtId D21S0N=EvtPDL::getId("D(2S)-");
EvtISGW2FF.cc:  static EvtId D21S00=EvtPDL::getId("D(2S)0");
EvtISGW2FF.cc:  static EvtId D21S0B=EvtPDL::getId("anti-D(2S)0");
EvtISGW2FF.cc:  static EvtId D23S1P=EvtPDL::getId("D*(2S)+");
EvtISGW2FF.cc:  static EvtId D23S1N=EvtPDL::getId("D*(2S)-");
EvtISGW2FF.cc:  static EvtId D23S10=EvtPDL::getId("D*(2S)0");
EvtISGW2FF.cc:  static EvtId D23S1B=EvtPDL::getId("anti-D*(2S)0");
EvtISGW2FF.cc:  static EvtId A1P=EvtPDL::getId("a_1+");
EvtISGW2FF.cc:  static EvtId A1M=EvtPDL::getId("a_1-");
EvtISGW2FF.cc:  static EvtId A10=EvtPDL::getId("a_10");
EvtISGW2FF.cc:  static EvtId B1P=EvtPDL::getId("b_1+");
EvtISGW2FF.cc:  static EvtId B1M=EvtPDL::getId("b_1-");
EvtISGW2FF.cc:  static EvtId B10=EvtPDL::getId("b_10");
EvtISGW2FF.cc:  static EvtId H1=EvtPDL::getId("h_1");
EvtISGW2FF.cc:  static EvtId H1PR=EvtPDL::getId("h'_1");
EvtISGW2FF.cc:  static EvtId F1=EvtPDL::getId("f_1");
EvtISGW2FF.cc:  static EvtId F1PR=EvtPDL::getId("f'_1");
EvtISGW2FF.cc:  static EvtId K1P=EvtPDL::getId("K_1+");
EvtISGW2FF.cc:  static EvtId K1M=EvtPDL::getId("K_1-");
EvtISGW2FF.cc:  static EvtId K10=EvtPDL::getId("K_10");
EvtISGW2FF.cc:  static EvtId K1B=EvtPDL::getId("anti-K_10");
EvtISGW2FF.cc:  static EvtId K1STP=EvtPDL::getId("K'_1+");
EvtISGW2FF.cc:  static EvtId K1STM=EvtPDL::getId("K'_1-");
EvtISGW2FF.cc:  static EvtId K1ST0=EvtPDL::getId("K'_10");
EvtISGW2FF.cc:  static EvtId K1STB=EvtPDL::getId("anti-K'_10");
EvtISGW2FF.cc:  static EvtId D1P1SP=EvtPDL::getId("D_s1+");
EvtISGW2FF.cc:  static EvtId D1P1SN=EvtPDL::getId("D_s1-");
EvtISGW2FF.cc:  static EvtId D3P1SP=EvtPDL::getId("D'_s1+");
EvtISGW2FF.cc:  static EvtId D3P1SN=EvtPDL::getId("D'_s1-");
EvtISGW2FF.cc:    bb2=0.431*0.431;
EvtISGW2FF.cc:      mbx=0.75*1.45+0.25*1.300;
EvtISGW2FF.cc:      if (dgt==D23S1N||dgt==D23S1P||dgt==D23S1B||dgt==D23S10) {
EvtISGW2FF.cc:	msq=1.82;
EvtISGW2FF.cc:      report(ERROR,"EvtGen") << "Not implemented daugt in get_isgw_ff_23P1.\n";
EvtISGW2FF.cc:      msb=1.82;
EvtISGW2FF.cc:      mbb=1.963;
EvtISGW2FF.cc:	mbx=0.75*1.45+0.25*1.300;
EvtISGW2FF.cc:	report(ERROR,"EvtGen") << "Not implemented daugt in get_isgw_ff_23P1.\n";
EvtISGW2FF.cc:      report(ERROR,"EvtGen") << "Not implemented parent in get_isgw_ff_23P1.\n";
EvtISGW2FF.cc:  mup=1.0/(1.0/msq+1.0/msb);
EvtISGW2FF.cc:  mum=1.0/(1.0/msq-1.0/msb);
EvtISGW2FF.cc:  wt=1.0+(tm-t)/(2.0*mbb*mbx);
EvtISGW2FF.cc:  mqm = 0.1;
EvtISGW2FF.cc:     (16.0/(mbb*mbx*(33.0-2.0*nfp)))*
EvtISGW2FF.cc:       (pow((1.0+r2*(tm-t)/24.0),4.0));
EvtISGW2FF.cc:  f3appam = f3*pow(( mbb / mtb ),-1.5)*pow((mbx/mtx),0.5);
EvtISGW2FF.cc:  tau = msd*msd*bx2*(wt-1.0)/(bb2*bbx2);
EvtISGW2FF.cc:  *fpf = cfp*sqrt(1.5)*mtb*(1.0+wt)*udef*f3fp;
EvtISGW2FF.cc:  *gpf = sqrt(3.0/8.0)*f3gp*(((1.0/msq)-((msd*bb2)/(2.0*mum*mtx*bbx2)))*
EvtISGW2FF.cc:          bx2*(1.0+(tau/7.0))/(8.0*mtb*bbx2*bbx2))+(5.0*msd*bx2*(1.0+
EvtISGW2FF.cc:  apmam = f3apmam*sqrt(3.0/2.0)*(mtb/(msb*mtx))*(1.0-(bb2*(1.0+(tau/7.0))/
EvtISGW2FF.cc:          bbx2)-(msd*bx2*(1.0-(5.0*bb2*(1.0+(tau/5.0))/(3.0*bbx2)))
EvtISGW2FF.cc:          /(2.0*mtb*bbx2))-(7.0*msd*msd*bb2*bx2/(12.0*msq*mtb*bbx2*bbx2))*
EvtISGW2FF.cc:          (1.0-(bx2/bbx2)+(bb2*tau/(7.0*bbx2))));
EvtISGW2FF.cc:} //get_ff_isgw_23s1
EvtISGW2FF.cc:void EvtISGW2FF::EvtISGW2FF1P1 (EvtId parent,EvtId daugt,
EvtISGW2FF.cc:  static EvtId D1P1P=EvtPDL::getId("D_1+");
EvtISGW2FF.cc:  static EvtId D1P1N=EvtPDL::getId("D_1-");
EvtISGW2FF.cc:  static EvtId D1P10=EvtPDL::getId("D_10");
EvtISGW2FF.cc:  static EvtId D1P1B=EvtPDL::getId("anti-D_10");
EvtISGW2FF.cc:  static EvtId D3P1P=EvtPDL::getId("D'_1+");
EvtISGW2FF.cc:  static EvtId D3P1N=EvtPDL::getId("D'_1-");
EvtISGW2FF.cc:  static EvtId D3P10=EvtPDL::getId("D'_10");
EvtISGW2FF.cc:  static EvtId D3P1B=EvtPDL::getId("anti-D'_10");
EvtISGW2FF.cc:  static EvtId D21S0P=EvtPDL::getId("D(2S)+");
EvtISGW2FF.cc:  static EvtId D21S0N=EvtPDL::getId("D(2S)-");
EvtISGW2FF.cc:  static EvtId D21S00=EvtPDL::getId("D(2S)0");
EvtISGW2FF.cc:  static EvtId D21S0B=EvtPDL::getId("anti-D(2S)0");
EvtISGW2FF.cc:  static EvtId D23S1P=EvtPDL::getId("D*(2S)+");
EvtISGW2FF.cc:  static EvtId D23S1N=EvtPDL::getId("D*(2S)-");
EvtISGW2FF.cc:  static EvtId D23S10=EvtPDL::getId("D*(2S)0");
EvtISGW2FF.cc:  static EvtId D23S1B=EvtPDL::getId("anti-D*(2S)0");
EvtISGW2FF.cc:  static EvtId A1P=EvtPDL::getId("a_1+");
EvtISGW2FF.cc:  static EvtId A1M=EvtPDL::getId("a_1-");
EvtISGW2FF.cc:  static EvtId A10=EvtPDL::getId("a_10");
EvtISGW2FF.cc:  static EvtId B1P=EvtPDL::getId("b_1+");
EvtISGW2FF.cc:  static EvtId B1M=EvtPDL::getId("b_1-");
EvtISGW2FF.cc:  static EvtId B10=EvtPDL::getId("b_10");
EvtISGW2FF.cc:  static EvtId H1=EvtPDL::getId("h_1");
EvtISGW2FF.cc:  static EvtId H1PR=EvtPDL::getId("h'_1");
EvtISGW2FF.cc:  static EvtId F1=EvtPDL::getId("f_1");
EvtISGW2FF.cc:  static EvtId F1PR=EvtPDL::getId("f'_1");
EvtISGW2FF.cc:  static EvtId K1P=EvtPDL::getId("K_1+");
EvtISGW2FF.cc:  static EvtId K1M=EvtPDL::getId("K_1-");
EvtISGW2FF.cc:  static EvtId K10=EvtPDL::getId("K_10");
EvtISGW2FF.cc:  static EvtId K1B=EvtPDL::getId("anti-K_10");
EvtISGW2FF.cc:  static EvtId K1STP=EvtPDL::getId("K'_1+");
EvtISGW2FF.cc:  static EvtId K1STM=EvtPDL::getId("K'_1-");
EvtISGW2FF.cc:  static EvtId K1ST0=EvtPDL::getId("K'_10");
EvtISGW2FF.cc:  static EvtId K1STB=EvtPDL::getId("anti-K'_10");
EvtISGW2FF.cc:  static EvtId D1P1SP=EvtPDL::getId("D_s1+");
EvtISGW2FF.cc:  static EvtId D1P1SN=EvtPDL::getId("D_s1-");
EvtISGW2FF.cc:  static EvtId D3P1SP=EvtPDL::getId("D'_s1+");
EvtISGW2FF.cc:  static EvtId D3P1SN=EvtPDL::getId("D'_s1-");
EvtISGW2FF.cc:    bb2=0.431*0.431;
EvtISGW2FF.cc:    mbb=5.31;
EvtISGW2FF.cc:    if (dgt==B10||dgt==B1P||dgt==B1M||dgt==H1||dgt==H1PR) {
EvtISGW2FF.cc:      mbx=(3.0*1.123+0.98+5.0*1.32+3.0*1.26)/12.0;
EvtISGW2FF.cc:      if (dgt==D1P1P||dgt==D1P10||dgt==D1P1B||dgt==D1P1N) {
EvtISGW2FF.cc:	msq=1.82;
EvtISGW2FF.cc:	report(ERROR,"EvtGen") << "Not implemented daugt in get_isgw_ff_1P1.\n";
EvtISGW2FF.cc:      msb=1.82;
EvtISGW2FF.cc:      mbb=1.963;
EvtISGW2FF.cc:      if (dgt==B10||dgt==B1P||dgt==B1M||dgt==H1||dgt==H1PR) {
EvtISGW2FF.cc:	mbx=(3.0*1.123+0.98+5.0*1.32+3.0*1.26)/12.0;
EvtISGW2FF.cc:	if (dgt==K10||dgt==K1B||dgt==K1P||dgt==K1M) {
EvtISGW2FF.cc:	  mbx=(3.0*1.27+1.43+5.0*1.43+3.0*1.4)/12.0;
EvtISGW2FF.cc:	  report(ERROR,"EvtGen") << "Not implemented daugt in get_isgw_ff_1P1.\n";
EvtISGW2FF.cc:      //BS -> cs constants added by djl on Jan. 21,1998
EvtISGW2FF.cc:	if  (dgt==D1P1SP||dgt==D1P1SN) {
EvtISGW2FF.cc:	  msq=1.82;
EvtISGW2FF.cc:	  bx2=0.41*0.41;
EvtISGW2FF.cc:	  mbx=(5.0*2.61+3.0*2.54)/8.0;
EvtISGW2FF.cc:	else if (dgt==K10||dgt==K1B||dgt==K1P||dgt==K1M) {
EvtISGW2FF.cc:	  mbx=(3.0*1.27+1.43+5.0*1.43+3.0*1.4)/12.0;
EvtISGW2FF.cc:                         <<daugt.getId()<<" in get_isgw_ff_1S0.\n";
EvtISGW2FF.cc:      report(ERROR,"EvtGen") << "Not implemented parent in get_isgw_ff_1P1.\n";
EvtISGW2FF.cc:  mup=1.0/(1.0/msq+1.0/msb);
EvtISGW2FF.cc:  mum=1.0/(1.0/msq-1.0/msb);
EvtISGW2FF.cc:  wt=1.0+(tm-t)/(2.0*mbb*mbx);
EvtISGW2FF.cc:  mqm = 0.1;
EvtISGW2FF.cc:    (16.0/(mbb*mbx*(33.0-2.0*nfp)))*
EvtISGW2FF.cc:    (pow((1.0+r2*(tm-t)/18.0),3.0));
EvtISGW2FF.cc:  f5sppsm = f5*pow(( mbb / mtb ),-1.5)*pow((mbx/mtx),0.5);
EvtISGW2FF.cc:              (((wt-1)*msd)/(6.0*sqrt(2.0*bb2)*mtx)));
EvtISGW2FF.cc:    rr = f5r*mtb*sqrt(bb2/2)*((1.0/mup)+((msd*mtx*(wt-1)*(wt-1))/
EvtISGW2FF.cc:    sppsm = msd*f5sppsm/(sqrt(2.0*bb2)*mtb)*(1.0-(msd/msq)+((msd*bb2)/
EvtISGW2FF.cc:    vv = -1.0*msd*f5v/(2.0*sqrt(3.0*bb2)*mtx)*
EvtISGW2FF.cc:      ((wt+1)/2.0+bb2*mtb/(2.0*msd*msq*msb));
EvtISGW2FF.cc:    rr = -2.0*mtb*sqrt(bb2/3.0)*f5r*(1.0/msq + mtx*msd*(wt-1)/(2.0*bb2)*
EvtISGW2FF.cc:		     ((wt+1)/(2.0*msq)-msd*bb2/(2.0*mum*mtx*bbx2)));
EvtISGW2FF.cc:    sppsm = -1.0*sqrt(3.0)*msd*f5sppsm/(2.0*sqrt(bb2)*mtb)*(1 - msd/(3.0*msq) -
EvtISGW2FF.cc:			    msd*bb2/(3.0*bbx2)*(1.0/(2.0*mum)-1.0/mup));
EvtISGW2FF.cc:    spmsm = -1.0*msd*f5spmsm/(2.0*sqrt(3.0*bb2)*mtx)*((2-wt)*mtx/msq +
EvtISGW2FF.cc:			   msd*bb2/bbx2*(1.0/(2.0*mum)-1.0/mup));        
EvtISGW2FF.cc:  if ( q2maxin > 1000. ) q2maxin=1000.;
EvtISGW2FF.cc:} //get_ff_isgw_1p1
EvtISGW2FF.cc:void EvtISGW2FF::EvtISGW2FF3P1 (EvtId parent,EvtId daugt, 
EvtISGW2FF.cc:  static EvtId D1P1P=EvtPDL::getId("D_1+");
EvtISGW2FF.cc:  static EvtId D1P1N=EvtPDL::getId("D_1-");
EvtISGW2FF.cc:  static EvtId D1P10=EvtPDL::getId("D_10");
EvtISGW2FF.cc:  static EvtId D1P1B=EvtPDL::getId("anti-D_10");
EvtISGW2FF.cc:  static EvtId D3P1P=EvtPDL::getId("D'_1+");
EvtISGW2FF.cc:  static EvtId D3P1N=EvtPDL::getId("D'_1-");
EvtISGW2FF.cc:  static EvtId D3P10=EvtPDL::getId("D'_10");
EvtISGW2FF.cc:  static EvtId D3P1B=EvtPDL::getId("anti-D'_10");
EvtISGW2FF.cc:  static EvtId D21S0P=EvtPDL::getId("D(2S)+");
EvtISGW2FF.cc:  static EvtId D21S0N=EvtPDL::getId("D(2S)-");
EvtISGW2FF.cc:  static EvtId D21S00=EvtPDL::getId("D(2S)0");
EvtISGW2FF.cc:  static EvtId D21S0B=EvtPDL::getId("anti-D(2S)0");
EvtISGW2FF.cc:  static EvtId D23S1P=EvtPDL::getId("D*(2S)+");
EvtISGW2FF.cc:  static EvtId D23S1N=EvtPDL::getId("D*(2S)-");
EvtISGW2FF.cc:  static EvtId D23S10=EvtPDL::getId("D*(2S)0");
EvtISGW2FF.cc:  static EvtId D23S1B=EvtPDL::getId("anti-D*(2S)0");
EvtISGW2FF.cc:  static EvtId A1P=EvtPDL::getId("a_1+");
EvtISGW2FF.cc:  static EvtId A1M=EvtPDL::getId("a_1-");
EvtISGW2FF.cc:  static EvtId A10=EvtPDL::getId("a_10");
EvtISGW2FF.cc:  static EvtId B1P=EvtPDL::getId("b_1+");
EvtISGW2FF.cc:  static EvtId B1M=EvtPDL::getId("b_1-");
EvtISGW2FF.cc:  static EvtId B10=EvtPDL::getId("b_10");
EvtISGW2FF.cc:  static EvtId H1=EvtPDL::getId("h_1");
EvtISGW2FF.cc:  static EvtId H1PR=EvtPDL::getId("h'_1");
EvtISGW2FF.cc:  static EvtId F1=EvtPDL::getId("f_1");
EvtISGW2FF.cc:  static EvtId F1PR=EvtPDL::getId("f'_1");
EvtISGW2FF.cc:  static EvtId K1P=EvtPDL::getId("K_1+");
EvtISGW2FF.cc:  static EvtId K1M=EvtPDL::getId("K_1-");
EvtISGW2FF.cc:  static EvtId K10=EvtPDL::getId("K_10");
EvtISGW2FF.cc:  static EvtId K1B=EvtPDL::getId("anti-K_10");
EvtISGW2FF.cc:  static EvtId K1STP=EvtPDL::getId("K'_1+");
EvtISGW2FF.cc:  static EvtId K1STM=EvtPDL::getId("K'_1-");
EvtISGW2FF.cc:  static EvtId K1ST0=EvtPDL::getId("K'_10");
EvtISGW2FF.cc:  static EvtId K1STB=EvtPDL::getId("anti-K'_10");
EvtISGW2FF.cc:  static EvtId D1P1SP=EvtPDL::getId("D_s1+");
EvtISGW2FF.cc:  static EvtId D1P1SN=EvtPDL::getId("D_s1-");
EvtISGW2FF.cc:  static EvtId D3P1SP=EvtPDL::getId("D'_s1+");
EvtISGW2FF.cc:  static EvtId D3P1SN=EvtPDL::getId("D'_s1-");
EvtISGW2FF.cc:    bb2=0.431*0.431;
EvtISGW2FF.cc:    mbb=5.31;
EvtISGW2FF.cc:    if (dgt==A10||dgt==A1P||dgt==A1M||dgt==F1||dgt==F1PR) {
EvtISGW2FF.cc:      mbx=(3.0*1.23+0.98+5.0*1.32+3.0*1.26)/12.0;
EvtISGW2FF.cc:      if (dgt==D3P1P||dgt==D3P1N||dgt==D3P10||dgt==D3P1B) {
EvtISGW2FF.cc:	msq=1.82;
EvtISGW2FF.cc:	report(ERROR,"EvtGen") << "Not implemented daugt:"<<daugt.getId()<<" in get_isgw_ff_3P1.\n";
EvtISGW2FF.cc:      msb=1.82;
EvtISGW2FF.cc:      mbb=1.963;
EvtISGW2FF.cc:      if (dgt==F1||dgt==F1PR||dgt==A10||dgt==A1P||dgt==A1M) {
EvtISGW2FF.cc:	mbx=(3.0*1.23+0.98+5.0*1.32+3.0*1.26)/12.0;
EvtISGW2FF.cc:	if (dgt==K1STM||dgt==K1STB||dgt==K1STP||dgt==K1ST0) {
EvtISGW2FF.cc:	  mbx=(3.0*1.40+1.43+5.0*1.43+3.0*1.27)/12.0;
EvtISGW2FF.cc:	  report(ERROR,"EvtGen") << "Not implemented daugt:"<<daugt.getId()<<" in get_isgw_ff_3P1.\n";
EvtISGW2FF.cc:      //BS -> cs constants added by djl on Jan. 21,1998
EvtISGW2FF.cc:	if  (dgt==D3P1SP||dgt==D3P1SN) {
EvtISGW2FF.cc:	  msq=1.82;
EvtISGW2FF.cc:	  bx2=0.41*0.41;
EvtISGW2FF.cc:	else if (dgt==K1STM||dgt==K1STB||dgt==K1STP||dgt==K1ST0) {
EvtISGW2FF.cc:	  mbx=(3.0*1.40+1.43+5.0*1.43+3.0*1.27)/12.0;
EvtISGW2FF.cc:	    report(ERROR,"EvtGen") << "Not implemented daugt:"<<daugt.getId()<<" in get_isgw_ff_1S0.\n";
EvtISGW2FF.cc:      report(ERROR,"EvtGen") << "Not implemented parent in get_isgw_ff_3P1.\n";
EvtISGW2FF.cc:  mup=1.0/(1.0/msq+1.0/msb);
EvtISGW2FF.cc:  mum=1.0/(1.0/msq-1.0/msb);
EvtISGW2FF.cc:  wt=1.0+(tm-t)/(2.0*mbb*mbx);
EvtISGW2FF.cc:  mqm = 0.1;
EvtISGW2FF.cc:    (16.0/(mbb*mbx*(33.0-2.0*nfp)))*
EvtISGW2FF.cc:    (pow((1.0+r2*(tm-t)/18.0),3.0));
EvtISGW2FF.cc:  f5cppcm = f5*pow(( mbb / mtb ),-1.5)*pow((mbx/mtx),0.5);
EvtISGW2FF.cc:    ql = -1.0*(msd*(5.0+wt)*f5q/(2.0*mtx*sqrt(bb2)*6.0));
EvtISGW2FF.cc:    ll = -1.0*mtb*sqrt(bb2)*f5l*(1/mum+ ( (msd*mtx*(wt-1)/bb2)*
EvtISGW2FF.cc:    cppcm = (-1.0*(msd*mtx*f5cppcm/(2.0*msq*mtb*sqrt(bb2)))*
EvtISGW2FF.cc:            (1-(msd*msq*bb2)/(2.0*mtx*mum*bbx2)));
EvtISGW2FF.cc:    cpmcm = 1.0*(msd*mtx*f5cpmcm/(2.0*msq*mtb*sqrt(bb2)))*
EvtISGW2FF.cc:    ql = f5q*sqrt(1.0/6.0)*msd/(sqrt(bb2)*mtx)*
EvtISGW2FF.cc:        (1.0-bb2*mtb/(4.0*msd*msq*msb));
EvtISGW2FF.cc:    ll = f5l*sqrt(2.0/3.0)*mtb*sqrt(bb2)*(1.0/(2.0*msq) - 3.0/(2.0*msb) +
EvtISGW2FF.cc:         msd*mtx*(wt-1)/bb2*(1.0/msq-msd*bb2/(2.0*mum*mtx*bbx2)));  
EvtISGW2FF.cc:      (1+msd*bx2/(2.0*msq*bbx2));
EvtISGW2FF.cc:  if ( q2maxin > 1000. ) q2maxin=1000.;
EvtISGW2FF.cc:} //get_ff_isgw_3p1
EvtISGW2FF.cc:  static EvtId D1P1P=EvtPDL::getId("D_1+");
EvtISGW2FF.cc:  static EvtId D1P1N=EvtPDL::getId("D_1-");
EvtISGW2FF.cc:  static EvtId D1P10=EvtPDL::getId("D_10");
EvtISGW2FF.cc:  static EvtId D1P1B=EvtPDL::getId("anti-D_10");
EvtISGW2FF.cc:  static EvtId D3P1P=EvtPDL::getId("D'_1+");
EvtISGW2FF.cc:  static EvtId D3P1N=EvtPDL::getId("D'_1-");
EvtISGW2FF.cc:  static EvtId D3P10=EvtPDL::getId("D'_10");
EvtISGW2FF.cc:  static EvtId D3P1B=EvtPDL::getId("anti-D'_10");
EvtISGW2FF.cc:  static EvtId D21S0P=EvtPDL::getId("D(2S)+");
EvtISGW2FF.cc:  static EvtId D21S0N=EvtPDL::getId("D(2S)-");
EvtISGW2FF.cc:  static EvtId D21S00=EvtPDL::getId("D(2S)0");
EvtISGW2FF.cc:  static EvtId D21S0B=EvtPDL::getId("anti-D(2S)0");
EvtISGW2FF.cc:  static EvtId D23S1P=EvtPDL::getId("D*(2S)+");
EvtISGW2FF.cc:  static EvtId D23S1N=EvtPDL::getId("D*(2S)-");
EvtISGW2FF.cc:  static EvtId D23S10=EvtPDL::getId("D*(2S)0");
EvtISGW2FF.cc:  static EvtId D23S1B=EvtPDL::getId("anti-D*(2S)0");
EvtISGW2FF.cc:  static EvtId A1P=EvtPDL::getId("a_1+");
EvtISGW2FF.cc:  static EvtId A1M=EvtPDL::getId("a_1-");
EvtISGW2FF.cc:  static EvtId A10=EvtPDL::getId("a_10");
EvtISGW2FF.cc:  static EvtId B1P=EvtPDL::getId("b_1+");
EvtISGW2FF.cc:  static EvtId B1M=EvtPDL::getId("b_1-");
EvtISGW2FF.cc:  static EvtId B10=EvtPDL::getId("b_10");
EvtISGW2FF.cc:  static EvtId H1=EvtPDL::getId("h_1");
EvtISGW2FF.cc:  static EvtId H1PR=EvtPDL::getId("h'_1");
EvtISGW2FF.cc:  static EvtId F1=EvtPDL::getId("f_1");
EvtISGW2FF.cc:  static EvtId F1PR=EvtPDL::getId("f'_1");
EvtISGW2FF.cc:  static EvtId K1P=EvtPDL::getId("K_1+");
EvtISGW2FF.cc:  static EvtId K1M=EvtPDL::getId("K_1-");
EvtISGW2FF.cc:  static EvtId K10=EvtPDL::getId("K_10");
EvtISGW2FF.cc:  static EvtId K1B=EvtPDL::getId("anti-K_10");
EvtISGW2FF.cc:  static EvtId K1STP=EvtPDL::getId("K'_1+");
EvtISGW2FF.cc:  static EvtId K1STM=EvtPDL::getId("K'_1-");
EvtISGW2FF.cc:  static EvtId K1ST0=EvtPDL::getId("K'_10");
EvtISGW2FF.cc:  static EvtId K1STB=EvtPDL::getId("anti-K'_10");
EvtISGW2FF.cc:  static EvtId D1P1SP=EvtPDL::getId("D_s1+");
EvtISGW2FF.cc:  static EvtId D1P1SN=EvtPDL::getId("D_s1-");
EvtISGW2FF.cc:  static EvtId D3P1SP=EvtPDL::getId("D'_s1+");
EvtISGW2FF.cc:  static EvtId D3P1SN=EvtPDL::getId("D'_s1-");
EvtISGW2FF.cc:    bb2=0.431*0.431;
EvtISGW2FF.cc:    mbb=5.31;
EvtISGW2FF.cc:      mbx=(3.0*1.23+0.98+5.0*1.32+3.0*1.26)/12.0;
EvtISGW2FF.cc:	msq=1.82;
EvtISGW2FF.cc:      msb=1.82;
EvtISGW2FF.cc:      mbb=1.963;
EvtISGW2FF.cc:	mbx=(3.0*1.23+0.98+5.0*1.32+3.0*1.26)/12.0;
EvtISGW2FF.cc:	  mbx=(3.0*1.40+1.43+5.0*1.43+3.0*1.27)/12.0;
EvtISGW2FF.cc:      //BS -> cs constants added by djl on Jan. 21,1998
EvtISGW2FF.cc:	  msq=1.82;
EvtISGW2FF.cc:	  bx2=0.41*0.41;
EvtISGW2FF.cc:	  mbx=(3.0*1.40+1.43+5.0*1.43+3.0*1.27)/12.0;
EvtISGW2FF.cc:	    report(ERROR,"EvtGen") << "Not implemented daugt:"<<daugt.getId()<<" in get_isgw_ff_1S0.\n";
EvtISGW2FF.cc:  mup=1.0/(1.0/msq+1.0/msb);
EvtISGW2FF.cc:  mum=1.0/(1.0/msq-1.0/msb);
EvtISGW2FF.cc:  wt=1.0+(tm-t)/(2.0*mbb*mbx);
EvtISGW2FF.cc:  mqm = 0.1;
EvtISGW2FF.cc:     (16.0/(mbb*mbx*(33.0-2.0*nfp)))*
EvtISGW2FF.cc:       (pow((1.0+r2*(tm-t)/18.0),3.0));
EvtISGW2FF.cc:  uppum = -1.0*f5uppum*sqrt(2.0/(3.0*bb2))*msd;
EvtISGW2FF.cc:  upmum = 1.0*f5upmum*sqrt(2.0/(3.0*bb2))*msd*mtb/mtx;
EvtISGW2FF.cc:  static EvtId D1P1P=EvtPDL::getId("D_1+");
EvtISGW2FF.cc:  static EvtId D1P1N=EvtPDL::getId("D_1-");
EvtISGW2FF.cc:  static EvtId D1P10=EvtPDL::getId("D_10");
EvtISGW2FF.cc:  static EvtId D1P1B=EvtPDL::getId("anti-D_10");
EvtISGW2FF.cc:  static EvtId D3P1P=EvtPDL::getId("D'_1+");
EvtISGW2FF.cc:  static EvtId D3P1N=EvtPDL::getId("D'_1-");
EvtISGW2FF.cc:  static EvtId D3P10=EvtPDL::getId("D'_10");
EvtISGW2FF.cc:  static EvtId D3P1B=EvtPDL::getId("anti-D'_10");
EvtISGW2FF.cc:  static EvtId D21S0P=EvtPDL::getId("D(2S)+");
EvtISGW2FF.cc:  static EvtId D21S0N=EvtPDL::getId("D(2S)-");
EvtISGW2FF.cc:  static EvtId D21S00=EvtPDL::getId("D(2S)0");
EvtISGW2FF.cc:  static EvtId D21S0B=EvtPDL::getId("anti-D(2S)0");
EvtISGW2FF.cc:  static EvtId D23S1P=EvtPDL::getId("D*(2S)+");
EvtISGW2FF.cc:  static EvtId D23S1N=EvtPDL::getId("D*(2S)-");
EvtISGW2FF.cc:  static EvtId D23S10=EvtPDL::getId("D*(2S)0");
EvtISGW2FF.cc:  static EvtId D23S1B=EvtPDL::getId("anti-D*(2S)0");
EvtISGW2FF.cc:  static EvtId A1P=EvtPDL::getId("a_1+");
EvtISGW2FF.cc:  static EvtId A1M=EvtPDL::getId("a_1-");
EvtISGW2FF.cc:  static EvtId A10=EvtPDL::getId("a_10");
EvtISGW2FF.cc:  static EvtId B1P=EvtPDL::getId("b_1+");
EvtISGW2FF.cc:  static EvtId B1M=EvtPDL::getId("b_1-");
EvtISGW2FF.cc:  static EvtId B10=EvtPDL::getId("b_10");
EvtISGW2FF.cc:  static EvtId H1=EvtPDL::getId("h_1");
EvtISGW2FF.cc:  static EvtId H1PR=EvtPDL::getId("h'_1");
EvtISGW2FF.cc:  static EvtId F1=EvtPDL::getId("f_1");
EvtISGW2FF.cc:  static EvtId F1PR=EvtPDL::getId("f'_1");
EvtISGW2FF.cc:  static EvtId K1P=EvtPDL::getId("K_1+");
EvtISGW2FF.cc:  static EvtId K1M=EvtPDL::getId("K_1-");
EvtISGW2FF.cc:  static EvtId K10=EvtPDL::getId("K_10");
EvtISGW2FF.cc:  static EvtId K1B=EvtPDL::getId("anti-K_10");
EvtISGW2FF.cc:  static EvtId K1STP=EvtPDL::getId("K'_1+");
EvtISGW2FF.cc:  static EvtId K1STM=EvtPDL::getId("K'_1-");
EvtISGW2FF.cc:  static EvtId K1ST0=EvtPDL::getId("K'_10");
EvtISGW2FF.cc:  static EvtId K1STB=EvtPDL::getId("anti-K'_10");
EvtISGW2FF.cc:  static EvtId D1P1SP=EvtPDL::getId("D_s1+");
EvtISGW2FF.cc:  static EvtId D1P1SN=EvtPDL::getId("D_s1-");
EvtISGW2FF.cc:  static EvtId D3P1SP=EvtPDL::getId("D'_s1+");
EvtISGW2FF.cc:  static EvtId D3P1SN=EvtPDL::getId("D'_s1-");
EvtISGW2FF.cc:    bb2=0.431*0.431;
EvtISGW2FF.cc:    mbb=5.31;
EvtISGW2FF.cc:      mbx=(3.0*1.23+0.98+5.0*1.32+3.0*1.26)/12.0;
EvtISGW2FF.cc:	msq=1.82;
EvtISGW2FF.cc:      msb=1.82;
EvtISGW2FF.cc:      mbb=1.963;
EvtISGW2FF.cc:	mbx=(3.0*1.23+0.98+5.0*1.32+3.0*1.26)/12.0;
EvtISGW2FF.cc:	  mbx=(3.0*1.40+1.43+5.0*1.43+3.0*1.27)/12.0;
EvtISGW2FF.cc:      //BS -> cs constants added by djl on Jan. 21,1998
EvtISGW2FF.cc:	  msq=1.82;
EvtISGW2FF.cc:	  bx2=0.41*0.41;
EvtISGW2FF.cc:	  mbx=(5.0*2.61+3.0*2.54)/8.0;
EvtISGW2FF.cc:	  mbx=(3.0*1.40+1.43+5.0*1.43+3.0*1.27)/12.0;
EvtISGW2FF.cc:	    report(ERROR,"EvtGen") << "Not implemented daugt:"<<daugt.getId()<<" in get_isgw_ff_1S0.\n";
EvtISGW2FF.cc:  mup=1.0/(1.0/msq+1.0/msb);
EvtISGW2FF.cc:  mum=1.0/(1.0/msq-1.0/msb);
EvtISGW2FF.cc:  wt=1.0+(tm-t)/(2.0*mbb*mbx);
EvtISGW2FF.cc:  mqm = 0.1;
EvtISGW2FF.cc:    (16.0/(mbb*mbx*(33.0-2.0*nfp)))*
EvtISGW2FF.cc:       (pow((1.0+r2*(tm-t)/18.0),3.0));
EvtISGW2FF.cc:  f5h = f5*pow(( mbb / mtb ),-1.5)*pow((mbx/mtx),-0.5);
EvtISGW2FF.cc:  f5bpmbm = f5*pow(( mbb / mtb ),-1.5)*pow((mbx/mtx),-0.5);
EvtISGW2FF.cc:  *hf = f5h*(msd/(sqrt(8.0*bb2)*mtb))*((1.0/msq)-(msd*bb2/(2.0*mum*
EvtISGW2FF.cc:  *kf = f5k*(msd/(sqrt(2.0*bb2)))*(1.0+wt);
EvtISGW2FF.cc:          (1.0-(msd*bx2/(2.0*mtb*bbx2)));
EvtISGW2FF.cc:  bpmbm = -1.0*(msd*f5bpmbm/(sqrt(2.0*bb2)*msb*mtx))*(1.0-
EvtISGW2FF.cc:          ((msd*msb*bx2)/(2.0*mup*mtb*bbx2))+((msd*bx2*(1.0-
EvtISGW2FF.cc:} //get_ff_isgw_1p1
EvtISGW2FF.cc:   temp = 2+((2.0*z)/(1-z))*log(z);
EvtISGW2FF.cc:   temp = -1.0*temp;
EvtISGW2FF.cc:    if ( massq < 1.85 ) {
EvtISGW2FF.cc:    temp = 12.0*EvtConst::pi / ( 33.0 - 2.0*nflav) /
EvtISGW2FF.cc:    if ( mass < 1.85 ) {
EvtISGW2FF.cc:    temp = 12.0*EvtConst::pi / ( 33.0 - 2.0*nflav) /
EvtISGW2FF.hh://      Copyright (C) 1998      Caltech, UCSB
EvtISGW2FF.hh://    DJL/RYD     August 11, 1998         Module created
EvtISGW2FF.hh:                       double t, double mass, double *a1f,
EvtISGW2FF.hh:  void EvtISGW2FF3S1( EvtId parent, EvtId daught, 
EvtISGW2FF.hh:  void EvtISGW2FF23S1( EvtId parent, EvtId daught,
EvtISGW2FF.hh:  void EvtISGW2FF3P1( EvtId parent, EvtId daught, 
EvtISGW2FF.hh:  void EvtISGW2FF1S0( EvtId parent, EvtId daught, 
EvtISGW2FF.hh:  void EvtISGW2FF21S0( EvtId parent, EvtId daught,
EvtISGW2FF.hh:  void EvtISGW2FF1P1( EvtId parent, EvtId daught, 
EvtISGW2FF.hh:  double EvtGetas( double mass,double mass1  );
EvtISGW2.hh://      Copyright (C) 1998      Caltech, UCSB
EvtISGW2.hh:// model, as described in PRD 52 5 (1995) by 
EvtISGW2.hh://    DJL/RYD     September 25, 1996         Module created
EvtISGW.cc://      Copyright (C) 1998      Caltech, UCSB
EvtISGW.cc://    DJL/RYD     September 25, 1996         Module created
EvtISGW.cc:  checkSpinDaughter(1,EvtSpinType::DIRAC);
EvtISGWFF.cc://      Copyright (C) 1998      Caltech, UCSB
EvtISGWFF.cc://    DJL     April 17, 1998        Module created
EvtISGWFF.cc:  static EvtId D1P1P=EvtPDL::getId("D_1+");
EvtISGWFF.cc:  static EvtId D1P1N=EvtPDL::getId("D_1-");
EvtISGWFF.cc:  static EvtId D1P10=EvtPDL::getId("D_10");
EvtISGWFF.cc:  static EvtId D1P1B=EvtPDL::getId("anti-D_10");
EvtISGWFF.cc:  static EvtId D3P1P=EvtPDL::getId("D'_1+");
EvtISGWFF.cc:  static EvtId D3P1N=EvtPDL::getId("D'_1-");
EvtISGWFF.cc:  static EvtId D3P10=EvtPDL::getId("D'_10");
EvtISGWFF.cc:  static EvtId D3P1B=EvtPDL::getId("anti-D'_10");
EvtISGWFF.cc:  static EvtId D21S0P=EvtPDL::getId("hi");
EvtISGWFF.cc:  static EvtId D21S0N=EvtPDL::getId("hi");
EvtISGWFF.cc:  static EvtId D21S00=EvtPDL::getId("hi");
EvtISGWFF.cc:  static EvtId D21S0B=EvtPDL::getId("hi");
EvtISGWFF.cc:  static EvtId D23S1P=EvtPDL::getId("hi");
EvtISGWFF.cc:  static EvtId D23S1N=EvtPDL::getId("hi");
EvtISGWFF.cc:  static EvtId D23S10=EvtPDL::getId("hi");
EvtISGWFF.cc:  static EvtId D23S1B=EvtPDL::getId("hi");
EvtISGWFF.cc:  static EvtId A1P=EvtPDL::getId("a_1+");
EvtISGWFF.cc:  static EvtId A1M=EvtPDL::getId("a_1-");
EvtISGWFF.cc:  static EvtId A10=EvtPDL::getId("a_10");
EvtISGWFF.cc:  static EvtId B1P=EvtPDL::getId("b_1+");
EvtISGWFF.cc:  static EvtId B1M=EvtPDL::getId("b_1-");
EvtISGWFF.cc:  static EvtId B10=EvtPDL::getId("b_10");
EvtISGWFF.cc:  static EvtId H1=EvtPDL::getId("h_1");
EvtISGWFF.cc:  static EvtId H1PR=EvtPDL::getId("h'_1");
EvtISGWFF.cc:  static EvtId F1=EvtPDL::getId("f_1");
EvtISGWFF.cc:  static EvtId F1PR=EvtPDL::getId("f'_1");
EvtISGWFF.cc:  static EvtId K1P=EvtPDL::getId("K_1+");
EvtISGWFF.cc:  static EvtId K1M=EvtPDL::getId("K_1-");
EvtISGWFF.cc:  static EvtId K10=EvtPDL::getId("K_10");
EvtISGWFF.cc:  static EvtId K1B=EvtPDL::getId("anti-K_10");
EvtISGWFF.cc:  static EvtId K1STP=EvtPDL::getId("K'_1+");
EvtISGWFF.cc:  static EvtId K1STM=EvtPDL::getId("K'_1-");
EvtISGWFF.cc:  static EvtId K1ST0=EvtPDL::getId("K'_10");
EvtISGWFF.cc:  static EvtId K1STB=EvtPDL::getId("anti-K'_10");
EvtISGWFF.cc:  static EvtId D1P1SP=EvtPDL::getId("D_s1+");
EvtISGWFF.cc:  static EvtId D1P1SN=EvtPDL::getId("D_s1-");
EvtISGWFF.cc:  static EvtId D3P1SP=EvtPDL::getId("D'_s1*+");
EvtISGWFF.cc:  static EvtId D3P1SN=EvtPDL::getId("D'_s1*-");
EvtISGWFF.cc:      EvtISGW1FF1S0(parent,daught,t,mass,fpf,&fmf);
EvtISGWFF.cc:      daught==D21S0P||daught==D21S0B||daught==D21S0N||daught==D21S00){
EvtISGWFF.cc:      EvtISGW1FF21S0(parent,daught,t,mass,fpf,&fmf);
EvtISGWFF.cc:    EvtISGW1FF3P0(parent,daught,t,mass,fpf,&fmf);
EvtISGWFF.cc:  static EvtId D1P1P=EvtPDL::getId("D_1+");
EvtISGWFF.cc:  static EvtId D1P1N=EvtPDL::getId("D_1-");
EvtISGWFF.cc:  static EvtId D1P10=EvtPDL::getId("D_10");
EvtISGWFF.cc:  static EvtId D1P1B=EvtPDL::getId("anti-D_10");
EvtISGWFF.cc:  static EvtId D3P1P=EvtPDL::getId("D'_1+");
EvtISGWFF.cc:  static EvtId D3P1N=EvtPDL::getId("D'_1-");
EvtISGWFF.cc:  static EvtId D3P10=EvtPDL::getId("D'_10");
EvtISGWFF.cc:  static EvtId D3P1B=EvtPDL::getId("anti-D'_10");
EvtISGWFF.cc:  static EvtId D21S0P=EvtPDL::getId("hi");
EvtISGWFF.cc:  static EvtId D21S0N=EvtPDL::getId("hi");
EvtISGWFF.cc:  static EvtId D21S00=EvtPDL::getId("hi");
EvtISGWFF.cc:  static EvtId D21S0B=EvtPDL::getId("hi");
EvtISGWFF.cc:  static EvtId D23S1P=EvtPDL::getId("hi");
EvtISGWFF.cc:  static EvtId D23S1N=EvtPDL::getId("hi");
EvtISGWFF.cc:  static EvtId D23S10=EvtPDL::getId("hi");
EvtISGWFF.cc:  static EvtId D23S1B=EvtPDL::getId("hi");
EvtISGWFF.cc:  static EvtId A1P=EvtPDL::getId("a_1+");
EvtISGWFF.cc:  static EvtId A1M=EvtPDL::getId("a_1-");
EvtISGWFF.cc:  static EvtId A10=EvtPDL::getId("a_10");
EvtISGWFF.cc:  static EvtId B1P=EvtPDL::getId("b_1+");
EvtISGWFF.cc:  static EvtId B1M=EvtPDL::getId("b_1-");
EvtISGWFF.cc:  static EvtId B10=EvtPDL::getId("b_10");
EvtISGWFF.cc:  static EvtId H1=EvtPDL::getId("h_1");
EvtISGWFF.cc:  static EvtId H1PR=EvtPDL::getId("h'_1");
EvtISGWFF.cc:  static EvtId F1=EvtPDL::getId("f_1");
EvtISGWFF.cc:  static EvtId F1PR=EvtPDL::getId("f'_1");
EvtISGWFF.cc:  static EvtId K1P=EvtPDL::getId("K_1+");
EvtISGWFF.cc:  static EvtId K1M=EvtPDL::getId("K_1-");
EvtISGWFF.cc:  static EvtId K10=EvtPDL::getId("K_10");
EvtISGWFF.cc:  static EvtId K1B=EvtPDL::getId("anti-K_10");
EvtISGWFF.cc:  static EvtId K1STP=EvtPDL::getId("K'_1+");
EvtISGWFF.cc:  static EvtId K1STM=EvtPDL::getId("K'_1-");
EvtISGWFF.cc:  static EvtId K1ST0=EvtPDL::getId("K'_10");
EvtISGWFF.cc:  static EvtId K1STB=EvtPDL::getId("anti-K'_10");
EvtISGWFF.cc:  static EvtId D1P1SP=EvtPDL::getId("D_s1+");
EvtISGWFF.cc:  static EvtId D1P1SN=EvtPDL::getId("D_s1-");
EvtISGWFF.cc:  static EvtId D3P1SP=EvtPDL::getId("D'_s1*+");
EvtISGWFF.cc:  static EvtId D3P1SN=EvtPDL::getId("D'_s1*-");
EvtISGWFF.cc:    EvtISGW1FF3P2(parent,daught,t,mass,hf,kf,bpf,bmf);
EvtISGWFF.cc:                       double t, double mass, double *a1f,
EvtISGWFF.cc:  static EvtId D1P1P=EvtPDL::getId("D_1+");
EvtISGWFF.cc:  static EvtId D1P1N=EvtPDL::getId("D_1-");
EvtISGWFF.cc:  static EvtId D1P10=EvtPDL::getId("D_10");
EvtISGWFF.cc:  static EvtId D1P1B=EvtPDL::getId("anti-D_10");
EvtISGWFF.cc:  static EvtId D3P1P=EvtPDL::getId("D'_1+");
EvtISGWFF.cc:  static EvtId D3P1N=EvtPDL::getId("D'_1-");
EvtISGWFF.cc:  static EvtId D3P10=EvtPDL::getId("D'_10");
EvtISGWFF.cc:  static EvtId D3P1B=EvtPDL::getId("anti-D'_10");
EvtISGWFF.cc:  static EvtId D21S0P=EvtPDL::getId("hi");
EvtISGWFF.cc:  static EvtId D21S0N=EvtPDL::getId("hi");
EvtISGWFF.cc:  static EvtId D21S00=EvtPDL::getId("hi");
EvtISGWFF.cc:  static EvtId D21S0B=EvtPDL::getId("hi");
EvtISGWFF.cc:  static EvtId D23S1P=EvtPDL::getId("hi");
EvtISGWFF.cc:  static EvtId D23S1N=EvtPDL::getId("hi");
EvtISGWFF.cc:  static EvtId D23S10=EvtPDL::getId("hi");
EvtISGWFF.cc:  static EvtId D23S1B=EvtPDL::getId("hi");
EvtISGWFF.cc:  static EvtId A1P=EvtPDL::getId("a_1+");
EvtISGWFF.cc:  static EvtId A1M=EvtPDL::getId("a_1-");
EvtISGWFF.cc:  static EvtId A10=EvtPDL::getId("a_10");
EvtISGWFF.cc:  static EvtId B1P=EvtPDL::getId("b_1+");
EvtISGWFF.cc:  static EvtId B1M=EvtPDL::getId("b_1-");
EvtISGWFF.cc:  static EvtId B10=EvtPDL::getId("b_10");
EvtISGWFF.cc:  static EvtId H1=EvtPDL::getId("h_1");
EvtISGWFF.cc:  static EvtId H1PR=EvtPDL::getId("h'_1");
EvtISGWFF.cc:  static EvtId F1=EvtPDL::getId("f_1");
EvtISGWFF.cc:  static EvtId F1PR=EvtPDL::getId("f'_1");
EvtISGWFF.cc:  static EvtId K1P=EvtPDL::getId("K_1+");
EvtISGWFF.cc:  static EvtId K1M=EvtPDL::getId("K_1-");
EvtISGWFF.cc:  static EvtId K10=EvtPDL::getId("K_10");
EvtISGWFF.cc:  static EvtId K1B=EvtPDL::getId("anti-K_10");
EvtISGWFF.cc:  static EvtId K1STP=EvtPDL::getId("K'_1+");
EvtISGWFF.cc:  static EvtId K1STM=EvtPDL::getId("K'_1-");
EvtISGWFF.cc:  static EvtId K1ST0=EvtPDL::getId("K'_10");
EvtISGWFF.cc:  static EvtId K1STB=EvtPDL::getId("anti-K'_10");
EvtISGWFF.cc:  static EvtId D1P1SP=EvtPDL::getId("D_s1+");
EvtISGWFF.cc:  static EvtId D1P1SN=EvtPDL::getId("D_s1-");
EvtISGWFF.cc:  static EvtId D3P1SP=EvtPDL::getId("D'_s1*+");
EvtISGWFF.cc:  static EvtId D3P1SN=EvtPDL::getId("D'_s1*-");
EvtISGWFF.cc:     EvtISGW1FF3S1(parent,daught,t,mass,&ff,&gf,&apf,&amf);
EvtISGWFF.cc:   if (daught==B10||daught==B1P||daught==B1M||daught==H1||
EvtISGWFF.cc:       daught==H1PR||daught==D1P1P||daught==D1P10||daught==D1P1B||
EvtISGWFF.cc:       daught==D1P1SP||daught==D1P1SN||
EvtISGWFF.cc:       daught==D1P1N||daught==K10||daught==K1B||daught==K1P||
EvtISGWFF.cc:       daught==K1M) {
EvtISGWFF.cc:     EvtISGW1FF1P1(parent,daught,t,mass,&ff,&gf,&apf,&amf);
EvtISGWFF.cc:       daught==D23S1P||daught==D23S1B||daught==D23S1N||daught==D23S10){
EvtISGWFF.cc:     EvtISGW1FF23S1(parent,daught,t,mass,&ff,&gf,&apf,&amf);
EvtISGWFF.cc:   if (daught==A10||daught==A1P||daught==A1M||daught==F1||
EvtISGWFF.cc:                  daught==F1PR||daught==D3P1P||daught==D3P10||daught==D3P1B||
EvtISGWFF.cc:       daught==D3P1N||daught==K1STM||daught==K1STB||daught==K1STP||
EvtISGWFF.cc:       daught==D3P1SP||daught==D3P1SN||
EvtISGWFF.cc:       daught==K1ST0) {
EvtISGWFF.cc:     EvtISGW1FF3P1(parent,daught,t,mass,&ff,&gf,&apf,&amf);
EvtISGWFF.cc:   *a1f = (ff)/(mb+mass);
EvtISGWFF.cc:   *a2f = -1.0*(apf)*(mb+mass);
EvtISGWFF.cc:   double a3f = ((mb+mass)/(2.0*mass))*(*a1f) -
EvtISGWFF.cc:void EvtISGWFF::EvtISGW1FF3P2 (EvtId parent,EvtId daugt,
EvtISGWFF.cc:  static EvtId D1P1P=EvtPDL::getId("D_1+");
EvtISGWFF.cc:  static EvtId D1P1N=EvtPDL::getId("D_1-");
EvtISGWFF.cc:  static EvtId D1P10=EvtPDL::getId("D_10");
EvtISGWFF.cc:  static EvtId D1P1B=EvtPDL::getId("anti-D_10");
EvtISGWFF.cc:  static EvtId D3P1P=EvtPDL::getId("D'_1+");
EvtISGWFF.cc:  static EvtId D3P1N=EvtPDL::getId("D'_1-");
EvtISGWFF.cc:  static EvtId D3P10=EvtPDL::getId("D'_10");
EvtISGWFF.cc:  static EvtId D3P1B=EvtPDL::getId("anti-D'_10");
EvtISGWFF.cc:  static EvtId D21S0P=EvtPDL::getId("hi");
EvtISGWFF.cc:  static EvtId D21S0N=EvtPDL::getId("hi");
EvtISGWFF.cc:  static EvtId D21S00=EvtPDL::getId("hi");
EvtISGWFF.cc:  static EvtId D21S0B=EvtPDL::getId("hi");
EvtISGWFF.cc:  static EvtId D23S1P=EvtPDL::getId("hi");
EvtISGWFF.cc:  static EvtId D23S1N=EvtPDL::getId("hi");
EvtISGWFF.cc:  static EvtId D23S10=EvtPDL::getId("hi");
EvtISGWFF.cc:  static EvtId D23S1B=EvtPDL::getId("hi");
EvtISGWFF.cc:  static EvtId A1P=EvtPDL::getId("a_1+");
EvtISGWFF.cc:  static EvtId A1M=EvtPDL::getId("a_1-");
EvtISGWFF.cc:  static EvtId A10=EvtPDL::getId("a_10");
EvtISGWFF.cc:  static EvtId B1P=EvtPDL::getId("b_1+");
EvtISGWFF.cc:  static EvtId B1M=EvtPDL::getId("b_1-");
EvtISGWFF.cc:  static EvtId B10=EvtPDL::getId("b_10");
EvtISGWFF.cc:  static EvtId H1=EvtPDL::getId("h_1");
EvtISGWFF.cc:  static EvtId H1PR=EvtPDL::getId("h'_1");
EvtISGWFF.cc:  static EvtId F1=EvtPDL::getId("f_1");
EvtISGWFF.cc:  static EvtId F1PR=EvtPDL::getId("f'_1");
EvtISGWFF.cc:  static EvtId K1P=EvtPDL::getId("K_1+");
EvtISGWFF.cc:  static EvtId K1M=EvtPDL::getId("K_1-");
EvtISGWFF.cc:  static EvtId K10=EvtPDL::getId("K_10");
EvtISGWFF.cc:  static EvtId K1B=EvtPDL::getId("anti-K_10");
EvtISGWFF.cc:  static EvtId K1STP=EvtPDL::getId("K'_1+");
EvtISGWFF.cc:  static EvtId K1STM=EvtPDL::getId("K'_1-");
EvtISGWFF.cc:  static EvtId K1ST0=EvtPDL::getId("K'_10");
EvtISGWFF.cc:  static EvtId K1STB=EvtPDL::getId("anti-K'_10");
EvtISGWFF.cc:  static EvtId D1P1SP=EvtPDL::getId("D_s1+");
EvtISGWFF.cc:  static EvtId D1P1SN=EvtPDL::getId("D_s1-");
EvtISGWFF.cc:  static EvtId D3P1SP=EvtPDL::getId("D'_s1*+");
EvtISGWFF.cc:  static EvtId D3P1SN=EvtPDL::getId("D'_s1*-");
EvtISGWFF.cc:    bb2=0.41*0.41;
EvtISGWFF.cc:	msq=1.82;
EvtISGWFF.cc:	report(ERROR,"EvtGen") << "Not implemented daugt in get_isgw_ff_3P1.\n";
EvtISGWFF.cc:    report(ERROR,"EvtGen") << "Not implemented parent in get_isgw_ff_3P1.\n";
EvtISGWFF.cc:  mup=1.0/(1.0/msq+1.0/msb);
EvtISGWFF.cc:  mum=1.0/(1.0/msq-1.0/msb);
EvtISGWFF.cc:       exp(-1.0*((msd*msd*(tm-t)/(4.0*mtb*mtx*kap*bbx2))));
EvtISGWFF.cc:  *hf = f5*(msd/(sqrt(8.0*bb2)*mtb))*((1.0/msq)-(msd*bb2/(2.0*mum*
EvtISGWFF.cc:  *bpf = (-1.0*f5*msd/(sqrt(8.0*bb2)*msb*mtx))*(1.0-(msd*msb*bx2/(
EvtISGWFF.cc:         2.0*mup*mtb*bbx2))+(msd*msb*bx2*(1.0-(msd*bx2/(2.0*mtb*bbx2)))/
EvtISGWFF.cc:} //get_ff_isgw_1p1
EvtISGWFF.cc:void EvtISGWFF::EvtISGW1FF1S0 ( EvtId parent, EvtId daugt,
EvtISGWFF.cc:  static EvtId D1P1P=EvtPDL::getId("D_1+");
EvtISGWFF.cc:  static EvtId D1P1N=EvtPDL::getId("D_1-");
EvtISGWFF.cc:  static EvtId D1P10=EvtPDL::getId("D_10");
EvtISGWFF.cc:  static EvtId D1P1B=EvtPDL::getId("anti-D_10");
EvtISGWFF.cc:  static EvtId D3P1P=EvtPDL::getId("D'_1+");
EvtISGWFF.cc:  static EvtId D3P1N=EvtPDL::getId("D'_1-");
EvtISGWFF.cc:  static EvtId D3P10=EvtPDL::getId("D'_10");
EvtISGWFF.cc:  static EvtId D3P1B=EvtPDL::getId("anti-D'_10");
EvtISGWFF.cc:  static EvtId D21S0P=EvtPDL::getId("hi");
EvtISGWFF.cc:  static EvtId D21S0N=EvtPDL::getId("hi");
EvtISGWFF.cc:  static EvtId D21S00=EvtPDL::getId("hi");
EvtISGWFF.cc:  static EvtId D21S0B=EvtPDL::getId("hi");
EvtISGWFF.cc:  static EvtId D23S1P=EvtPDL::getId("hi");
EvtISGWFF.cc:  static EvtId D23S1N=EvtPDL::getId("hi");
EvtISGWFF.cc:  static EvtId D23S10=EvtPDL::getId("hi");
EvtISGWFF.cc:  static EvtId D23S1B=EvtPDL::getId("hi");
EvtISGWFF.cc:  static EvtId A1P=EvtPDL::getId("a_1+");
EvtISGWFF.cc:  static EvtId A1M=EvtPDL::getId("a_1-");
EvtISGWFF.cc:  static EvtId A10=EvtPDL::getId("a_10");
EvtISGWFF.cc:  static EvtId B1P=EvtPDL::getId("b_1+");
EvtISGWFF.cc:  static EvtId B1M=EvtPDL::getId("b_1-");
EvtISGWFF.cc:  static EvtId B10=EvtPDL::getId("b_10");
EvtISGWFF.cc:  static EvtId H1=EvtPDL::getId("h_1");
EvtISGWFF.cc:  static EvtId H1PR=EvtPDL::getId("h'_1");
EvtISGWFF.cc:  static EvtId F1=EvtPDL::getId("f_1");
EvtISGWFF.cc:  static EvtId F1PR=EvtPDL::getId("f'_1");
EvtISGWFF.cc:  static EvtId K1P=EvtPDL::getId("K_1+");
EvtISGWFF.cc:  static EvtId K1M=EvtPDL::getId("K_1-");
EvtISGWFF.cc:  static EvtId K10=EvtPDL::getId("K_10");
EvtISGWFF.cc:  static EvtId K1B=EvtPDL::getId("anti-K_10");
EvtISGWFF.cc:  static EvtId K1STP=EvtPDL::getId("K'_1+");
EvtISGWFF.cc:  static EvtId K1STM=EvtPDL::getId("K'_1-");
EvtISGWFF.cc:  static EvtId K1ST0=EvtPDL::getId("K'_10");
EvtISGWFF.cc:  static EvtId K1STB=EvtPDL::getId("anti-K'_10");
EvtISGWFF.cc:  static EvtId D1P1SP=EvtPDL::getId("D_s1+");
EvtISGWFF.cc:  static EvtId D1P1SN=EvtPDL::getId("D_s1-");
EvtISGWFF.cc:  static EvtId D3P1SP=EvtPDL::getId("D'_s1*+");
EvtISGWFF.cc:  static EvtId D3P1SN=EvtPDL::getId("D'_s1*-");
EvtISGWFF.cc:    bb2=0.41*0.41;
EvtISGWFF.cc:      bx2=0.31*0.31;
EvtISGWFF.cc:	msq=1.82;
EvtISGWFF.cc:	report(ERROR,"EvtGen") << "Not implemented daugt in get_isgw_ff_1S0.\n";
EvtISGWFF.cc:    report(ERROR,"EvtGen") << "Not implemented parent in get_isgw_ff_1S0.\n";
EvtISGWFF.cc:  mup=1.0/(1.0/msq+1.0/msb);
EvtISGWFF.cc:  mum=1.0/(1.0/msq-1.0/msb);
EvtISGWFF.cc:    exp(-1.0*((msd*msd*(tm-t)/(4.0*mtb*mtx*kap*bbx2))));
EvtISGWFF.cc:  *fpf = f3*(1+(msb/(2.0*mum))-(msb*msq*msd*bb2/(4.0*mup*mum*mtx*bbx2)));
EvtISGWFF.cc:  *fmf = f3*(1.0-(mtb+mtx)*(0.5/msq-(msd*bb2/(4.0*mup*mtx*bbx2))));
EvtISGWFF.cc:} //get_ff_isgw_1s0
EvtISGWFF.cc:void  EvtISGWFF::EvtISGW1FF3S1(EvtId parent,EvtId daugt,double t,
EvtISGWFF.cc:  static EvtId D1P1P=EvtPDL::getId("D_1+");
EvtISGWFF.cc:  static EvtId D1P1N=EvtPDL::getId("D_1-");
EvtISGWFF.cc:  static EvtId D1P10=EvtPDL::getId("D_10");
EvtISGWFF.cc:  static EvtId D1P1B=EvtPDL::getId("anti-D_10");
EvtISGWFF.cc:  static EvtId D3P1P=EvtPDL::getId("D'_1+");
EvtISGWFF.cc:  static EvtId D3P1N=EvtPDL::getId("D'_1-");
EvtISGWFF.cc:  static EvtId D3P10=EvtPDL::getId("D'_10");
EvtISGWFF.cc:  static EvtId D3P1B=EvtPDL::getId("anti-D'_10");
EvtISGWFF.cc:  static EvtId D21S0P=EvtPDL::getId("hi");
EvtISGWFF.cc:  static EvtId D21S0N=EvtPDL::getId("hi");
EvtISGWFF.cc:  static EvtId D21S00=EvtPDL::getId("hi");
EvtISGWFF.cc:  static EvtId D21S0B=EvtPDL::getId("hi");
EvtISGWFF.cc:  static EvtId D23S1P=EvtPDL::getId("hi");
EvtISGWFF.cc:  static EvtId D23S1N=EvtPDL::getId("hi");
EvtISGWFF.cc:  static EvtId D23S10=EvtPDL::getId("hi");
EvtISGWFF.cc:  static EvtId D23S1B=EvtPDL::getId("hi");
EvtISGWFF.cc:  static EvtId A1P=EvtPDL::getId("a_1+");
EvtISGWFF.cc:  static EvtId A1M=EvtPDL::getId("a_1-");
EvtISGWFF.cc:  static EvtId A10=EvtPDL::getId("a_10");
EvtISGWFF.cc:  static EvtId B1P=EvtPDL::getId("b_1+");
EvtISGWFF.cc:  static EvtId B1M=EvtPDL::getId("b_1-");
EvtISGWFF.cc:  static EvtId B10=EvtPDL::getId("b_10");
EvtISGWFF.cc:  static EvtId H1=EvtPDL::getId("h_1");
EvtISGWFF.cc:  static EvtId H1PR=EvtPDL::getId("h'_1");
EvtISGWFF.cc:  static EvtId F1=EvtPDL::getId("f_1");
EvtISGWFF.cc:  static EvtId F1PR=EvtPDL::getId("f'_1");
EvtISGWFF.cc:  static EvtId K1P=EvtPDL::getId("K_1+");
EvtISGWFF.cc:  static EvtId K1M=EvtPDL::getId("K_1-");
EvtISGWFF.cc:  static EvtId K10=EvtPDL::getId("K_10");
EvtISGWFF.cc:  static EvtId K1B=EvtPDL::getId("anti-K_10");
EvtISGWFF.cc:  static EvtId K1STP=EvtPDL::getId("K'_1+");
EvtISGWFF.cc:  static EvtId K1STM=EvtPDL::getId("K'_1-");
EvtISGWFF.cc:  static EvtId K1ST0=EvtPDL::getId("K'_10");
EvtISGWFF.cc:  static EvtId K1STB=EvtPDL::getId("anti-K'_10");
EvtISGWFF.cc:  static EvtId D1P1SP=EvtPDL::getId("D_s1+");
EvtISGWFF.cc:  static EvtId D1P1SN=EvtPDL::getId("D_s1-");
EvtISGWFF.cc:  static EvtId D3P1SP=EvtPDL::getId("D'_s1*+");
EvtISGWFF.cc:  static EvtId D3P1SN=EvtPDL::getId("D'_s1*-");
EvtISGWFF.cc:    bb2=0.41*0.41;
EvtISGWFF.cc:      msq=1.82;
EvtISGWFF.cc:	bx2=0.31*0.31;
EvtISGWFF.cc:	report(ERROR,"EvtGen") << "Not implemented daugt in get_isgw_ff_3S1.\n";
EvtISGWFF.cc:    report(ERROR,"EvtGen") << "Not implemented parent in get_isgw_ff_3S1.\n";
EvtISGWFF.cc:  mup=1.0/(1.0/msq+1.0/msb);
EvtISGWFF.cc:  mum=1.0/(1.0/msq-1.0/msb);
EvtISGWFF.cc:       exp(-1.0*((msd*msd*(tm-t)/(4.0*mtb*mtx*kap*bbx2))));
EvtISGWFF.cc:  *g=0.5*f3*((1/msq)-(msd*bb2/(2.0*mum*mtx*bbx2)));
EvtISGWFF.cc:  *ap=(-1.0*f3/(2.0*mtx))*(1.0+(msd*(bb2-bx2)/(msb
EvtISGWFF.cc:void EvtISGWFF::EvtISGW1FF23S1 (EvtId parent,EvtId daugt,
EvtISGWFF.cc:  static EvtId D1P1P=EvtPDL::getId("D_1+");
EvtISGWFF.cc:  static EvtId D1P1N=EvtPDL::getId("D_1-");
EvtISGWFF.cc:  static EvtId D1P10=EvtPDL::getId("D_10");
EvtISGWFF.cc:  static EvtId D1P1B=EvtPDL::getId("anti-D_10");
EvtISGWFF.cc:  static EvtId D3P1P=EvtPDL::getId("D'_1+");
EvtISGWFF.cc:  static EvtId D3P1N=EvtPDL::getId("D'_1-");
EvtISGWFF.cc:  static EvtId D3P10=EvtPDL::getId("D'_10");
EvtISGWFF.cc:  static EvtId D3P1B=EvtPDL::getId("anti-D'_10");
EvtISGWFF.cc:  static EvtId D21S0P=EvtPDL::getId("hi");
EvtISGWFF.cc:  static EvtId D21S0N=EvtPDL::getId("hi");
EvtISGWFF.cc:  static EvtId D21S00=EvtPDL::getId("hi");
EvtISGWFF.cc:  static EvtId D21S0B=EvtPDL::getId("hi");
EvtISGWFF.cc:  static EvtId D23S1P=EvtPDL::getId("hi");
EvtISGWFF.cc:  static EvtId D23S1N=EvtPDL::getId("hi");
EvtISGWFF.cc:  static EvtId D23S10=EvtPDL::getId("hi");
EvtISGWFF.cc:  static EvtId D23S1B=EvtPDL::getId("hi");
EvtISGWFF.cc:  static EvtId A1P=EvtPDL::getId("a_1+");
EvtISGWFF.cc:  static EvtId A1M=EvtPDL::getId("a_1-");
EvtISGWFF.cc:  static EvtId A10=EvtPDL::getId("a_10");
EvtISGWFF.cc:  static EvtId B1P=EvtPDL::getId("b_1+");
EvtISGWFF.cc:  static EvtId B1M=EvtPDL::getId("b_1-");
EvtISGWFF.cc:  static EvtId B10=EvtPDL::getId("b_10");
EvtISGWFF.cc:  static EvtId H1=EvtPDL::getId("h_1");
EvtISGWFF.cc:  static EvtId H1PR=EvtPDL::getId("h'_1");
EvtISGWFF.cc:  static EvtId F1=EvtPDL::getId("f_1");
EvtISGWFF.cc:  static EvtId F1PR=EvtPDL::getId("f'_1");
EvtISGWFF.cc:  static EvtId K1P=EvtPDL::getId("K_1+");
EvtISGWFF.cc:  static EvtId K1M=EvtPDL::getId("K_1-");
EvtISGWFF.cc:  static EvtId K10=EvtPDL::getId("K_10");
EvtISGWFF.cc:  static EvtId K1B=EvtPDL::getId("anti-K_10");
EvtISGWFF.cc:  static EvtId K1STP=EvtPDL::getId("K'_1+");
EvtISGWFF.cc:  static EvtId K1STM=EvtPDL::getId("K'_1-");
EvtISGWFF.cc:  static EvtId K1ST0=EvtPDL::getId("K'_10");
EvtISGWFF.cc:  static EvtId K1STB=EvtPDL::getId("anti-K'_10");
EvtISGWFF.cc:  static EvtId D1P1SP=EvtPDL::getId("D_s1+");
EvtISGWFF.cc:  static EvtId D1P1SN=EvtPDL::getId("D_s1-");
EvtISGWFF.cc:  static EvtId D3P1SP=EvtPDL::getId("D'_s1*+");
EvtISGWFF.cc:  static EvtId D3P1SN=EvtPDL::getId("D'_s1*-");
EvtISGWFF.cc:    bb2=0.41*0.41;
EvtISGWFF.cc:      bx2=0.31*0.31;
EvtISGWFF.cc:      if (daugt==D23S1N||daugt==D23S10||daugt==D23S1P||daugt==D23S1B) {
EvtISGWFF.cc:      msq=1.82;
EvtISGWFF.cc:	report(ERROR,"EvtGen") << "Not implemented daugt in get_isgw_ff_23P1.\n";
EvtISGWFF.cc:    report(ERROR,"EvtGen") << "Not implemented parent in get_isgw_ff_23P1.\n";
EvtISGWFF.cc:  mup=1.0/(1.0/msq+1.0/msb);
EvtISGWFF.cc:  mum=1.0/(1.0/msq-1.0/msb);
EvtISGWFF.cc:    exp(-1.0*((msd*msd*(tm-t)/(4.0*mtb*mtx*kap*bbx2))));
EvtISGWFF.cc:    exp(-1.0*((msd*msd*(tm-t)/(4.0*mtb*mtx*kap*bbx2))));
EvtISGWFF.cc:         ((1.0/msq)-((msd*bb2)/(2.0*mum*mtx*bbx2)))) +
EvtISGWFF.cc:          (1.0 - ( (msd*msd*msb*bx2*bx2)/(4.0*mtb*mtb*mum*bbx2*bbx2)))) -
EvtISGWFF.cc:          ( (5.0*msd*sqrt(bx2*bb2)*(1.0 + 0.1*tt))/(2.0*msb*bbx2)) -
EvtISGWFF.cc:          ( (3.0*mtb*sqrt(bb2/bx2)*(1.0 + (tt/6.0)))/(2.0*msb)) +
EvtISGWFF.cc:          ( (7.0*msd*msd*sqrt(bb2/bx2)*bx2*bx2*(1.0 + (tt/14.0))) /
EvtISGWFF.cc:} //get_ff_isgw_23s1
EvtISGWFF.cc:void EvtISGWFF::EvtISGW1FF3P1 (EvtId parent,EvtId daugt,
EvtISGWFF.cc:  static EvtId D1P1P=EvtPDL::getId("D_1+");
EvtISGWFF.cc:  static EvtId D1P1N=EvtPDL::getId("D_1-");
EvtISGWFF.cc:  static EvtId D1P10=EvtPDL::getId("D_10");
EvtISGWFF.cc:  static EvtId D1P1B=EvtPDL::getId("anti-D_10");
EvtISGWFF.cc:  static EvtId D3P1P=EvtPDL::getId("D'_1+");
EvtISGWFF.cc:  static EvtId D3P1N=EvtPDL::getId("D'_1-");
EvtISGWFF.cc:  static EvtId D3P10=EvtPDL::getId("D'_10");
EvtISGWFF.cc:  static EvtId D3P1B=EvtPDL::getId("anti-D'_10");
EvtISGWFF.cc:  static EvtId D21S0P=EvtPDL::getId("hi");
EvtISGWFF.cc:  static EvtId D21S0N=EvtPDL::getId("hi");
EvtISGWFF.cc:  static EvtId D21S00=EvtPDL::getId("hi");
EvtISGWFF.cc:  static EvtId D21S0B=EvtPDL::getId("hi");
EvtISGWFF.cc:  static EvtId D23S1P=EvtPDL::getId("hi");
EvtISGWFF.cc:  static EvtId D23S1N=EvtPDL::getId("hi");
EvtISGWFF.cc:  static EvtId D23S10=EvtPDL::getId("hi");
EvtISGWFF.cc:  static EvtId D23S1B=EvtPDL::getId("hi");
EvtISGWFF.cc:  static EvtId A1P=EvtPDL::getId("a_1+");
EvtISGWFF.cc:  static EvtId A1M=EvtPDL::getId("a_1-");
EvtISGWFF.cc:  static EvtId A10=EvtPDL::getId("a_10");
EvtISGWFF.cc:  static EvtId B1P=EvtPDL::getId("b_1+");
EvtISGWFF.cc:  static EvtId B1M=EvtPDL::getId("b_1-");
EvtISGWFF.cc:  static EvtId B10=EvtPDL::getId("b_10");
EvtISGWFF.cc:  static EvtId H1=EvtPDL::getId("h_1");
EvtISGWFF.cc:  static EvtId H1PR=EvtPDL::getId("h'_1");
EvtISGWFF.cc:  static EvtId F1=EvtPDL::getId("f_1");
EvtISGWFF.cc:  static EvtId F1PR=EvtPDL::getId("f'_1");
EvtISGWFF.cc:  static EvtId K1P=EvtPDL::getId("K_1+");
EvtISGWFF.cc:  static EvtId K1M=EvtPDL::getId("K_1-");
EvtISGWFF.cc:  static EvtId K10=EvtPDL::getId("K_10");
EvtISGWFF.cc:  static EvtId K1B=EvtPDL::getId("anti-K_10");
EvtISGWFF.cc:  static EvtId K1STP=EvtPDL::getId("K'_1+");
EvtISGWFF.cc:  static EvtId K1STM=EvtPDL::getId("K'_1-");
EvtISGWFF.cc:  static EvtId K1ST0=EvtPDL::getId("K'_10");
EvtISGWFF.cc:  static EvtId K1STB=EvtPDL::getId("anti-K'_10");
EvtISGWFF.cc:  static EvtId D1P1SP=EvtPDL::getId("D_s1+");
EvtISGWFF.cc:  static EvtId D1P1SN=EvtPDL::getId("D_s1-");
EvtISGWFF.cc:  static EvtId D3P1SP=EvtPDL::getId("D'_s1*+");
EvtISGWFF.cc:  static EvtId D3P1SN=EvtPDL::getId("D'_s1*-");
EvtISGWFF.cc:    bb2=0.41*0.41;
EvtISGWFF.cc:    if (daugt==A10||daugt==A1P||daugt==A1M||daugt==F1||daugt==F1PR) {
EvtISGWFF.cc:      if (daugt==D3P1P||daugt==D3P1N||daugt==D3P1B||daugt==D3P10) {
EvtISGWFF.cc:      msq=1.82;
EvtISGWFF.cc:	report(ERROR,"EvtGen") << "Not implemented daugt in get_isgw_ff_3P1.\n";
EvtISGWFF.cc:    report(ERROR,"EvtGen") << "Not implemented parent in get_isgw_ff_3P1.\n";
EvtISGWFF.cc:  mup=1.0/(1.0/msq+1.0/msb);
EvtISGWFF.cc:  mum=1.0/(1.0/msq-1.0/msb);
EvtISGWFF.cc:       exp(-1.0*((msd*msd*(tm-t)/(4.0*mtb*mtx*kap*bbx2))));
EvtISGWFF.cc:  *lf = -1.0*mtb*sqrt(bb2)*f5*(1/mum+(msd*(tm-t)/(2.0*mtb*
EvtISGWFF.cc:        kap*bb2))*((1.0/msq)-(1.0*msd*bb2/(2.0*mum*mtx*bbx2)))); 
EvtISGWFF.cc:  *cpf = (f5*msd*msb/(4.0*mtb*sqrt(bb2)*mum))*(1.0-(msd*msq*bb2/(
EvtISGWFF.cc:} //get_ff_isgw_3p1
EvtISGWFF.cc:void EvtISGWFF::EvtISGW1FF3P0 (EvtId parent,EvtId daugt,
EvtISGWFF.cc:  static EvtId D1P1P=EvtPDL::getId("D_1+");
EvtISGWFF.cc:  static EvtId D1P1N=EvtPDL::getId("D_1-");
EvtISGWFF.cc:  static EvtId D1P10=EvtPDL::getId("D_10");
EvtISGWFF.cc:  static EvtId D1P1B=EvtPDL::getId("anti-D_10");
EvtISGWFF.cc:  static EvtId D3P1P=EvtPDL::getId("D'_1+");
EvtISGWFF.cc:  static EvtId D3P1N=EvtPDL::getId("D'_1-");
EvtISGWFF.cc:  static EvtId D3P10=EvtPDL::getId("D'_10");
EvtISGWFF.cc:  static EvtId D3P1B=EvtPDL::getId("anti-D'_10");
EvtISGWFF.cc:  static EvtId D21S0P=EvtPDL::getId("hi");
EvtISGWFF.cc:  static EvtId D21S0N=EvtPDL::getId("hi");
EvtISGWFF.cc:  static EvtId D21S00=EvtPDL::getId("hi");
EvtISGWFF.cc:  static EvtId D21S0B=EvtPDL::getId("hi");
EvtISGWFF.cc:  static EvtId D23S1P=EvtPDL::getId("hi");
EvtISGWFF.cc:  static EvtId D23S1N=EvtPDL::getId("hi");
EvtISGWFF.cc:  static EvtId D23S10=EvtPDL::getId("hi");
EvtISGWFF.cc:  static EvtId D23S1B=EvtPDL::getId("hi");
EvtISGWFF.cc:  static EvtId A1P=EvtPDL::getId("a_1+");
EvtISGWFF.cc:  static EvtId A1M=EvtPDL::getId("a_1-");
EvtISGWFF.cc:  static EvtId A10=EvtPDL::getId("a_10");
EvtISGWFF.cc:  static EvtId B1P=EvtPDL::getId("b_1+");
EvtISGWFF.cc:  static EvtId B1M=EvtPDL::getId("b_1-");
EvtISGWFF.cc:  static EvtId B10=EvtPDL::getId("b_10");
EvtISGWFF.cc:  static EvtId H1=EvtPDL::getId("h_1");
EvtISGWFF.cc:  static EvtId H1PR=EvtPDL::getId("h'_1");
EvtISGWFF.cc:  static EvtId F1=EvtPDL::getId("f_1");
EvtISGWFF.cc:  static EvtId F1PR=EvtPDL::getId("f'_1");
EvtISGWFF.cc:  static EvtId K1P=EvtPDL::getId("K_1+");
EvtISGWFF.cc:  static EvtId K1M=EvtPDL::getId("K_1-");
EvtISGWFF.cc:  static EvtId K10=EvtPDL::getId("K_10");
EvtISGWFF.cc:  static EvtId K1B=EvtPDL::getId("anti-K_10");
EvtISGWFF.cc:  static EvtId K1STP=EvtPDL::getId("K'_1+");
EvtISGWFF.cc:  static EvtId K1STM=EvtPDL::getId("K'_1-");
EvtISGWFF.cc:  static EvtId K1ST0=EvtPDL::getId("K'_10");
EvtISGWFF.cc:  static EvtId K1STB=EvtPDL::getId("anti-K'_10");
EvtISGWFF.cc:  static EvtId D1P1SP=EvtPDL::getId("D_s1+");
EvtISGWFF.cc:  static EvtId D1P1SN=EvtPDL::getId("D_s1-");
EvtISGWFF.cc:  static EvtId D3P1SP=EvtPDL::getId("D'_s1*+");
EvtISGWFF.cc:  static EvtId D3P1SN=EvtPDL::getId("D'_s1*-");
EvtISGWFF.cc:    bb2=0.41*0.41;
EvtISGWFF.cc:	msq=1.82;
EvtISGWFF.cc:  mup=1.0/(1.0/msq+1.0/msb);
EvtISGWFF.cc:  mum=1.0/(1.0/msq-1.0/msb);
EvtISGWFF.cc:       exp(-1.0*((msd*msd*(tm-t)/(4.0*mtb*mtx*kap*bbx2))));
EvtISGWFF.cc:void EvtISGWFF::EvtISGW1FF1P1 (EvtId parent,EvtId daugt,
EvtISGWFF.cc:  static EvtId D1P1P=EvtPDL::getId("D_1+");
EvtISGWFF.cc:  static EvtId D1P1N=EvtPDL::getId("D_1-");
EvtISGWFF.cc:  static EvtId D1P10=EvtPDL::getId("D_10");
EvtISGWFF.cc:  static EvtId D1P1B=EvtPDL::getId("anti-D_10");
EvtISGWFF.cc:  static EvtId D3P1P=EvtPDL::getId("D'_1+");
EvtISGWFF.cc:  static EvtId D3P1N=EvtPDL::getId("D'_1-");
EvtISGWFF.cc:  static EvtId D3P10=EvtPDL::getId("D'_10");
EvtISGWFF.cc:  static EvtId D3P1B=EvtPDL::getId("anti-D'_10");
EvtISGWFF.cc:  static EvtId D21S0P=EvtPDL::getId("hi");
EvtISGWFF.cc:  static EvtId D21S0N=EvtPDL::getId("hi");
EvtISGWFF.cc:  static EvtId D21S00=EvtPDL::getId("hi");
EvtISGWFF.cc:  static EvtId D21S0B=EvtPDL::getId("hi");
EvtISGWFF.cc:  static EvtId D23S1P=EvtPDL::getId("hi");
EvtISGWFF.cc:  static EvtId D23S1N=EvtPDL::getId("hi");
EvtISGWFF.cc:  static EvtId D23S10=EvtPDL::getId("hi");
EvtISGWFF.cc:  static EvtId D23S1B=EvtPDL::getId("hi");
EvtISGWFF.cc:  static EvtId A1P=EvtPDL::getId("a_1+");
EvtISGWFF.cc:  static EvtId A1M=EvtPDL::getId("a_1-");
EvtISGWFF.cc:  static EvtId A10=EvtPDL::getId("a_10");
EvtISGWFF.cc:  static EvtId B1P=EvtPDL::getId("b_1+");
EvtISGWFF.cc:  static EvtId B1M=EvtPDL::getId("b_1-");
EvtISGWFF.cc:  static EvtId B10=EvtPDL::getId("b_10");
EvtISGWFF.cc:  static EvtId H1=EvtPDL::getId("h_1");
EvtISGWFF.cc:  static EvtId H1PR=EvtPDL::getId("h'_1");
EvtISGWFF.cc:  static EvtId F1=EvtPDL::getId("f_1");
EvtISGWFF.cc:  static EvtId F1PR=EvtPDL::getId("f'_1");
EvtISGWFF.cc:  static EvtId K1P=EvtPDL::getId("K_1+");
EvtISGWFF.cc:  static EvtId K1M=EvtPDL::getId("K_1-");
EvtISGWFF.cc:  static EvtId K10=EvtPDL::getId("K_10");
EvtISGWFF.cc:  static EvtId K1B=EvtPDL::getId("anti-K_10");
EvtISGWFF.cc:  static EvtId K1STP=EvtPDL::getId("K'_1+");
EvtISGWFF.cc:  static EvtId K1STM=EvtPDL::getId("K'_1-");
EvtISGWFF.cc:  static EvtId K1ST0=EvtPDL::getId("K'_10");
EvtISGWFF.cc:  static EvtId K1STB=EvtPDL::getId("anti-K'_10");
EvtISGWFF.cc:  static EvtId D1P1SP=EvtPDL::getId("D_s1+");
EvtISGWFF.cc:  static EvtId D1P1SN=EvtPDL::getId("D_s1-");
EvtISGWFF.cc:  static EvtId D3P1SP=EvtPDL::getId("D'_s1*+");
EvtISGWFF.cc:  static EvtId D3P1SN=EvtPDL::getId("D'_s1*-");
EvtISGWFF.cc:    bb2=0.41*0.41;
EvtISGWFF.cc:    if (daugt==H1||daugt==H1PR||daugt==B10||daugt==B1P||daugt==B1M) {
EvtISGWFF.cc:      if (daugt==D1P1P||daugt==D1P1N||daugt==D1P10||daugt==D1P1B) {
EvtISGWFF.cc:	msq=1.82;
EvtISGWFF.cc:	report(ERROR,"EvtGen") << "Not implemented daugt in get_isgw_ff_3P1.\n";
EvtISGWFF.cc:    report(ERROR,"EvtGen") << "Not implemented parent in get_isgw_ff_3P1.\n";
EvtISGWFF.cc:  mup=1.0/(1.0/msq+1.0/msb);
EvtISGWFF.cc:  mum=1.0/(1.0/msq-1.0/msb);
EvtISGWFF.cc:       exp(-1.0*((msd*msd*(tm-t)/(4.0*mtb*mtx*kap*bbx2))));
EvtISGWFF.cc:  *rf = f5*mtb*sqrt(bb2/2)*((1.0/mup));
EvtISGWFF.cc:  *spf = (f5*msd/(sqrt(2.0*bb2)*mtb))*(1.0+(msb/(2.0*mum))-
EvtISGWFF.cc://get_ff_isgw_1p1
EvtISGWFF.cc:void EvtISGWFF::EvtISGW1FF21S0 (EvtId parent,EvtId daugt,
EvtISGWFF.cc:  static EvtId D1P1P=EvtPDL::getId("D_1+");
EvtISGWFF.cc:  static EvtId D1P1N=EvtPDL::getId("D_1-");
EvtISGWFF.cc:  static EvtId D1P10=EvtPDL::getId("D_10");
EvtISGWFF.cc:  static EvtId D1P1B=EvtPDL::getId("anti-D_10");
EvtISGWFF.cc:  static EvtId D3P1P=EvtPDL::getId("D'_1+");
EvtISGWFF.cc:  static EvtId D3P1N=EvtPDL::getId("D'_1-");
EvtISGWFF.cc:  static EvtId D3P10=EvtPDL::getId("D'_10");
EvtISGWFF.cc:  static EvtId D3P1B=EvtPDL::getId("anti-D'_10");
EvtISGWFF.cc:  static EvtId D21S0P=EvtPDL::getId("hi");
EvtISGWFF.cc:  static EvtId D21S0N=EvtPDL::getId("hi");
EvtISGWFF.cc:  static EvtId D21S00=EvtPDL::getId("hi");
EvtISGWFF.cc:  static EvtId D21S0B=EvtPDL::getId("hi");
EvtISGWFF.cc:  static EvtId D23S1P=EvtPDL::getId("hi");
EvtISGWFF.cc:  static EvtId D23S1N=EvtPDL::getId("hi");
EvtISGWFF.cc:  static EvtId D23S10=EvtPDL::getId("hi");
EvtISGWFF.cc:  static EvtId D23S1B=EvtPDL::getId("hi");
EvtISGWFF.cc:  static EvtId A1P=EvtPDL::getId("a_1+");
EvtISGWFF.cc:  static EvtId A1M=EvtPDL::getId("a_1-");
EvtISGWFF.cc:  static EvtId A10=EvtPDL::getId("a_10");
EvtISGWFF.cc:  static EvtId B1P=EvtPDL::getId("b_1+");
EvtISGWFF.cc:  static EvtId B1M=EvtPDL::getId("b_1-");
EvtISGWFF.cc:  static EvtId B10=EvtPDL::getId("b_10");
EvtISGWFF.cc:  static EvtId H1=EvtPDL::getId("h_1");
EvtISGWFF.cc:  static EvtId H1PR=EvtPDL::getId("h'_1");
EvtISGWFF.cc:  static EvtId F1=EvtPDL::getId("f_1");
EvtISGWFF.cc:  static EvtId F1PR=EvtPDL::getId("f'_1");
EvtISGWFF.cc:  static EvtId K1P=EvtPDL::getId("K_1+");
EvtISGWFF.cc:  static EvtId K1M=EvtPDL::getId("K_1-");
EvtISGWFF.cc:  static EvtId K10=EvtPDL::getId("K_10");
EvtISGWFF.cc:  static EvtId K1B=EvtPDL::getId("anti-K_10");
EvtISGWFF.cc:  static EvtId K1STP=EvtPDL::getId("K'_1+");
EvtISGWFF.cc:  static EvtId K1STM=EvtPDL::getId("K'_1-");
EvtISGWFF.cc:  static EvtId K1ST0=EvtPDL::getId("K'_10");
EvtISGWFF.cc:  static EvtId K1STB=EvtPDL::getId("anti-K'_10");
EvtISGWFF.cc:  static EvtId D1P1SP=EvtPDL::getId("D_s1+");
EvtISGWFF.cc:  static EvtId D1P1SN=EvtPDL::getId("D_s1-");
EvtISGWFF.cc:  static EvtId D3P1SP=EvtPDL::getId("D'_s1*+");
EvtISGWFF.cc:  static EvtId D3P1SN=EvtPDL::getId("D'_s1*-");
EvtISGWFF.cc:    bb2=0.41*0.41;
EvtISGWFF.cc:      bx2=0.31*0.31;
EvtISGWFF.cc:      if (daugt==D21S00||daugt==D21S0P||daugt==D21S0N||daugt==D21S0B) {
EvtISGWFF.cc:	msq=1.82;
EvtISGWFF.cc:	report(ERROR,"EvtGen") << "Not implemented daugt in get_isgw1_ff_21S0.\n";
EvtISGWFF.cc:    report(ERROR,"EvtGen") << "Not implemented parent in get_isgw1_ff_21S0.\n";
EvtISGWFF.cc:  mup=1.0/(1.0/msq+1.0/msb);
EvtISGWFF.cc:  mum=1.0/(1.0/msq-1.0/msb);
EvtISGWFF.cc:       exp(-1.0*((msd*msd*(tm-t)/(4.0*mtb*mtx*kap*bbx2))));
EvtISGWFF.cc:          (1.0 - ((msq*msd*bb2)/(2.0*mum*mtx*bbx2)))));
EvtISGWFF.cc:} //get_ff_isgw_21s0
EvtISGWFF.hh://      Copyright (C) 1998      Caltech, UCSB
EvtISGWFF.hh://    DJL/RYD     September 25, 1998         Module created
EvtISGWFF.hh:                       double t, double mass, double *a1f,
EvtISGWFF.hh:  void EvtISGW1FF3S1( EvtId parent, EvtId daught, 
EvtISGWFF.hh:  void EvtISGW1FF23S1( EvtId parent, EvtId daught,
EvtISGWFF.hh:  void EvtISGW1FF3P1( EvtId parent, EvtId daught, 
EvtISGWFF.hh:  void EvtISGW1FF3P0( EvtId parent, EvtId daught, 
EvtISGWFF.hh:  void EvtISGW1FF1S0( EvtId parent, EvtId daught, 
EvtISGWFF.hh:  void EvtISGW1FF21S0( EvtId parent, EvtId daught,
EvtISGWFF.hh:  void EvtISGW1FF3P2( EvtId parent, EvtId daught, 
EvtISGWFF.hh:  void EvtISGW1FF1P1( EvtId parent, EvtId daught, 
EvtISGW.hh://      Copyright (C) 1998      Caltech, UCSB
EvtISGW.hh://    DJL/RYD     September 25, 1996         Module created
EvtItgAbsFunction.cc://    Jane Tinslay                March 21, 2001       Module adapted for use in 
EvtItgAbsFunction.hh://    Jane Tinslay                March 21, 2001       Module adapted for use in 
EvtItgAbsFunction.hh:  void    setRange(double x1,double x2) { _lowerRange=x1; _upperRange=x2; };
EvtItgAbsIntegrator.cc://    Jane Tinslay                March 21, 2001       Module adapted for use in 
EvtItgAbsIntegrator.cc:  if (n==1) return 0.5*(higher-lower)*(_myFunction(lower) + _myFunction(higher));
EvtItgAbsIntegrator.cc:  for (it=1, j=1;j<n-1;j++) it <<=1;
EvtItgAbsIntegrator.cc:  for (j=1;j<=it;j++){
EvtItgAbsIntegrator.hh://    Jane Tinslay                March 21, 2001       Module adapted for use in 
EvtItgFourCoeffFcn.cc://    Jane Tinslay                March 21, 2001       Module created
EvtItgFourCoeffFcn.cc:EvtItgFourCoeffFcn::EvtItgFourCoeffFcn( double (*theFunction)(double, const std::vector<double> &, const std::vector<double> &, const std::vector<double> &, const std::vector<double> &), double lowerRange, double upperRange, const std::vector<double> &coeffs1, const std::vector<double> &coeffs2, const std::vector<double> &coeffs3, const std::vector<double> &coeffs4):
EvtItgFourCoeffFcn.cc:  _coeffs1(coeffs1),
EvtItgFourCoeffFcn.cc:  return _myFunction(x, _coeffs1, _coeffs2, _coeffs3, _coeffs4);
EvtItgFourCoeffFcn.cc:  if (vect == 1) _coeffs1[which] = value;
EvtItgFourCoeffFcn.cc:  if (vect == 1) return _coeffs1[which];
EvtItgFourCoeffFcn.hh://    Jane Tinslay                March 21, 2001       Module created
EvtItgFourCoeffFcn.hh:		     double lowerRange, double upperRange, const std::vector<double> &coeffs1, const std::vector<double> &coeffs2, const std::vector<double> &coeffs3, const std::vector<double> &coeffs4);
EvtItgFourCoeffFcn.hh:  double (*_myFunction)(double x, const std::vector<double> & coeffs1, const std::vector<double> & coeffs2, const std::vector<double> & coeffs3, const std::vector<double> & coeffs4);
EvtItgFourCoeffFcn.hh:  std::vector<double> _coeffs1;
EvtItgFunction.cc:// 	$Id: getName,v 1.1 2009/12/18 08:43:52 pingrg Exp $
EvtItgFunction.cc://	Copyright (C) 1998	LBNL
EvtItgFunction.hh://      Copyright (C) 1998      LBNL
EvtItgFunction.hh: *  Copyright (C) 1998 LBNL
EvtItgFunction.hh: *  @version $Id: getName,v 1.1 2009/12/18 08:43:52 pingrg Exp $ 
EvtItgPtrFunction.cc://    Jane Tinslay                March 21, 2001       Module adapted for use in 
EvtItgPtrFunction.cc:EvtItgPtrFunction::EvtItgPtrFunction( double (*theFunction)(double, const std::vector<double> &), double lowerRange, double upperRange, const std::vector<double> &coeffs1):
EvtItgPtrFunction.cc:  _coeffs1(coeffs1)
EvtItgPtrFunction.cc:  return _myFunction(x, _coeffs1);
EvtItgPtrFunction.cc:  if (vect == 1) _coeffs1[which] = value;
EvtItgPtrFunction.cc:  if (vect == 1) return _coeffs1[which];
EvtItgPtrFunction.hh://    Jane Tinslay                March 21, 2001       Module adapted for use in 
EvtItgPtrFunction.hh:		     double lowerRange, double upperRange, const std::vector<double> &coeffs1);
EvtItgPtrFunction.hh:  double (*_myFunction)(double x, const std::vector<double> & coeffs1);
EvtItgPtrFunction.hh:  std::vector<double> _coeffs1;
EvtItgSimpsonIntegrator.cc://    Jane Tinslay                March 21, 2001       Module adapted for use in 
EvtItgSimpsonIntegrator.cc:  for (j=1;j<4;j++) {
EvtItgSimpsonIntegrator.hh://    Jane Tinslay                March 21, 2001       Module adapted for use in 
EvtItgSimpsonIntegrator.hh:  EvtItgSimpsonIntegrator(const EvtItgAbsFunction &, double precision=1.0e-5, int maxLoop=20);
EvtItgThreeCoeffFcn.cc://    Jane Tinslay                March 21, 2001       Module created
EvtItgThreeCoeffFcn.cc:EvtItgThreeCoeffFcn::EvtItgThreeCoeffFcn( double (*theFunction)(double, const std::vector<double> &, const std::vector<double> &, const std::vector<double> &), double lowerRange, double upperRange, const std::vector<double> &coeffs1, const std::vector<double> &coeffs2, const std::vector<double> &coeffs3):
EvtItgThreeCoeffFcn.cc:  _coeffs1(coeffs1),
EvtItgThreeCoeffFcn.cc:  return _myFunction(x, _coeffs1, _coeffs2, _coeffs3);
EvtItgThreeCoeffFcn.cc:  if (vect == 1) _coeffs1[which] = value;
EvtItgThreeCoeffFcn.cc:  if (vect == 1) return _coeffs1[which];
EvtItgThreeCoeffFcn.hh://    Jane Tinslay                March 21, 2001       Module created
EvtItgThreeCoeffFcn.hh:		       double lowerRange, double upperRange, const std::vector<double> &coeffs1, const std::vector<double> &coeffs2, const std::vector<double> &coeffs3);
EvtItgThreeCoeffFcn.hh:  double (*_myFunction)(double x, const std::vector<double> & coeffs1, const std::vector<double> & coeffs2, const std::vector<double> & coeffs3);
EvtItgThreeCoeffFcn.hh:  std::vector<double> _coeffs1;
EvtItgTwoCoeffFcn.cc://    Jane Tinslay                March 21, 2001       Module created
EvtItgTwoCoeffFcn.cc:EvtItgTwoCoeffFcn::EvtItgTwoCoeffFcn( double (*theFunction)(double, const std::vector<double> &, const std::vector<double> &), double lowerRange, double upperRange, const std::vector<double> &coeffs1, const std::vector<double> &coeffs2):
EvtItgTwoCoeffFcn.cc:  _coeffs1(coeffs1),
EvtItgTwoCoeffFcn.cc:  return _myFunction(x, _coeffs1, _coeffs2);
EvtItgTwoCoeffFcn.cc:  if (vect == 1) _coeffs1[which] = value;
EvtItgTwoCoeffFcn.cc:  if (vect == 1) return _coeffs1[which];
EvtItgTwoCoeffFcn.hh://    Jane Tinslay                March 21, 2001       Module created
EvtItgTwoCoeffFcn.hh:		     double lowerRange, double upperRange, const std::vector<double> &coeffs1, const std::vector<double> &coeffs2);
EvtItgTwoCoeffFcn.hh:  double (*_myFunction)(double x, const std::vector<double> & coeffs1, const std::vector<double> & coeffs2);
EvtItgTwoCoeffFcn.hh:  std::vector<double> _coeffs1;
EvtJ2BB1.cc:// Module: EvtJ2BB1.cc
EvtJ2BB1.cc:#include "EvtJ2BB1.hh"
EvtJ2BB1.cc:EvtJ2BB1::~EvtJ2BB1() {}
EvtJ2BB1.cc:void EvtJ2BB1::getName(std::string& model_name){
EvtJ2BB1.cc:  model_name="J2BB1";     
EvtJ2BB1.cc:EvtDecayBase* EvtJ2BB1::clone(){
EvtJ2BB1.cc:  return new EvtJ2BB1;
EvtJ2BB1.cc:void EvtJ2BB1::initProbMax() {
EvtJ2BB1.cc:   double ProbMax=12.;
EvtJ2BB1.cc:void EvtJ2BB1::init(){
EvtJ2BB1.cc: checkSpinDaughter(1,EvtSpinType::DIRAC);
EvtJ2BB1.cc:void EvtJ2BB1::decay( EvtParticle *p){
EvtJ2BB1.cc:  EvtParticle *v,*s1;
EvtJ2BB1.cc:  s1=p->getDaug(1); //Baryon
EvtJ2BB1.cc:  ps=s1->getP4();
EvtJ2BB1.cc:  double theta=angles.getHelAng(1);
EvtJ2BB1.cc:   else{double mass_b1 = EvtPDL::getMass(getDaug(0));
EvtJ2BB1.cc:        double mass_b2 = EvtPDL::getMass(getDaug(1));
EvtJ2BB1.cc:        double c1=pow(pv.d3mag(),2.0);
EvtJ2BB1.cc:        double R=(mass_b1+pv.get(0))*(mass_b2+ps.get(0));
EvtJ2BB1.cc:        u=pow((R-c1)/(R+c1),2.0); 
EvtJ2BB1.cc:  double F01=sqrt((1+alpha)/2);
EvtJ2BB1.cc:  double F00=sqrt((1-alpha)/4);
EvtJ2BB1.cc:  double F10=F01;
EvtJ2BB1.cc:  double F11=F00;
EvtJ2BB1.cc: vertex(0,0,0,Djmn(1, 1, 0,phi,theta,gamma)*F00);  // J/psi helicity =1 corresponding index=0
EvtJ2BB1.cc: vertex(0,0,1,Djmn(1, 1, 1,phi,theta,gamma)*F01);
EvtJ2BB1.cc: vertex(0,1,0,Djmn(1, 1,-1,phi,theta,gamma)*F10); 
EvtJ2BB1.cc: vertex(0,1,1,Djmn(1, 1, 0,phi,theta,gamma)*F11);
EvtJ2BB1.cc: vertex(1,0,0,Djmn(1,-1, 0,phi,theta,gamma)*F00);  // J/psi helicity =-1 corresponding index=1
EvtJ2BB1.cc: vertex(1,0,1,Djmn(1,-1, 1,phi,theta,gamma)*F01); 
EvtJ2BB1.cc: vertex(1,1,0,Djmn(1,-1,-1,phi,theta,gamma)*F10);
EvtJ2BB1.cc: vertex(1,1,1,Djmn(1,-1, 0,phi,theta,gamma)*F11); 
EvtJ2BB1.cc: vertex(2,0,0,Djmn(1, 0, 0,phi,theta,gamma)*F00);  // J/psi helicity =0 corresponding index=2
EvtJ2BB1.cc: vertex(2,0,1,Djmn(1, 0, 1,phi,theta,gamma)*F01);
EvtJ2BB1.cc: vertex(2,1,0,Djmn(1, 0,-1,phi,theta,gamma)*F10);
EvtJ2BB1.cc: vertex(2,1,1,Djmn(1, 0, 0,phi,theta,gamma)*F11);
EvtJ2BB1.hh:// Module: EvtJ2BB1.cc
EvtJ2BB1.hh:#ifndef EVTJ2BB1_HH
EvtJ2BB1.hh:#define EVTJ2BB1_HH
EvtJ2BB1.hh:class EvtJ2BB1:public  EvtDecayAmp  {
EvtJ2BB1.hh:  EvtJ2BB1() {}
EvtJ2BB1.hh:  virtual ~EvtJ2BB1();
EvtJ2BB2.cc:// Description: Routine to decay jpsi or psi(2S) to B10 B10 bar. 
EvtJ2BB2.cc:// psi(2S) decays B10 B10 bar.
EvtJ2BB2.cc:// checkNArg(1); 
EvtJ2BB2.cc: checkSpinDaughter(1,EvtSpinType::RARITASCHWINGER);
EvtJ2BB2.cc: setProbMax(100.0);
EvtJ2BB2.cc:  EvtParticle *v,*s1;
EvtJ2BB2.cc:  s1=p->getDaug(1); 
EvtJ2BB2.cc:  ps=s1->getP4();
EvtJ2BB2.cc:  double theta =angles.getHelAng(1);  
EvtJ2BB2.cc:  double sintheta=sqrt(1-costheta*costheta);
EvtJ2BB2.cc:  double d11=(1+costheta)/2.;
EvtJ2BB2.cc:  double d1m1=(1-costheta)/2.;
EvtJ2BB2.cc:  double d10=-sintheta/sqrt(2.);
EvtJ2BB2.cc:  double dm10=-d10;
EvtJ2BB2.cc:  double dm11=d1m1,dm1m1=d11;
EvtJ2BB2.cc:  double d0m1=d10,d01=-d10,d00=costheta;
EvtJ2BB2.cc://  double mass_b1 = EvtPDL::getMass(getDaug(0));
EvtJ2BB2.cc://  double mass_b2 = EvtPDL::getMass(getDaug(1));
EvtJ2BB2.cc:  double mass_b1,mass_b2;
EvtJ2BB2.cc:  EvtId d1;
EvtJ2BB2.cc:  d1=v->getId();
EvtJ2BB2.cc:  if((d1==XP)||(d1==XM)||(d1==XZP)||(d1==XZM)) {mass_b1=1.532;}
EvtJ2BB2.cc:   else if((d1==SPP)||(d1==SPM)||(d1==SMP)||(d1==SMM)||(d1==SZP)||(d1==SZM)){mass_b1=1.383;} 
EvtJ2BB2.cc:    else if((d1==DZP)||(d1==DZM)||(d1==DPP)||(d1==DPM)||(d1==DMP)||(d1==DMM)||(d1==DPPP)||(d1==DPPM)){mass_b1=1.232;} 
EvtJ2BB2.cc:     else if((d1==OP)||d1==OM){mass_b1=1.67245;}
EvtJ2BB2.cc:  else{cout<<"The decay is not the process: J/psi->B10 B10bar(decuplet baryon) ."<<endl;}
EvtJ2BB2.cc:  mass_b2=mass_b1;
EvtJ2BB2.cc://  double c1=pow(pv.d3mag(),2.0);
EvtJ2BB2.cc://  double R=(mass_b1+pv.get(0))*(mass_b2+ps.get(0));
EvtJ2BB2.cc:  double R=pow(mass_b1+mass_M/2.0,2.0);
EvtJ2BB2.cc:  double c1=mass_M*mass_M/4.0-mass_b1*mass_b1;
EvtJ2BB2.cc:  double  u=pow((R-c1)/(R+c1),2.0);
EvtJ2BB2.cc:        alpha=(-9*u*u*u+17*u*u-16*u+8)/(9*u*u*u-7*u*u+8);
EvtJ2BB2.cc:  double F00,F01,F03,F10,F11,F22,F23,F30,F32,F33;
EvtJ2BB2.cc:  double scale1=sqrt(3.0)*u/(u-2.0);                                        //scale1=F01:F03.
EvtJ2BB2.cc:  double scale2=3.0*u/(3.0*u-4);                                              //scale2=F11:F00.
EvtJ2BB2.cc://  F00=1.0; F01=scale1*F03;F11=scale2*F00; 
EvtJ2BB2.cc://  F03=sqrt(2.0*(1.0+scale2*scale2)*(1.0+alpha)/((1.0-alpha)*(1.0+2.0*scale1*scale1)));
EvtJ2BB2.cc:  F00=sqrt((1-alpha)/(4.0*(1.0+scale2*scale2)));
EvtJ2BB2.cc:  F03=sqrt((1+alpha)/(2.0*(1.0+2.0*scale1*scale1)));  
EvtJ2BB2.cc:  F01=scale1*F03;F11=scale2*F00;
EvtJ2BB2.cc:  F22=F11;F32=F01;F33=F00;F30=F03;F10=F01;F23=F32;   //07.2
EvtJ2BB2.cc:// J/psi helicity =1,-1,0 corresponding index=0,1,2 
EvtJ2BB2.cc://decuplt baryon helicity =1/2,3/2,-3/2,-1/2 corresponding index=0,1,2,3
EvtJ2BB2.cc: vertex(0,0,0,Djmn(1, 1, 0,phi,theta,gamma)*F00);
EvtJ2BB2.cc: vertex(0,0,1,Djmn(1, 1,-1,phi,theta,gamma)*F01);
EvtJ2BB2.cc: vertex(0,0,3,Djmn(1, 1, 1,phi,theta,gamma)*F03);
EvtJ2BB2.cc: vertex(0,1,0,Djmn(1, 1, 1,phi,theta,gamma)*F10);
EvtJ2BB2.cc: vertex(0,1,1,Djmn(1, 1, 0,phi,theta,gamma)*F11);
EvtJ2BB2.cc: vertex(0,1,2,0.0); 
EvtJ2BB2.cc: vertex(0,1,3,0.0);
EvtJ2BB2.cc: vertex(0,2,1,0.0);
EvtJ2BB2.cc: vertex(0,2,2,Djmn(1, 1, 0,phi,theta,gamma)*F22); 
EvtJ2BB2.cc: vertex(0,2,3,Djmn(1, 1,-1,phi,theta,gamma)*F23);
EvtJ2BB2.cc: vertex(0,3,0,Djmn(1, 1,-1,phi,theta,gamma)*F30);
EvtJ2BB2.cc: vertex(0,3,1,0.0); 
EvtJ2BB2.cc: vertex(0,3,2,Djmn(1, 1, 1,phi,theta,gamma)*F32);
EvtJ2BB2.cc: vertex(0,3,3,Djmn(1, 1, 0,phi,theta,gamma)*F33);
EvtJ2BB2.cc: vertex(1,0,0,Djmn(1,-1, 0,phi,theta,gamma)*F00);
EvtJ2BB2.cc: vertex(1,0,1,Djmn(1,-1,-1,phi,theta,gamma)*F01);
EvtJ2BB2.cc: vertex(1,0,2,0.0);
EvtJ2BB2.cc: vertex(1,0,3,Djmn(1,-1, 1,phi,theta,gamma)*F03);
EvtJ2BB2.cc: vertex(1,1,0,Djmn(1,-1, 1,phi,theta,gamma)*F10);
EvtJ2BB2.cc: vertex(1,1,1,Djmn(1,-1, 0,phi,theta,gamma)*F11);
EvtJ2BB2.cc: vertex(1,1,2,0.0);
EvtJ2BB2.cc: vertex(1,1,3,0.0);
EvtJ2BB2.cc: vertex(1,2,0,0.0);
EvtJ2BB2.cc: vertex(1,2,1,0.0);
EvtJ2BB2.cc: vertex(1,2,2,Djmn(1,-1, 0,phi,theta,gamma)*F22);
EvtJ2BB2.cc: vertex(1,2,3,Djmn(1,-1,-1,phi,theta,gamma)*F23);
EvtJ2BB2.cc: vertex(1,3,0,Djmn(1,-1,-1,phi,theta,gamma)*F30);
EvtJ2BB2.cc: vertex(1,3,1,0.0);
EvtJ2BB2.cc: vertex(1,3,2,Djmn(1,-1, 1,phi,theta,gamma)*F32);
EvtJ2BB2.cc: vertex(1,3,3,Djmn(1,-1, 0,phi,theta,gamma)*F33);
EvtJ2BB2.cc: vertex(2,0,0,Djmn(1, 0, 0,phi,theta,gamma)*F00);
EvtJ2BB2.cc: vertex(2,0,1,Djmn(1, 0,-1,phi,theta,gamma)*F01);
EvtJ2BB2.cc: vertex(2,0,3,Djmn(1, 0, 1,phi,theta,gamma)*F03);
EvtJ2BB2.cc: vertex(2,1,0,Djmn(1, 0, 1,phi,theta,gamma)*F10);
EvtJ2BB2.cc: vertex(2,1,1,Djmn(1, 0, 0,phi,theta,gamma)*F11);
EvtJ2BB2.cc: vertex(2,1,2,0.0);
EvtJ2BB2.cc: vertex(2,1,3,0.0);
EvtJ2BB2.cc: vertex(2,2,1,0.0);
EvtJ2BB2.cc: vertex(2,2,2,Djmn(1, 0, 0,phi,theta,gamma)*F22);
EvtJ2BB2.cc: vertex(2,2,3,Djmn(1, 0,-1,phi,theta,gamma)*F23);
EvtJ2BB2.cc: vertex(2,3,0,Djmn(1, 0,-1,phi,theta,gamma)*F30);
EvtJ2BB2.cc: vertex(2,3,1,0.0);
EvtJ2BB2.cc: vertex(2,3,2,Djmn(1, 0, 1,phi,theta,gamma)*F32);
EvtJ2BB2.cc: vertex(2,3,3,Djmn(1, 0, 0,phi,theta,gamma)*F33);
EvtJ2BB2.hh:// Description: Routine to decay J/psi-> B_10 bar B_10 using helicity amplitude.
EvtJ2BB3.cc:// Description: Routine to decay J/psi-> B_8 bar B_10 with using the
EvtJ2BB3.cc://              and Fields 33,529-535(1987))
EvtJ2BB3.cc:// checkNArg(1); 
EvtJ2BB3.cc: checkSpinDaughter(1,EvtSpinType::RARITASCHWINGER);
EvtJ2BB3.cc: //setProbMax(10000.0);  //the ProbMax value must have noticed. 
EvtJ2BB3.cc:   setProbMax(100.0);
EvtJ2BB3.cc:  EvtParticle *v,*s1;
EvtJ2BB3.cc:  s1=p->getDaug(1); 
EvtJ2BB3.cc:  ps=s1->getP4();
EvtJ2BB3.cc:  double theta =angles.getHelAng(1);  
EvtJ2BB3.cc:  double m_b0 = EvtPDL::getMass(getDaug(0));  //the mass of daughter1 is large than daughter0.
EvtJ2BB3.cc:  double m_b1 = EvtPDL::getMass(getDaug(1));
EvtJ2BB3.cc:  double M2=pow(m_M,2.0);double b2_p=pow((m_b0+m_b1),2.0);
EvtJ2BB3.cc:  double b2_m=pow((m_b1-m_b0),2.0);
EvtJ2BB3.cc:  double F1=-0.54/(m_b0*b2_p);                             
EvtJ2BB3.cc:  double F2=-0.54*(m_b1-m_b0)/(m_b0*(m_b0+m_b1));
EvtJ2BB3.cc:  double H1,H0,Hm1;
EvtJ2BB3.cc:      H0=1.0;H1=sqrt((1+alpha)/(1-alpha));Hm1=H1;     
EvtJ2BB3.cc:         H1=-1.15*P_c*m_M*(-M2*Q*F1-Q*F2+(M2-m_b0*(m_b0+m_b1))*F3)/(sqrt(Q)*m_b1);
EvtJ2BB3.cc:         H0=-0.82*P_c*M2*(-(m_b1-m_b0)*Q*F1/m_b1-Q*F2/(m_b1*(m_b1-m_b0))+2.0*F3)/sqrt(Q);
EvtJ2BB3.cc:         Hm1=2*P_c*m_M*(m_b0+m_b1)*F3/sqrt(Q);
EvtJ2BB3.cc:         alpha=(H1*H1+Hm1*Hm1-2*H0*H0)/(H1*H1+Hm1*Hm1+2*H0*H0); 
EvtJ2BB3.cc://cout<<"------alpha="<<alpha<<";H0="<<H0<<";H1="<<H1<<";Hm1="<<Hm1<<endl;
EvtJ2BB3.cc:// J/psi helicity =1 corresponding index=0
EvtJ2BB3.cc: vertex(0,0,0,Djmn(1, 1, 0,phi,theta,gamma)*H0);
EvtJ2BB3.cc: vertex(0,0,1,Djmn(1, 1,-1,phi,theta,gamma)*Hm1);
EvtJ2BB3.cc: vertex(0,0,3,Djmn(1, 1, 1,phi,theta,gamma)*H1);
EvtJ2BB3.cc: vertex(0,1,0,Djmn(1, 1,-1,phi,theta,gamma)*H1);
EvtJ2BB3.cc: vertex(0,1,1,0.0);
EvtJ2BB3.cc: vertex(0,1,2,Djmn(1, 1, 1,phi,theta,gamma)*Hm1);
EvtJ2BB3.cc: vertex(0,1,3,Djmn(1, 1, 0,phi,theta,gamma)*H0);
EvtJ2BB3.cc:// J/psi helicity =-1 corresponding index=1 
EvtJ2BB3.cc: vertex(1,0,0,Djmn(1,-1, 0,phi,theta,gamma)*H0);
EvtJ2BB3.cc: vertex(1,0,1,Djmn(1,-1,-1,phi,theta,gamma)*Hm1);
EvtJ2BB3.cc: vertex(1,0,2,0.0);
EvtJ2BB3.cc: vertex(1,0,3,Djmn(1,-1, 1,phi,theta,gamma)*H1);
EvtJ2BB3.cc: vertex(1,1,0,Djmn(1,-1,-1,phi,theta,gamma)*H1);
EvtJ2BB3.cc: vertex(1,1,1,0.0);
EvtJ2BB3.cc: vertex(1,1,2,Djmn(1,-1, 1,phi,theta,gamma)*Hm1);
EvtJ2BB3.cc: vertex(1,1,3,Djmn(1,-1, 0,phi,theta,gamma)*H0);
EvtJ2BB3.cc: vertex(2,0,0,Djmn(1, 0, 0,phi,theta,gamma)*H0);
EvtJ2BB3.cc: vertex(2,0,1,Djmn(1, 0,-1,phi,theta,gamma)*Hm1);
EvtJ2BB3.cc: vertex(2,0,3,Djmn(1, 0, 1,phi,theta,gamma)*H1);
EvtJ2BB3.cc: vertex(2,1,0,Djmn(1, 0,-1,phi,theta,gamma)*H1);
EvtJ2BB3.cc: vertex(2,1,1,0.0);
EvtJ2BB3.cc: vertex(2,1,2,Djmn(1, 0, 1,phi,theta,gamma)*Hm1);
EvtJ2BB3.cc: vertex(2,1,3,Djmn(1, 0, 0,phi,theta,gamma)*H0);
EvtJ2BB3.hh:// Description: Routine to decay J/psi-> B_8 bar B_10 with using the
EvtJ2BB3.hh://              and Fields 33,529-535(1987))
EvtJetSet.cc://      Copyright (C) 1998      Caltech, UCSB
EvtJetSet.cc://    RYD     July 24, 1997        Module created
EvtJetSet.cc:  extern void jetset1_(int *,double *,int *,int *,int *,
EvtJetSet.cc:      jetsetdecays[i]=jetsetdecays[njetsetdecays-1];
EvtJetSet.cc:  checkNArg(1);
EvtJetSet.cc:    lcommand=10+2*lcommand;
EvtJetSet.cc:  int kf[100];
EvtJetSet.cc:  EvtId evtnumstable[100],evtnumparton[100];
EvtJetSet.cc:  int stableindex[100],partonindex[100];
EvtJetSet.cc:  int km[100];
EvtJetSet.cc:  double px[100],py[100],pz[100],e[100];
EvtJetSet.cc:    jetset1_(&ip,&mp,&ndaugjs,kf,km,px,py,pz,e);
EvtJetSet.cc:      if (EvtPDL::evtIdFromStdHep(kf[i])==EvtId(-1,-1)) {
EvtJetSet.cc:      if (abs(kf[i])<=6||kf[i]==21){
EvtJetSet.cc:        e[i]=sqrt(px[i]*px[i]+py[i]*py[i]+pz[i]*pz[i])+0.0000000000001;
EvtJetSet.cc:   more=(channel!=-1);
EvtJetSet.cc:  }while( more && (count<10000) );
EvtJetSet.cc:    int nprimary=1;
EvtJetSet.cc:    EvtVector4R p4partons[10];
EvtJetSet.cc:    nprimary=1;
EvtJetSet.cc:    EvtVector4R p4stringboost(p4string.get(0),-p4string.get(1),
EvtJetSet.cc:      rho.Set(0,1,0.0);
EvtJetSet.cc:      rho.Set(1,0,0.0);
EvtJetSet.cc:      rho.Set(1,1,1.0);
EvtJetSet.cc:      rho.Set(1,2,0.0);
EvtJetSet.cc:      rho.Set(2,1,0.0);
EvtJetSet.cc:      double alpha=atan2(p4Psi.get(2),p4Psi.get(1));
EvtJetSet.cc:    EvtDecayBasePtr* newjetsetdecays=new EvtDecayBasePtr[2*ntable+10];
EvtJetSet.cc:    ntable=2*ntable+10;
EvtJetSet.cc:  char sname[100];
EvtJetSet.cc:  if (ctau>1000000.0) ctau=0.0;
EvtJetSet.cc:    if (sname[i-1]=='+'||sname[i-1]=='-'){ 
EvtJetSet.cc:      sname[i-1]=0;
EvtJetSet.cc:    if (sname[i-1]=='+'||sname[i-1]=='-'){ 
EvtJetSet.cc:      sname[i-1]=0;
EvtJetSet.cc:    if (sname[i-1]=='0' && sname[i-2]!='_' && !(sname[0]=='c' && sname[1]=='h')){
EvtJetSet.cc:      sname[i-1]=0;
EvtJetSet.cc:    for(j=1;j<namelength;j++){
EvtJetSet.cc:    if (abs(EvtPDL::getStdHep(evtnum))==21) cchg=2;
EvtJetSet.cc:    if (abs(EvtPDL::getStdHep(evtnum))==90) cchg=-1;
EvtJetSet.cc:	(abs(EvtPDL::getStdHep(evtnum))!=0)) cchg=1;
EvtJetSet.cc:      outdec << 1;
EvtJetSet.cc:  outdec << setw(12) << mass;
EvtJetSet.cc:  outdec << setw(12) << width;
EvtJetSet.cc:  outdec.width(12);
EvtJetSet.cc:  if (fabs(width)<0.0000000001) {
EvtJetSet.cc:  outdec << setw(14) << ctau;
EvtJetSet.cc:    if (ctau>1.0 || rawbrfrsum<0.000001) {  
EvtJetSet.cc:  if (br_sum<0.000001) br_sum=1.0;
EvtJetSet.cc:				 EvtPDL::getctau(ipar),1,br_sum_true);
EvtJetSet.cc:	    unknown=1;
EvtJetSet.cc:	  unknown=1;
EvtJetSet.cc:	  dflag=1;
EvtJetSet.cc:	  //report(INFO,"EvtGen") << EvtPDL::name(iparname) << " dflag=1 because C(ipar)=ipar!"<<endl;
EvtJetSet.cc:	//  dflag=1;
EvtJetSet.cc:	  //report(INFO,"EvtGen") << EvtPDL::name(iparname) << " dflag=1 because channel>=0"<<endl;
EvtJetSet.cc:	if (1){
EvtJetSet.cc:	  outdec.width(10);
EvtJetSet.cc:	  outdec.width(12);
EvtJetSet.cc:	  if (fabs(br)<0.000000001) {
EvtJetSet.cc:	  outdec <<daugs[1];
EvtJetSet.cc:  for(lundkc=1;lundkc<=500;lundkc++){
EvtJetSet.cc:    nokcentry=1;
EvtJetSet.cc:	int first=1;
EvtJetSet.cc:				lundkc,EvtId(-1,-1),"  ",
EvtJetSet.cc:  static int first=1;
EvtJetSet.cc:    char hostBuffer[100];
EvtJetSet.cc:    if ( gethostname( hostBuffer, 100 ) != 0 ){
EvtJetSet.cc:      strncpy( hostBuffer, "hostnameNotFound", 100 );
EvtJetSet.cc:    char pid[100];
EvtJetSet.cc:      strncpy( pid, "666", 100 );
EvtJetSet.hh://      Copyright (C) 1998      Caltech, UCSB
EvtJetSet.hh://    DJL/RYD     August 11, 1998         Module created
EvtJetSetInit.F:C      Copyright (C) 1998      Caltech, UCSB
EvtJetSetInit.F:C    DJL/RYD     August 11, 1998         Module created
EvtJetSetInit.F:c      external ludata  !! comment by pingrg 2007,9/12: we use Pythia instead of Lund
EvtJPE.cc: checkSpinDaughter(1,EvtSpinType::SCALAR);
EvtJPE.cc:setProbMax(1.0);
EvtJPE.cc:  EvtParticle *v,*s1;
EvtJPE.cc:  s1=p->getDaug(1); //eta_c
EvtJPE.cc:  ps=s1->getP4();
EvtJPE.cc:  double theta =angles.getHelAng(1); 
EvtJPE.cc:  double Mpsipp=fabs(mass_M-3.771);
EvtJPE.cc:  double FP=pvcm.d3mag(); //for J/psi and psi(3770) decays, M1 transition  assumed with form factor =1. P-wave gives the p_gamma factor
EvtJPE.cc:  if(Mpsip<0.1) FP=FP*FP*FP; //for psi(2S) decays, M1 transition  assumed with form factor=k_gamma^2
EvtJPE.cc: vertex(0,0,Djmn(1, 1, 1,phi,theta,gamma)*FP);  // Jpsi helicity =1 corresponding index=0
EvtJPE.cc: vertex(0,1,Djmn(1, 1,-1,phi,theta,gamma)*FM);
EvtJPE.cc: vertex(1,0,Djmn(1,-1, 1,phi,theta,gamma)*FP); // Jpsi helicity =-1 corresponding index=1 
EvtJPE.cc: vertex(1,1,Djmn(1,-1,-1,phi,theta,gamma)*FM);
EvtJPE.cc: vertex(2,0,Djmn(1, 0, 1,phi,theta,gamma)*FP); // Jpsi helicity =0 corresponding index=2
EvtJPE.cc: vertex(2,1,Djmn(1, 0,-1,phi,theta,gamma)*FM);
EvtJpipi.cc:  if ((!(getDaug(1)==PIP&&getDaug(2)==PIM))&&
EvtJpipi.cc:      (!(getDaug(1)==PI0&&getDaug(2)==PI0))) {
EvtJpipi.cc: setProbMax(0.019);
EvtJpipi.cc:  EvtParticle *v,*s1,*s2;
EvtJpipi.cc:  s1=p->getDaug(1);
EvtJpipi.cc:  EvtVector4C ep0,ep1,ep2;  
EvtJpipi.cc:  ep1=p->eps(1);
EvtJpipi.cc://  double fac=(s1->getP4()+s2->getP4()).mass2()-4*s1->mass()*s2->mass();
EvtJpipi.cc:  double fac1=(s1->getP4()+s2->getP4()).mass2()-2*s1->mass()*s2->mass();
EvtJpipi.cc:  double fac=0.3*fac1-2*0.11*(s1->getP4()).get(0)*(s2->getP4()).get(0);
EvtJpipi.cc:  vertex(0,1,fac*(ep0*v->epsParent(1).conj()));
EvtJpipi.cc:  vertex(1,0,fac*(ep1*v->epsParent(0).conj()));
EvtJpipi.cc:  vertex(1,1,fac*(ep1*v->epsParent(1).conj()));
EvtJpipi.cc:  vertex(1,2,fac*(ep1*v->epsParent(2).conj()));
EvtJpipi.cc:  vertex(2,1,fac*(ep2*v->epsParent(1).conj()));
EvtJscont.cc://      Copyright (C) 1998      Caltech, UCSB
EvtJscont.cc://    PCK     August 4, 1997        Module created
EvtJscont.cc:  // check that there are 1 argument
EvtJscont.cc:  checkNArg(1,2);
EvtJscont.cc:  static int first=1;
EvtJscont.cc:    if ( getNArg()>1) {
EvtJscont.cc:      val=getArg(1);
EvtJscont.cc:    sprintf(vak,"PARJ(13)=%f",val);
EvtJscont.cc:  EvtVector4R p4[100];
EvtJscont.cc:  int kf[100];
EvtJscont.cc:  EvtId id[100];
EvtJscont.cc:  double px[100],py[100],pz[100],e[100];
EvtJscont.cc:        e[i]=sqrt(px[i]*px[i]+py[i]*py[i]+pz[i]*pz[i])+0.0000000000001;
EvtJscont.cc:    more=((channel!=-1)&&(channel!=p->getChannel()));
EvtJscont.hh://      Copyright (C) 1998      Caltech, UCSB
EvtJscont.hh://    DJL/RYD     August 11, 1998         Module created
EvtJTO3P.cc:// check that there are 1 arguments:angular distribution parameter 
EvtJTO3P.cc:  checkSpinDaughter(1,EvtSpinType::SCALAR);
EvtJTO3P.cc:// setProbMax(1.0);
EvtJTO3P.cc:       EvtVector4R mompi1 = p->getDaug(0)->getP4();
EvtJTO3P.cc:       EvtVector4R mompi2 = p->getDaug(1)->getP4();
EvtJTO3P.cc:       EvtEulerAngles EA(mompi1,Zaxis);
EvtJTO3P.cc:       EvtVector4R h1,h2; //rotate pi1 and pi2 momentum to helicity system
EvtJTO3P.cc:       h1 = rotateEuler(mompi1,-gamma,-beta,-alpha);
EvtJTO3P.cc:       //       cout<<h1<<h2<<endl;
EvtJTO3P.cc:       double F0 = h1.get(1)*h2.get(2)-h1.get(2)*h2.get(1);
EvtJTO3P.cc:       vertex(0,Djmn(1, 1,0,alpha,beta,gamma)*F0);
EvtJTO3P.cc:       vertex(1,Djmn(1,-1,0,alpha,beta,gamma)*F0);
EvtJTO3P.cc:       vertex(2,Djmn(1, 0,0,alpha,beta,gamma)*F0);
EvtKKLambdaC.cc://      Copyright (C) 1998      Caltech, UCSB
EvtKKLambdaC.cc://    DJL       April 23, 1998       Module created
EvtKKLambdaC.cc:lnum = getDaug(1);
EvtKKLambdaC.cc: double mymaxprob=100.; 
EvtKKLambdaC.cc:  checkSpinDaughter(1,EvtSpinType::DIRAC);
EvtKKLambdaCFF.cc://      Copyright (C) 1998      Caltech, UCSB
EvtKKLambdaCFF.cc://    DJL       April 17,1998       Module created
EvtKKLambdaCFF.cc:		 double t, double mass, double *f1v,
EvtKKLambdaCFF.cc:		 double *f1a, double *f2v, double *f2a ) {
EvtKKLambdaCFF.cc:  *f1v=(_args[0])/(1.0-(t/(_args[1]*_args[1])));
EvtKKLambdaCFF.cc:  *f1a=-1.0*(*f1v);
EvtKKLambdaCFF.hh://      Copyright (C) 1998      Caltech, UCSB
EvtKKLambdaCFF.hh://    DJL     April 23, 1998         Module created
EvtKKLambdaCFF.hh:		   double t, double mass, double *f1v,
EvtKKLambdaCFF.hh:		   double *f1a, double *f2v, double *f2a );
EvtKKLambdaC.hh://      Copyright (C) 1998      Caltech, UCSB
EvtKKLambdaC.hh://    DJL     April 23, 1998         Module created
EvtKstarnunu.cc://      Copyright (C) 1998      Caltech, UCSB
EvtKstarnunu.cc://    RYD     September 29, 1997        Module created
EvtKstarnunu.cc:// Created:     Sept. 29 1997
EvtKstarnunu.cc:  checkSpinDaughter(1,EvtSpinType::NEUTRINO);
EvtKstarnunu.cc:  EvtParticle *meson, *neutrino1, *neutrino2;
EvtKstarnunu.cc:  neutrino1 = p->getDaug(1);
EvtKstarnunu.cc:  EvtVector4R momnu1 = neutrino1->getP4();
EvtKstarnunu.cc:  double v0_0, a0_0, a1_0, a2_0;
EvtKstarnunu.cc:  double m2v0, m2a0, a1_b, a2_b;
EvtKstarnunu.cc:  a1_0 = 0.37;
EvtKstarnunu.cc:  a1_b = -0.023;
EvtKstarnunu.cc:  EvtVector4R q = momnu1+momnu2;
EvtKstarnunu.cc:  double v0, a1, a2;
EvtKstarnunu.cc:  v0 = v0_0/(1-q2/m2v0);
EvtKstarnunu.cc:  a1 = a1_0*(1+a1_b*q2);
EvtKstarnunu.cc:  a2 = a2_0*(1+a2_b*q2);
EvtKstarnunu.cc:    - EvtComplex(0.0,1.0)*
EvtKstarnunu.cc:    ( (m_b+m_k)*a1*EvtTensor4C::g()
EvtKstarnunu.cc:  if (getDaug(1)==NUE||getDaug(1)==NUM||getDaug(1)==NUT) {
EvtKstarnunu.cc:        l=EvtLeptonVACurrent(neutrino1->spParentNeutrino(),
EvtKstarnunu.cc:  if (getDaug(1)==NUEB||getDaug(1)==NUMB||getDaug(1)==NUTB) {
EvtKstarnunu.cc:			     neutrino1->spParentNeutrino());
EvtKstarnunu.cc:  EvtVector4C et0,et1,et2; 
EvtKstarnunu.cc:  et0 = tds.cont1( meson->epsParent(0).conj() );
EvtKstarnunu.cc:  et1 = tds.cont1( meson->epsParent(1).conj() );
EvtKstarnunu.cc:  et2 = tds.cont1( meson->epsParent(2).conj() );
EvtKstarnunu.cc:  vertex(1,l*et1);
EvtKstarnunu.hh://      Copyright (C) 1998      Caltech, UCSB
EvtKstarnunu.hh://    DJL/RYD     August 11, 1998         Module created
EvtKstarstargamma.cc://    Ryd       November 15, 2002       Module created
EvtKstarstargamma.cc:  checkSpinDaughter(1,EvtSpinType::SCALAR);
EvtKstarstargamma.cc:  //setProbMax(1.0);
EvtKstarstargamma.cc:  EvtParticle* pion = p->getDaug(1);
EvtKstarstargamma.cc:  EvtComplexPtrPtr Hd1=new EvtComplexPtr[5];
EvtKstarstargamma.cc:  Hd1[0]=new EvtComplex[2]; 
EvtKstarstargamma.cc:  Hd1[1]=new EvtComplex[2]; 
EvtKstarstargamma.cc:  Hd1[2]=new EvtComplex[2]; 
EvtKstarstargamma.cc:  Hd1[3]=new EvtComplex[2]; 
EvtKstarstargamma.cc:  Hd1[4]=new EvtComplex[2]; 
EvtKstarstargamma.cc:  Hd1[0][0]=0.0;
EvtKstarstargamma.cc:  Hd1[0][1]=0.0;
EvtKstarstargamma.cc:  Hd1[1][0]=0.0;
EvtKstarstargamma.cc:  Hd1[1][1]=0.0;
EvtKstarstargamma.cc:  Hd1[2][0]=0.0;
EvtKstarstargamma.cc:  Hd1[2][1]=0.0;
EvtKstarstargamma.cc:  Hd1[3][0]=0.0;
EvtKstarstargamma.cc:  Hd1[3][1]=1.0;
EvtKstarstargamma.cc:  Hd1[4][0]=0.0;
EvtKstarstargamma.cc:  Hd1[4][1]=0.0;
EvtKstarstargamma.cc:  EvtEvalHelAmp d1(EvtSpinType::SCALAR,EvtSpinType::TENSOR,
EvtKstarstargamma.cc:		   EvtSpinType::PHOTON,Hd1);
EvtKstarstargamma.cc:  EvtAmp amp1;
EvtKstarstargamma.cc:  d1.evalAmp(&theB,amp1);
EvtKstarstargamma.cc:  EvtComplexPtrPtr Hd2=new EvtComplexPtr[1];
EvtKstarstargamma.cc:  Hd2[0]=new EvtComplex[1]; 
EvtKstarstargamma.cc:  Hd2[0][0]=1.0;
EvtKstarstargamma.cc:  EvtVector4R theKstarP4boost(theKstarP4.get(0),-theKstarP4.get(1),-theKstarP4.get(2),-theKstarP4.get(3));
EvtKstarstargamma.cc:  EvtTwoBodyVertex v(0.5,0.14,1.4,2);
EvtKstarstargamma.cc:  EvtTwoBodyKine v1(0.5,0.14,m);
EvtKstarstargamma.cc:  EvtPropBreitWignerRel prop(1.4,0.2);
EvtKstarstargamma.cc:  double width = prop.g0() * v.widthFactor(v1);
EvtKstarstargamma.cc:  vertex(0,bwamp*(amp1._amp[0]*amp2._amp[0]+
EvtKstarstargamma.cc:	   amp1._amp[1]*amp2._amp[1]+
EvtKstarstargamma.cc:	   amp1._amp[2]*amp2._amp[2]+
EvtKstarstargamma.cc:	   amp1._amp[3]*amp2._amp[3]+
EvtKstarstargamma.cc:           amp1._amp[4]*amp2._amp[4]));
EvtKstarstargamma.cc:  vertex(1,bwamp*(amp1._amp[5]*amp2._amp[0]+
EvtKstarstargamma.cc:	   amp1._amp[6]*amp2._amp[1]+
EvtKstarstargamma.cc:	   amp1._amp[7]*amp2._amp[2]+
EvtKstarstargamma.cc:	   amp1._amp[8]*amp2._amp[3]+
EvtKstarstargamma.cc:           amp1._amp[9]*amp2._amp[4]));
EvtKstarstargamma.hh://    RYD     Nov 15, 2002         Module created
EvtLambdaP_BarGamma.cc:// Cheng, Yang; hep-ph/0201015
EvtLambdaP_BarGamma.cc://    JFS     December 16th, 2003         Module created
EvtLambdaP_BarGamma.cc:  _mLambda0    ( 1.115684),         // Lambda0 mass
EvtLambdaP_BarGamma.cc:  _c7Eff       ( -0.31),            // Wilson coefficient                                      
EvtLambdaP_BarGamma.cc:  _GF          (  1.166E-5),        // Fermi constant                                          
EvtLambdaP_BarGamma.cc:  _gLambdab   (  16),               // coupling constant Lambda_b -> B- p
EvtLambdaP_BarGamma.cc:  _e0          (  1),               // electromagnetic coupling (+1)                           
EvtLambdaP_BarGamma.cc:  _g1          (  0.64),            // heavy-light form factors at q_mSqare                    
EvtLambdaP_BarGamma.cc:  _g2          ( -0.10),     
EvtLambdaP_BarGamma.cc:  _f1          (  0.64),
EvtLambdaP_BarGamma.cc:  _f2          ( -0.31),
EvtLambdaP_BarGamma.cc:    checkSpinDaughter(1, EvtSpinType::DIRAC);
EvtLambdaP_BarGamma.cc:    EvtComplex I(0, 1);
EvtLambdaP_BarGamma.cc:    EvtDiracParticle* theAntiP = static_cast<EvtDiracParticle*>(p->getDaug(1));
EvtLambdaP_BarGamma.cc:    // setProbMax(1);
EvtLambdaP_BarGamma.cc:    setProbMax(9.0000E-13); // found by trial and error
EvtLambdaP_BarGamma.cc:    return fqm * pow(1 - pow(_mLambdab - _mLambda0, 2) / (_mV * _mV), n);
EvtLambdaP_BarGamma.cc:    return gqm * pow(1 - pow(_mLambdab - _mLambda0, 2) / (_mA * _mA), n);
EvtLambdaP_BarGamma.cc:        * (f0(_f1) - f0(_f2));
EvtLambdaP_BarGamma.cc:        * (g0(_g1) - (_mLambdab - _mLambda0) / (_mLambdab + _mLambda0) * g0(_g2));
EvtLambdaP_BarGamma.hh:// Cheng, Yang; hep-ph/0201015
EvtLambdaP_BarGamma.hh://    JFS     December 16th, 2003         Module created
EvtLambdaP_BarGamma.hh:  double _mLambda0;  //  = 1.115684;                       // Lambda0 mass
EvtLambdaP_BarGamma.hh:  double _c7Eff;     //  = -0.31;                          // Wilson coefficient                                      
EvtLambdaP_BarGamma.hh:  double _GF;        //  =  1.166E-5;                      // Fermi constant                                          
EvtLambdaP_BarGamma.hh:  double _gLambdab;  // =  16;                            // coupling constant Lambda_b -> B- p                         
EvtLambdaP_BarGamma.hh:  double _e0;        //  =  1;                             // electromagnetic coupling (+1)                           
EvtLambdaP_BarGamma.hh:  double _g1;        //  =  0.64;                          // heavy-light form factors at q_mSqare                    
EvtLambdaP_BarGamma.hh:  double _g2;        //  = -0.10;      
EvtLambdaP_BarGamma.hh:  double _f1;        //  =  0.64;
EvtLambdaP_BarGamma.hh:  double _f2;        //  = -0.31;
EvtLambdaP_BarGamma.hh:  const double f0(const double f_qm, int n=1); // calculate f(0) with f(q_max)
EvtLambdaP_BarGamma.hh:  const double g0(const double f_qm, int n=1); // calculate g(0) with g(q_max)
EvtLambdaP_BarGamma.hh:  // initialize phasespace and calculate the amplitude for one (i=0,1) state of the photon
EvtLi2Spence.F:C      Copyright (C) 1998      Caltech, UCSB
EvtLi2Spence.F:C    DJL/RYD     August 11, 1998         Module created
EvtLi2Spence.F:      COMPLEX*16 Y,Z,Z2,SP
EvtLi2Spence.F:      REAL*8 A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,ZETA2
EvtLi2Spence.F:      DATA A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,ZETA2/
EvtLi2Spence.F:     1 -0.250000000000000D0,
EvtLi2Spence.F:     2 -0.111111111111111D0,
EvtLi2Spence.F:     3 -0.010000000000000D0,
EvtLi2Spence.F:     4 -0.017006802721088D0,
EvtLi2Spence.F:     5 -0.019444444444444D0,
EvtLi2Spence.F:     6 -0.020661157024793D0,
EvtLi2Spence.F:     7 -0.021417300648069D0,
EvtLi2Spence.F:     8 -0.021948866377231D0,
EvtLi2Spence.F:     9 -0.022349233811171D0,
EvtLi2Spence.F:     1 -0.022663689135191D0,
EvtLi2Spence.F:     2  1.644934066848226D0/
EvtLi2Spence.F:      IF(R2.GT.1.D0.AND.(XR/R2).GT.0.5D0)THEN
EvtLi2Spence.F:        Y=(X-1.D0)/X
EvtLi2Spence.F:        Z=-LOG(1.D0-Y)
EvtLi2Spence.F:        SP=Z*(1.D0+A1*Z*(1.D0+A2*Z*(1.D0+A3*Z2*(1.D0+A4*Z2*
EvtLi2Spence.F:     1 (1.D0+A5*Z2*(1.D0+A6*Z2*(1.D0+A7*Z2*(1.D0+A8*Z2*(1.D0+A9*Z2*
EvtLi2Spence.F:     2 (1.D0+A10*Z2))))))))))
EvtLi2Spence.F:     3 +ZETA2-LOG(X)*LOG(1.D0-X)+0.5D0*LOG(X)**2
EvtLi2Spence.F:            ELSEIF(R2.GT.1.D0.AND.(XR/R2).LE.0.5D0)THEN
EvtLi2Spence.F:        Y=1.D0/X
EvtLi2Spence.F:        Z=-LOG(1.D0-Y)
EvtLi2Spence.F:        SP=-Z*(1.D0+A1*Z*(1.D0+A2*Z*(1.D0+A3*Z2*(1.D0+A4*Z2*
EvtLi2Spence.F:     1 (1.D0+A5*Z2*(1.D0+A6*Z2*(1.D0+A7*Z2*(1.D0+A8*Z2*(1.D0+A9*Z2*
EvtLi2Spence.F:     2 (1.D0+A10*Z2))))))))))
EvtLi2Spence.F:      ELSEIF(R2.EQ.1.D0.AND.XI.EQ.0.D0)THEN
EvtLi2Spence.F:      ELSEIF(R2.LE.1.D0.AND.XR.GT.0.5D0)THEN
EvtLi2Spence.F:        Y=1.D0-X
EvtLi2Spence.F:        Z=-LOG(1.D0-Y)
EvtLi2Spence.F:        SP=-Z*(1.D0+A1*Z*(1.D0+A2*Z*(1.D0+A3*Z2*(1.D0+A4*Z2*
EvtLi2Spence.F:     1 (1.D0+A5*Z2*(1.D0+A6*Z2*(1.D0+A7*Z2*(1.D0+A8*Z2*(1.D0+A9*Z2*
EvtLi2Spence.F:     2 (1.D0+A10*Z2))))))))))
EvtLi2Spence.F:     3 +ZETA2-LOG(X)*LOG(1.D0-X)
EvtLi2Spence.F:      ELSEIF(R2.LE.1.D0.AND.XR.LE.0.5D0)THEN
EvtLi2Spence.F:        Z=-LOG(1.D0-Y)
EvtLi2Spence.F:        SP=Z*(1.D0+A1*Z*(1.D0+A2*Z*(1.D0+A3*Z2*(1.D0+A4*Z2*
EvtLi2Spence.F:     1 (1.D0+A5*Z2*(1.D0+A6*Z2*(1.D0+A7*Z2*(1.D0+A8*Z2*(1.D0+A9*Z2*
EvtLi2Spence.F:     2 (1.D0+A10*Z2))))))))))
EvtLNuGamma.cc://      Copyright (C) 2001      Caltech
EvtLNuGamma.cc://    Edward Chen   April 24, 2001           Module created
EvtLNuGamma.cc:    //      Argv[3] is a flag set to 0 if abs(f_a/f_v) is 1 
EvtLNuGamma.cc:  checkSpinDaughter(1,EvtSpinType::NEUTRINO);
EvtLNuGamma.cc:  EvtComplex myI(0,1);
EvtLNuGamma.cc:  neut=p->getDaug(1);
EvtLNuGamma.cc:  EvtVector4C lept1,lept2,photon1,photon2;
EvtLNuGamma.cc:    lept1=EvtLeptonVACurrent(lept->spParent(0),neut->spParentNeutrino());
EvtLNuGamma.cc:    lept2=EvtLeptonVACurrent(lept->spParent(1),neut->spParentNeutrino());
EvtLNuGamma.cc:    lept1=EvtLeptonVACurrent(neut->spParentNeutrino(),lept->spParent(0));
EvtLNuGamma.cc:    lept2=EvtLeptonVACurrent(neut->spParentNeutrino(),lept->spParent(1));
EvtLNuGamma.cc:  EvtVector4C photone1 = phot->epsParentPhoton(0).conj();
EvtLNuGamma.cc:  EvtVector4C photone2 = phot->epsParentPhoton(1).conj();
EvtLNuGamma.cc:  EvtVector4R parVelocity(1,0,0,0);  // Parent velocity in parent rest-frame
EvtLNuGamma.cc:  EvtVector4C temp1a = dual(directProd(parVelocity,photp)).cont2(photone1);
EvtLNuGamma.cc:  EvtVector4C temp1b = (photone1)*(parVelocity*photp);
EvtLNuGamma.cc:  EvtVector4C temp1c = (photp)*(photone1*parVelocity);
EvtLNuGamma.cc:  photon1 = (temp1a*fv) + (myI*fa*(temp1b - temp1c));
EvtLNuGamma.cc:  vertex(0,0,lept1.cont(photon1));
EvtLNuGamma.cc:  vertex(0,1,lept1.cont(photon2));
EvtLNuGamma.cc:  vertex(1,0,lept2.cont(photon1));
EvtLNuGamma.cc:  vertex(1,1,lept2.cont(photon2));
EvtLNuGamma.cc:  // Arg[1] = R (GeV^(-1))
EvtLNuGamma.cc:  // Using Korchemsky et al. Phy Rev D 61 (2000) 114510
EvtLNuGamma.cc:  double qb = -1./3.;
EvtLNuGamma.cc:    formFactor = (1/photonEnergy) * ((qu*getArg(1)) - (qb/getArg(2)));
EvtLNuGamma.hh://      Copyright (C) 2001  Caltech
EvtLNuGamma.hh://  Korchemsky, Pirjol, and Yan,Phy Rev D 61 (200) 114510
EvtLNuGamma.hh://    Edward Chen     April 24, 2001         Module created
EvtLundCharm.cc://         the necessary file: jetset74.F,lund_crm1_evtgen.F
EvtLundCharm.cc:      lundcharmdecays[i]=lundcharmdecays[nlundcharmdecays-1];
EvtLundCharm.cc://  checkNArg(1);
EvtLundCharm.cc:    lcommand=10+2*lcommand;
EvtLundCharm.cc:  static int kf[100];
EvtLundCharm.cc:  EvtId evtnumstable[100],evtnumparton[100];
EvtLundCharm.cc:  int stableindex[100],partonindex[100];
EvtLundCharm.cc:  static int km[100];
EvtLundCharm.cc:  static double px[100],py[100],pz[100],e[100];
EvtLundCharm.cc:    iniflag=iniflag+1;  //to count the event number
EvtLundCharm.cc:      if (EvtPDL::evtIdFromStdHep(kf[i])==EvtId(-1,-1)) {
EvtLundCharm.cc:      if (abs(kf[i])<=6||kf[i]==21){
EvtLundCharm.cc:        e[i]=sqrt(px[i]*px[i]+py[i]*py[i]+pz[i]*pz[i])+0.0000000001;
EvtLundCharm.cc:    if(ip==100443 && channel==0){
EvtLundCharm.cc:      channel=-1;
EvtLundCharm.cc:   more=(channel!=-1);
EvtLundCharm.cc:  }while( more && (count<10000) );
EvtLundCharm.cc:    int nprimary=1;
EvtLundCharm.cc:    EvtVector4R p4partons[10];
EvtLundCharm.cc:    nprimary=1;
EvtLundCharm.cc:    EvtVector4R p4stringboost(p4string.get(0),-p4string.get(1),
EvtLundCharm.cc:      rho.Set(0,1,0.0);
EvtLundCharm.cc:      rho.Set(1,0,0.0);
EvtLundCharm.cc:      rho.Set(1,1,1.0);
EvtLundCharm.cc:      rho.Set(1,2,0.0);
EvtLundCharm.cc:      rho.Set(2,1,0.0);
EvtLundCharm.cc:      double alpha=atan2(p4Psi.get(2),p4Psi.get(1));
EvtLundCharm.cc:    EvtDecayBasePtr* newlundcharmdecays=new EvtDecayBasePtr[2*ntable+10];
EvtLundCharm.cc:    ntable=2*ntable+10;
EvtLundCharm.hh://         the necessary file: jetset74.F,lund_crm1_evtgen.F
EvtMassH1.cc:// Module: EvtMassH1.cc
EvtMassH1.cc:#include "EvtGenModels/EvtMassH1.hh"
EvtMassH1.cc:#include "TH1.h"  
EvtMassH1.cc:EvtMassH1::~EvtMassH1() {}
EvtMassH1.cc:void EvtMassH1::getName(std::string& model_name){
EvtMassH1.cc:  model_name="MassH1";     
EvtMassH1.cc:EvtDecayBase* EvtMassH1::clone(){
EvtMassH1.cc:  return new EvtMassH1;
EvtMassH1.cc:void EvtMassH1::init(){
EvtMassH1.cc:void EvtMassH1::initProbMax(){
EvtMassH1.cc:void EvtMassH1::decay( EvtParticle *p ){
EvtMassH1.cc: int d1=dp[0];
EvtMassH1.cc: int d2=dp[1];
EvtMassH1.cc: TH1F *hid = (TH1F*)f.Get(hp);
EvtMassH1.cc: double BLE   =xaxis->GetBinLowEdge(1);
EvtMassH1.cc: for(i=1;i<BINS+1;i++){
EvtMassH1.cc:  EvtParticle *v,*s1;
EvtMassH1.cc:  v =p->getDaug(d1); 
EvtMassH1.cc:  s1=p->getDaug(d2); 
EvtMassH1.cc:  ps=s1->getP4Lab();
EvtMassH1.cc:  double rd1=EvtRandom::Flat(0.0, 1.0); 
EvtMassH1.cc:  if(rd1>xratio) goto loop;
EvtMassH1.hh:// Module: EvtMassH1.hh
EvtMassH1.hh:#ifndef EVTMassH1_HH
EvtMassH1.hh:#define EVTMassH1_HH
EvtMassH1.hh:class EvtMassH1:public  EvtDecayIncoherent  {
EvtMassH1.hh:  EvtMassH1() {}
EvtMassH1.hh:  virtual ~EvtMassH1();
EvtMassH2.cc:// Module: EvtMassH1.cc
EvtMassH2.cc:#include "TH1.h"
EvtMassH2.cc: int d1=dp[0];  //m(d1,d2) pair at X axis
EvtMassH2.cc: int d2=dp[1];
EvtMassH2.cc: for(i=1;i<BINSx+1;i++){
EvtMassH2.cc:     for(j=1;j<BINSy+1;j++){
EvtMassH2.cc:  EvtParticle *id1,*id2,*id3,*id4,*s1;
EvtMassH2.cc:  EvtVector4R pd1,pd2,pd3,pd4,ps;
EvtMassH2.cc:  id1 =p->getDaug(d1); 
EvtMassH2.cc:  pd1 =id1->getP4Lab();
EvtMassH2.cc:  xmass2=(pd1+pd2).mass2();
EvtMassH2.cc:  double rd1=EvtRandom::Flat(0.0, 1.0); 
EvtMassH2.cc:  if(rd1>xratio) goto loop;
EvtMassH2.hh:// Module: EvtMassH1.hh
EvtMelikhov.cc://      Copyright (C) 1998      Caltech, UCSB
EvtMelikhov.cc://    DJL     April 20, 1998        Module created
EvtMelikhov.cc:  checkNArg(1);
EvtMelikhov.cc:  checkSpinDaughter(1,EvtSpinType::DIRAC);
EvtMelikhovFF.cc://      Copyright (C) 1998      Caltech, UCSB
EvtMelikhovFF.cc://    DJL     April 17, 1998        Module created
EvtMelikhovFF.cc:EvtMelikhovFF::EvtMelikhovFF(double arg1) {
EvtMelikhovFF.cc:  whichfit = int(arg1+0.1);
EvtMelikhovFF.cc:                       double t, double mass, double *a1f,
EvtMelikhovFF.cc:  double ma1(0.0),ra1(0.0),na1(0.0);
EvtMelikhovFF.cc:  if ( whichfit==1) {
EvtMelikhovFF.cc:     ma1 = 7.07;
EvtMelikhovFF.cc:     ra1 = 0.27;
EvtMelikhovFF.cc:     na1 = 2.65;
EvtMelikhovFF.cc:     ma2 = 6.13;
EvtMelikhovFF.cc:     na2 = 2.17;
EvtMelikhovFF.cc:     ma1 = 6.78;
EvtMelikhovFF.cc:     ra1 = 0.20;
EvtMelikhovFF.cc:     na1 = 2.65;
EvtMelikhovFF.cc:     ra2 = 0.19;
EvtMelikhovFF.cc:     ma1 = 6.50;
EvtMelikhovFF.cc:     ra1 = 0.21;
EvtMelikhovFF.cc:     na1 = 2.70;
EvtMelikhovFF.cc:     rv = 0.21;
EvtMelikhovFF.cc:     ma1 = 5.68;
EvtMelikhovFF.cc:     ra1 = 0.29;
EvtMelikhovFF.cc:     na1 = 1.67;
EvtMelikhovFF.cc:     na2 = 1.67;
EvtMelikhovFF.cc:     nv = 1.73;
EvtMelikhovFF.cc:  *a1f = ((1.0+melr*melr-mely)/(1+melr))*ra1/pow(1.0-(t/(ma1*ma1)),na1);
EvtMelikhovFF.cc:  *a2f = (1+melr)*((1.0-melr*melr-mely)/((1+melr)*(1+melr)-mely))
EvtMelikhovFF.cc:    *ra2/pow(1.0-(t/(ma2*ma2)),na2);
EvtMelikhovFF.cc:  *vf = (1+melr)*rv/pow(1.0-(t/(mv*mv)),nv);
EvtMelikhovFF.hh://      Copyright (C) 1998      Caltech, UCSB
EvtMelikhovFF.hh://    DJL     April 20, 1998         Module created
EvtMelikhovFF.hh:  EvtMelikhovFF(double par1);
EvtMelikhovFF.hh:                       double t, double mass, double *a1f,
EvtMelikhov.hh://      Copyright (C) 1998      Caltech, UCSB
EvtMelikhov.hh://    DJL     April 20, 1998         Module created
EvtModelReg.cc://      Copyright (C) 1998      Caltech, UCSB
EvtModelReg.cc://    RYD     September 25, 1996         Module created
EvtModelReg.cc:#include "EvtGenModels/EvtJ2BB1.hh" 
EvtModelReg.cc:#include "EvtGenModels/EvtChi0BB1.hh"
EvtModelReg.cc:#include "EvtGenModels/EvtChi1BB1.hh"
EvtModelReg.cc:#include "EvtGenModels/EvtChi2BB1.hh"
EvtModelReg.cc:#include "EvtGenModels/EvtChi1BB2.hh"
EvtModelReg.cc:#include "EvtGenModels/EvtP2GC1.hh"    
EvtModelReg.cc:#include "EvtGenModels/EvtMassH1.hh"
EvtModelReg.cc:#include "EvtGenModels/EvtPBB1.hh"
EvtModelReg.cc:    modelist.Register(new EvtP2GC1);
EvtModelReg.cc:    modelist.Register(new EvtMassH1);
EvtModelReg.cc:    modelist.Register(new EvtPBB1);
EvtModelReg.cc:    modelist.Register(new EvtJ2BB1);
EvtModelReg.cc:    modelist.Register(new EvtChi0BB1);
EvtModelReg.cc:    modelist.Register(new EvtChi1BB1);
EvtModelReg.cc:    modelist.Register(new EvtChi2BB1);
EvtModelReg.cc:    modelist.Register(new EvtChi1BB2);
EvtModelReg.hh://      Copyright (C) 1998      Caltech, UCSB
EvtModelReg.hh://    Lange     April 18, 2002         Module created
EvtmPhsp.cc://      Copyright (C) 1998      Caltech, UCSB
EvtmPhsp.cc://    RYD       January 8, 1997       Module created
EvtmPhsp.cc:  // check that there are 3 arguments: n: daugthers (0~ n-1), lower mass, higher mass (in GeV)
EvtmPhsp.cc:  double mass1=getArg(1); //lower mass 
EvtmPhsp.cc:  for (int ii=1;ii<nd;ii++) pt=pt+p->getDaug(ii)->getP4Lab();
EvtmPhsp.cc:  if(xmass<mass1||xmass>mass2)goto loop;
EvtmPhsp.hh://      Copyright (C) 1998      Caltech, UCSB
EvtmPhsp.hh://    DJL/RYD     August 11, 1998         Module created
EvtMultibody.cc:    for(int i=0; i<N-1; ++i) {
EvtMultibody.cc:    // setProbMax(1.0);
EvtMultibody.cc:        newamp(index) = R.Get((index[0]+twospin)/2,(index[1]+twospin)/2);
EvtMultibody.cc:    newamp.extcont(amp, 1, 0);
EvtOmegaDalitz.cc://      Copyright (C) 1998      Caltech, UCSB
EvtOmegaDalitz.cc://    RYD     November 24, 1996         Module created
EvtOmegaDalitz.cc:  checkSpinDaughter(1,EvtSpinType::SCALAR);
EvtOmegaDalitz.cc:   setProbMax( 1.0);
EvtOmegaDalitz.cc:  ep[1] = p->eps(1);
EvtOmegaDalitz.cc:  EvtVector4R mompi1 = p->getDaug(0)->getP4();
EvtOmegaDalitz.cc:  EvtVector4R mompi2 = p->getDaug(1)->getP4();
EvtOmegaDalitz.cc:  EvtVector3R p1(mompi1.get(1),mompi1.get(2),mompi1.get(3));
EvtOmegaDalitz.cc:  EvtVector3R p2(mompi2.get(1),mompi2.get(2),mompi2.get(3));
EvtOmegaDalitz.cc:  EvtVector3R q=cross(p2,p1);
EvtOmegaDalitz.cc:  EvtVector3C e1(ep[0].get(1),ep[0].get(2),ep[0].get(3));
EvtOmegaDalitz.cc:  EvtVector3C e2(ep[1].get(1),ep[1].get(2),ep[1].get(3));
EvtOmegaDalitz.cc:  EvtVector3C e3(ep[2].get(1),ep[2].get(2),ep[2].get(3));
EvtOmegaDalitz.cc:  double norm=1.14/(p->mass()*p->mass()/9.0-mompi1.mass2());
EvtOmegaDalitz.cc:  vertex(0,norm*e1*q);
EvtOmegaDalitz.cc:  vertex(1,norm*e2*q);
EvtOmegaDalitz.hh://      Copyright (C) 1998      Caltech, UCSB
EvtOmegaDalitz.hh://    DJL/RYD     August 11, 1998         Module created
EvtP2GC0.cc:// Description: Routine to decay psi(2S) to gamma chi_c0 by assuming E1 dominant
EvtP2GC0.cc: checkSpinDaughter(1,EvtSpinType::SCALAR);
EvtP2GC0.cc: setProbMax(1.0);
EvtP2GC0.cc:  EvtParticle *v,*s1;
EvtP2GC0.cc:  s1=p->getDaug(1); //chi_c0
EvtP2GC0.cc:  ps=s1->getP4();
EvtP2GC0.cc:  double theta =angles.getHelAng(1); 
EvtP2GC0.cc: int j1,j2,j3;
EvtP2GC0.cc: for(j1=0;j1<=1;){
EvtP2GC0.cc: for(j2=0;j2<=1;){
EvtP2GC0.cc: vertex(j1,j2,0.0);j2++;}
EvtP2GC0.cc:j1++;}
EvtP2GC0.cc://    (1,0) (0,0) (0,0) 
EvtP2GC0.cc://    (0,0) (1,0) (0,0) 
EvtP2GC0.cc: vertex(0,1,Djmn(1, 1,-1,phi,theta,gamma));  // psi(2S) helicity =1 corresponding index=0
EvtP2GC0.cc: vertex(0,0,Djmn(1, 1, 1,phi,theta,gamma));
EvtP2GC0.cc: vertex(2,1,Djmn(1, 0,-1,phi,theta,gamma)); // psi(2S) helicity =0 corresponding index=2 
EvtP2GC0.cc: vertex(2,0,Djmn(1, 0, 1,phi,theta,gamma));
EvtP2GC0.cc: vertex(1,1,Djmn(1,-1,-1,phi,theta,gamma));  // psi(2S) helicity =-1 corresponding index=1
EvtP2GC0.cc: vertex(1,0,Djmn(1,-1, 1,phi,theta,gamma));
EvtP2GC0.hh:// Description: Routine to decay psi(2S) to gamma chi_c0 by assuming E1 dominant
EvtP2GC1.cc:// Module: EvtP2GC1.cc
EvtP2GC1.cc:// Description: Routine to decay psi(2S) to gamma chi_c1 by assuming E1 dominant
EvtP2GC1.cc:#include "EvtP2GC1.hh"
EvtP2GC1.cc:EvtP2GC1::~EvtP2GC1() {}
EvtP2GC1.cc:void EvtP2GC1::getName(std::string& model_name){
EvtP2GC1.cc:  model_name="P2GC1";     
EvtP2GC1.cc:EvtDecayBase* EvtP2GC1::clone(){
EvtP2GC1.cc:  return new EvtP2GC1;
EvtP2GC1.cc:void EvtP2GC1::init(){
EvtP2GC1.cc: checkSpinDaughter(1,EvtSpinType::VECTOR);
EvtP2GC1.cc: report(ERROR,"EvtGen") << "EvtP2GC1 generator radiative decays expected "<<endl;
EvtP2GC1.cc:void EvtP2GC1::initProbMax() {
EvtP2GC1.cc: setProbMax(1.67);
EvtP2GC1.cc:void EvtP2GC1::decay( EvtParticle *p){
EvtP2GC1.cc:  EvtParticle *v,*s1;
EvtP2GC1.cc:  s1=p->getDaug(1); //chi_c1
EvtP2GC1.cc:  ps=s1->getP4();
EvtP2GC1.cc:  double theta =angles.getHelAng(1);
EvtP2GC1.cc:  double alpha=-1./3.;
EvtP2GC1.cc:  double A02=sqrt((1+alpha)/2);
EvtP2GC1.cc:  double A00=sqrt((1-alpha)/4);
EvtP2GC1.cc:  double A12=-A02,A11=-A00;
EvtP2GC1.cc: int j1,j2,j3;
EvtP2GC1.cc: for(j1=0;j1<=2;){
EvtP2GC1.cc: for(j2=0;j2<=1;){
EvtP2GC1.cc: vertex(j1,j2,j3,0.0);j3++;}
EvtP2GC1.cc:j1++;}
EvtP2GC1.cc: vertex(0,1,2,Djmn(1, 1,-1,phi,theta,gamma)*A12); //helicity for psiprime = 1
EvtP2GC1.cc: vertex(0,1,1,Djmn(1, 1, 0,phi,theta,gamma)*A11);
EvtP2GC1.cc: vertex(0,0,2,Djmn(1, 1, 1,phi,theta,gamma)*A02); 
EvtP2GC1.cc: vertex(0,0,0,Djmn(1, 1, 0,phi,theta,gamma)*A00); 
EvtP2GC1.cc: vertex(1,1,2,Djmn(1,-1,-1,phi,theta,gamma)*A12);  //helicity for psiprime = -1
EvtP2GC1.cc: vertex(1,1,1,Djmn(1,-1, 0,phi,theta,gamma)*A11);
EvtP2GC1.cc: vertex(1,0,2,Djmn(1,-1, 1,phi,theta,gamma)*A02);
EvtP2GC1.cc: vertex(1,0,0,Djmn(1,-1, 0,phi,theta,gamma)*A00);
EvtP2GC1.cc: vertex(2,1,2,Djmn(1, 0,-1,phi,theta,gamma)*A12);  //helicity for psiprime = -1
EvtP2GC1.cc: vertex(2,1,1,Djmn(1, 0, 0,phi,theta,gamma)*A11);
EvtP2GC1.cc: vertex(2,0,2,Djmn(1, 0, 1,phi,theta,gamma)*A02);
EvtP2GC1.cc: vertex(2,0,0,Djmn(1, 0, 0,phi,theta,gamma)*A00);
EvtP2GC1.hh:// Module: EvtP2GC1.cc
EvtP2GC1.hh:// Description: Routine to decay psi(2S) to gamma chi_c1 by assuming E1 dominant
EvtP2GC1.hh:#ifndef EVTP2GC1_HH
EvtP2GC1.hh:#define EVTP2GC1_HH
EvtP2GC1.hh:class EvtP2GC1:public  EvtDecayAmp  {
EvtP2GC1.hh:  EvtP2GC1() {}
EvtP2GC1.hh:  virtual ~EvtP2GC1();
EvtP2GC2.cc:// Description: Routine to decay psi(2S) to gamma chi_c2 by assuming E1 dominant
EvtP2GC2.cc: checkSpinDaughter(1,EvtSpinType::TENSOR);
EvtP2GC2.cc: setProbMax(11.0);
EvtP2GC2.cc:  EvtParticle *v,*s1;
EvtP2GC2.cc:  s1=p->getDaug(1); //chi_c2
EvtP2GC2.cc:  ps=s1->getP4();
EvtP2GC2.cc:  double theta =angles.getHelAng(1);  
EvtP2GC2.cc:  double A10=1.0,A11=2.08,A12=3.03;  //PRD70,149
EvtP2GC2.cc:  double Af10=A10,Af1f1=A11,Af1f2=A12;
EvtP2GC2.cc: int j1,j2,j3;
EvtP2GC2.cc: for(j1=0;j1<=2;){
EvtP2GC2.cc: for(j2=0;j2<=1;){
EvtP2GC2.cc: vertex(j1,j2,j3,0.0);j3++;}
EvtP2GC2.cc:j1++;}
EvtP2GC2.cc: vertex(0,0,1,Djmn(1, 1,-1,phi,theta,gamma)*A12);
EvtP2GC2.cc: vertex(0,0,3,Djmn(1, 1, 0,phi,theta,gamma)*A11);
EvtP2GC2.cc: vertex(0,0,0,Djmn(1, 1, 1,phi,theta,gamma)*A10);
EvtP2GC2.cc: vertex(0,1,0,Djmn(1, 1,-1,phi,theta,gamma)*Af10);
EvtP2GC2.cc: vertex(0,1,4,Djmn(1, 1, 0,phi,theta,gamma)*Af1f1);
EvtP2GC2.cc: vertex(0,1,2,Djmn(1, 1, 1,phi,theta,gamma)*Af1f2);
EvtP2GC2.cc: vertex(1,0,1,Djmn(1,-1,-1,phi,theta,gamma)*A12);
EvtP2GC2.cc: vertex(1,0,3,Djmn(1,-1, 0,phi,theta,gamma)*A11);
EvtP2GC2.cc: vertex(1,0,0,Djmn(1,-1, 1,phi,theta,gamma)*A10);
EvtP2GC2.cc: vertex(1,1,0,Djmn(1,-1,-1,phi,theta,gamma)*Af10);                               
EvtP2GC2.cc: vertex(1,1,4,Djmn(1,-1, 0,phi,theta,gamma)*Af1f1);
EvtP2GC2.cc: vertex(1,1,2,Djmn(1,-1, 1,phi,theta,gamma)*Af1f2);
EvtP2GC2.cc: vertex(2,0,1,Djmn(1, 0,-1,phi,theta,gamma)*A12);
EvtP2GC2.cc: vertex(2,0,3,Djmn(1, 0, 0,phi,theta,gamma)*A11);
EvtP2GC2.cc: vertex(2,0,0,Djmn(1, 0, 1,phi,theta,gamma)*A10);
EvtP2GC2.cc: vertex(2,1,0,Djmn(1, 0,-1,phi,theta,gamma)*Af10);                               
EvtP2GC2.cc: vertex(2,1,4,Djmn(1, 0, 0,phi,theta,gamma)*Af1f1);
EvtP2GC2.cc: vertex(2,1,2,Djmn(1, 0, 1,phi,theta,gamma)*Af1f2);
EvtP2GC2.hh:// Description: Routine to decay psi(2S) to gamma chi_c2 by assuming E1 dominant
EvtPartWave.cc://    fkw        February 2, 2001     changes to satisfy KCC
EvtPartWave.cc:  int _nC=EvtSpinType::getSpinStates(EvtPDL::getSpinType(getDaug(1)));
EvtPartWave.cc:  int _JC2=EvtSpinType::getSpin2(EvtPDL::getSpinType(getDaug(1)));
EvtPartWave.cc:    _M[i]=getArg(argcounter)*exp(EvtComplex(0.0,getArg(argcounter+1)));;
EvtPartWave.cc:	  int s1=_JA2;
EvtPartWave.cc:	  int m1=lambda2-lambda3;
EvtPartWave.cc:	  EvtCGCoefSingle c1(s2,s3);
EvtPartWave.cc:	  double fkwTmp = (L+1.0)/(s1+1.0);
EvtPartWave.cc:	  if (S>=abs(m1)){
EvtPartWave.cc:	      *c1.coef(S,m1,s2,s3,lambda2,-lambda3)
EvtPartWave.cc:	      *c2.coef(s1,m1,L,S,0,m1)*_M[i];
EvtPartWave.cc:	    //fkw EvtComplex tmp=sqrt((L+1)/(s1+1))*c1.coef(S,m1,s2,s3,lambda2,-lambda3)*c2.coef(s1,m1,L,S,0,m1)*_M[i];
EvtPartWave.cc:				EvtPDL::getSpinType(getDaug(1)),
EvtPartWave.cc:    lambda2[1]=-2;
EvtPartWave.cc:  assert(n==J2+1);
EvtPartWave.cc:    lambda2[i]=n-i*2-1;
EvtPartWave.hh://      Copyright (C) 1998      Caltech, UCSB
EvtPartWave.hh://    RYD      September 7, 1999         Module created
EvtPBB1.cc:// Module: EvtPBB1.cc
EvtPBB1.cc:#include "EvtPBB1.hh"
EvtPBB1.cc:EvtPBB1::~EvtPBB1() {}
EvtPBB1.cc:void EvtPBB1::getName(std::string& model_name){
EvtPBB1.cc:  model_name="PBB1";     
EvtPBB1.cc:EvtDecayBase* EvtPBB1::clone(){
EvtPBB1.cc:  return new EvtPBB1;
EvtPBB1.cc:void EvtPBB1::initProbMax() {
EvtPBB1.cc:void EvtPBB1::init(){
EvtPBB1.cc: checkSpinDaughter(1,EvtSpinType::DIRAC);
EvtPBB1.cc:void EvtPBB1::decay( EvtParticle *p){
EvtPBB1.cc: vertex(0,1,                    0.0);
EvtPBB1.cc: vertex(1,0,                    0.0);
EvtPBB1.cc: vertex(1,1,-exp(EvtComplex(0,phs)));
EvtPBB1.hh:// Module: EvtPBB1.cc
EvtPBB1.hh:#ifndef EVTPBB1_HH
EvtPBB1.hh:#define EVTPBB1_HH
EvtPBB1.hh:class EvtPBB1:public  EvtDecayAmp  {
EvtPBB1.hh:  EvtPBB1() {}
EvtPBB1.hh:  virtual ~EvtPBB1();
EvtPBB2.cc:// Description: Routine to decay pseudoscalar to  B_10 bar B_10 using
EvtPBB2.cc: checkSpinDaughter(1,EvtSpinType::RARITASCHWINGER);
EvtPBB2.cc:  vertex(0,0,                       1.);
EvtPBB2.cc:  vertex(1,1, rt*exp(EvtComplex(0,phs)));
EvtPBB2.cc:  vertex(3,3,                       -1);
EvtPBB2.hh:// Description: Routine to decay pseudoscalar to  B_10 bar B_10 using 
EvtPFermi.cc://   F(k+) = N (1-x)^a exp((1+a)x) ,x=k+/(mB-mb) 
EvtPFermi.cc://   hep-ph/9905351 v2
EvtPFermi.cc:  if ( x      >= 1)   return 0;
EvtPFermi.cc:  FKplus = pow(1-x,_a)*exp((1+_a)*x);
EvtPFermi.hh://   F(k+) = N (1-x)^a exp((1-a)x) ,x=k+/(mB-mb) 
EvtPFermi.hh://   hep-ph/9905351 v2
EvtPhiDalitz.cc:  checkSpinDaughter(1,EvtSpinType::SCALAR);
EvtPhiDalitz.cc:  EvtVector4R Ppim = p->getDaug(1)->getP4();
EvtPhiDalitz.cc:  EvtComplex A1(M2rhop/Drhop);
EvtPhiDalitz.cc:  EvtComplex A4(0.0071*M2omega*exp(OmegaPhase)/DOmega);
EvtPhiDalitz.cc:  Atot=A1+A2+A3+A4+A5;
EvtPhiDalitz.cc:  vertex(1,Atot);
EvtPHOTOS.cc://      Copyright (C) 1998      Caltech, UCSB
EvtPHOTOS.cc://    RYD     October 1, 1997        Module created
EvtPHOTOS.cc:  static int first=1;
EvtPHOTOS.cc:  static EvtId GAMM=EvtPDL::getId("gammaFSR");  //pingrg, 2009/02/19
EvtPHOTOS.cc:  entry=1;
EvtPHOTOS.cc:  eventnum=1;
EvtPHOTOS.cc:  numparticle=1;
EvtPHOTOS.cc:  dauglast=1+p->getNDaug();
EvtPHOTOS.cc:    if (quarks.contains(p->getDaug(i)->getId())==1) continue;
EvtPHOTOS.cc:    px=p->getDaug(i)->getP4().get(1);
EvtPHOTOS.cc:    entry+=1;
EvtPHOTOS.cc:    eventnum=1;
EvtPHOTOS.cc:    numparticle+=1;
EvtPHOTOS.cc:    istat=1;
EvtPHOTOS.cc:    mother=1;
EvtPHOTOS.cc:  //int mlst=1;
EvtPHOTOS.cc:  entry=1;
EvtPHOTOS.cc:  for(entry=numparticle+1;entry<=numparticlephotos;entry++){
EvtPHOTOS.hh://      Copyright (C) 1998      Caltech, UCSB
EvtPHOTOS.hh://    RYD     March 24, 1998         Module created
EvtPhsp.cc://      Copyright (C) 1998      Caltech, UCSB
EvtPhsp.cc://    RYD       January 8, 1997       Module created
EvtPhsp.cc:  //unneeded - lange - may13-02
EvtPhsp.cc:    //Will end up here because maxrate multiplies by 1.2
EvtPhsp.hh://      Copyright (C) 1998      Caltech, UCSB
EvtPhsp.hh://    DJL/RYD     August 11, 1998         Module created
EvtPi0Dalitz.cc://      Copyright (C) 1998      Caltech, UCSB
EvtPi0Dalitz.cc://    DJL/RYD    June 30, 1998          Module created
EvtPi0Dalitz.cc:  checkSpinDaughter(1,EvtSpinType::DIRAC);
EvtPi0Dalitz.cc:  setWeight(p->initializePhaseSpace(getNDaug(),getDaugs(),0.00000002,0,1));
EvtPi0Dalitz.cc:  em=p->getDaug(1);
EvtPi0Dalitz.cc:  // 0.1 is the size of the peak at low q^2 (in arbitrary units).
EvtPi0Dalitz.cc:  // The value of 0.1 is appropriate for muons. 
EvtPi0Dalitz.cc:  prob *=(1.0/( (0.768*0.768-m2)*(0.768*0.768-m2)
EvtPi0Dalitz.cc:           +0.768*0.768*0.151*0.151));
EvtPi0Dalitz.hh://      Copyright (C) 1998      Caltech, UCSB
EvtPi0Dalitz.hh://    DJL/RYD     August 11, 1998         Module created
EvtPto3P.cc://      $Id: getName,v 1.1 2009/12/18 08:43:52 pingrg Exp $
EvtPto3P.cc://      Copyright (C) 1998 Caltech, UCSB
EvtPto3P.cc://      Alexei Dvoretskii, Caltech, 2001-2002.
EvtPto3P.cc:  EvtId dau1 = getDaug(1);
EvtPto3P.cc:  assert(EvtPDL::getSpinType(dau1) == EvtSpinType::SCALAR);
EvtPto3P.cc:  assert(EvtPDL::chg3(parent) == EvtPDL::chg3(dau0) + EvtPDL::chg3(dau1) + EvtPDL::chg3(dau2));
EvtPto3P.cc:  return EvtDalitzPlot(EvtPDL::getMass(dau0),EvtPDL::getMass(dau1),EvtPDL::getMass(dau2),EvtPDL::getMass(parent));
EvtPto3P.cc:  fact->build(parser,10000);
EvtPto3P.cc:  double sin = sqrt(1.0-cos*cos);
EvtPto3P.cc:  vboost.set(1,-vboost.get(1));
EvtPto3P.cc:  double beta = acos(EvtRandom::Flat( -1.0, 1.0 ));
EvtPto3P.hh://      $Id: getName,v 1.1 2009/12/18 08:43:52 pingrg Exp $
EvtPto3P.hh://      Copyright (C) 1998 Caltech, UCSB
EvtPto3P.hh://      Alexei Dvoretskii, Caltech, 2001-2002.
EvtPycont.cc://      Copyright (C) 1998      Caltech, UCSB
EvtPycont.cc://    PCK     August 4, 1997        Module created
EvtPycont.cc:  int dc[18];
EvtPycont.cc:  //  int i=1;
EvtPycont.cc:  // check that there are 1 argument
EvtPycont.cc:  if ( getNArg() != 12 && getNArg() != 0 ) {
EvtPycont.cc:			   << " 12 arguments (d u s c b t e nu_e mu nu_mu tau nu_tau) but found: "
EvtPycont.cc:  checkNArg(0,12);
EvtPycont.cc:   for( int i=0; i<18; i++)
EvtPycont.cc:   if ( getNArg() == 12 ) {
EvtPycont.cc:     decaych_.dc[1]=(int)getArg(1);
EvtPycont.cc:     decaych_.dc[10]=(int)getArg(6);
EvtPycont.cc:     decaych_.dc[11]=(int)getArg(7);
EvtPycont.cc:     decaych_.dc[12]=(int)getArg(8);
EvtPycont.cc:     decaych_.dc[13]=(int)getArg(9);
EvtPycont.cc:     decaych_.dc[14]=(int)getArg(10);
EvtPycont.cc:     decaych_.dc[15]=(int)getArg(11);
EvtPycont.cc:     decaych_.dc[0]=1;
EvtPycont.cc:     decaych_.dc[1]=1;
EvtPycont.cc:     decaych_.dc[2]=1;
EvtPycont.cc:     decaych_.dc[3]=1;
EvtPycont.cc:  EvtVector4R p4[100];
EvtPycont.cc:  int kf[100];
EvtPycont.cc:  EvtId id[100];
EvtPycont.cc:  double px[100],py[100],pz[100],e[100];
EvtPycont.cc:	  e[i]=sqrt(px[i]*px[i]+py[i]*py[i]+pz[i]*pz[i])+0.0000000000001;
EvtPycont.cc:    more=((channel!=-1)&&(channel!=p->getChannel()));
EvtPycont.hh://      Copyright (C) 1998      Caltech, UCSB
EvtPycont.hh://    DJL/RYD     August 11, 1998         Module created
EvtPyGaGa.cc://      Copyright (C) 1998      Caltech, UCSB
EvtPyGaGa.cc://    PCK     August 4, 1997        Module created
EvtPyGaGa.cc:  int dc[18];
EvtPyGaGa.cc:  int i=1;
EvtPyGaGa.cc:  // check that there are 1 argument
EvtPyGaGa.cc:  for( int i=0; i<18; i++)
EvtPyGaGa.cc:  EvtPythia::pythiaInit(1);
EvtPyGaGa.cc:  EvtVector4R p4[100];
EvtPyGaGa.cc:  int kf[100];
EvtPyGaGa.cc:  EvtId id[100];
EvtPyGaGa.cc:  double px[100],py[100],pz[100],e[100];
EvtPyGaGa.cc:	  e[i]=sqrt(px[i]*px[i]+py[i]*py[i]+pz[i]*pz[i])+0.0000000000001;
EvtPyGaGa.cc:    more=((channel!=-1)&&(channel!=p->getChannel()));
EvtPyGaGa.hh://      Copyright (C) 1998      Caltech, UCSB
EvtPyGaGa.hh://    DJL/RYD     August 11, 1998         Module created
EvtPythia.cc://      Copyright (C) 1998      Caltech, UCSB
EvtPythia.cc://    RYD     July 24, 1997        Module created
EvtPythia.cc:      jetsetdecays[i]=jetsetdecays[njetsetdecays-1];
EvtPythia.cc:  checkNArg(1);
EvtPythia.cc:    lcommand=10+2*lcommand;
EvtPythia.cc:  int kf[100];
EvtPythia.cc:  EvtId evtnumstable[100],evtnumparton[100];
EvtPythia.cc:  int stableindex[100],partonindex[100];
EvtPythia.cc:  int km[100];
EvtPythia.cc:  double px[100],py[100],pz[100],e[100];
EvtPythia.cc:      if (EvtPDL::evtIdFromStdHep(kf[i])==EvtId(-1,-1)) {
EvtPythia.cc:	int i=1;
EvtPythia.cc:      if (abs(kf[i])<=6||kf[i]==21){
EvtPythia.cc:        e[i]=sqrt(px[i]*px[i]+py[i]*py[i]+pz[i]*pz[i])+0.0000000000001;
EvtPythia.cc:   more=(channel!=-1);
EvtPythia.cc:  }while( more && (count<10000) );
EvtPythia.cc:    int nprimary=1;
EvtPythia.cc:    EvtVector4R p4partons[10];
EvtPythia.cc:    nprimary=1;
EvtPythia.cc:      rho.Set(0,1,0.0);
EvtPythia.cc:      rho.Set(1,0,0.0);
EvtPythia.cc:      rho.Set(1,1,1.0);
EvtPythia.cc:      rho.Set(1,2,0.0);
EvtPythia.cc:      rho.Set(2,1,0.0);
EvtPythia.cc:      double alpha=atan2(p4Psi.get(2),p4Psi.get(1));
EvtPythia.cc:    EvtDecayBasePtr* newjetsetdecays=new EvtDecayBasePtr[2*ntable+10];
EvtPythia.cc:    ntable=2*ntable+10;
EvtPythia.cc:  char sname[100];
EvtPythia.cc:  char ccsname[100];
EvtPythia.cc:  // RS changed to 16, new PYTHIA standard
EvtPythia.cc:  int namelength=16;
EvtPythia.cc:  if (ctau>1000000.0) ctau=0.0;
EvtPythia.cc:    if (sname[i-1]=='+'||sname[i-1]=='-'){ 
EvtPythia.cc:      sname[i-1]=0;
EvtPythia.cc:    if (sname[i-1]=='+'||sname[i-1]=='-'){ 
EvtPythia.cc:      sname[i-1]=0;
EvtPythia.cc:    if (sname[i-1]=='0' && sname[i-2]!='_' && !(sname[0]=='c' && sname[1]=='h')){
EvtPythia.cc:      sname[i-1]=0;
EvtPythia.cc:    for(j=1;j<namelength;j++){
EvtPythia.cc:      ccsname[i+1]=0;
EvtPythia.cc:    if (abs(EvtPDL::getStdHep(evtnum))==21) cchg=2;
EvtPythia.cc:    if (abs(EvtPDL::getStdHep(evtnum))==90) cchg=-1;
EvtPythia.cc:	(abs(EvtPDL::getStdHep(evtnum))!=0)) cchg=1;
EvtPythia.cc:      // 2+16 spaces
EvtPythia.cc:      outdec << 1;
EvtPythia.cc:  outdec << setw(12) << mass;
EvtPythia.cc:  outdec << setw(12) << width;
EvtPythia.cc:  outdec.width(12);
EvtPythia.cc:  if (fabs(width)<0.0000000001) {
EvtPythia.cc:  // scientific notation ...  outdec << setw(14) << ctau;
EvtPythia.cc:    if (ctau>1.0 || rawbrfrsum<0.000001) {  
EvtPythia.cc:  if (br_sum<0.000001) br_sum=1.0;
EvtPythia.cc:				 EvtPDL::getctau(ipar),1,br_sum_true);
EvtPythia.cc:	  unknown=1;
EvtPythia.cc:	  unknown=1;
EvtPythia.cc:	  dflag=1;
EvtPythia.cc:	  //report(INFO,"EvtGen") << EvtPDL::name(iparname) << " dflag=1 because C(ipar)=ipar!"<<endl;
EvtPythia.cc:	//  dflag=1;
EvtPythia.cc:	//report(INFO,"EvtGen") << EvtPDL::name(iparname) << " dflag=1 because channel>=0"<<endl;
EvtPythia.cc:	if (1){
EvtPythia.cc:	  outdec.width(12);
EvtPythia.cc:	  if (fabs(br)<0.000000001) {
EvtPythia.cc:	  outdec.width(10);
EvtPythia.cc:	  outdec.width(10);
EvtPythia.cc:	  outdec <<daugs[1];
EvtPythia.cc:	  outdec.width(10);
EvtPythia.cc:	  outdec.width(10);
EvtPythia.cc:	  outdec.width(10);
EvtPythia.cc:    case 1103:
EvtPythia.cc:    case 2101:
EvtPythia.cc:    case 2103:
EvtPythia.cc:    case 3101:
EvtPythia.cc:    case 3103:
EvtPythia.cc:    case 3201:
EvtPythia.cc:    case 4101:
EvtPythia.cc:    case 4103:
EvtPythia.cc:    case 4201:
EvtPythia.cc:    case 4301:
EvtPythia.cc:    case 5101:
EvtPythia.cc:    case 5103:
EvtPythia.cc:    case 5201:
EvtPythia.cc:    case 5301:
EvtPythia.cc:    case 5401:
EvtPythia.cc:    case 1103:
EvtPythia.cc:      return 0.77133;
EvtPythia.cc:    case 2101:
EvtPythia.cc:    case 2103:
EvtPythia.cc:      return 0.77133;
EvtPythia.cc:      return 0.77133;
EvtPythia.cc:    case 3101:
EvtPythia.cc:    case 3103:
EvtPythia.cc:    case 3201:
EvtPythia.cc:      return 1.09361;
EvtPythia.cc:    case 4101:
EvtPythia.cc:      return 1.96908;
EvtPythia.cc:    case 4103:
EvtPythia.cc:    case 4201:
EvtPythia.cc:      return 1.96908;
EvtPythia.cc:    case 4301:
EvtPythia.cc:      return 2.15432;
EvtPythia.cc:      return 2.17967;
EvtPythia.cc:      return 3.27531;
EvtPythia.cc:    case 5101:
EvtPythia.cc:    case 5103:
EvtPythia.cc:      return 5.40145;
EvtPythia.cc:    case 5201:
EvtPythia.cc:      return 5.40145;
EvtPythia.cc:    case 5301:
EvtPythia.cc:    case 5401:
EvtPythia.cc:      return 6.67143;
EvtPythia.cc:      return 10.07354;
EvtPythia.cc:    case 1103:
EvtPythia.cc:    case 2101:
EvtPythia.cc:      return  1;
EvtPythia.cc:    case 2103:
EvtPythia.cc:      return  1;
EvtPythia.cc:    case 3101:
EvtPythia.cc:    case 3103:
EvtPythia.cc:    case 3201:
EvtPythia.cc:      return  1;
EvtPythia.cc:      return  1;
EvtPythia.cc:    case 4101:
EvtPythia.cc:      return  1;
EvtPythia.cc:    case 4103:
EvtPythia.cc:      return  1;
EvtPythia.cc:    case 4201:
EvtPythia.cc:    case 4301:
EvtPythia.cc:      return  1;
EvtPythia.cc:      return  1;
EvtPythia.cc:    case 5101:
EvtPythia.cc:    case 5103:
EvtPythia.cc:    case 5201:
EvtPythia.cc:      return  1;
EvtPythia.cc:      return  1;
EvtPythia.cc:    case 5301:
EvtPythia.cc:    case 5401:
EvtPythia.cc:      return  1;
EvtPythia.cc:      return  1;
EvtPythia.cc:  for(lundkc=1;lundkc<500;lundkc++){
EvtPythia.cc:    nokcentry=1;
EvtPythia.cc:	       EvtPDL::getStdHep(ipar)==21 ||
EvtPythia.cc:	    int first=1;
EvtPythia.cc:	  int first=1;
EvtPythia.cc:				   -1,0,
EvtPythia.cc:       lundkc,EvtId(-1,-1),"  ",
EvtPythia.cc:  static int first=1;
EvtPythia.cc:    char hostBuffer[100];
EvtPythia.cc:    if ( gethostname( hostBuffer, 100 ) != 0 ){
EvtPythia.cc:      strncpy( hostBuffer, "hostnameNotFound", 100 );
EvtPythia.cc:    char pid[100];
EvtPythia.cc:      strncpy( pid, "666", 100 );
EvtPythia.hh://      Copyright (C) 1998      Caltech, UCSB
EvtPythia.hh://    DJL/RYD     August 11, 1998         Module created
EvtRhoPi.cc:// Description: Jpsi or psi(2S) decays into 3 pions via rho(1--)pi
EvtRhoPi.cc:static int nrun=1;
EvtRhoPi.cc:double ResonanceMass =0.7710;
EvtRhoPi.cc:double ResonanceWidth=0.1492;
EvtRhoPi.cc:double r1            =0.9;
EvtRhoPi.cc:double phase1        =0;
EvtRhoPi.cc:double r2            =1.1;
EvtRhoPi.cc:double phase2        =1.5;
EvtRhoPi.cc:  ResonanceWidth=getArg(1);
EvtRhoPi.cc:  r1            =getArg(2);
EvtRhoPi.cc:  phase1        =getArg(3);
EvtRhoPi.cc:double amps,SamAmps,rd1;
EvtRhoPi.cc:  if(nrun==1){
EvtRhoPi.cc:       for(i=0;i<=nd-1;i++){
EvtRhoPi.cc:       amps=AmplitudeSquare(ResonanceMass,ResonanceWidth,r1,r2,phase1,phase2);
EvtRhoPi.cc:       if(amps>max_amps) max_amps=amps*1.01;
EvtRhoPi.cc:  for(i=0;i<=p->getNDaug()-1;i++){
EvtRhoPi.cc:   amps=AmplitudeSquare(ResonanceMass,ResonanceWidth,r1,r2,phase1,phase2);
EvtRhoPi.cc:   rd1=EvtRandom::Flat(0.0, 1.0);
EvtRhoPi.cc:  if(rd1>=SamAmps) goto loop;
EvtRhoPi.cc:double EvtRhoPi::AmplitudeSquare(double ResonanceMass, double ResonanceWidth,double r1,double 
EvtRhoPi.cc:r2,double phase1,double phase2){
EvtRhoPi.cc:  EvtVector4R dp1=GetDaugMomLab(0);
EvtRhoPi.cc:  EvtVector4R dp2=GetDaugMomLab(1);
EvtRhoPi.cc:  VVS Jpsi2rhopi(dp1,dp2,dp3,ResonanceMass,ResonanceWidth,r1,r2,phase1,phase2);
EvtRhoPi.hh:// Description: Jpsi or psi(2S) decays into 3 pions via rho(1--)pi
EvtRhoPi.hh:  double AmplitudeSquare(double ResonanceMass, double ResonanceWidth,double r1,double   
EvtRhoPi.hh:r2,double phase1,double phase2);
EvtRhoPi.hh: EvtVector4R _p4Lab[10],_p4CM[10],_p4Hel[10];
EvtS2GV.cc:// Description: Routine to decay chi_c1-> gamma J/psi  using 
EvtS2GV.cc://    helicity amplitude, assuming E1 dominance.             
EvtS2GV.cc: checkSpinDaughter(1,EvtSpinType::VECTOR);
EvtS2GV.cc:setProbMax(2.0001);
EvtS2GV.cc: EvtComplex F11=exp(EvtComplex(0,phs));
EvtS2GV.cc: vertex(0,0, F11);   
EvtS2GV.cc: vertex(0,1,   0);  
EvtS2GV.cc: vertex(1,0,   0);
EvtS2GV.cc: vertex(1,2,   0);
EvtS2GV.cc: vertex(1,1,-F11);  
EvtS2GV.hh:// Description: Routine to decay chi_c1-> gamma J/psi  using
EvtS2GV.hh://      helicity amplitude, assuming E1 dominance.  
EvtSingleParticle2.cc://      Copyright (C) 1998      Caltech, UCSB
EvtSingleParticle2.cc://    RYD       Febuary 17,1998       Module created
EvtSingleParticle2.cc:      pxymax=getArg(1);
EvtSingleParticle2.cc:      pxymax=getArg(1);
EvtSingleParticle2.cc:      pxymax=getArg(1);
EvtSingleParticle2.cc:      thetamax=2.76521;   //|cos(theta)|<0.93
EvtSingleParticle2.cc:                           << " 5, 3, or 1 arguments but found:"<<getNArg()<<endl;
EvtSingleParticle2.hh://      Copyright (C) 1998      Caltech, UCSB
EvtSingleParticle2.hh://    DJL/RYD     August 11, 1998         Module created
EvtSingleParticle.cc://      Copyright (C) 1998      Caltech, UCSB
EvtSingleParticle.cc://    RYD       Febuary 17,1998       Module created
EvtSingleParticle.cc:      pmax=getArg(1);
EvtSingleParticle.cc:      pmax=getArg(1);
EvtSingleParticle.cc:      pmax=getArg(1);
EvtSingleParticle.cc:      cthetamin=-1.0;
EvtSingleParticle.cc:      cthetamax=1.0;
EvtSingleParticle.cc:  if (pmin==pmax) pcm=pmin;  //pingrg, 2008-04-15
EvtSingleParticle.cc:  if(phimin==phimax) phi=phimin; //pingrg 2008-10-22
EvtSingleParticle.cc:    double stheta=sqrt(1.0-ctheta*ctheta);
EvtSingleParticle.hh://      Copyright (C) 1998      Caltech, UCSB
EvtSingleParticle.hh://    DJL/RYD     August 11, 1998         Module created
EvtSLBKPole.cc://      Copyright (C) 1998      Caltech, UCSB
EvtSLBKPole.cc:lnum = getDaug(1);
EvtSLBKPole.cc:  checkSpinDaughter(1,EvtSpinType::DIRAC);
EvtSLBKPoleFF.cc://      Copyright (C) 1998      Caltech, UCSB
EvtSLBKPoleFF.cc:  //double a_0, a_1, a_2, a_3, a_4, a_5, a_6, a_7;
EvtSLBKPoleFF.cc:  af = SLBKPoleargs[1];//alpha
EvtSLBKPoleFF.cc:  powf = 1.0;
EvtSLBKPoleFF.cc:  *fpf = f0/(pow( 1.0 - (1.0+af)*(t/mass_star2) + (af*((t/mass_star2)*(t/mass_star2))),powf));//modified
EvtSLBKPoleFF.cc:  powf = 1.0;
EvtSLBKPoleFF.cc:  *f0f = f0/(pow( 1.0 - (t/mass_star2/af),powf));//modified
EvtSLBKPoleFF.cc:                       double t, double mass, double *a1f,
EvtSLBKPoleFF.cc:  f0 = SLBKPoleargs[2];//A1
EvtSLBKPoleFF.cc:  powf = 1.0;//1.0
EvtSLBKPoleFF.cc:  *a1f = f0/(pow( 1.0 - af*t/mass_star2,powf));//modified
EvtSLBKPoleFF.cc:  powf = 1.0;//1.0
EvtSLBKPoleFF.cc:  *a2f = f0/(pow(1.0 - (af+bf)*(t/mass_star2) + (af*bf)*((t/mass_star2)*(t/mass_star2)),powf));//modified
EvtSLBKPoleFF.cc:  powf = 1.0;//1.0
EvtSLBKPoleFF.cc:  *vf = f0/(pow( 1.0 - (1.0+af)*(t/mass_star2) + af*(t/mass_star2)*(t/mass_star2),powf));//modified
EvtSLBKPoleFF.cc:  f0 = SLBKPoleargs[1];//A0
EvtSLBKPoleFF.cc:  powf = 1.0;//1.0
EvtSLBKPoleFF.cc:  *a0f = f0/(pow( 1.0 - (1.0+af)*(t/mb2) + af*((t/mb2)*(t/mb2)),powf));//modified
EvtSLBKPoleFF.cc:  if ( numSLBKPoleargs !=16 ) {
EvtSLBKPoleFF.cc:  af = SLBKPoleargs[1];
EvtSLBKPoleFF.cc:  *hf = f0/(pow( 1.0 + (af*t/mb2) + (bf*((t/mb2)*(t/mb2))),powf));
EvtSLBKPoleFF.cc:  *kf = f0/(pow( 1.0 + (af*t/mb2) + (bf*((t/mb2)*(t/mb2))),powf));
EvtSLBKPoleFF.cc:  bf = SLBKPoleargs[10];
EvtSLBKPoleFF.cc:  powf = SLBKPoleargs[11];
EvtSLBKPoleFF.cc:  *bpf = f0/(pow( 1.0 + (af*t/mb2) + (bf*((t/mb2)*(t/mb2))),powf));
EvtSLBKPoleFF.cc:  f0 = SLBKPoleargs[12];
EvtSLBKPoleFF.cc:  af = SLBKPoleargs[13];
EvtSLBKPoleFF.cc:  bf = SLBKPoleargs[14];
EvtSLBKPoleFF.cc:  powf = SLBKPoleargs[15];
EvtSLBKPoleFF.cc:  *bmf = f0/(pow( 1.0 + (af*t/mb2) + (bf*((t/mb2)*(t/mb2))),powf));
EvtSLBKPoleFF.hh://      Copyright (C) 1998      Caltech, UCSB
EvtSLBKPoleFF.hh:       		       double t, double mass, double *a1f,
EvtSLBKPoleFF.hh:   double SLBKPoleargs[16];//modified
EvtSLBKPole.hh://      Copyright (C) 1998      Caltech, UCSB
EvtSll.cc://      Copyright (C) 1998      Caltech, UCSB
EvtSll.cc://              or generally, two spin 1/2 particles.
EvtSll.cc://    SHY       April 23, 1997       Module created
EvtSll.cc:  checkSpinDaughter(1,EvtSpinType::DIRAC);
EvtSll.cc:  EvtParticle *l1, *l2;
EvtSll.cc:  l1 = p->getDaug(0);
EvtSll.cc:  l2 = p->getDaug(1);
EvtSll.cc:  EvtVector4C l11, l12, l21, l22;
EvtSll.cc:  l11=EvtLeptonVACurrent(l1->spParent(0),l2->spParent(0));
EvtSll.cc:  l12=EvtLeptonVACurrent(l1->spParent(0),l2->spParent(1));
EvtSll.cc:  l21=EvtLeptonVACurrent(l1->spParent(1),l2->spParent(0));
EvtSll.cc:  l22=EvtLeptonVACurrent(l1->spParent(1),l2->spParent(1));
EvtSll.cc:  vertex(0,0,p4_p*l11);
EvtSll.cc:  vertex(0,1,p4_p*l12);
EvtSll.cc:  vertex(1,0,p4_p*l21);
EvtSll.cc:  vertex(1,1,p4_p*l22);
EvtSll.hh://      Copyright (C) 1998      Caltech, UCSB
EvtSll.hh://    DJL/RYD     August 11, 1998         Module created
EvtSLN.cc://      Copyright (C) 1998      Caltech, UCSB
EvtSLN.cc://    RYD/SHY   April 23, 1997           Module created
EvtSLN.cc:  checkSpinDaughter(1,EvtSpinType::NEUTRINO);
EvtSLN.cc:  nul= p->getDaug(1);
EvtSLN.cc:  EvtVector4C l1, l2;
EvtSLN.cc:    l1=EvtLeptonVACurrent(l->spParent(0),nul->spParentNeutrino());
EvtSLN.cc:    l2=EvtLeptonVACurrent(l->spParent(1),nul->spParentNeutrino());
EvtSLN.cc:    l1=EvtLeptonVACurrent(nul->spParentNeutrino(),l->spParent(0));
EvtSLN.cc:    l2=EvtLeptonVACurrent(nul->spParentNeutrino(),l->spParent(1));
EvtSLN.cc:  vertex(0,p4_p*l1);
EvtSLN.cc:  vertex(1,p4_p*l2);
EvtSLN.hh://      Copyright (C) 1998      Caltech, UCSB
EvtSLN.hh://    DJL/RYD     August 11, 1998         Module created
EvtSLPole.cc://      Copyright (C) 1998      Caltech, UCSB
EvtSLPole.cc://    DJL       April 23, 1998       Module created
EvtSLPole.cc:lnum = getDaug(1);
EvtSLPole.cc:  checkSpinDaughter(1,EvtSpinType::DIRAC);
EvtSLPoleFF.cc://      Copyright (C) 1998      Caltech, UCSB
EvtSLPoleFF.cc://    DJL       April 17,1998       Module created
EvtSLPoleFF.cc:  af = SLPoleargs[1];
EvtSLPoleFF.cc:  *fpf = f0/(pow( 1.0 + (af*t/mb2) + (bf*((t/mb2)*(t/mb2))),powf));
EvtSLPoleFF.cc:  *f0f = f0/(pow( 1.0 + (af*t/mb2) + (bf*((t/mb2)*(t/mb2))),powf)); 
EvtSLPoleFF.cc:                       double t, double mass, double *a1f,
EvtSLPoleFF.cc:  if ( numSLPoleargs !=16 ) {
EvtSLPoleFF.cc:  af = SLPoleargs[1];
EvtSLPoleFF.cc:  *a1f = f0/(pow( 1.0 + (af*t/mb2) + (bf*((t/mb2)*(t/mb2))),powf));
EvtSLPoleFF.cc:  *a2f = f0/(pow( 1.0 + (af*t/mb2) + (bf*((t/mb2)*(t/mb2))),powf));
EvtSLPoleFF.cc:  bf = SLPoleargs[10];
EvtSLPoleFF.cc:  powf = SLPoleargs[11];
EvtSLPoleFF.cc:  *vf = f0/(pow( 1.0 + (af*t/mb2) + (bf*((t/mb2)*(t/mb2))),powf));
EvtSLPoleFF.cc:  f0 = SLPoleargs[12];
EvtSLPoleFF.cc:  af = SLPoleargs[13];
EvtSLPoleFF.cc:  bf = SLPoleargs[14];
EvtSLPoleFF.cc:  powf = SLPoleargs[15];
EvtSLPoleFF.cc:  *a0f = f0/(pow( 1.0 + (af*t/mb2) + (bf*((t/mb2)*(t/mb2))),powf));
EvtSLPoleFF.cc:  if ( numSLPoleargs !=16 ) {
EvtSLPoleFF.cc:  af = SLPoleargs[1];
EvtSLPoleFF.cc:  *hf = f0/(pow( 1.0 + (af*t/mb2) + (bf*((t/mb2)*(t/mb2))),powf));
EvtSLPoleFF.cc:  *kf = f0/(pow( 1.0 + (af*t/mb2) + (bf*((t/mb2)*(t/mb2))),powf));
EvtSLPoleFF.cc:  bf = SLPoleargs[10];
EvtSLPoleFF.cc:  powf = SLPoleargs[11];
EvtSLPoleFF.cc:  *bpf = f0/(pow( 1.0 + (af*t/mb2) + (bf*((t/mb2)*(t/mb2))),powf));
EvtSLPoleFF.cc:  f0 = SLPoleargs[12];
EvtSLPoleFF.cc:  af = SLPoleargs[13];
EvtSLPoleFF.cc:  bf = SLPoleargs[14];
EvtSLPoleFF.cc:  powf = SLPoleargs[15];
EvtSLPoleFF.cc:  *bmf = f0/(pow( 1.0 + (af*t/mb2) + (bf*((t/mb2)*(t/mb2))),powf));
EvtSLPoleFF.hh://      Copyright (C) 1998      Caltech, UCSB
EvtSLPoleFF.hh://    DJL     April 23, 1998         Module created
EvtSLPoleFF.hh:                       double t, double mass, double *a1f,
EvtSLPoleFF.hh:   double SLPoleargs[16];
EvtSLPole.hh://      Copyright (C) 1998      Caltech, UCSB
EvtSLPole.hh://    DJL     April 23, 1998         Module created
EvtSPL.cc: checkSpinDaughter(1,EvtSpinType::DIRAC);
EvtSPL.cc:  EvtParticle *v,*s1;
EvtSPL.cc:  s1=p->getDaug(1); //Lambda
EvtSPL.cc:  ps=s1->getP4Lab();
EvtSPL.cc:  double theta=angles.getHelAng(1);
EvtSPL.cc: vertex(0,1,1,-Djmn(0.5, 0.5,-0.5,phi,theta,gamma));
EvtSPL.cc: vertex(1,0,0, Djmn(0.5,-0.5, 0.5,phi,theta,gamma));
EvtSPL.cc: vertex(1,1,1,-Djmn(0.5,-0.5,-0.5,phi,theta,gamma));           
EvtSPL.cc: vertex(0,0,1,                       0.0);
EvtSPL.cc: vertex(0,1,0,                       0.0);
EvtSPL.cc: vertex(1,0,1,                       0.0);
EvtSPL.cc: vertex(1,1,0,                       0.0);
EvtSSDCP.cc://      Copyright (C) 2001      Caltech
EvtSSDCP.cc://    RYD       August 12, 2001        Module created
EvtSSDCP.cc://    F. Sandrelli, Fernando M-V  March 1, 2002     Debugged and added z parameter (CPT violation)
EvtSSDCP.cc:  // check that there are 8 or 12 or 14 arguments
EvtSSDCP.cc:  checkNArg(14,12,8);
EvtSSDCP.cc:  EvtSpinType::spintype d1type=EvtPDL::getSpinType(getDaug(0));
EvtSSDCP.cc:  EvtSpinType::spintype d2type=EvtPDL::getSpinType(getDaug(1));
EvtSSDCP.cc:  if ( (!(d1type == EvtSpinType::SCALAR || d2type == EvtSpinType::SCALAR))||
EvtSSDCP.cc:       (!((d1type==EvtSpinType::SCALAR)||(d1type==EvtSpinType::VECTOR)||(d1type==EvtSpinType::TENSOR)))
EvtSSDCP.cc:			   << EvtPDL::name(getDaug(0)).c_str()<<" and "<<EvtPDL::name(getDaug(1)).c_str()<<endl;
EvtSSDCP.cc:  _dm=getArg(0)/EvtConst::c; //units of 1/mm
EvtSSDCP.cc:  _dgog=getArg(1);
EvtSSDCP.cc:  _poverq=1.0/_qoverp;
EvtSSDCP.cc:  if (getNArg()>=12){
EvtSSDCP.cc:    _Abar_fbar=getArg(10)*EvtComplex(cos(getArg(11)),sin(getArg(11)));
EvtSSDCP.cc:	 getDaug(1)==EvtPDL::chargeConj(getDaug(1)))||
EvtSSDCP.cc:	(getDaug(0)==EvtPDL::chargeConj(getDaug(1))&&
EvtSSDCP.cc:	 getDaug(1)==EvtPDL::chargeConj(getDaug(0)))){
EvtSSDCP.cc:  if (getNArg()==14){ //FS Set _z parameter if provided else set it 0
EvtSSDCP.cc:    _z=EvtComplex(getArg(12),getArg(13));
EvtSSDCP.cc:  //  _gamma=EvtPDL::getctau(EvtPDL::getId("B0"));  //units of 1/mm
EvtSSDCP.cc:  _gamma=1/EvtPDL::getctau(EvtPDL::getId("B0")); //gamma/c (1/mm)
EvtSSDCP.cc:  _dgamma=_gamma*_dgog;  //dgamma/c (1/mm) 
EvtSSDCP.cc:			  << EvtPDL::name(getDaug(1)).c_str() << endl << endl
EvtSSDCP.cc:			  << "dGamma      = "  << _dgamma <<" ps-1" <<endl
EvtSSDCP.cc:			  << "       tau  = " << 1./_gamma << " ps" << endl;
EvtSSDCP.cc:  EvtSpinType::spintype d2type=EvtPDL::getSpinType(getDaug(1));
EvtSSDCP.cc:  EvtSpinType::spintype d1type=EvtPDL::getSpinType(getDaug(0));
EvtSSDCP.cc:  if (d1type==EvtSpinType::TENSOR||d2type==EvtSpinType::TENSOR) theProbMax*=10;
EvtSSDCP.cc:    if (EvtRandom::Flat(0.0,1.0)<0.5) flip=1;
EvtSSDCP.cc:    daugs[1]=getDaug(1);
EvtSSDCP.cc:    daugs[1]=EvtPDL::chargeConj(getDaug(1));
EvtSSDCP.cc:  //FS Calculation os sqrt(1-z^2) 
EvtSSDCP.cc:  EvtComplex sqz=sqrt(abs(1-_z*_z))*exp(EvtComplex(0,arg(1-_z*_z)/2));
EvtSSDCP.cc:  //  FS redefinition of these guys... (See BAD #188 eq.35 for ref.)
EvtSSDCP.cc:  EvtSpinType::spintype d2type=EvtPDL::getSpinType(getDaug(1));
EvtSSDCP.cc:    moms = p->getDaug(1)->getP4();
EvtSSDCP.cc:    d= p->getDaug(1);
EvtSSDCP.cc:    vertex(1,amp*norm*p4_parent*(d->epsParent(1)));
EvtSSDCP.cc:   vertex(0,amp*norm*d->epsTensorParent(0).cont1(p4_parent)*p4_parent);
EvtSSDCP.cc:   vertex(1,amp*norm*d->epsTensorParent(1).cont1(p4_parent)*p4_parent);
EvtSSDCP.cc:   vertex(2,amp*norm*d->epsTensorParent(2).cont1(p4_parent)*p4_parent);
EvtSSDCP.cc:   vertex(3,amp*norm*d->epsTensorParent(3).cont1(p4_parent)*p4_parent);
EvtSSDCP.cc:   vertex(4,amp*norm*d->epsTensorParent(4).cont1(p4_parent)*p4_parent);
EvtSSDCP.hh://      Copyright (C) 12001      Caltech
EvtSSDCP.hh://              a spin 0, 1, or 2 particle. See long writeup for more information.
EvtSSDCP.hh://    DJL/RYD     August 12, 2001         Module created
EvtSSSCP.cc://      Copyright (C) 1998      Caltech, UCSB
EvtSSSCP.cc://    RYD       November 24, 1996       Module created
EvtSSSCP.cc:  checkSpinDaughter(1,EvtSpinType::SCALAR);
EvtSSSCP.cc:    amp=A*cos(getArg(1)*t/(2*EvtConst::c))+
EvtSSSCP.cc:      getArg(2)*EvtComplex(0.0,1.0)*Abar*sin(getArg(1)*t/(2*EvtConst::c));
EvtSSSCP.cc:      EvtComplex(0.0,1.0)*sin(getArg(1)*t/(2*EvtConst::c))+       
EvtSSSCP.cc:      getArg(2)*Abar*cos(getArg(1)*t/(2*EvtConst::c));
EvtSSSCP.hh://      Copyright (C) 1998      Caltech, UCSB
EvtSSSCP.hh://    DJL/RYD     August 11, 1998         Module created
EvtSSSCPpng.cc://      Copyright (C) 1998      Caltech, UCSB
EvtSSSCPpng.cc://    RYD/NK    December 3, 1997          Module created
EvtSSSCPpng.cc:  checkSpinDaughter(1,EvtSpinType::SCALAR);
EvtSSSCPpng.cc:   setProbMax(getArg(5)*getArg(5)*(1 + getArg(6)*getArg(6)));
EvtSSSCPpng.cc:// old: a0=alpha, a1=dm, a2=1, a3=1, a4=0, a5=1, a6=0
EvtSSSCPpng.cc:// new: a0=beta, a1=gamma, a2=delta, a3=dm, a4=1, a5=1=A_{T}, a6=A_{P}/A_{T}
EvtSSSCPpng.cc:   A=getArg(5)*(EvtComplex(cos(-getArg(0)-getArg(1)),sin(-getArg(0)-getArg(1)))+getArg(6)*EvtComplex(cos(getArg(2)),sin(getArg(2))));
EvtSSSCPpng.cc:   Abar=getArg(5)*(EvtComplex(cos(getArg(0)+getArg(1)),sin(getArg(0)+getArg(1)))+getArg(6)*EvtComplex(cos(getArg(2)),sin(getArg(2))));
EvtSSSCPpng.cc:  double ratio = 1/(1 + 0.65*0.65);
EvtSSSCPpng.cc:  rbarf = EvtComplex(1.0)/rf;
EvtSSSCPpng.cc:  double fract =(Abar2*(1+ rbarf2 + (1 - rbarf2)*ratio))/(Abar2*(1+ rbarf2 + (1 - rbarf2)*ratio) + A2*(1+ rf2 + (1 - rf2)*ratio)); 
EvtSSSCPpng.cc://  double tag = EvtRandom::Flat(0.0,1.0);
EvtSSSCPpng.cc://   EvtCPUtil::OtherB(p,t,other_b,1.0);
EvtSSSCPpng.cc:       getArg(4)*EvtComplex(0.0,1.0)*Abar*sin(getArg(3)*t/(2*EvtConst::c));
EvtSSSCPpng.cc:       EvtComplex(0.0,1.0)*sin(getArg(3)*t/(2*EvtConst::c))+       
EvtSSSCPpng.hh://      Copyright (C) 1998      Caltech, UCSB
EvtSSSCPpng.hh://    DJL/RYD     August 11, 1998         Module created
EvtSSSCPT.cc://      Copyright (C) 1998      Caltech, UCSB
EvtSSSCPT.cc://    SHY       April 28, 1997       Module created
EvtSSSCPT.cc:  Im=EvtComplex(0.0,1.0);
EvtSSSCPT.cc:    amp=A*cos(getArg(1)*t/(2*EvtConst::c))+
EvtSSSCPT.cc:      Im*sin(getArg(1)*t/(2*EvtConst::c))*
EvtSSSCPT.cc:    amp=Abar*cos(getArg(1)*t/(2*EvtConst::c))+
EvtSSSCPT.cc:      Im*sin(getArg(1)*t/(2*EvtConst::c))*
EvtSSSCPT.hh://      Copyright (C) 1998      Caltech, UCSB
EvtSSSCPT.hh://    DJL/RYD     August 11, 1998         Module created
EvtSTS.cc://      Copyright (C) 1998      Caltech, UCSB
EvtSTS.cc://    RYD       Aug  21, 1998       Module created
EvtSTS.cc:  checkSpinDaughter(1,EvtSpinType::SCALAR);
EvtSTS.cc:  EvtParticle* t1=p->getDaug(0);
EvtSTS.cc:  EvtVector4R momt = t1->getP4();
EvtSTS.cc:  EvtVector4R moms = p->getDaug(1)->getP4();
EvtSTS.cc:  double masst = t1->mass();
EvtSTS.cc:  vertex(0,norm*t1->epsTensorParent(0).cont1(p4_parent)*p4_parent);
EvtSTS.cc:  vertex(1,norm*t1->epsTensorParent(1).cont1(p4_parent)*p4_parent);
EvtSTS.cc:  vertex(2,norm*t1->epsTensorParent(2).cont1(p4_parent)*p4_parent);
EvtSTS.cc:  vertex(3,norm*t1->epsTensorParent(3).cont1(p4_parent)*p4_parent);
EvtSTS.cc:  vertex(4,norm*t1->epsTensorParent(4).cont1(p4_parent)*p4_parent);
EvtSTSCP.cc://      Copyright (C) 1998      Caltech, UCSB
EvtSTSCP.cc://    RYD       June 19, 1997       Module created
EvtSTSCP.cc:  checkSpinDaughter(1,EvtSpinType::SCALAR);
EvtSTSCP.cc:  EvtParticle *t1;
EvtSTSCP.cc:  t1 = p->getDaug(0);
EvtSTSCP.cc:  EvtVector4R momt = t1->getP4();
EvtSTSCP.cc:  EvtVector4R moms = p->getDaug(1)->getP4();
EvtSTSCP.cc:  double masst = t1->mass();
EvtSTSCP.cc:     amp=A*cos(getArg(1)*t/(2*EvtConst::c))+
EvtSTSCP.cc:       getArg(2)*EvtComplex(0.0,1.0)*Abar*sin(getArg(1)*t/(2*EvtConst::c));
EvtSTSCP.cc:       EvtComplex(0.0,1.0)*sin(getArg(1)*t/(2*EvtConst::c))+       
EvtSTSCP.cc:       getArg(2)*Abar*cos(getArg(1)*t/(2*EvtConst::c));
EvtSTSCP.cc:   vertex(0,amp*norm*t1->epsTensorParent(0).cont1(p4_parent)*p4_parent);
EvtSTSCP.cc:   vertex(1,amp*norm*t1->epsTensorParent(1).cont1(p4_parent)*p4_parent);
EvtSTSCP.cc:   vertex(2,amp*norm*t1->epsTensorParent(2).cont1(p4_parent)*p4_parent);
EvtSTSCP.cc:   vertex(3,amp*norm*t1->epsTensorParent(3).cont1(p4_parent)*p4_parent);
EvtSTSCP.cc:   vertex(4,amp*norm*t1->epsTensorParent(4).cont1(p4_parent)*p4_parent);
EvtSTSCP.hh://      Copyright (C) 1998      Caltech, UCSB
EvtSTSCP.hh://    DJL/RYD     August 11, 1998         Module created
EvtSTS.hh://      Copyright (C) 1998      Caltech, UCSB
EvtSTS.hh://    RYD        August 21, 1998         Module created
EvtSVPCP.cc://    Maurizio pierini   Nov 11, 2003       Module created
EvtSVPCP.cc:  checkSpinDaughter(1,EvtSpinType::PHOTON);
EvtSVPCP.cc:  EvtComplex G1P,G1M, G1_T_even, G1_T_odd;
EvtSVPCP.cc:  G1P=EvtComplex(getArg(3)*cos(getArg(4))/norm,getArg(3)*sin(getArg(4))/norm);
EvtSVPCP.cc:  G1M=EvtComplex(getArg(5)*cos(getArg(6))/norm,getArg(5)*sin(getArg(6))/norm);
EvtSVPCP.cc:  G1_T_even = (G1P+G1M)/sqrt(2.0);
EvtSVPCP.cc:  G1_T_odd  = (G1P-G1M)/sqrt(2.0);
EvtSVPCP.cc:  double cdmt=cos(getArg(1)*t/(2*EvtConst::c));
EvtSVPCP.cc:  double sdmt=sin(getArg(1)*t/(2*EvtConst::c));
EvtSVPCP.cc:  EvtComplex cG1_T_even,cG1_T_odd;
EvtSVPCP.cc:    cG1_T_even = G1_T_even*(cdmt+lambda_km*EvtComplex(0.0,getArg(2)*sdmt));
EvtSVPCP.cc:    cG1_T_odd  = G1_T_odd*(cdmt-lambda_km*EvtComplex(0.0,getArg(2)*sdmt));
EvtSVPCP.cc:    cG1_T_even = G1_T_even*(cdmt+(1.0/lambda_km)*EvtComplex(0.0,getArg(2)*sdmt));
EvtSVPCP.cc:    cG1_T_odd  =-G1_T_odd*(cdmt-(1.0/lambda_km)*EvtComplex(0.0,getArg(2)*sdmt));
EvtSVPCP.cc:  hm=(cG1_T_even-cG1_T_odd)/sqrt(2.0); 
EvtSVPCP.cc:  hp=(cG1_T_even+cG1_T_odd)/sqrt(2.0); 
EvtSVPCP.cc:  EvtParticle *v1,*ph;
EvtSVPCP.cc:  v1 = p->getDaug(0);
EvtSVPCP.cc:  ph = p->getDaug(1);
EvtSVPCP.cc:  EvtVector4R momv1 = v1->getP4();
EvtSVPCP.cc:  g.setdiag(1.0,-1.0,-1.0,-1.0);
EvtSVPCP.cc:  v=momv1/momv1.d3mag();
EvtSVPCP.cc:  vp=(momv1+momph)/(momv1+momph).mass();   
EvtSVPCP.cc:  d=((1.0/sqrt(3.0))*(h0-(hp+hm))*(-1.0/sqrt(3.0)))*g+
EvtSVPCP.cc:    ((1.0/sqrt(2.0))*(hp-hm)*EvtComplex(0.0,1.0)*(sqrt(1.0/2.0)))*dual(directProd(v,vp))+
EvtSVPCP.cc:    (sqrt(2.0/3.0)*(h0+0.5*(hp+hm))*sqrt(3.0/2.0))*(directProd(v,v)+(1.0/3.0)*g);
EvtSVPCP.cc:  EvtVector4C ep0,ep1,ep2;  
EvtSVPCP.cc:  ep0=d.cont1(v1->eps(0).conj());
EvtSVPCP.cc:  ep1=d.cont1(v1->eps(1).conj());
EvtSVPCP.cc:  ep2=d.cont1(v1->eps(2).conj());
EvtSVPCP.cc:  EvtVector4C ep20,ep21,ep22;
EvtSVPCP.cc:  ep21=ph->epsParentPhoton(1).conj();  
EvtSVPCP.cc:  vertex(0,1,ep0*ep21);
EvtSVPCP.cc:  vertex(1,0,ep1*ep20);
EvtSVPCP.cc:  vertex(1,1,ep1*ep21);
EvtSVPCP.cc:  vertex(2,1,ep2*ep21);
EvtSVPCP.hh://    Maurizio pierini   Nov 11, 2003       Module created
EvtSVPCP.hh:  static void SVPHel(EvtParticle *parent,EvtAmp& amp,EvtId n_v1,EvtId n_v2,
EvtSVPHelAmp.cc://      Copyright (C) 1998      Caltech, UCSB
EvtSVPHelAmp.cc://    RYD       July 26, 1997       Module created
EvtSVPHelAmp.cc:  checkSpinDaughter(1,EvtSpinType::PHOTON);
EvtSVPHelAmp.cc:  EvtComplex hp(getArg(0)*cos(getArg(1)),getArg(0)*sin(getArg(1)));
EvtSVPHelAmp.cc:  //  by ryd on Oct 17, 1996.
EvtSVPHelAmp.cc:  EvtParticle *v1,*ph;
EvtSVPHelAmp.cc:  v1 = p->getDaug(0);
EvtSVPHelAmp.cc:  ph = p->getDaug(1);
EvtSVPHelAmp.cc:  EvtVector4R momv1 = v1->getP4();
EvtSVPHelAmp.cc:  g.setdiag(1.0,-1.0,-1.0,-1.0);
EvtSVPHelAmp.cc:  v=momv1/momv1.d3mag();
EvtSVPHelAmp.cc:  vp=(momv1+momph)/(momv1+momph).mass();   
EvtSVPHelAmp.cc:  d=((1.0/sqrt(3.0))*(h0-(hp+hm))*(-1.0/sqrt(3.0)))*g+
EvtSVPHelAmp.cc:    ((1.0/sqrt(2.0))*(hp-hm)*EvtComplex(0.0,1.0)*(sqrt(1.0/2.0)))*dual(directProd(v,vp))+
EvtSVPHelAmp.cc:    (sqrt(2.0/3.0)*(h0+0.5*(hp+hm))*sqrt(3.0/2.0))*(directProd(v,v)+(1.0/3.0)*g);
EvtSVPHelAmp.cc:  EvtVector4C ep0,ep1,ep2;  
EvtSVPHelAmp.cc:  ep0=d.cont1(v1->eps(0).conj());
EvtSVPHelAmp.cc:  ep1=d.cont1(v1->eps(1).conj());
EvtSVPHelAmp.cc:  ep2=d.cont1(v1->eps(2).conj());
EvtSVPHelAmp.cc:  EvtVector4C ep20,ep21,ep22;
EvtSVPHelAmp.cc:  ep21=ph->epsParentPhoton(1).conj();  
EvtSVPHelAmp.cc:  vertex(0,1,ep0*ep21);
EvtSVPHelAmp.cc:  vertex(1,0,ep1*ep20);
EvtSVPHelAmp.cc:  vertex(1,1,ep1*ep21);
EvtSVPHelAmp.cc:  vertex(2,1,ep2*ep21);
EvtSVPHelAmp.hh://      Copyright (C) 1998      Caltech, UCSB
EvtSVPHelAmp.hh://    DJL/RYD     August 11, 1998         Module created
EvtSVS.cc://      Copyright (C) 1998      Caltech, UCSB
EvtSVS.cc://    RYD       November 24, 1996       Module created
EvtSVS.cc:  checkSpinDaughter(1,EvtSpinType::SCALAR);
EvtSVS.cc:  setProbMax(1.0);
EvtSVS.cc:  //  p->getDaug(1)->getP4() << " " << p->mass() << " " <<
EvtSVS.cc:  //  p->getDaug(0)->mass() << " " << p->getDaug(1)->mass() <<endl;
EvtSVS.cc:  EvtVector4R moms = p->getDaug(1)->getP4();
EvtSVS.cc:  vertex(1,p4_parent*(v->epsParent(1)));
EvtSVSCP.cc://      Copyright (C) 1998      Caltech, UCSB
EvtSVSCP.cc://    RYD       Febuary 10, 1997       Module created
EvtSVSCP.cc:  checkSpinDaughter(1,EvtSpinType::SCALAR);
EvtSVSCP.cc:  EvtVector4R moms = p->getDaug(1)->getP4();
EvtSVSCP.cc:    amp=A*cos(getArg(1)*t/(2*EvtConst::c))+
EvtSVSCP.cc:      getArg(2)*EvtComplex(0.0,1.0)*Abar*sin(getArg(1)*t/(2*EvtConst::c));
EvtSVSCP.cc:      EvtComplex(0.0,1.0)*sin(getArg(1)*t/(2*EvtConst::c))+       
EvtSVSCP.cc:      getArg(2)*Abar*cos(getArg(1)*t/(2*EvtConst::c));
EvtSVSCP.cc:  vertex(1,amp*norm*p4_parent*(v->epsParent(1)));
EvtSVSCP.hh://      Copyright (C) 1998      Caltech, UCSB
EvtSVSCP.hh://    DJL/RYD     August 11, 1998         Module created
EvtSVSCPiso.cc://      Copyright (C) 1998      Caltech, UCSB
EvtSVSCPiso.cc://              decays like B->rho pi and B->a1 pi.
EvtSVSCPiso.cc://    RYD/NK    Febuary 16, 1998          Module created
EvtSVSCPiso.cc:  checkSpinDaughter(1,EvtSpinType::SCALAR);
EvtSVSCPiso.cc:if ((EvtPDL::chg3(getDaug(0)) > 0) && (EvtPDL::chg3(getDaug(1)) == 0)) {
EvtSVSCPiso.cc:if ((EvtPDL::chg3(getDaug(0)) < 0) && (EvtPDL::chg3(getDaug(1)) == 0)) {
EvtSVSCPiso.cc:if ((EvtPDL::chg3(getDaug(0)) == 0) && (EvtPDL::chg3(getDaug(1)) > 0)) {
EvtSVSCPiso.cc:if ((EvtPDL::chg3(getDaug(0)) == 0) && (EvtPDL::chg3(getDaug(1)) < 0)) {
EvtSVSCPiso.cc:if ((EvtPDL::chg3(getDaug(0)) > 0) && (EvtPDL::chg3(getDaug(1)) < 0)) {
EvtSVSCPiso.cc:  setProbMax(2.0*(getArg(11)*getArg(11) + getArg(23)*getArg(23) + 
EvtSVSCPiso.cc:                  getArg(19)*getArg(19) + getArg(13)*getArg(13) + 
EvtSVSCPiso.cc:                  getArg(25)*getArg(25) + getArg(21)*getArg(21)));
EvtSVSCPiso.cc:if ((EvtPDL::chg3(getDaug(0)) < 0) && (EvtPDL::chg3(getDaug(1)) > 0)) {
EvtSVSCPiso.cc:  setProbMax(2.0*(getArg(15)*getArg(15) + getArg(23)*getArg(23) + 
EvtSVSCPiso.cc:                  getArg(19)*getArg(19) + getArg(17)*getArg(17) + 
EvtSVSCPiso.cc:                  getArg(25)*getArg(25) + getArg(21)*getArg(21)));
EvtSVSCPiso.cc:if ((EvtPDL::chg3(getDaug(0)) == 0) && (EvtPDL::chg3(getDaug(1)) == 0)) {
EvtSVSCPiso.cc:   setProbMax(2.0*(getArg(7)*getArg(7) + getArg(3)*getArg(3) + getArg(11)*getArg(11) + 
EvtSVSCPiso.cc:                  getArg(15)*getArg(15) + 4.0*getArg(19)*getArg(19) + getArg(9)*getArg(9)+
EvtSVSCPiso.cc:                   getArg(5)*getArg(5) + getArg(13)*getArg(13) + getArg(17)*getArg(17) + 
EvtSVSCPiso.cc:                   4.0*getArg(21)*getArg(21)));
EvtSVSCPiso.cc:   double tag = EvtRandom::Flat(0.0,1.0);
EvtSVSCPiso.cc:    EvtCPUtil::OtherB(p,t,other_b,1.0);
EvtSVSCPiso.cc:  if (p->getNDaug()==0) first_time=1;
EvtSVSCPiso.cc:    if (EvtRandom::Flat(0.0,1.0)<getArg(3)) flip=1;
EvtSVSCPiso.cc:    if (getDaug(0)!=p->getDaug(0)->getId()) flip=1;
EvtSVSCPiso.cc:    ds[1]=getDaug(1);
EvtSVSCPiso.cc:    ds[1]=EvtPDL::chargeConj(getDaug(1));
EvtSVSCPiso.cc:  s=p->getDaug(1);
EvtSVSCPiso.cc:   EvtComplex P1, P1_bar, P0, P0_bar;
EvtSVSCPiso.cc:   T0p_bar = EvtComplex(getArg(9)*cos(getArg(10)),getArg(9)*sin(getArg(10)));
EvtSVSCPiso.cc:   Tpm = EvtComplex(getArg(11)*cos(getArg(12)),getArg(11)*sin(getArg(12)));
EvtSVSCPiso.cc:   Tpm_bar = EvtComplex(getArg(13)*cos(getArg(14)),getArg(13)*sin(getArg(14)));
EvtSVSCPiso.cc:   Tmp = EvtComplex(getArg(15)*cos(getArg(16)),getArg(15)*sin(getArg(16)));
EvtSVSCPiso.cc:   Tmp_bar = EvtComplex(getArg(17)*cos(getArg(18)),getArg(17)*sin(getArg(18)));
EvtSVSCPiso.cc:   P0 = EvtComplex(getArg(19)*cos(getArg(20)),getArg(19)*sin(getArg(20)));
EvtSVSCPiso.cc:   P0_bar = EvtComplex(getArg(21)*cos(getArg(22)),getArg(21)*sin(getArg(22)));
EvtSVSCPiso.cc:   P1 = EvtComplex(getArg(23)*cos(getArg(24)),getArg(23)*sin(getArg(24)));
EvtSVSCPiso.cc:   P1_bar = EvtComplex(getArg(25)*cos(getArg(26)),getArg(25)*sin(getArg(26)));
EvtSVSCPiso.cc: if ((EvtPDL::chg3(getDaug(0)) > 0 ) && (EvtPDL::chg3(getDaug(1)) == 0)) {
EvtSVSCPiso.cc://V+ S0, so T+0 + 2 P1
EvtSVSCPiso.cc:   charged = 1;
EvtSVSCPiso.cc:   A_f = Tp0 + 2.0*P1;
EvtSVSCPiso.cc: if ((EvtPDL::chg3(getDaug(0)) < 0 ) && (EvtPDL::chg3(getDaug(1)) == 0)) {
EvtSVSCPiso.cc://V- S0, so T+0_bar + 2P1_bar
EvtSVSCPiso.cc:   charged = 1;
EvtSVSCPiso.cc:   A_f = Tp0_bar + 2.0*P1_bar; 
EvtSVSCPiso.cc: if ((EvtPDL::chg3(getDaug(0)) == 0 ) && (EvtPDL::chg3(getDaug(1)) > 0)) {
EvtSVSCPiso.cc://V0 S+, so T0+ - 2 P1
EvtSVSCPiso.cc:   charged = 1;
EvtSVSCPiso.cc:   A_f = T0p - 2.0*P1;
EvtSVSCPiso.cc: if ((EvtPDL::chg3(getDaug(0)) == 0 ) && (EvtPDL::chg3(getDaug(1)) < 0)) {
EvtSVSCPiso.cc://V0 S-, so T0+_bar - 2 P1_bar
EvtSVSCPiso.cc:   charged = 1;
EvtSVSCPiso.cc:   A_f = T0p_bar - 2.0*P1_bar;
EvtSVSCPiso.cc://V+ S-, so Af = T+- + P1 + P0
EvtSVSCPiso.cc:Apm = Tpm + P1 + P0;
EvtSVSCPiso.cc:Apm_bar = Tpm_bar + P1_bar + P0_bar;
EvtSVSCPiso.cc://V- S+, so Af = T-+ - P1 + P0
EvtSVSCPiso.cc:Amp = Tmp - P1 + P0;
EvtSVSCPiso.cc:Amp_bar = Tmp_bar - P1_bar + P0;
EvtSVSCPiso.cc: if ((EvtPDL::chg3(getDaug(0)) > 0 ) && (EvtPDL::chg3(getDaug(1)) < 0)) {
EvtSVSCPiso.cc: if ((EvtPDL::chg3(getDaug(0)) < 0 ) && (EvtPDL::chg3(getDaug(1)) > 0)) {
EvtSVSCPiso.cc: if ((EvtPDL::chg3(getDaug(0)) == 0 ) && (EvtPDL::chg3(getDaug(1)) == 0)) {
EvtSVSCPiso.cc:       amp=A_f*cos(getArg(1)*t/(2*EvtConst::c))+
EvtSVSCPiso.cc:	 EvtComplex(0.0,1.0)*Abar_f*sin(getArg(1)*t/(2*EvtConst::c));
EvtSVSCPiso.cc:	 EvtComplex(0.0,1.0)*sin(getArg(1)*t/(2*EvtConst::c))+       
EvtSVSCPiso.cc:	 Abar_f*cos(getArg(1)*t/(2*EvtConst::c));
EvtSVSCPiso.cc:       amp=A_fbar*cos(getArg(1)*t/(2*EvtConst::c))+
EvtSVSCPiso.cc:	 EvtComplex(0.0,1.0)*Abar_fbar*sin(getArg(1)*t/(2*EvtConst::c));
EvtSVSCPiso.cc:	 EvtComplex(0.0,1.0)*sin(getArg(1)*t/(2*EvtConst::c))+       
EvtSVSCPiso.cc:	 Abar_fbar*cos(getArg(1)*t/(2*EvtConst::c));
EvtSVSCPiso.cc:  double norm=1.0/v->getP4().d3mag();
EvtSVSCPiso.cc:   vertex(1,amp*norm*p4_parent*(v->epsParent(1)));
EvtSVSCPiso.hh://      Copyright (C) 1998      Caltech, UCSB
EvtSVSCPiso.hh://    DJL/RYD     August 11, 1998         Module created
EvtSVSCPLH.cc://      Copyright (C) 2001      Caltech, UCSB
EvtSVSCPLH.cc://    Ryd       March 29, 2001       Module created
EvtSVSCPLH.cc:  checkSpinDaughter(1,EvtSpinType::SCALAR);
EvtSVSCPLH.cc:  _dgamma=EvtConst::c*getArg(1)/ctau;
EvtSVSCPLH.cc:  _poq=1.0/_qop;
EvtSVSCPLH.cc:  vertex(1,amp*norm*(p4_parent*(v->epsParent(1))));
EvtSVSCPLH.hh://      Copyright (C) 1999      Caltech, UCSB
EvtSVSCPLH.hh://    Ryd       March 29, 2001         Module created
EvtSVS.hh://      Copyright (C) 1998      Caltech, UCSB
EvtSVS.hh://    DJL/RYD     August 11, 1998         Module created
EvtSVSNONCPEIGEN.cc://      Copyright (C) 1998      Caltech, UCSB
EvtSVSNONCPEIGEN.cc://    RYD       April 26, 1997       Module created
EvtSVSNONCPEIGEN.cc:  // check that there are 11 arguments
EvtSVSNONCPEIGEN.cc:  checkNArg(11,7);
EvtSVSNONCPEIGEN.cc:  checkSpinDaughter(1,EvtSpinType::SCALAR);
EvtSVSNONCPEIGEN.cc:  _dm=getArg(1);
EvtSVSNONCPEIGEN.cc:  if (getNArg()==11){
EvtSVSNONCPEIGEN.cc:    _Abar_fbar=EvtComplex(getArg(9)*cos(getArg(10)),getArg(9)*sin(getArg(10)));
EvtSVSNONCPEIGEN.cc:  int flip = ((p->getId() == B0) ? 0 : 1);
EvtSVSNONCPEIGEN.cc:  daugs[1]=getDaug(1);
EvtSVSNONCPEIGEN.cc:  // flip == 1 : D+rho-
EvtSVSNONCPEIGEN.cc:  EvtVector4R moms = p->getDaug(1)->getP4();
EvtSVSNONCPEIGEN.cc:  vertex(1,amp*norm*p4_parent*(v->epsParent(1)));
EvtSVSNONCPEIGEN.hh://      Copyright (C) 1998      Caltech, UCSB
EvtSVSNONCPEIGEN.hh://    DJL/RYD     August 11, 1998         Module created
EvtSVVCP.cc://      Copyright (C) 1998      Caltech, UCSB
EvtSVVCP.cc://    RYD       January 19, 1997       Module created
EvtSVVCP.cc:  checkSpinDaughter(1,EvtSpinType::VECTOR);
EvtSVVCP.cc:   EvtComplex G0P,G1P,G1M;
EvtSVVCP.cc:   G1P=EvtComplex(getArg(3)*cos(getArg(4)),getArg(3)*sin(getArg(4)));
EvtSVVCP.cc:   G1M=EvtComplex(getArg(7)*cos(getArg(8)),getArg(7)*sin(getArg(8)));
EvtSVVCP.cc:   double cdmt=cos(getArg(1)*t/(2*EvtConst::c));
EvtSVVCP.cc:   double sdmt=sin(getArg(1)*t/(2*EvtConst::c));
EvtSVVCP.cc:   EvtComplex cG0P,cG1P,cG1M;
EvtSVVCP.cc:     cG1P=G1P*(cdmt+lambda_km*EvtComplex(0.0,getArg(2)*sdmt));
EvtSVVCP.cc:     cG1M=G1M*(cdmt-lambda_km*EvtComplex(0.0,getArg(2)*sdmt));
EvtSVVCP.cc:     cG0P=G0P*(cdmt+(1.0/lambda_km)*EvtComplex(0.0,getArg(2)*sdmt));
EvtSVVCP.cc:     cG1P=G1P*(cdmt+(1.0/lambda_km)*EvtComplex(0.0,getArg(2)*sdmt));
EvtSVVCP.cc:     cG1M=-G1M*(cdmt-(1.0/lambda_km)*EvtComplex(0.0,getArg(2)*sdmt));
EvtSVVCP.cc:   AP=(cG1P+cG1M)/sqrt(2.0); 
EvtSVVCP.cc:   AM=(cG1P-cG1M)/sqrt(2.0); 
EvtSVVCP.cc:   EvtSVVHelAmp::SVVHel(p,_amp2,getDaug(0),getDaug(1),AP,A0,AM);
EvtSVVCP.hh://      Copyright (C) 1998      Caltech, UCSB
EvtSVVCP.hh://    DJL/RYD     August 11, 1998         Module created
EvtSVVCPLH.cc://      Copyright (C) 1999      Caltech, UCSB
EvtSVVCPLH.cc://    RYD       November 5, 1999       Module created
EvtSVVCPLH.cc:  checkSpinDaughter(1,EvtSpinType::VECTOR);
EvtSVVCPLH.cc:  EvtComplex G0P,G1P,G1M;
EvtSVVCPLH.cc:  G1P=EvtComplex(getArg(3)*cos(getArg(4)),getArg(3)*sin(getArg(4)));
EvtSVVCPLH.cc:  G1M=EvtComplex(getArg(7)*cos(getArg(8)),getArg(7)*sin(getArg(8)));
EvtSVVCPLH.cc:  double cdmt=cos(getArg(1)*t/(2*EvtConst::c));
EvtSVVCPLH.cc:  double sdmt=sin(getArg(1)*t/(2*EvtConst::c));
EvtSVVCPLH.cc:  EvtComplex cG0P,cG1P,cG1M;
EvtSVVCPLH.cc:  double pt=1;
EvtSVVCPLH.cc:    cG1P=pt*G1P*(cdmt+lambda_km*EvtComplex(0.0,getArg(2)*sdmt));
EvtSVVCPLH.cc:    cG1M=mt*G1M*(cdmt-lambda_km*EvtComplex(0.0,getArg(2)*sdmt));
EvtSVVCPLH.cc:    cG0P=pt*G0P*(cdmt+(1.0/lambda_km)*EvtComplex(0.0,getArg(2)*sdmt));
EvtSVVCPLH.cc:    cG1P=pt*G1P*(cdmt+(1.0/lambda_km)*EvtComplex(0.0,getArg(2)*sdmt));
EvtSVVCPLH.cc:    cG1M=-mt*G1M*(cdmt-(1.0/lambda_km)*EvtComplex(0.0,getArg(2)*sdmt));
EvtSVVCPLH.cc:   AP=(cG1P+cG1M)/sqrt(2.0); 
EvtSVVCPLH.cc:   AM=(cG1P-cG1M)/sqrt(2.0); 
EvtSVVCPLH.cc:   EvtSVVHelAmp::SVVHel(p,_amp2,getDaug(0),getDaug(1),AP,A0,AM);
EvtSVVCPLH.hh://      Copyright (C) 1999      Caltech, UCSB
EvtSVVCPLH.hh://    RYD       November 5, 1999         Module created
EvtSVVHelAmp.cc://      Copyright (C) 1998      Caltech, UCSB
EvtSVVHelAmp.cc://    RYD       November 24, 1996       Module created
EvtSVVHelAmp.cc:  checkSpinDaughter(1,EvtSpinType::VECTOR);
EvtSVVHelAmp.cc:  SVVHel(p,_amp2,getDaug(0),getDaug(1),
EvtSVVHelAmp.cc:	 EvtComplex(getArg(0)*cos(getArg(1)),getArg(0)*sin(getArg(1))),
EvtSVVHelAmp.cc:void EvtSVVHelAmp::SVVHel(EvtParticle *parent,EvtAmp& amp,EvtId n_v1,EvtId n_v2,
EvtSVVHelAmp.cc:  //  by ryd on Oct 17, 1996.
EvtSVVHelAmp.cc:  tdaug[0] = n_v1;
EvtSVVHelAmp.cc:  tdaug[1] = n_v2;
EvtSVVHelAmp.cc:  EvtParticle *v1,*v2;
EvtSVVHelAmp.cc:  v1 = parent->getDaug(0);
EvtSVVHelAmp.cc:  v2 = parent->getDaug(1);
EvtSVVHelAmp.cc:  EvtVector4R momv1 = v1->getP4();
EvtSVVHelAmp.cc:  EvtVector3R v1dir(momv1.get(1),momv1.get(2),momv1.get(3));
EvtSVVHelAmp.cc:  v1dir=v1dir/v1dir.d3mag();
EvtSVVHelAmp.cc:                b*eps(v1dir)+
EvtSVVHelAmp.cc:                c*directProd(v1dir,v1dir);
EvtSVVHelAmp.cc:  EvtVector3C t0=M.cont1(v1->eps(0).vec().conj());
EvtSVVHelAmp.cc:  EvtVector3C t1=M.cont1(v1->eps(1).vec().conj());
EvtSVVHelAmp.cc:  EvtVector3C t2=M.cont1(v1->eps(2).vec().conj());
EvtSVVHelAmp.cc:  EvtVector3C eps1=v2->eps(1).vec().conj();
EvtSVVHelAmp.cc:  amp.vertex(0,1,t0*eps1);
EvtSVVHelAmp.cc:  amp.vertex(1,0,t1*eps0);
EvtSVVHelAmp.cc:  amp.vertex(1,1,t1*eps1);
EvtSVVHelAmp.cc:  amp.vertex(1,2,t1*eps2);
EvtSVVHelAmp.cc:  amp.vertex(2,1,t2*eps1);
EvtSVVHelAmp.hh://      Copyright (C) 1998      Caltech, UCSB
EvtSVVHelAmp.hh://    DJL/RYD     August 11, 1998         Module created
EvtSVVHelAmp.hh:  static void SVVHel(EvtParticle *parent,EvtAmp& amp,EvtId n_v1,EvtId n_v2,
EvtSVVNONCPEIGEN.cc://      Copyright (C) 2001      Royal Holloway, University of London
EvtSVVNONCPEIGEN.cc://              1.000    rho+ MyD*-       SVV_NONCPEIGEN dm beta gamma 0.322 0.31 0.941 0 0.107 1.42 0.02 0 0.02 0 0.02 0 ;
EvtSVVNONCPEIGEN.cc://              There are 15 or 27 arguments. The first three are dm, phase1
EvtSVVNONCPEIGEN.cc://              and phase2. dm is the B0-B0bar mass difference. Phases 1
EvtSVVNONCPEIGEN.cc://              eg for B-->DstRho phase1 is beta and phase2 is gamma.
EvtSVVNONCPEIGEN.cc://              The next arguments are the 2 amplitudes (= 12 input parameters) 
EvtSVVNONCPEIGEN.cc://              The last 2 arguments A_fbar and Abar_fbar (=12 input parameters) are not necessary, 
EvtSVVNONCPEIGEN.cc://    Ajit Kurup 9 March 2001        Module created (from EvtSVSNONCPEIGEN)
EvtSVVNONCPEIGEN.cc://    Max Baak 01/16/2004            Fix of Helicity amplitude ordering.
EvtSVVNONCPEIGEN.cc:  checkNArg(27,15);
EvtSVVNONCPEIGEN.cc:  checkSpinDaughter(1,EvtSpinType::VECTOR);
EvtSVVNONCPEIGEN.cc:  //  A_f[9-11] = Abar_fbar
EvtSVVNONCPEIGEN.cc:  for (int i = 0; i < 12; ++i){
EvtSVVNONCPEIGEN.cc:  int flip = ((p->getId() == B0) ? 0 : 1);
EvtSVVNONCPEIGEN.cc:  daugs[1]=getDaug(1);
EvtSVVNONCPEIGEN.cc:  double phiCKM = (2.0 * getArg(1) + getArg(2));   // 2b+g
EvtSVVNONCPEIGEN.cc:  // flip == 1 : D*+rho-
EvtSVVNONCPEIGEN.cc:      // M.Baak 01/16/2004
EvtSVVNONCPEIGEN.cc:	amp[i] = _A_f[8-i]*cos(dmt2) + eMinusIPhi*EvtComplex(0.0,sin(dmt2))*_A_f[11-i];
EvtSVVNONCPEIGEN.cc:	amp[i] = _A_f[8-i] * ePlusIPhi * EvtComplex(0.0,sin(dmt2)) + _A_f[11-i]*cos(dmt2);
EvtSVVNONCPEIGEN.cc:  EvtSVVHelAmp::SVVHel(p,_amp2,daugs[0],daugs[1],amp[0],amp[1],amp[2]);
EvtSVVNONCPEIGEN.hh://      Copyright (C) 2001        Royal Holloway, University of London
EvtSVVNONCPEIGEN.hh://    Ajit Kurup   9 March 2001      Module created (from EvtSVSNONCPEIGEN.hh)
EvtSVVNONCPEIGEN.hh:  EvtComplex _A_f[12];
EvtT2GV.cc:setProbMax(30.00001);
EvtT2GV.cc:  EvtParticle *v,*s1;
EvtT2GV.cc:  s1=p->getDaug(1); //J/psi
EvtT2GV.cc:  ps=s1->getP4();
EvtT2GV.cc:  double alpha=21./73.;
EvtT2GV.cc:  double theta =angles.getHelAng(1);
EvtT2GV.cc:  double F0=1.;
EvtT2GV.cc:  double F1=sqrt(3.)*F0;  //pure M1 transition assumed,see PRD13,p1203 
EvtT2GV.cc: int j1,j2,j3;
EvtT2GV.cc: for(j1=0;j1<=4;){
EvtT2GV.cc: for(j2=0;j2<=1;){
EvtT2GV.cc: vertex(j1,j2,j3,0.0);j3++;}
EvtT2GV.cc:j1++;}
EvtT2GV.cc: vertex(0,0,0, Djmn(1, 1, 1,phi,theta,gamma)*F0);   
EvtT2GV.cc: vertex(0,0,1, Djmn(1,-1, 1,phi,theta,gamma)*F0);   
EvtT2GV.cc: vertex(0,0,2, Djmn(1, 0, 1,phi,theta,gamma)*F0);   
EvtT2GV.cc: vertex(0,1,0, Djmn(1, 1,-1,phi,theta,gamma)*F0); 
EvtT2GV.cc: vertex(0,1,1, Djmn(1,-1,-1,phi,theta,gamma)*F0);   
EvtT2GV.cc: vertex(0,1,2, Djmn(1, 0,-1,phi,theta,gamma)*F0); 
EvtT2GV.cc: vertex(1,0,0, Djmn(1, 1,-1,phi,theta,gamma)*F2);   
EvtT2GV.cc: vertex(1,0,1, Djmn(1,-1,-1,phi,theta,gamma)*F2);
EvtT2GV.cc: vertex(1,0,2, Djmn(1, 0,-1,phi,theta,gamma)*F2);   
EvtT2GV.cc: vertex(2,1,0, Djmn(1, 1, 1,phi,theta,gamma)*F2); 
EvtT2GV.cc: vertex(2,1,1, Djmn(1,-1, 1,phi,theta,gamma)*F2); 
EvtT2GV.cc: vertex(2,1,2, Djmn(1, 0, 1,phi,theta,gamma)*F2);
EvtT2GV.cc: vertex(3,0,0, Djmn(1, 1, 0,phi,theta,gamma)*F1); 
EvtT2GV.cc: vertex(3,0,1, Djmn(1,-1, 0,phi,theta,gamma)*F1);
EvtT2GV.cc: vertex(3,0,2, Djmn(1, 0, 0,phi,theta,gamma)*F1); 
EvtT2GV.cc: vertex(4,1,0, Djmn(1, 1, 0,phi,theta,gamma)*F1); 
EvtT2GV.cc: vertex(4,1,1, Djmn(1,-1, 0,phi,theta,gamma)*F1); 
EvtT2GV.cc: vertex(4,1,2, Djmn(1, 0, 0,phi,theta,gamma)*F1);
EvtTauHadnu.cc://      Copyright (C) 1998      Caltech, UCSB
EvtTauHadnu.cc://    RYD       January 17, 1997       Module created
EvtTauHadnu.cc:  checkSpinDaughter(getNDaug()-1,EvtSpinType::NEUTRINO);
EvtTauHadnu.cc:  for ( i=0; i<(getNDaug()-1);i++) {
EvtTauHadnu.cc:    _mRho = getArg(1);
EvtTauHadnu.cc:    _mA1 = getArg(5);
EvtTauHadnu.cc:    _gammaA1 = getArg(6);
EvtTauHadnu.cc:    _mRho = getArg(1);
EvtTauHadnu.cc:    for ( id=0; id<(getNDaug()-1); id++ ) 
EvtTauHadnu.cc:  nut = p->getDaug(getNDaug()-1);
EvtTauHadnu.cc:  EvtVector4C tau1, tau2;
EvtTauHadnu.cc:    tau1=EvtLeptonVACurrent(nut->spParentNeutrino(),p->sp(0));
EvtTauHadnu.cc:    tau2=EvtLeptonVACurrent(nut->spParentNeutrino(),p->sp(1));
EvtTauHadnu.cc:    tau1=EvtLeptonVACurrent(p->sp(0),nut->spParentNeutrino());
EvtTauHadnu.cc:    tau2=EvtLeptonVACurrent(p->sp(1),nut->spParentNeutrino());
EvtTauHadnu.cc:	 thePis.contains(getDaug(1)) ) {
EvtTauHadnu.cc:      EvtVector4R q1 = p->getDaug(0)->getP4();
EvtTauHadnu.cc:      EvtVector4R q2 = p->getDaug(1)->getP4();
EvtTauHadnu.cc:      hadCurr = Fpi(q1,q2)*(q1-q2);
EvtTauHadnu.cc:	 thePis.contains(getDaug(1)) &&
EvtTauHadnu.cc:      int diffPi(0),samePi1(0),samePi2(0);
EvtTauHadnu.cc:      if ( getDaug(0) == getDaug(1) ) {diffPi=2; samePi1=0; samePi2=1;}
EvtTauHadnu.cc:      if ( getDaug(0) == getDaug(2) ) {diffPi=1; samePi1=0; samePi2=2;}
EvtTauHadnu.cc:      if ( getDaug(1) == getDaug(2) ) {diffPi=0; samePi1=1; samePi2=2;}
EvtTauHadnu.cc:      EvtVector4R q1=p->getDaug(samePi1)->getP4();
EvtTauHadnu.cc:      EvtVector4R Q=q1+q2+q3;
EvtTauHadnu.cc:      double GA1=_gammaA1*pi3G(Q.mass2(),samePi1)/pi3G(_mA1*_mA1,samePi1);
EvtTauHadnu.cc:      EvtComplex denBA1(_mA1*_mA1 - Q.mass2(),-1.*_mA1*GA1);
EvtTauHadnu.cc:      EvtComplex BA1 = _mA1*_mA1 / denBA1;
EvtTauHadnu.cc:      hadCurr = BA1*( (q1-q3) - (Q*(Q*(q1-q3))/qMass2)*Fpi(q2,q3) +
EvtTauHadnu.cc:		      (q2-q3) - (Q*(Q*(q2-q3))/qMass2)*Fpi(q1,q3) ); 
EvtTauHadnu.cc:    for ( id=0; id<(getNDaug()-1); id++ ) 
EvtTauHadnu.cc:  vertex(0,tau1*hadCurr);
EvtTauHadnu.cc:  vertex(1,tau2*hadCurr);
EvtTauHadnu.cc:    return m2*(1.623 + 10.38/m2 - 9.32/(m2*m2) + 0.65/(m2*m2*m2));
EvtTauHadnu.cc:    double t1=m2-9.0*mPi*mPi;
EvtTauHadnu.cc:    return 4.1*pow(t1,3.0)*(1.0 - 3.3*t1+5.8*t1*t1);
EvtTauHadnu.cc:EvtComplex EvtTauHadnu::Fpi( EvtVector4R q1, EvtVector4R q2) {
EvtTauHadnu.cc:  double m1=q1.mass();
EvtTauHadnu.cc: EvtVector4R Q = q1 + q2;
EvtTauHadnu.cc:  double dRho= _mRho*_mRho - m1*m1 - m2*m2;
EvtTauHadnu.cc:  double pPiRho = (1.0/_mRho)*sqrt((dRho*dRho)/4.0 - m1*m1*m2*m2);
EvtTauHadnu.cc:  double dRhopr= _mRhopr*_mRhopr - m1*m1 - m2*m2;
EvtTauHadnu.cc:  double pPiRhopr = (1.0/_mRhopr)*sqrt((dRhopr*dRhopr)/4.0 - m1*m1*m2*m2);
EvtTauHadnu.cc:  double dQ= mQ2 - m1*m1 - m2*m2;
EvtTauHadnu.cc:  double pPiQ = (1.0/sqrt(mQ2))*sqrt((dQ*dQ)/4.0 - m1*m1*m2*m2);
EvtTauHadnu.cc:  EvtComplex BRhoDem(_mRho*_mRho - mQ2,-1.0*_mRho*gammaRho);
EvtTauHadnu.cc:  EvtComplex BRhoprDem(_mRhopr*_mRhopr - mQ2,-1.0*_mRho*gammaRhopr);
EvtTauHadnu.cc:  return (BRho + _beta*BRhopr)/(1+_beta);
EvtTauHadnu.hh://      Copyright (C) 1998     Caltech, UCSB
EvtTauHadnu.hh:  double _mA1;
EvtTauHadnu.hh:  double _gammaA1;
EvtTauHadnu.hh:  EvtComplex Fpi( EvtVector4R q1, EvtVector4R q2);
EvtTaulnunu.cc://      Copyright (C) 1998      Caltech, UCSB
EvtTaulnunu.cc://    RYD       January 17, 1997       Module created
EvtTaulnunu.cc:  checkSpinDaughter(1,EvtSpinType::NEUTRINO);
EvtTaulnunu.cc:  nul = p->getDaug(1);
EvtTaulnunu.cc:  EvtVector4C l1, l2, tau1, tau2;
EvtTaulnunu.cc:    tau1=EvtLeptonVACurrent(nut->spParentNeutrino(),p->sp(0));
EvtTaulnunu.cc:    tau2=EvtLeptonVACurrent(nut->spParentNeutrino(),p->sp(1));
EvtTaulnunu.cc:    l1=EvtLeptonVACurrent(l->spParent(0),nul->spParentNeutrino());
EvtTaulnunu.cc:    l2=EvtLeptonVACurrent(l->spParent(1),nul->spParentNeutrino());
EvtTaulnunu.cc:    tau1=EvtLeptonVACurrent(p->sp(0),nut->spParentNeutrino());
EvtTaulnunu.cc:    tau2=EvtLeptonVACurrent(p->sp(1),nut->spParentNeutrino());
EvtTaulnunu.cc:    l1=EvtLeptonVACurrent(nul->spParentNeutrino(),l->spParent(0));
EvtTaulnunu.cc:    l2=EvtLeptonVACurrent(nul->spParentNeutrino(),l->spParent(1));
EvtTaulnunu.cc:  vertex(0,0,tau1*l1);
EvtTaulnunu.cc:  vertex(0,1,tau1*l2);
EvtTaulnunu.cc:  vertex(1,0,tau2*l1);
EvtTaulnunu.cc:  vertex(1,1,tau2*l2);
EvtTaulnunu.hh://      Copyright (C) 1998      Caltech, UCSB
EvtTaulnunu.hh://    DJL/RYD     August 11, 1998         Module created
EvtTauola.cc://   Ping R.-G.    2008-07-13       Module created    
EvtTauola.cc:      tauoladecays[i]=tauoladecays[ntauoladecays-1];
EvtTauola.cc://  checkNArg(1);
EvtTauola.cc:    lcommand=10+2*lcommand;
EvtTauola.cc:    iniflag=iniflag+1;  //to count the event number
EvtTauola.cc:      if (EvtPDL::evtIdFromStdHep(kf[i])==EvtId(-1,-1)) {
EvtTauola.cc:      if (abs(kf[i])<=6||kf[i]==21){
EvtTauola.cc:        e[i]=sqrt(px[i]*px[i]+py[i]*py[i]+pz[i]*pz[i])+0.0000000001;
EvtTauola.cc:   more=(channel!=-1);
EvtTauola.cc:  }while( more && (count<10000) );
EvtTauola.cc:    int nprimary=1;
EvtTauola.cc:    EvtVector4R p4partons[10];
EvtTauola.cc:    nprimary=1;
EvtTauola.cc:    EvtVector4R p4stringboost(p4string.get(0),-p4string.get(1),
EvtTauola.cc:      rho.Set(0,0,1.0);
EvtTauola.cc:      rho.Set(0,1,0.0);
EvtTauola.cc:      rho.Set(1,0,0.0);
EvtTauola.cc:      rho.Set(1,1,1.0);
EvtTauola.cc:      double alpha=atan2(p4Psi.get(2),p4Psi.get(1));
EvtTauola.cc:    EvtDecayBasePtr* newtauoladecays=new EvtDecayBasePtr[2*ntable+10];
EvtTauola.cc:    ntable=2*ntable+10;
EvtTauola.hh://   Ping R.-G.    2008-07-13       Module created    
EvtTauScalarnu.cc://      Copyright (C) 1998      Caltech, UCSB
EvtTauScalarnu.cc://    RYD       January 17, 1997       Module created
EvtTauScalarnu.cc:  checkSpinDaughter(1,EvtSpinType::NEUTRINO);
EvtTauScalarnu.cc:  nut = p->getDaug(1);
EvtTauScalarnu.cc:  EvtVector4C tau1, tau2;
EvtTauScalarnu.cc:    tau1=EvtLeptonVACurrent(nut->spParentNeutrino(),p->sp(0));
EvtTauScalarnu.cc:    tau2=EvtLeptonVACurrent(nut->spParentNeutrino(),p->sp(1));
EvtTauScalarnu.cc:    tau1=EvtLeptonVACurrent(p->sp(0),nut->spParentNeutrino());
EvtTauScalarnu.cc:    tau2=EvtLeptonVACurrent(p->sp(1),nut->spParentNeutrino());
EvtTauScalarnu.cc:  vertex(0,tau1*momscalar);
EvtTauScalarnu.cc:  vertex(1,tau2*momscalar);
EvtTauScalarnu.hh://      Copyright (C) 1998      Caltech, UCSB
EvtTauScalarnu.hh://    DJL/RYD     August 11, 1998         Module created
EvtTauVectornu.cc://      Copyright (C) 1998      Caltech, UCSB
EvtTauVectornu.cc://    RYD/SHY   April 23, 1997           Module created
EvtTauVectornu.cc:  checkSpinDaughter(1,EvtSpinType::NEUTRINO);
EvtTauVectornu.cc:  nut=p->getDaug(1);
EvtTauVectornu.cc:  EvtVector4C tau1, tau2;
EvtTauVectornu.cc:    tau1=EvtLeptonVACurrent(nut->spParentNeutrino(),p->sp(0));
EvtTauVectornu.cc:    tau2=EvtLeptonVACurrent(nut->spParentNeutrino(),p->sp(1));
EvtTauVectornu.cc:    tau1=EvtLeptonVACurrent(p->sp(0),nut->spParentNeutrino());
EvtTauVectornu.cc:    tau2=EvtLeptonVACurrent(p->sp(1),nut->spParentNeutrino());
EvtTauVectornu.cc:  vertex(0,0,norm*tau1*(v->epsParent(0).conj()));
EvtTauVectornu.cc:  vertex(0,1,norm*tau1*(v->epsParent(1).conj()));
EvtTauVectornu.cc:  vertex(0,2,norm*tau1*(v->epsParent(2).conj()));
EvtTauVectornu.cc:  vertex(1,0,norm*tau2*(v->epsParent(0).conj()));
EvtTauVectornu.cc:  vertex(1,1,norm*tau2*(v->epsParent(1).conj()));
EvtTauVectornu.cc:  vertex(1,2,norm*tau2*(v->epsParent(2).conj()));
EvtTauVectornu.hh://      Copyright (C) 1998      Caltech, UCSB
EvtTauVectornu.hh://    DJL/RYD     August 11, 1998         Module created
EvtTSS.cc://      Copyright (C) 1998      Caltech, UCSB
EvtTSS.cc://    RYD     November 24, 1996         Module created
EvtTSS.cc:// Created:     Nov 24, 1996
EvtTSS.cc:  checkSpinDaughter(1,EvtSpinType::SCALAR);
EvtTSS.cc:   setProbMax(1.0);
EvtTSS.cc:  EvtVector4R moms1 = p->getDaug(0)->getP4(); 
EvtTSS.cc:  double norm = 1.0/(moms1.d3mag()*moms1.d3mag());
EvtTSS.cc:  vertex(0,norm*(p->epsTensor(0).cont1(EvtVector4C(moms1))*(moms1)));
EvtTSS.cc:  vertex(1,norm*(p->epsTensor(1).cont1(EvtVector4C(moms1))*(moms1)));
EvtTSS.cc:  vertex(2,norm*(p->epsTensor(2).cont1(EvtVector4C(moms1))*(moms1)));
EvtTSS.cc:  vertex(3,norm*(p->epsTensor(3).cont1(EvtVector4C(moms1))*(moms1)));
EvtTSS.cc:  vertex(4,norm*(p->epsTensor(4).cont1(EvtVector4C(moms1))*(moms1)));
EvtTSS.hh://      Copyright (C) 1998      Caltech, UCSB
EvtTSS.hh://    DJL/RYD     August 11, 1998         Module created
EvtTVSPwave.cc://      Copyright (C) 1998      Caltech, UCSB
EvtTVSPwave.cc://    DJL/RYD   August 11, 1997           Module created
EvtTVSPwave.cc:  checkSpinDaughter(1,EvtSpinType::SCALAR);
EvtTVSPwave.cc:  EvtComplex ap(getArg(0)*cos(getArg(1)),getArg(0)*sin(getArg(1)));
EvtTVSPwave.cc:  EvtVector4C  pep0,pep1,pep2,pep3,pep4;  
EvtTVSPwave.cc:  EvtVector4C epsdual0,epsdual1,epsdual2;
EvtTVSPwave.cc:  epsdual0=pdual.cont1(v->epsParent(0).conj());
EvtTVSPwave.cc:  epsdual1=pdual.cont1(v->epsParent(1).conj());
EvtTVSPwave.cc:  epsdual2=pdual.cont1(v->epsParent(2).conj());
EvtTVSPwave.cc:  pep0=p->epsTensor(0).cont1(momv);
EvtTVSPwave.cc:  pep1=p->epsTensor(1).cont1(momv);
EvtTVSPwave.cc:  pep2=p->epsTensor(2).cont1(momv);
EvtTVSPwave.cc:  pep3=p->epsTensor(3).cont1(momv);
EvtTVSPwave.cc:  pep4=p->epsTensor(4).cont1(momv);
EvtTVSPwave.cc:  vertex(1,0,pep1*epsdual0);
EvtTVSPwave.cc:  vertex(0,1,pep0*epsdual1);
EvtTVSPwave.cc:  vertex(1,1,pep1*epsdual1);
EvtTVSPwave.cc:  vertex(2,1,pep2*epsdual1);
EvtTVSPwave.cc:  vertex(3,1,pep3*epsdual1);
EvtTVSPwave.cc:  vertex(4,1,pep4*epsdual1);
EvtTVSPwave.cc:  vertex(1,2,pep1*epsdual2);
EvtTVSPwave.hh://      Copyright (C) 1998      Caltech, UCSB
EvtTVSPwave.hh://    DJL/RYD     August 11, 1998         Module created
EvtUclaII.hh://      Copyright (C) 1998      Caltech, UCSB
EvtUclaII.hh://    DJL/RYD     August 11, 1998         Module created
EvtVectorIsr.cc://      Copyright (C) 1998      Caltech, UCSB
EvtVectorIsr.cc://    Joe Izen        Dec  16, 2002         Fix cos_theta distribution - prevents boom at cos_theta=+/-1 
EvtVectorIsr.cc://    RYD/Adriano     June 16, 1998         Module created
EvtVectorIsr.cc:  checkSpinDaughter(1,EvtSpinType::PHOTON);
EvtVectorIsr.cc:  csbkmn=getArg(1);
EvtVectorIsr.cc:  gamma=p->getDaug(1);
EvtVectorIsr.cc:  beta=sqrt(1. - beta*beta);   //sqrt (1 - (m/ebeam)**2)
EvtVectorIsr.cc://    //Nucl. Phys. B27 (1971) 381-397
EvtVectorIsr.cc://    double y=pow((1+csmn)/(1-csmn),EvtRandom::Flat(0.0,1.0));
EvtVectorIsr.cc://    double cs=kcs*(y-1)/(y+1);
EvtVectorIsr.cc:  double ymax=log((1.+beta*csfrmn)/(1.-beta*csfrmn));
EvtVectorIsr.cc:  double ymin=log((1.-beta*csbkmn)/(1.+beta*csbkmn));
EvtVectorIsr.cc:  // photon theta distributed as  2*beta/(1-beta**2*cos(theta)**2)
EvtVectorIsr.cc:  double y=(ymax-ymin)*EvtRandom::Flat(0.0,1.0) + ymin;
EvtVectorIsr.cc:  cs=(cs - 1.)/(cs + 1.)/beta;
EvtVectorIsr.cc:  double sn=sqrt(1-cs*cs);
EvtVectorIsr.cc:  EvtVector4R p4gamma(pg,-p4phi.get(1),-p4phi.get(2),-p4phi.get(3));
EvtVectorIsr.cc:  gamma->init( getDaug(1),p4gamma);
EvtVectorIsr.cc:  EvtVector4C phi1=phi->epsParent(1);
EvtVectorIsr.cc:  EvtVector4C gamma1=gamma->epsParentPhoton(1);
EvtVectorIsr.cc:  EvtComplex r1p=phi0*gamma0;
EvtVectorIsr.cc:  EvtComplex r2p=phi1*gamma0;
EvtVectorIsr.cc:  EvtComplex r1m=phi0*gamma1;
EvtVectorIsr.cc:  EvtComplex r2m=phi1*gamma1;
EvtVectorIsr.cc:  EvtComplex r3m=phi2*gamma1;
EvtVectorIsr.cc:  EvtComplex rho11=r1p*conj(r1p)+r1m*conj(r1m);
EvtVectorIsr.cc:  EvtComplex rho13=r3p*conj(r1p)+r3m*conj(r1m);
EvtVectorIsr.cc:  EvtComplex rho12=r2p*conj(r1p)+r2m*conj(r1m);
EvtVectorIsr.cc:  EvtComplex rho31=conj(rho13);
EvtVectorIsr.cc:  EvtComplex rho21=conj(rho12);
EvtVectorIsr.cc:  rho.Set(0,0,rho11);
EvtVectorIsr.cc:  rho.Set(0,1,rho12);
EvtVectorIsr.cc:  rho.Set(0,2,rho13);
EvtVectorIsr.cc:  rho.Set(1,0,rho21);
EvtVectorIsr.cc:  rho.Set(1,1,rho22);
EvtVectorIsr.cc:  rho.Set(1,2,rho23);
EvtVectorIsr.cc:  rho.Set(2,0,rho31);
EvtVectorIsr.cc:  rho.Set(2,1,rho32);
EvtVectorIsr.hh://      Copyright (C) 1998      Caltech, UCSB
EvtVectorIsr.hh://    DJL/RYD     August 11, 1998         Module created
EvtVll.cc://      Copyright (C) 1998      Caltech, UCSB
EvtVll.cc://              or generally, two spin 1/2 particles.
EvtVll.cc://    RYD       January 17, 1997       Module created
EvtVll.cc:  checkSpinDaughter(1,EvtSpinType::DIRAC);
EvtVll.cc:  setProbMax(1.0);
EvtVll.cc:  EvtParticle *l1, *l2;
EvtVll.cc:  l1 = p->getDaug(0);
EvtVll.cc:  l2 = p->getDaug(1);
EvtVll.cc:  EvtVector4C l11, l12, l21, l22;
EvtVll.cc:  l11=EvtLeptonVCurrent(l1->spParent(0),l2->spParent(0));
EvtVll.cc:  l12=EvtLeptonVCurrent(l1->spParent(0),l2->spParent(1));
EvtVll.cc:  l21=EvtLeptonVCurrent(l1->spParent(1),l2->spParent(0));
EvtVll.cc:  l22=EvtLeptonVCurrent(l1->spParent(1),l2->spParent(1));
EvtVll.cc:  EvtVector4C eps1=p->eps(1);
EvtVll.cc:  double m2=l1->mass();
EvtVll.cc:  double norm=1.0/sqrt(2*M2+4*m2-4*m2*m2/M2);
EvtVll.cc:  vertex(0,0,0,norm*(eps0*l11));
EvtVll.cc:  vertex(0,0,1,norm*(eps0*l12));
EvtVll.cc:  vertex(0,1,0,norm*(eps0*l21));
EvtVll.cc:  vertex(0,1,1,norm*(eps0*l22));
EvtVll.cc:  vertex(1,0,0,norm*(eps1*l11));
EvtVll.cc:  vertex(1,0,1,norm*(eps1*l12));
EvtVll.cc:  vertex(1,1,0,norm*(eps1*l21));
EvtVll.cc:  vertex(1,1,1,norm*(eps1*l22));
EvtVll.cc:  vertex(2,0,0,norm*(eps2*l11));   
EvtVll.cc:  vertex(2,0,1,norm*(eps2*l12));
EvtVll.cc:  vertex(2,1,0,norm*(eps2*l21));
EvtVll.cc:  vertex(2,1,1,norm*(eps2*l22));
EvtVll.hh://      Copyright (C) 1998      Caltech, UCSB
EvtVll.hh://    DJL/RYD     August 11, 1998         Module created
EvtVPHOtoVISR.cc:  checkSpinDaughter(1,EvtSpinType::PHOTON);
EvtVPHOtoVISR.cc:  //setProbMax(100000.0);
EvtVPHOtoVISR.cc:  double L=2.0*log(w/0.000511);
EvtVPHOtoVISR.cc:  double alpha=1/137.0;
EvtVPHOtoVISR.cc:  double beta=(L-1)*2.0*alpha/EvtConst::pi;
EvtVPHOtoVISR.cc:  double pgz=0.99*pgmax*exp(log(EvtRandom::Flat(1.0))/beta);
EvtVPHOtoVISR.cc:  if (EvtRandom::Flat(1.0)<0.5) pgz=-pgz;
EvtVPHOtoVISR.cc:  p->getDaug(1)->init(getDaug(1),p4g);
EvtVPHOtoVISR.cc:  double sigma=beta*pow(2/w,beta)*(1+alpha*(1.5*L-2.0+EvtConst::pi*EvtConst::pi/3.0)/EvtConst::pi);
EvtVPHOtoVISR.cc:  double r0=12.7;
EvtVPHOtoVISR.cc:  double rp=12.7;
EvtVPHOtoVISR.cc:    rp=getArg(1);
EvtVPHOtoVISR.cc:  double GammaTot=Gamma*(pp*pp*pp/(1+pp*pp*rp*rp)+p0*p0*p0/(1+p0*p0*r0*r0))/
EvtVPHOtoVISR.cc:    (ppnorm*ppnorm*ppnorm/(1+ppnorm*ppnorm*rp*rp)+
EvtVPHOtoVISR.cc:     p0norm*p0norm*p0norm/(1+p0norm*p0norm*r0*r0));
EvtVPHOtoVISR.cc:  //if (count%10000==0){
EvtVPHOtoVISR.cc:  vertex(1,0,0,norm*p->eps(1)*p->epsParent(0).conj());
EvtVPHOtoVISR.cc:  vertex(0,1,0,norm*p->eps(0)*p->epsParent(1).conj());
EvtVPHOtoVISR.cc:  vertex(1,1,0,norm*p->eps(1)*p->epsParent(1).conj());
EvtVPHOtoVISR.cc:  vertex(2,1,0,norm*p->eps(2)*p->epsParent(1).conj());
EvtVPHOtoVISR.cc:  vertex(1,2,0,norm*p->eps(1)*p->epsParent(2).conj());
EvtVPHOtoVISR.cc:  vertex(0,0,1,norm*p->eps(0)*p->epsParent(0).conj());
EvtVPHOtoVISR.cc:  vertex(1,0,1,norm*p->eps(1)*p->epsParent(0).conj());
EvtVPHOtoVISR.cc:  vertex(2,0,1,norm*p->eps(2)*p->epsParent(0).conj());
EvtVPHOtoVISR.cc:  vertex(0,1,1,norm*p->eps(0)*p->epsParent(1).conj());
EvtVPHOtoVISR.cc:  vertex(1,1,1,norm*p->eps(1)*p->epsParent(1).conj());
EvtVPHOtoVISR.cc:  vertex(2,1,1,norm*p->eps(2)*p->epsParent(1).conj());
EvtVPHOtoVISR.cc:  vertex(0,2,1,norm*p->eps(0)*p->epsParent(2).conj());
EvtVPHOtoVISR.cc:  vertex(1,2,1,norm*p->eps(1)*p->epsParent(2).conj());
EvtVPHOtoVISR.cc:  vertex(2,2,1,norm*p->eps(2)*p->epsParent(2).conj());
EvtVPHOtoVISRHi.cc:  // check that there are 0 or 1 arguments
EvtVPHOtoVISRHi.cc:  checkNArg(0,1);
EvtVPHOtoVISRHi.cc:  checkSpinDaughter(1,EvtSpinType::PHOTON);
EvtVPHOtoVISRHi.cc:   double power=1;
EvtVPHOtoVISRHi.cc:   if (getNArg()==1) power=getArg(0);
EvtVPHOtoVISRHi.cc:  double L=2.0*log(w/0.000511);
EvtVPHOtoVISRHi.cc:  double alpha=1/137.0;
EvtVPHOtoVISRHi.cc:  double beta=(L-1)*2.0*alpha/EvtConst::pi;
EvtVPHOtoVISRHi.cc:  double md1 = EvtPDL::getMeanMass(p->getDaug(0)->getDaug(0)->getId());
EvtVPHOtoVISRHi.cc:  double md2 = EvtPDL::getMeanMass(p->getDaug(0)->getDaug(1)->getId());
EvtVPHOtoVISRHi.cc:  double minResMass = md1+md2;
EvtVPHOtoVISRHi.cc:  double pgz=0.99*pgmax*exp(log(EvtRandom::Flat(1.0))/(beta*power));
EvtVPHOtoVISRHi.cc:  if (EvtRandom::Flat(1.0)<0.5) pgz=-pgz;
EvtVPHOtoVISRHi.cc:  p->getDaug(1)->init(getDaug(1),p4g);
EvtVPHOtoVISRHi.cc:  if (mres<=3.9) sigma = 0.00001;
EvtVPHOtoVISRHi.cc:          && p->getDaug(0)->getDaug(1)->getId()==D0BS)
EvtVPHOtoVISRHi.cc:            && p->getDaug(0)->getDaug(1)->getId()==DMS))){
EvtVPHOtoVISRHi.cc:     if(mres>4.18) {
EvtVPHOtoVISRHi.cc:        sigma*=5./9.*(1.-1.*sqrt((4.18-mres)*(4.18-mres))/(4.3-4.18));
EvtVPHOtoVISRHi.cc:     else if(mres>4.07 && mres<=4.18) {
EvtVPHOtoVISRHi.cc:        sigma*=(5./9. - 1.5/9.*sqrt((4.07-mres)*(4.07-mres))/(4.07-4.03)); 
EvtVPHOtoVISRHi.cc:     else if (mres<=4.03&& mres>=4.013)
EvtVPHOtoVISRHi.cc:        sigma*=(3.5/9. - 3.5/9.*sqrt((4.03-mres)*(4.03-mres))/(4.03-4.013)); 
EvtVPHOtoVISRHi.cc:        sigma=0.00001; 
EvtVPHOtoVISRHi.cc:                                         && p->getDaug(0)->getDaug(1)->getId()==D0B)
EvtVPHOtoVISRHi.cc:                                           && p->getDaug(0)->getDaug(1)->getId()==DM) 
EvtVPHOtoVISRHi.cc:                                           && p->getDaug(0)->getDaug(1)->getId()==D0)
EvtVPHOtoVISRHi.cc:                                           && p->getDaug(0)->getDaug(1)->getId()==DP)) )
EvtVPHOtoVISRHi.cc:        sigma*=1.5/9.;
EvtVPHOtoVISRHi.cc:        sigma*=((1.5/9.+2.5/9.*sqrt((4.2-mres)*(4.2-mres))/(4.2-4.06)));
EvtVPHOtoVISRHi.cc:     else if(mres>=4.015 && mres<4.06){
EvtVPHOtoVISRHi.cc:        sigma*=((4./9.+3./9.*sqrt((4.06-mres)*(4.06-mres))/(4.06-4.015)));
EvtVPHOtoVISRHi.cc:     else if (mres<4.015 && mres>=3.9){
EvtVPHOtoVISRHi.cc:        sigma*=((7./9.-7/9.*sqrt((4.015-mres)*(4.015-mres))/(4.015-3.9))); 
EvtVPHOtoVISRHi.cc:        sigma = 0.00001; 
EvtVPHOtoVISRHi.cc:  if (((p->getDaug(0)->getDaug(0)->getId()==DSPS && p->getDaug(0)->getDaug(1)->getId()==DSMS)))
EvtVPHOtoVISRHi.cc:     if(mres>(2.112+2.112)){
EvtVPHOtoVISRHi.cc:        sigma=0.00001;
EvtVPHOtoVISRHi.cc:                                          && p->getDaug(0)->getDaug(1)->getId()==DSM)
EvtVPHOtoVISRHi.cc:                                             && p->getDaug(0)->getDaug(1)->getId()==DSP)))
EvtVPHOtoVISRHi.cc:     else if (mres>4.18 && mres<=4.26){
EvtVPHOtoVISRHi.cc:        sigma*=1./9.*(0.05+0.95*sqrt((4.26-mres)*(4.26-mres))/(4.26-4.18));
EvtVPHOtoVISRHi.cc:     else if (mres>4.16 && mres<=4.18){
EvtVPHOtoVISRHi.cc:        sigma*=1/9.; 
EvtVPHOtoVISRHi.cc:     else if (mres<=4.16 && mres>4.08){
EvtVPHOtoVISRHi.cc:        sigma*=1/9.*(1-sqrt((4.16-mres)*(4.16-mres))/(4.16-4.08)); 
EvtVPHOtoVISRHi.cc:        sigma=0.00001; 
EvtVPHOtoVISRHi.cc:                                          && p->getDaug(0)->getDaug(1)->getId()==D0B)
EvtVPHOtoVISRHi.cc:                                            && p->getDaug(0)->getDaug(1)->getId()==DM))){ 
EvtVPHOtoVISRHi.cc:  if (p->getDaug(0)->getNDaug() == 2 && ((p->getDaug(0)->getDaug(0)->getId()==DSP && p->getDaug(0)->getDaug(1)->getId()==DSM))){
EvtVPHOtoVISRHi.cc:        sigma=0.00001; 
EvtVPHOtoVISRHi.cc://   if (count%10000==0){
EvtVPHOtoVISRHi.cc:  vertex(1,0,0,norm*p->eps(1)*p->epsParent(0).conj());
EvtVPHOtoVISRHi.cc:  vertex(0,1,0,norm*p->eps(0)*p->epsParent(1).conj());
EvtVPHOtoVISRHi.cc:  vertex(1,1,0,norm*p->eps(1)*p->epsParent(1).conj());
EvtVPHOtoVISRHi.cc:  vertex(2,1,0,norm*p->eps(2)*p->epsParent(1).conj());
EvtVPHOtoVISRHi.cc:  vertex(1,2,0,norm*p->eps(1)*p->epsParent(2).conj());
EvtVPHOtoVISRHi.cc:  vertex(0,0,1,norm*p->eps(0)*p->epsParent(0).conj());
EvtVPHOtoVISRHi.cc:  vertex(1,0,1,norm*p->eps(1)*p->epsParent(0).conj());
EvtVPHOtoVISRHi.cc:  vertex(2,0,1,norm*p->eps(2)*p->epsParent(0).conj());
EvtVPHOtoVISRHi.cc:  vertex(0,1,1,norm*p->eps(0)*p->epsParent(1).conj());
EvtVPHOtoVISRHi.cc:  vertex(1,1,1,norm*p->eps(1)*p->epsParent(1).conj());
EvtVPHOtoVISRHi.cc:  vertex(2,1,1,norm*p->eps(2)*p->epsParent(1).conj());
EvtVPHOtoVISRHi.cc:  vertex(0,2,1,norm*p->eps(0)*p->epsParent(2).conj());
EvtVPHOtoVISRHi.cc:  vertex(1,2,1,norm*p->eps(1)*p->epsParent(2).conj());
EvtVPHOtoVISRHi.cc:  vertex(2,2,1,norm*p->eps(2)*p->epsParent(2).conj());
EvtVSPPwave.cc://      Copyright (C) 1998      Caltech, UCSB
EvtVSPPwave.cc://    RYD       November 24, 1996       Module created
EvtVSPPwave.cc:  checkSpinDaughter(1,EvtSpinType::PHOTON);
EvtVSPPwave.cc:  setProbMax(1);
EvtVSPPwave.cc:  gamma = p->getDaug(1);
EvtVSPPwave.cc:  double norm=1/(m_p*momgamma.d3mag());
EvtVSPPwave.cc:  vertex(0,0,(tds.cont1( p->eps(0))).cont(
EvtVSPPwave.cc:  vertex(0,1,(tds.cont1( p->eps(0))).cont(
EvtVSPPwave.cc:              gamma->epsParentPhoton(1).conj() ) );
EvtVSPPwave.cc:  vertex(1,0,(tds.cont1( p->eps(1))).cont(
EvtVSPPwave.cc:  vertex(1,1,(tds.cont1( p->eps(1))).cont(
EvtVSPPwave.cc:              gamma->epsParentPhoton(1).conj() ) );
EvtVSPPwave.cc:  vertex(2,0,(tds.cont1( p->eps(2))).cont(
EvtVSPPwave.cc:  vertex(2,1,(tds.cont1( p->eps(2))).cont(
EvtVSPPwave.cc:              gamma->epsParentPhoton(1).conj() ) );
EvtVSPPwave.hh://      Copyright (C) 1998      Caltech, UCSB
EvtVSPPwave.hh://    DJL/RYD     August 11, 1998         Module created
EvtVSSBMixCPT.cc:  if ( getNArg()>3) checkNArg(14,12,8);
EvtVSSBMixCPT.cc:  if (getNArg()<1) {
EvtVSSBMixCPT.cc:                           << " at least 1 argument (deltam) but found:"<<getNArg()<<endl;
EvtVSSBMixCPT.cc:    if ( getDaug(0)!=getDaug(2)||getDaug(1)!=getDaug(3)){
EvtVSSBMixCPT.cc:			     << " 4 daughters only if 1=3 and 2=4"
EvtVSSBMixCPT.cc:  checkSpinDaughter(1,EvtSpinType::SCALAR);
EvtVSSBMixCPT.cc:  if(!(EvtPDL::chargeConj(getDaug(0)) == getDaug(1))) {
EvtVSSBMixCPT.cc:			   << EvtPDL::name(getDaug(1)).c_str() << endl;
EvtVSSBMixCPT.cc:  if(EvtPDL::getctau(getDaug(0)) != EvtPDL::getctau(getDaug(1))) {
EvtVSSBMixCPT.cc:			   << EvtPDL::getctau(getDaug(1)) << " mm" << endl;
EvtVSSBMixCPT.cc:  double gamma= 1/EvtPDL::getctau(getDaug(0));  // gamma/c (1/mm)
EvtVSSBMixCPT.cc:  if ( getNArg() > 1 ) {
EvtVSSBMixCPT.cc:    dgog=getArg(1);
EvtVSSBMixCPT.cc:  _qoverp = EvtComplex(1.0,0.0);
EvtVSSBMixCPT.cc:  _poverq=1.0/_qoverp;
EvtVSSBMixCPT.cc:  _A_f=EvtComplex(1.0,0.0);
EvtVSSBMixCPT.cc:      _Abar_fbar=getArg(10)*EvtComplex(cos(getArg(11)),sin(getArg(11)));
EvtVSSBMixCPT.cc:  if ( getNArg() > 12 ){
EvtVSSBMixCPT.cc:    _z = EvtComplex(getArg(12),getArg(13)); 
EvtVSSBMixCPT.cc:  double tau= 1e12*EvtPDL::getctau(getDaug(0))/EvtConst::c; // in ps
EvtVSSBMixCPT.cc:  double dm= 1e-12*getArg(0); // B0/anti-B0 mass difference in hbar/ps
EvtVSSBMixCPT.cc:  _chib0bar_b0=(1/qop2)*(x*x+y*y)/((1/qop2)*(x*x+y*y)+2+x*x-y*y); // does not include CPT in mixing 
EvtVSSBMixCPT.cc:			<< EvtPDL::name(getDaug(1)).c_str() << endl << endl
EvtVSSBMixCPT.cc:    if ( rndm < 0.5 ) { tempDaug[0]=getDaug(0);  tempDaug[1]=getDaug(3); }
EvtVSSBMixCPT.cc:    else{ tempDaug[0]=getDaug(2);  tempDaug[1]=getDaug(1); }
EvtVSSBMixCPT.cc:  EvtParticle *s1,*s2;
EvtVSSBMixCPT.cc:  s1 = p->getDaug(0);
EvtVSSBMixCPT.cc:  s2 = p->getDaug(1);
EvtVSSBMixCPT.cc:  if ( s1->getNDaug() > 0 ) { s1->deleteDaughters();}
EvtVSSBMixCPT.cc:  EvtVector4R p1= s1->getP4();
EvtVSSBMixCPT.cc:  int mixed= (rndm < 0.5) ? 1 : 0;
EvtVSSBMixCPT.cc:  if(mixed==1) {
EvtVSSBMixCPT.cc:    EvtId mixedId= (rndm < 0.25) ? getDaug(0) : getDaug(1);
EvtVSSBMixCPT.cc:    s1->init(mixedId, p1);
EvtVSSBMixCPT.cc:    EvtId unmixedId = (rndm < 0.75) ? getDaug(0) : getDaug(1);
EvtVSSBMixCPT.cc:    EvtId unmixedId2= (rndm < 0.75) ? getDaug(1) : getDaug(0);
EvtVSSBMixCPT.cc:    s1->init(unmixedId, p1);
EvtVSSBMixCPT.cc:  s1->setLifetime();
EvtVSSBMixCPT.cc:  double dct= s1->getLifetime() - s2->getLifetime(); // in mm
EvtVSSBMixCPT.cc:  EvtComplex exp1(-0.25*_dGamma*dct,0.5*_freq*dct);
EvtVSSBMixCPT.cc:  EvtId firstDec = (dct > 0 ) ? s2->getId() : s1->getId();
EvtVSSBMixCPT.cc:  //define some useful functions: (see BAD #188 eq. 39 for ref.) 
EvtVSSBMixCPT.cc:  EvtComplex gp=0.5*(exp(-1.0*exp1)+exp(exp1)); 
EvtVSSBMixCPT.cc:  EvtComplex gm=0.5*(exp(-1.0*exp1)-exp(exp1));
EvtVSSBMixCPT.cc:  EvtComplex sqz=sqrt(abs(1-_z*_z))*exp(EvtComplex(0,arg(1-_z*_z)/2));
EvtVSSBMixCPT.cc:  double norm=1.0/p1.d3mag();
EvtVSSBMixCPT.cc:  vertex(0,norm*osc_amp*p1*(p->eps(0)));
EvtVSSBMixCPT.cc:  vertex(1,norm*osc_amp*p1*(p->eps(1)));
EvtVSSBMixCPT.cc:  vertex(2,norm*osc_amp*p1*(p->eps(2)));
EvtVSS.cc://      Copyright (C) 1998      Caltech, UCSB
EvtVSS.cc://    RYD       November 24, 1996       Module created
EvtVSS.cc:  checkSpinDaughter(1,EvtSpinType::SCALAR);
EvtVSS.cc:   setProbMax(1.0);
EvtVSS.cc:  double norm=1.0/pDaug.d3mag();
EvtVSS.hh://      Copyright (C) 1998      Caltech, UCSB
EvtVSS.hh://    DJL/RYD     August 11, 1998         Module created
EvtVSSMix.cc://      Copyright (C) 1998      Caltech, UCSB
EvtVSSMix.cc://    RYD       November 24, 1996       Module created
EvtVSSMix.cc:  // check that there are 1 arguments
EvtVSSMix.cc:  checkNArg(1);
EvtVSSMix.cc:  checkSpinDaughter(1,EvtSpinType::SCALAR);
EvtVSSMix.cc:  EvtParticle *s1,*s2;
EvtVSSMix.cc:  s1 = p->getDaug(0);
EvtVSSMix.cc:  s2 = p->getDaug(1);
EvtVSSMix.cc:  EvtVector4R s1mom = s1->getP4();
EvtVSSMix.cc:  double t1,t2,dm;
EvtVSSMix.cc:  s1->setLifetime();
EvtVSSMix.cc:  t1=s1->getLifetime();
EvtVSSMix.cc:  EvtId d1,d2;
EvtVSSMix.cc:  d1=s1->getId();
EvtVSSMix.cc:  if (d1==B0&&d2==B0B) mix_amp=cos(0.5*dm*(t1-t2));
EvtVSSMix.cc:  if (d1==B0B&&d2==B0) mix_amp=cos(0.5*dm*(t1-t2));
EvtVSSMix.cc:  if (d1==B0&&d2==B0) mix_amp=sin(0.5*dm*(t1-t2));
EvtVSSMix.cc:  if (d1==B0B&&d2==B0B) mix_amp=sin(0.5*dm*(t1-t2));
EvtVSSMix.cc:  double norm=1.0/s1mom.d3mag();
EvtVSSMix.cc:  vertex(0,norm*mix_amp*s1mom*(p->eps(0)));
EvtVSSMix.cc:  vertex(1,norm*mix_amp*s1mom*(p->eps(1)));
EvtVSSMix.cc:  vertex(2,norm*mix_amp*s1mom*(p->eps(2)));
EvtVSSMix.hh://      Copyright (C) 1998      Caltech, UCSB
EvtVSSMix.hh://    DJL/RYD     August 11, 1998         Module created
EvtVub.cc://      Copyright (C) 1998      Caltech, UCSB
EvtVub.cc://    Sven Menke       January 17, 2001       Module created
EvtVub.cc:                           << " at least 6 arguments (mb,a,alpha_s,Nbins,m1,w1,...) but found: "
EvtVub.cc:  _a       	= getArg(1);
EvtVub.cc:  _storeQplus   = (getArg(3)<0?1:0);
EvtVub.cc:    if (i>0 && _masses[i] <= _masses[i-1]) {
EvtVub.cc:  _dGMax = 0.21344+8.905*_alphas;
EvtVub.cc:  const int aSize = 10000;
EvtVub.cc:  // normalized to 1.
EvtVub.cc:      _pf[i] = _pf[i-1] + pFermi.getFPFermi(kplus);
EvtVub.cc:  for (i=0; i<_pf.size(); i++) _pf[i]/=_pf[_pf.size()-1];
EvtVub.cc:  // R. Faccini 21/02/03
EvtVub.cc:  const double lp2epsilon=-10;
EvtVub.cc:    lepton=p->getDaug(1);
EvtVub.cc:    int tryit = 1;
EvtVub.cc:      p2 = pow(10,lp2epsilon*p2);
EvtVub.cc:	    if ( y > 1 ) report(WARNING,"EvtGen")<<"EvtVub decay probability > 1 found: " << y << endl;
EvtVub.cc:      double xran1 = EvtRandom::Flat();
EvtVub.cc:      double w = _weights[j-1]; 
EvtVub.cc:      if ( w >= xran1 ) rew = false;
EvtVub.cc:  // now calculate a flat cos Theta_H [-1,1] distribution of the 
EvtVub.cc:  double ctH = EvtRandom::Flat(-1,1);
EvtVub.cc:  sttmp = sqrt(1-ctH*ctH);
EvtVub.cc:  p4.set(pHB[0],pHB[1],pHB[2],pHB[3]);
EvtVub.cc:    // tau = 1 ps corresponds to ctau = 0.3 mm -> in order to
EvtVub.cc:    // stay well below BaBars sensitivity we take q+/(10000 GeV) which 
EvtVub.cc:    // q+ = delta_ctau * 10000 GeV/mm * Mass_Xu/Energy_Xu     
EvtVub.cc:    xuhad->setLifetime(qplus/10000.);
EvtVub.cc:  double pWB[4] = {mB-Eh,-pHB[1],-pHB[2],-pHB[3]};
EvtVub.cc:  if ( ctL < -1 ) ctL = -1;
EvtVub.cc:  if ( ctL >  1 ) ctL =  1;
EvtVub.cc:  sttmp = sqrt(1-ctL*ctL);
EvtVub.cc:  double xW[3] = {-pWB[2],pWB[1],0};
EvtVub.cc:  double zW[3] = {pWB[1]/apWB,pWB[2]/apWB,pWB[3]/apWB};
EvtVub.cc:  double lx = sqrt(xW[0]*xW[0]+xW[1]*xW[1]);
EvtVub.cc:  double yW[3] = {-pWB[1]*pWB[3],-pWB[2]*pWB[3],pWB[1]*pWB[1]+pWB[2]*pWB[2]};
EvtVub.cc:  double ly = sqrt(yW[0]*yW[0]+yW[1]*yW[1]+yW[2]*yW[2]);
EvtVub.cc:    pLW[j+1] = sttmp*cos(phL)*ptmp*xW[j] 
EvtVub.cc:  //double pNW[4] = {sqrt(mW2)-pLW[0],-pLW[1],-pLW[2],-pLW[3]};
EvtVub.cc:  if ( ctLL >  1 ) ctLL =  1;
EvtVub.cc:  if ( ctLL < -1 ) ctLL = -1;
EvtVub.cc:  for (j=1;j<4;j++) {
EvtVub.cc:  p4.set(pLB[0],pLB[1],pLB[2],pLB[3]);
EvtVub.cc:  lepton->init( getDaug(1), p4);
EvtVub.cc:  p4.set(pNB[0],pNB[1],pNB[2],pNB[3]);
EvtVub.cc:  double oOverBins= 1.0/(float(_pf.size()));
EvtVub.cc:  while (nBinsAbove > nBinsBelow+1) {
EvtVub.cc:    middle = (nBinsAbove + nBinsBelow+1)>>1;
EvtVub.cc:    // of the range of that bin.  (Any value between k/N and (k+1)/N is 
EvtVubdGamma.cc://  ---------- = 12 Gamma   | (1+x-z)(z-x-p ) -- W  + (1-z+p ) -- W 
EvtVubdGamma.cc://         _ 2           0  \                  2  1             2  2
EvtVubdGamma.cc://   x = ------ , p = --- , z = ------ , x = 1-x
EvtVubdGamma.cc://   hep-ph/9905351 v2
EvtVubdGamma.cc:  // the range for the delta distribution in p2 is from _epsilon1 to 
EvtVubdGamma.cc:  // for z=1 p2=0 is not allowed and therefore the part of dGamma proportional
EvtVubdGamma.cc:  // to delta(p2) should go to 0 for z->1.
EvtVubdGamma.cc:  // Using equation (3.1) and (3.2) it is possible to find the correct value
EvtVubdGamma.cc:  _epsilon1 = 1e-10;
EvtVubdGamma.cc:  _epsilon2 = 1e-5;
EvtVubdGamma.cc:    double lne3 = 9./16.-2*M_PI*M_PI/3.+6*M_PI/4/alphas;
EvtVubdGamma.cc:    _epsilon3 = 1;
EvtVubdGamma.cc:  double xb = (1-x);
EvtVubdGamma.cc:  if ( x < 0 || x > 1 || z < xb || z > (1+xb) ) 
EvtVubdGamma.cc:  //double mx = (0>z-1?0:z-1);
EvtVubdGamma.cc:  double p2min = (0>z-1.?0:z-1.);
EvtVubdGamma.cc:  double p2max = (1.-x)*(z-1.+x);
EvtVubdGamma.cc:  //  return 1.;
EvtVubdGamma.cc:  if ( p2 >_epsilon1 && p2< _epsilon2) {
EvtVubdGamma.cc:    double W1      = getW1delta(x,z);
EvtVubdGamma.cc:    dG = 12. * delta(p2,p2min,p2max) * ((1.+xb-z) * (z-xb) * W1
EvtVubdGamma.cc:    double W1 = getW1nodelta(x,z,p2);
EvtVubdGamma.cc:    dG = 12. * ((1.+xb-z) * (z-xb-p2) * W1 
EvtVubdGamma.cc:		+ (1.-z+p2) * W2
EvtVubdGamma.cc:  if ( _epsilon1 < x && x < _epsilon2 ) return 1./(_epsilon2-_epsilon1); 
EvtVubdGamma.cc:double EvtVubdGamma::getW1delta(const double &x, const double &z)
EvtVubdGamma.cc:  double mz = 1.-z;
EvtVubdGamma.cc:  //double p2min = (0>z-1.?0:z-1.);
EvtVubdGamma.cc:  //double p2max = (1.-x)*(z-1.+x);
EvtVubdGamma.cc:  if (z == 1) lz = -1.;
EvtVubdGamma.cc:  else        lz = log(z)/(1.-z);
EvtVubdGamma.cc:  // ddilog_(&z) is actually the dilog of (1-z) in maple,
EvtVubdGamma.cc:  // also in Neuberts paper the limit dilog(1) = pi^2/6 is used 
EvtVubdGamma.cc:  // I take ddilog_(&mz) where mz=1-z in order to satisfy Neubert's definition
EvtVubdGamma.cc:  // and to compare with Maple the argument in maple should be (1-mz) ...
EvtVubdGamma.cc:  double w = -(8.*pow(log(z),2) - 10.*log(z) + 2.*lz + dl + 5.)
EvtVubdGamma.cc:  return (1. + w*_alphas/3./M_PI);
EvtVubdGamma.cc:double EvtVubdGamma::getW1nodelta(const double &x, const double &z, const double &p2)
EvtVubdGamma.cc:  double t2 = 1.-4.*p2/z2;
EvtVubdGamma.cc:    w += 4./p2*(log((1.+t)/(1.-t))/t + log(p2/z2))  
EvtVubdGamma.cc:      + 1. - (8.-z)*(2.-z)/z2/t2 
EvtVubdGamma.cc:      + ((2.-z)/2./z+(8.-z)*(2.-z)/2./z2/t2)*log((1.+t)/(1.-t))/t;
EvtVubdGamma.cc:  double t2 = 1.-4.*p2/z2;
EvtVubdGamma.cc:  double w11 = (32.-8.*z+z2)/4./z/t2;
EvtVubdGamma.cc:    w -=  (z*t2/8. + (4.-z)/4. + w11/2.)*log((1.+t)/(1.-t))/t;
EvtVubdGamma.cc:    w += (8.-z)/4. + w11;
EvtVubdGamma.cc:  double t2 = 1.-4.*p2/z2;
EvtVubdGamma.cc:    w += (z*t2/16. + 5.*(4.-z)/16. - (64.+56.*z-7.*z2)/16./z/t2 
EvtVubdGamma.cc:	  + 3.*(12.-z)/16./t4) * log((1.+t)/(1.-t))/t;
EvtVubdGamma.cc:    w += -(8.-3.*z)/8. + (32.+22.*z-3.*z2)/4./z/t2 - 3.*(12.-z)/8./t4;
EvtVubdGamma.cc:  double t2 = 1.-4.*p2/z2;
EvtVubdGamma.cc:    w -= ((8.-3.*z)/4./z - (22.-3.*z)/2./z/t2 + 3.*(12.-z)/4./z/t4) 
EvtVubdGamma.cc:      * log((1.+t)/(1.-t))/t;
EvtVubdGamma.cc:    w += -1. - (32.-5.*z)/2./z/t2 + 3.*(12.-z)/2./z/t4 ;
EvtVubdGamma.cc:  if ( z == 1 )
EvtVubdGamma.cc:    w = 2.*log(z)/(1.-z);
EvtVubdGamma.cc:  double t2 = 1.-4.*p2/z2;
EvtVubdGamma.cc:    w += (1./4./z - (2.-z)/2./z2/t2 + 3.*(12.-z)/4./z2/t4) 
EvtVubdGamma.cc:      * log((1.+t)/(1.-t))/t;
EvtVubdGamma.cc:    w += -(8.+z)/2./z2/t2 - 3.*(12.-z)/2./z2/t4;
EvtVubdGamma.hh://  ---------- = 12 Gamma   | (1+x-z)(z-x-p ) -- W  + (1-z+p ) -- W 
EvtVubdGamma.hh://         _ 2           0   \                 2  1             2  2
EvtVubdGamma.hh://   x = ------ , p = --- , z = ------ , x = 1-x
EvtVubdGamma.hh://   hep-ph/9905351 v2
EvtVubdGamma.hh:  double getW1nodelta(const double &x, const double &z, const double &p2);
EvtVubdGamma.hh:  double getW1delta(const double &x, const double &z);
EvtVubdGamma.hh:  double _epsilon1;
EvtVub.hh://      Copyright (C) 1998      Caltech, UCSB
EvtVub.hh://   Sven Menke     January 17, 2001         Module created
EvtVub.hh:  double _a;      // Parameter for the Fermi Motion (1.29 is good)
EvtVubHybrid.cc://      Copyright (C) 1998      Caltech, UCSB
EvtVubHybrid.cc://   Jochen Dingfelder February 1, 2005  Created Module as update of the
EvtVubHybrid.cc:  _a      = getArg(1);
EvtVubHybrid.cc:  _dGMax = 0.21344+8.905*_alphas;
EvtVubHybrid.cc:  const int aSize = 10000;
EvtVubHybrid.cc:  // pf is the cumulative distribution normalized to 1.
EvtVubHybrid.cc:      _pf[i] = _pf[i-1] + pFermi.getFPFermi(kplus);
EvtVubHybrid.cc:  for (int i=0; i<_pf.size(); i++) _pf[i]/=_pf[_pf.size()-1];
EvtVubHybrid.cc:  // read in weights (and rescale to range 0..1)
EvtVubHybrid.cc:  // R. Faccini 21/02/03
EvtVubHybrid.cc:  const double lp2epsilon=-10;
EvtVubHybrid.cc:    lepton=p->getDaug(1);
EvtVubHybrid.cc:    int tryit = 1;
EvtVubHybrid.cc:      p2 = pow(10,lp2epsilon*p2);
EvtVubHybrid.cc:	    if ( y > 1 ) report(WARNING,"EvtVubHybrid")
EvtVubHybrid.cc:	      <<"EvtVubHybrid decay probability > 1 found: " << y << endl;
EvtVubHybrid.cc:      double xran1 = EvtRandom::Flat();
EvtVubHybrid.cc:      double w = 1.0;
EvtVubHybrid.cc:      if ( w >= xran1 ) rew = false;
EvtVubHybrid.cc:  // now calculate a flat cos Theta_H [-1,1] distribution of the 
EvtVubHybrid.cc:  double ctH = EvtRandom::Flat(-1,1);
EvtVubHybrid.cc:  sttmp = sqrt(1-ctH*ctH);
EvtVubHybrid.cc:  p4.set(pHB[0],pHB[1],pHB[2],pHB[3]);
EvtVubHybrid.cc:    // tau = 1 ps corresponds to ctau = 0.3 mm -> in order to
EvtVubHybrid.cc:    // stay well below BaBars sensitivity we take q+/(10000 GeV) which 
EvtVubHybrid.cc:    // q+ = delta_ctau * 10000 GeV/mm * Mass_Xu/Energy_Xu     
EvtVubHybrid.cc:    xuhad->setLifetime(qplus/10000.);
EvtVubHybrid.cc:  double pWB[4] = {mB-Eh,-pHB[1],-pHB[2],-pHB[3]};
EvtVubHybrid.cc:  if ( ctL < -1 ) ctL = -1;
EvtVubHybrid.cc:  if ( ctL >  1 ) ctL =  1;
EvtVubHybrid.cc:  sttmp = sqrt(1-ctL*ctL);
EvtVubHybrid.cc:  double xW[3] = {-pWB[2],pWB[1],0};
EvtVubHybrid.cc:  double zW[3] = {pWB[1]/apWB,pWB[2]/apWB,pWB[3]/apWB};
EvtVubHybrid.cc:  double lx = sqrt(xW[0]*xW[0]+xW[1]*xW[1]);
EvtVubHybrid.cc:  double yW[3] = {-pWB[1]*pWB[3],-pWB[2]*pWB[3],pWB[1]*pWB[1]+pWB[2]*pWB[2]};
EvtVubHybrid.cc:  double ly = sqrt(yW[0]*yW[0]+yW[1]*yW[1]+yW[2]*yW[2]);
EvtVubHybrid.cc:    pLW[j+1] = sttmp*cos(phL)*ptmp*xW[j] 
EvtVubHybrid.cc:  //double pNW[4] = {sqrt(mW2)-pLW[0],-pLW[1],-pLW[2],-pLW[3]};
EvtVubHybrid.cc:  if ( ctLL >  1 ) ctLL =  1;
EvtVubHybrid.cc:  if ( ctLL < -1 ) ctLL = -1;
EvtVubHybrid.cc:  for (j=1;j<4;j++) {
EvtVubHybrid.cc:  p4.set(pLB[0],pLB[1],pLB[2],pLB[3]);
EvtVubHybrid.cc:  lepton->init( getDaug(1), p4);
EvtVubHybrid.cc:  p4.set(pNB[0],pNB[1],pNB[2],pNB[3]);
EvtVubHybrid.cc:  double oOverBins= 1.0/(float(_pf.size()));
EvtVubHybrid.cc:  while (nBinsAbove > nBinsBelow+1) {
EvtVubHybrid.cc:    middle = (nBinsAbove + nBinsBelow+1)>>1;
EvtVubHybrid.cc:    // of the range of that bin.  (Any value between k/N and (k+1)/N is 
EvtVubHybrid.cc:  int ibin_mX = -1;
EvtVubHybrid.cc:  int ibin_q2 = -1;
EvtVubHybrid.cc:  int ibin_El = -1;
EvtVubHybrid.cc:  // rescale weights (to be in range 0..1)
EvtVubHybrid.hh://      Copyright (C) 1998      Caltech, UCSB
EvtVubHybrid.hh://   Jochen Dingfelder February 1, 2005  Created Module as update of
EvtVubHybrid.hh:  double _a;      // Parameter for the Fermi Motion (1.29 is good)
EvtVubNLO.cc://      Copyright (C) 1998      Caltech, UCSB
EvtVubNLO.cc://    Riccardo Faccini       Feb. 11, 2004       
EvtVubNLO.cc:  _lbar=-1000;
EvtVubNLO.cc:  _mupi2=-1000;
EvtVubNLO.cc:  _b       	= getArg(1);
EvtVubNLO.cc:  _mui  	= 1.5;// GeV (scale)
EvtVubNLO.cc:  _idSF         = abs((int)getArg(4));// type of shape function 1: exponential (from Neubert)
EvtVubNLO.cc:  std::vector<double> sCoeffs(11);
EvtVubNLO.cc:  sCoeffs[10] = 1.;
EvtVubNLO.cc:  cout << " pdf 0.66, 1.32 , 4.32 "<<tripleDiff(0.66, 1.32 , 4.32)<<endl;
EvtVubNLO.cc:  cout << " pdf 0.52,1.02,2.01 "<<tripleDiff(0.52,1.02,2.01)<<endl;
EvtVubNLO.cc:  cout << " pdf 1.35,1.39,2.73 "<<tripleDiff(1.35,1.39,2.73)<<endl;
EvtVubNLO.cc:    if (i>0 && _masses[i] <= _masses[i-1]) {
EvtVubNLO.cc:   _dGMax = 150.;
EvtVubNLO.cc:  lepton=p->getDaug(1);
EvtVubNLO.cc:    pm= EvtRandom::Flat(0.,1);
EvtVubNLO.cc:    pm= pow(pm,1./3.)*_mB;
EvtVubNLO.cc:    pl = EvtRandom::Flat(0.,1);
EvtVubNLO.cc:      double xran1 = EvtRandom::Flat();
EvtVubNLO.cc:      double w = _weights[j-1]; 
EvtVubNLO.cc:      if ( w < xran1 ) tryit = true;// through away this candidate
EvtVubNLO.cc:  // now calculate a flat cos Theta_H [-1,1] distribution of the 
EvtVubNLO.cc:  double ctH = EvtRandom::Flat(-1,1);
EvtVubNLO.cc:  sttmp = sqrt(1-ctH*ctH);
EvtVubNLO.cc:  p4.set(pHB[0],pHB[1],pHB[2],pHB[3]);
EvtVubNLO.cc:  double pWB[4] = {_mB-Eh,-pHB[1],-pHB[2],-pHB[3]};
EvtVubNLO.cc:  //  if(mW2<0.1){
EvtVubNLO.cc:  if ( ctL < -1 ) ctL = -1;
EvtVubNLO.cc:  if ( ctL >  1 ) ctL =  1;
EvtVubNLO.cc:  sttmp = sqrt(1-ctL*ctL);
EvtVubNLO.cc:  double xW[3] = {-pWB[2],pWB[1],0};
EvtVubNLO.cc:  double zW[3] = {pWB[1]/apWB,pWB[2]/apWB,pWB[3]/apWB};
EvtVubNLO.cc:  double lx = sqrt(xW[0]*xW[0]+xW[1]*xW[1]);
EvtVubNLO.cc:  double yW[3] = {-pWB[1]*pWB[3],-pWB[2]*pWB[3],pWB[1]*pWB[1]+pWB[2]*pWB[2]};
EvtVubNLO.cc:  double ly = sqrt(yW[0]*yW[0]+yW[1]*yW[1]+yW[2]*yW[2]);
EvtVubNLO.cc:    pLW[j+1] = sttmp*cos(phL)*ptmp*xW[j] 
EvtVubNLO.cc:  if ( ctLL >  1 ) ctLL =  1;
EvtVubNLO.cc:  if ( ctLL < -1 ) ctLL = -1;
EvtVubNLO.cc:  for (j=1;j<4;j++) {
EvtVubNLO.cc:  p4.set(pLB[0],pLB[1],pLB[2],pLB[3]);
EvtVubNLO.cc:  lepton->init( getDaug(1), p4);
EvtVubNLO.cc:  p4.set(pNB[0],pNB[1],pNB[2],pNB[3]);
EvtVubNLO.cc:  std::vector<double> sCoeffs(11);
EvtVubNLO.cc:  sCoeffs[1] = pl;
EvtVubNLO.cc:  sCoeffs[10] =  _SFNorm; // SF normalization;
EvtVubNLO.cc:  double c1=(_mB+pl-pp-pm)*(pm-pl);
EvtVubNLO.cc:  double aF1=F10(sCoeffs);
EvtVubNLO.cc:  double td0=c1*aF1+c2*aF2+c3*aF3;
EvtVubNLO.cc:  EvtItgAbsIntegrator *jetSF = new EvtItgSimpsonIntegrator(*func,0.01,25);
EvtVubNLO.cc:  double smallfrac=0.000001;// stop a bit before the end to avoid problems with numerical integration
EvtVubNLO.cc:  double tdInt = jetSF->evaluate(0,pp*(1-smallfrac));
EvtVubNLO.cc:  double SU=U1lo(mu_h(),mu_i())*pow((pm-pp)/(_mB-pp),alo(mu_h(),mu_i()));
EvtVubNLO.cc:  double c1=(coeffs[5]+coeffs[1]-coeffs[0]-coeffs[2])*(coeffs[2]-coeffs[1]);
EvtVubNLO.cc:  double c2=2*(coeffs[1]-coeffs[0])*(coeffs[2]-coeffs[1]);
EvtVubNLO.cc:  return  c1*F1Int(omega,coeffs)+c2*F2Int(omega,coeffs)+c3*F3Int(omega,coeffs);  
EvtVubNLO.cc:EvtVubNLO::F10(const std::vector<double> &coeffs){
EvtVubNLO.cc:  double z=1-y;
EvtVubNLO.cc:  double result= U1nlo(muh,mui)/ U1lo(muh,mui);
EvtVubNLO.cc:  result += C_F(muh)*(-4*pow(log(y*coeffs[4]/muh),2)+10*log(y*coeffs[4]/muh)-4*log(y)-2*log(y)/(1-y)-4.0*ddilog_(&z)-pow(EvtConst::pi,2)/6.-12  );
EvtVubNLO.cc:  result +=  (-subS(coeffs)+2*subT(coeffs)+(subU(coeffs)-subV(coeffs))*(1/y-1.))/(coeffs[5]-pp);
EvtVubNLO.cc:  result += shapeFunction(pp,coeffs)/pow((coeffs[5]-coeffs[0]),2)*(-5*(lambda1()+3*lambda2())/6+2*(2*lambda1()/3-lambda2())/pow(y,2));
EvtVubNLO.cc:  //result += shapeFunction(pp,coeffs)/pow((coeffs[5]-coeffs[0]),2)*((lambda1()+3*lambda2())/6+2*(2*lambda1()/3-lambda2())/pow(y,2));
EvtVubNLO.cc:EvtVubNLO::F1Int(double omega,const std::vector<double> &coeffs){
EvtVubNLO.cc:			 (g1(y,(pp-omega)/(coeffs[5]-coeffs[0]))/(coeffs[5]-pp)*shapeFunction(omega,coeffs))
EvtVubNLO.cc:  double result= C_F(coeffs[8])*log(y)/(1-y)*shapeFunction(pp,coeffs)-
EvtVubNLO.cc:    1/y*(subS(coeffs)+2*subT(coeffs)-(subT(coeffs)+subV(coeffs))/y)/(coeffs[5]-pp);
EvtVubNLO.cc:  result += shapeFunction(pp,coeffs)/pow((coeffs[5]-coeffs[0])*y,2)*(2*lambda1()/3+4*lambda2()-y*(7/6*lambda1()+3*lambda2()));
EvtVubNLO.cc:  return shapeFunction(coeffs[0],coeffs)/pow((coeffs[5]-coeffs[0])*y,2)*(-2*lambda1()/3+lambda2());
EvtVubNLO.cc:EvtVubNLO::g1(double y, double x){
EvtVubNLO.cc:  double result=(y*(-9+10*y)+x*x*(-12+13*y)+2*x*(-8+6*y+3*y*y))/y/pow(1+x,2)/(x+y);
EvtVubNLO.cc:  result -= 4*log((1+1/x)*y)/x;
EvtVubNLO.cc:  result -=2*log(1+y/x)*(3*pow(x,4)*(-2+y)-2*pow(y,3)-4*pow(x,3)*(2+y)-2*x*y*y*(4+y)-x*x*y*(12+4*y+y*y))/x/pow((1+x)*y,2)/(x+y);
EvtVubNLO.cc:  double result=y*(10*pow(x,4)+y*y+3*x*x*y*(10+y)+pow(x,3)*(12+19*y)+x*y*(8+4*y+y*y));
EvtVubNLO.cc:  result -= 2*x*log(1+y/x)*(5*pow(x,4)+2*y*y+6*pow(x,3)*(1+2*y)+4*y*x*(1+2*y)+x*x*y*(18+5*y));
EvtVubNLO.cc:  result *= 2/(pow(y*(1+x),2)*y*(x+y));
EvtVubNLO.cc:  double result=(2*pow(y,3)*(-11+2*y)-10*pow(x,4)*(6-6*y+y*y)+x*y*y*(-94+29*y+2*y*y)+2*x*x*y*(-72+18*y+13*y*y)-pow(x,3)*(72+42*y-70*y*y+3*pow(y,3)))/(pow(y*(1+x),2)*y*(x+y));
EvtVubNLO.cc:  result += 2*log(1+y/x)*(-6*x*pow(y,3)*(-5+y)+4*pow(y,4)+5*pow(x,5)*(6-6*y+y*y)-4*pow(x*y,2)*(-20+6*y+y*y)+pow(x,3)*y*(90-10*y-28*y*y+pow(y,3))+pow(x,4)*(36+36*y-50*y*y+4*pow(y,3)))/(pow((1+x)*y*y,2)*(x+y));
EvtVubNLO.cc:EvtVubNLO::F1Int(double omega,const std::vector<double> &coeffs){
EvtVubNLO.cc:			 (1./y/(coeffs[5]-pp)*shapeFunction(omega,coeffs)*(5-6*y+4*(3-y)*log((pp-omega)/y/coeffs[4])))
EvtVubNLO.cc:  return C_F(coeffs[9])*shapeFunction(omega,coeffs)*(2-11/y-4/y*log((pp-omega)/y/coeffs[4]))/(coeffs[5]-pp);
EvtVubNLO.cc:  double omega0=1.68;//normalization scale (mB-2*1.8)
EvtVubNLO.cc:  if(_idSF==1){ // exponential SF
EvtVubNLO.cc:    double omega0=1.68;//normalization scale (mB-2*1.8)
EvtVubNLO.cc:    return M0(mu_i(),omega0)*2/lambda_SF()/pow(c,-(1+_b)/2.)/
EvtVubNLO.cc:      (Gamma((1+_b)/2)-Gamma((1+_b)/2,pow(omega0/lambda_SF(),2)*c));
EvtVubNLO.cc:    return -1;
EvtVubNLO.cc:  if( sCoeffs[6]==1){
EvtVubNLO.cc:    return sCoeffs[10]*expShapeFunction(omega, sCoeffs);
EvtVubNLO.cc:    return sCoeffs[10]*gausShapeFunction(omega, sCoeffs);
EvtVubNLO.cc:  return -1.;
EvtVubNLO.cc:EvtVubNLO::subS(const std::vector<double> &c){ return (lambda_bar(1.68)-c[0])*shapeFunction(c[0],c);}
EvtVubNLO.cc:EvtVubNLO::subT(const std::vector<double> &c){  return -3*lambda2()*subS(c)/mu_pi2(1.68);}
EvtVubNLO.cc:    if(_idSF==1){ // exponential SF
EvtVubNLO.cc:      _lbar=lambda_SF()/_b*(Gamma(1+_b)-Gamma(1+_b,rat))/(Gamma(_b)-Gamma(_b,rat));
EvtVubNLO.cc:      _lbar=lambda_SF()*(Gamma(1+_b/2)-Gamma(1+_b/2,pow(omega0/lambda_SF(),2)*c))/(Gamma((1+_b)/2)-Gamma((1+_b)/2,pow(omega0/lambda_SF(),2)*c))/sqrt(c);
EvtVubNLO.cc:    if(_idSF==1){ // exponential SF
EvtVubNLO.cc:      double m1=Gamma((3+_b)/2)-Gamma((3+_b)/2,pow(omega0/lambda_SF(),2)*c);
EvtVubNLO.cc:      double m2=Gamma(1+_b/2)-Gamma(1+_b/2,pow(omega0/lambda_SF(),2)*c);
EvtVubNLO.cc:      double m3=Gamma((1+_b)/2)-Gamma((1+_b)/2,pow(omega0/lambda_SF(),2)*c);
EvtVubNLO.cc:      _mupi2= 3*pow(lambda_SF(),2)*(m1/m3-pow(m2/m3,2))/c;
EvtVubNLO.cc:  return 1+4*C_F(mui)*(-pow(log(mf/mui),2)-log(mf/mui)-pow(EvtConst::pi/2,2)/6.+mu_pi2(omega0)/3/pow(mf,2)*(log(mf/mui)-0.5));
EvtVubNLO.cc:  return 4*EvtConst::pi/lg/beta0()*(1-beta1()*log(lg)/pow(beta0(),2)/lg+pow(beta1()/lg,2)/pow(beta0(),4)*(pow(log(lg)-0.5,2)-1.25+beta2()*beta0()/pow(beta1(),2)));
EvtVubNLO.cc:  return pow(wL,b-1)*exp(-b*wL);
EvtVubNLO.cc:  gammaCoeffs[0]=76.18009172947146;
EvtVubNLO.cc:  gammaCoeffs[1]=-86.50532032941677;
EvtVubNLO.cc:  gammaCoeffs[2]=24.01409824083091;
EvtVubNLO.cc:  gammaCoeffs[3]=-1.231739572450155;
EvtVubNLO.cc:  gammaCoeffs[4]=0.1208650973866179e-2;
EvtVubNLO.cc:  ser=1.000000000190015;
EvtVubNLO.cc:    y = y +1.0;
EvtVubNLO.cc:  return exp(-tmp+log(2.5066282746310005*ser/x));
EvtVubNLO.cc:  std::vector<double> c(1);
EvtVubNLO.cc:  EvtItgPtrFunction *func = new EvtItgPtrFunction(&dgamma, tmin, 100., c);
EvtVubNLO.cc:  EvtItgAbsIntegrator *jetSF = new EvtItgSimpsonIntegrator(*func,0.001);
EvtVubNLO.cc:  return jetSF->evaluate(tmin,100.);
EvtVubNLO.hh://      Copyright (C) 1998      Caltech, UCSB
EvtVubNLO.hh://   Sven Menke     January 17, 2001         Module created
EvtVubNLO.hh:  double _mui; // renormalization scale (preferred value=1.5 GeV)
EvtVubNLO.hh:  double F10(const std::vector<double> &coeffs);
EvtVubNLO.hh:  static double F1Int(double omega,const std::vector<double> &coeffs);
EvtVubNLO.hh:  static double g1(double y, double z);
EvtVubNLO.hh:  static double dgamma(double t, const std::vector<double> &c){  return pow(t,c[0]-1)*exp(-t);}
EvtVubNLO.hh:  inline double lambda1(){return -_mupi2;}
EvtVubNLO.hh:  static double beta0(int nf=4){return 11.-2./3.*nf;}
EvtVubNLO.hh:  static double beta1(int nf=4){return 34.*3.-38./3.*nf;}
EvtVubNLO.hh:  static double beta2(int nf=4){return 1428.5-5033./18.*nf+325./54.*nf*nf;}
EvtVubNLO.hh:  static double gamma0(){return 16./3.;}
EvtVubNLO.hh:  static double gamma1(int nf=4){return 4./3.*(49.85498-40./9.*nf);}
EvtVubNLO.hh:  static double gamma2(int nf=4){return 64./3.*(55.07242-8.58691*nf-nf*nf/27.);} /*  zeta3=1.20206 */
EvtVubNLO.hh:  static double gammap1(int nf=4){return -32./3.*(6.92653-0.9899*nf);} /* ??  zeta3=1.202 */
EvtVubNLO.hh:  inline double lambda2(){return 0.12;}
EvtVubNLO.hh:  static double cGaus(double b){return pow(Gamma(1+b/2.)/Gamma((1+b)/2.),2);}
EvtVubNLO.hh:  inline double S0(double a, double r){return -gamma0()/4/a/pow(beta0(),2)*(1/r-1+log(r));}
EvtVubNLO.hh:  inline double S1(double a, double r){return gamma0()/4./pow(beta0(),2)*(
EvtVubNLO.hh:								  pow(log(r),2)*beta1()/2./beta0()+(gamma1()/gamma0()-beta1()/beta0())*(1.-r+log(r))
EvtVubNLO.hh:									   -0.5*pow((1-r),2)*(
EvtVubNLO.hh:											 pow(beta1()/beta0(),2)-beta2()/beta0()-beta1()/beta0()*gamma1()/gamma0()+gamma2()/gamma0()
EvtVubNLO.hh:									   +(pow(beta1()/beta0(),2)-beta2()/beta0())*(1-r)*log(r)
EvtVubNLO.hh:									   +(beta1()/beta0()*gamma1()/gamma0()-beta2()/beta0())*(1-r+r*log(r))
EvtVubNLO.hh:  inline double dSudakovdepsi(double mu1, double mu2){return S2(alphas(mu1)/(4*EvtConst::pi),alphas(mu2)/alphas(mu1));}
EvtVubNLO.hh:  inline double Sudakov(double mu1, double mu2, double epsi=0){double fp(4*EvtConst::pi);return S0(alphas(mu1)/fp,alphas(mu2)/alphas(mu1))+S1(alphas(mu1)/fp,alphas(mu2)/alphas(mu1))+epsi*dSudakovdepsi(mu1,mu2);}
EvtVubNLO.hh:  inline double dGdepsi(double mu1, double mu2){return 1./8./EvtConst::pi*(alphas(mu2)-alphas(mu1))*(gamma1()/beta0()-beta1()*gamma0()/pow(beta0(),2));}
EvtVubNLO.hh:  inline double aGamma(double mu1, double mu2, double epsi=0){return gamma0()/2/beta0()*log(alphas(mu2)/alphas(mu1))+epsi*dGdepsi( mu1, mu2);}
EvtVubNLO.hh:  inline double dgpdepsi(double mu1, double mu2){return 1./8./EvtConst::pi*(alphas(mu2)-alphas(mu1))*(gammap1()/beta0()-beta1()*gammap0()/pow(beta0(),2));}
EvtVubNLO.hh:  inline double agammap(double mu1, double mu2, double epsi=0){return gammap0()/2/beta0()*log(alphas(mu2)/alphas(mu1))+epsi*dgpdepsi( mu1, mu2);}
EvtVubNLO.hh:  inline double U1(double mu1, double mu2, double epsi=0){return exp(2*(Sudakov(mu1,mu2,epsi)-agammap(mu1,mu2,epsi)-aGamma(mu1,mu2,epsi)*log(_mb/mu1)));}
EvtVubNLO.hh:  inline double U1lo(double mu1, double mu2){return U1(mu1,mu2);}
EvtVubNLO.hh:  inline double U1nlo(double mu1, double mu2){return U1(mu1,mu2)*(1+2*(dSudakovdepsi(mu1,mu2)-dgpdepsi( mu1, mu2)-log(_mb/mu1)*dGdepsi( mu1, mu2)));}
EvtVubNLO.hh:  inline double alo(double mu1, double mu2){return -2*aGamma(mu1,mu2);}
EvtVubNLO.hh:  inline double anlo(double mu1, double mu2){return -2*dGdepsi(mu1,mu2);}
EvtVVP.cc://      Copyright (C) 1998      Caltech, UCSB
EvtVVP.cc://              E.g., CHI1->PSI GAMMA
EvtVVP.cc://    RYD       September 5, 1997       Module created
EvtVVP.cc:  checkSpinDaughter(1,EvtSpinType::PHOTON);
EvtVVP.cc:  ph = p->getDaug(1);
EvtVVP.cc:  epsp[1]=p->eps(1).vec();
EvtVVP.cc:  epsv[1]=v->eps(1).vec().conj();
EvtVVP.cc:  epsph[1]=ph->epsParentPhoton(1).vec().conj();
EvtVVP.hh://      Copyright (C) 1998      Caltech, UCSB
EvtVVP.hh://    DJL/RYD     August 11, 1998         Module created
EvtVVpipi.cc://      Copyright (C) 1998      Caltech, UCSB
EvtVVpipi.cc://    RYD       December 11, 1999       Module created
EvtVVpipi.cc:  if ((!(getDaug(1)==PIP&&getDaug(2)==PIM))&&
EvtVVpipi.cc:      (!(getDaug(1)==PI0&&getDaug(2)==PI0))) {
EvtVVpipi.cc:  EvtParticle *v,*s1,*s2;
EvtVVpipi.cc:  s1=p->getDaug(1);
EvtVVpipi.cc:  EvtVector4C ep0,ep1,ep2;  
EvtVVpipi.cc:  ep1=p->eps(1);
EvtVVpipi.cc:  double fac=(s1->getP4()+s2->getP4()).mass2()-4*s1->mass()*s2->mass();
EvtVVpipi.cc:  vertex(0,1,fac*(ep0*v->epsParent(1).conj()));
EvtVVpipi.cc:  vertex(1,0,fac*(ep1*v->epsParent(0).conj()));
EvtVVpipi.cc:  vertex(1,1,fac*(ep1*v->epsParent(1).conj()));
EvtVVpipi.cc:  vertex(1,2,fac*(ep1*v->epsParent(2).conj()));
EvtVVpipi.cc:  vertex(2,1,fac*(ep2*v->epsParent(1).conj()));
EvtVVpipi.hh://      Copyright (C) 1998      Caltech, UCSB
EvtVVpipi.hh://    RYD/CAHN  December 10, 1999         Module created
EvtVVPIPI_WEIGHTED.cc://      Copyright (C) 1998      Caltech, UCSB
EvtVVPIPI_WEIGHTED.cc:  if ((!(getDaug(1)==PIP&&getDaug(2)==PIM))&&
EvtVVPIPI_WEIGHTED.cc:      (!(getDaug(1)==PI0&&getDaug(2)==PI0))) {
EvtVVPIPI_WEIGHTED.cc:  setProbMax(0.08* 1.13 );
EvtVVPIPI_WEIGHTED.cc:    pipi_mass *= 1000.0;
EvtVVPIPI_WEIGHTED.cc:        -3.6911336508223251 +
EvtVVPIPI_WEIGHTED.cc:        0.019119831948029617 * pipi_mass +
EvtVVPIPI_WEIGHTED.cc:        -1.8962883732377376e-05 * pipi_mass * pipi_mass
EvtVVPIPI_WEIGHTED.cc:  EvtParticle *jpsi,*pi1,*pi2;
EvtVVPIPI_WEIGHTED.cc:  pi1=psi_prime->getDaug(1);
EvtVVPIPI_WEIGHTED.cc:  EvtVector4C ep0,ep1,ep2;  
EvtVVPIPI_WEIGHTED.cc:  ep1=psi_prime->eps(1);
EvtVVPIPI_WEIGHTED.cc:  EvtVector4C e0,e1,e2;  
EvtVVPIPI_WEIGHTED.cc:  e1 = jpsi->epsParent(1);
EvtVVPIPI_WEIGHTED.cc:  double mass2 = (pi1->getP4()+pi2->getP4()).mass2();
EvtVVPIPI_WEIGHTED.cc:  double fac = mass2-4*pi1->mass()*pi2->mass();
EvtVVPIPI_WEIGHTED.cc:  vertex(0,1,fac*(ep0*e1.conj()));
EvtVVPIPI_WEIGHTED.cc:  vertex(1,0,fac*(ep1*e0.conj()));
EvtVVPIPI_WEIGHTED.cc:  vertex(1,1,fac*(ep1*e1.conj()));
EvtVVPIPI_WEIGHTED.cc:  vertex(1,2,fac*(ep1*e2.conj()));
EvtVVPIPI_WEIGHTED.cc:  vertex(2,1,fac*(ep2*e1.conj()));
EvtVVPIPI_WEIGHTED.hh://      Copyright (C) 1998      Caltech, UCSB
EvtVVS.cc:// Description: To define the helicity for vector(s=+1,-1)->vector(s=-1,0,1)+Pseudoscalar
EvtVVS.cc:   double mpsi=(_pd[0]+_pd[1]+_pd[2]).mass();
EvtVVS.cc:   if(i==1&& j==0) return temp;
EvtVVS.cc:   if(i==-1&& j==0) return -temp;
EvtVVS.cc: EvtComplex  VVS::amps1(int m,  int i, int j){
EvtVVS.cc:   double wrho=_res[1];
EvtVVS.cc:   EvtComplex img(0.0,1.0),dpro;
EvtVVS.cc:   double theta,phi,ct1,st1,phi1,st,ct;
EvtVVS.cc:   theta=angles.getHelAng(1);
EvtVVS.cc:   ct1 =labAngles.Angles(prho,1);
EvtVVS.cc:   phi1=labAngles.Angles(prho,2);
EvtVVS.cc:   for(lamb=-1;lamb<=1;lamb++) temp=temp+Fij(lamb,0,prho.d3mag())*Djmn(1,m,lamb,phi1,ct1,0.0)/dpro*R00(rpp)*Djmn(1,lamb,0,phi,theta,0.0); 
EvtVVS.cc: double r1=_par[0];
EvtVVS.cc: double phase1=_par[1];
EvtVVS.cc: for(m=-1;m<=1;m+=2) temp=temp+pow(abs(r1*exp(EvtComplex(0,phase1))*amps1(m,0,1)+r2*exp(EvtComplex(0,phase2))*amps1(m,0,2)+amps1(m,1,2)),2.);
EvtVVS.hh:// Description: To define the helicity for vector(s=+1,-1)->vector(s=-1,0,1)+Pseudoscalar 
EvtVVS.hh: VVS(EvtVector4R pd1, EvtVector4R pd2,EvtVector4R pd3,double ResonanceMass, double ResonanceWidth,double r1,double r2,double phase1,double phase2){
EvtVVS.hh://     For the decay 1-- -->R(1--) +Pseudoscalar-->3 Pseudoscalars
EvtVVS.hh://  pd1,pd2,pd3: four momentum vector for three daughters
EvtVVS.hh://   ResonanceMass,  ResonanceWidth : resonance parameter for intermediate state R(1--)
EvtVVS.hh://  r1,r2      : the relative coupling strength for two resonaces R R.P.T another R
EvtVVS.hh://  phase1,phase2: the relatev phase of two phases R.P.T another R
EvtVVS.hh: _pd[0]=pd1;
EvtVVS.hh: _pd[1]=pd2;
EvtVVS.hh: _res[1]=ResonanceWidth;
EvtVVS.hh: _par[0]=r1;
EvtVVS.hh: _par[1]=phase1;
EvtVVS.hh: EvtComplex  amps1(int m, int i, int j);
EvtVVSPwave.cc://      Copyright (C) 1998      Caltech, UCSB
EvtVVSPwave.cc://              by ryd on Aug 20, 1996.
EvtVVSPwave.cc://    RYD       November 24, 1996       Module created
EvtVVSPwave.cc:  checkSpinDaughter(1,EvtSpinType::SCALAR);
EvtVVSPwave.cc:  //probmax is 1.0 for all possible decays I think!
EvtVVSPwave.cc:   setProbMax(1.0);
EvtVVSPwave.cc:  EvtComplex as(getArg(0)*cos(getArg(1)),getArg(0)*sin(getArg(1)));
EvtVVSPwave.cc:  s=p->getDaug(1);
EvtVVSPwave.cc:  if (ap!=EvtComplex(0.0,0.0)) {  // implement P-wave  pingrg,2008-11-24
EvtVVSPwave.cc:  epi[1] = p->eps(1);
EvtVVSPwave.cc:  epf[1] = v->eps(1);
EvtVVSPwave.cc:  EvtVector3C p1(momv.get(1),momv.get(2),momv.get(3));
EvtVVSPwave.cc:  EvtVector3C ei0(epi[0].get(1),epi[0].get(2),epi[0].get(3));
EvtVVSPwave.cc:  EvtVector3C ei1(epi[1].get(1),epi[1].get(2),epi[1].get(3));
EvtVVSPwave.cc:  EvtVector3C ei2(epi[2].get(1),epi[2].get(2),epi[2].get(3));
EvtVVSPwave.cc:  EvtVector3C ef0(epf[0].get(1),epf[0].get(2),epf[0].get(3));
EvtVVSPwave.cc:  EvtVector3C ef1(epf[1].get(1),epf[1].get(2),epf[1].get(3));
EvtVVSPwave.cc:  EvtVector3C ef2(epf[2].get(1),epf[2].get(2),epf[2].get(3));
EvtVVSPwave.cc:  double norm = 1/momv.d3mag();
EvtVVSPwave.cc:  EvtVector3C q0 = p1.cross(ef0);
EvtVVSPwave.cc:  EvtVector3C q1 = p1.cross(ef1);
EvtVVSPwave.cc:  EvtVector3C q2 = p1.cross(ef2);
EvtVVSPwave.cc:  vertex(0,1,norm*ei0.conj()*q1);
EvtVVSPwave.cc:  vertex(1,0,norm*ei1.conj()*q0);
EvtVVSPwave.cc:  vertex(1,1,norm*ei1.conj()*q1);
EvtVVSPwave.cc:  vertex(1,2,norm*ei1.conj()*q2);
EvtVVSPwave.cc:  vertex(2,1,norm*ei2.conj()*q1);
EvtVVSPwave.cc:    //  s=p->getDaug(1);
EvtVVSPwave.cc:  g.setdiag(1.0,-1.0,-1.0,-1.0);
EvtVVSPwave.cc:  d=ad*((1.0/(v->getP4().d3mag()*v->getP4().d3mag()))*directProd(v->getP4(),v->getP4())+(1/3.0)*g)+
EvtVVSPwave.cc:  EvtVector4C ep0,ep1,ep2;  
EvtVVSPwave.cc:  ep0=d.cont1(p->eps(0));
EvtVVSPwave.cc:  ep1=d.cont1(p->eps(1));
EvtVVSPwave.cc:  ep2=d.cont1(p->eps(2));
EvtVVSPwave.cc:  vertex(0,1,ep0.cont(v->eps(1).conj()));
EvtVVSPwave.cc:  vertex(1,0,ep1.cont(v->eps(0).conj()));
EvtVVSPwave.cc:  vertex(1,1,ep1.cont(v->eps(1).conj()));
EvtVVSPwave.cc:  vertex(1,2,ep1.cont(v->eps(2).conj()));
EvtVVSPwave.cc:  vertex(2,1,ep2.cont(v->eps(1).conj()));
EvtVVSPwave.hh://      Copyright (C) 1998      Caltech, UCSB
EvtVVSPwave.hh://    DJL/RYD     August 11, 1998         Module created
fist.inc:      PARAMETER (FIST_NFS = 16)
fist.inc:      COMPLEX B(FIST_MIX),DPW1(FIST_MIX),DPW2(FIST_MIX)
fist.inc:      INTEGER NS1
fist.inc:      COMMON /DFMIX/ MSD,OMEGA,HEX,B,DPW1,DPW2,NS1
fist.inc:      PARAMETER (FIST_NP = 103)
fist.inc:      DOUBLE PRECISION D1(22*fist_np),F1(8*FIST_NP)
fist.inc:      EQUIVALENCE (D(1,1),D1(1)),(f(1,1),f1(1))
jetset1.F:C      Copyright (C) 1998      Caltech, UCSB
jetset1.F:C Module: jetset1.F
jetset1.F:C    DJL/RYD     August 11, 1998         Module created
jetset1.F:      subroutine jetset1(ip,m,ndaug,kf,km,px,py,pz,e)
jetset1.F:      COMMON/LUDAT1/MSTU(200),PARU(200),MSTJ(200),PARJ(200)
jetset1.F:      SAVE /LUDAT1/
jetset1.F:      parameter (ndmax=100)
jetset1.F:      integer kp,kid,ipart1,ipart
jetset1.F:      integer ip1
jetset1.F:c      used to use lu1ent both since it does not set the mass
jetset1.F:c      self. ryd April 25-1999
jetset1.F:c      call lu1ent(1,ip,0.0,0.0,0.0)
jetset1.F:      K(1,1)=1
jetset1.F:      K(1,2)=ip
jetset1.F:      P(1,5)=m
jetset1.F:      P(1,4)=m
jetset1.F:      P(1,1)=0.0
jetset1.F:      P(1,2)=0.0
jetset1.F:      P(1,3)=0.0
jetset1.F:      n=1
jetset1.F:      call ludecy(1)
jetset1.F:          IP1=MSTJ(92)
jetset1.F:          QMAX=SQRT(MAX(0.,(P(IP1,4)+P(IP1+1,4))**2-(P(IP1,1)+P(IP1+1,
jetset1.F:     &    1))**2-(P(IP1,2)+P(IP1+1,2))**2-(P(IP1,3)+P(IP1+1,3))**2))
jetset1.F:          CALL LUSHOW(IP1,IP1+1,QMAX)
jetset1.F:          CALL LUPREP(IP1)
jetset1.F:          IP1=-MSTJ(92)
jetset1.F:          CALL LUSHOW(IP1,-3,P(IP1,5))
jetset1.F:          CALL LUPREP(IP1)
jetset1.F:c      call lulist(1)
jetset1.F:      mstj(21)=0
jetset1.F:      mstj(21)=2
jetset1.F:      ipart1 = 1
jetset1.F:      ipart = 1
jetset1.F:      do 10 i=2,n
jetset1.F:        if (abs(kid) .ge. 1 .and. abs(kid) .le. 8
jetset1.F:     1  .or. kid .eq. 21
jetset1.F:     2  .or. kid .ge. 91 .and. kid .le. 94)  then
jetset1.F:           if (ipart1 .eq. 1) ipart1 = i
jetset1.F:           if (kp .ne. 1)  goto 10
jetset1.F:              goto 10
jetset1.F:           elseif (kp .ge. ipart1)  then
jetset1.F:              kp = ipart1-1
jetset1.F:        ndaug = ndaug + 1
jetset1.F:        px(ndaug)=p(i,1)
jetset1.F:c        print '( 2I5,I12,4F12.4 )',ndaug,km(ndaug),kf(ndaug),
jetset1.F:c     1    px(ndaug),py(ndaug),pz(ndaug),e(ndaug)
jetset1.F:   10 continue
jetset74.F:C*                                                 December 1993    ** 
jetset74.F:C*                    CERN/TH, CH-1211 Geneva 23                    ** 
jetset74.F:C*                    Tel. +41 - 22 - 767 28 20                     ** 
jetset74.F:C*        Copyright Torbjorn Sjostrand and CERN, Geneva 1993        ** 
jetset74.F:C  S   LU1ENT   to fill one entry (= parton or particle)             * 
jetset74.F:      SUBROUTINE LU1ENT(IP,KF,PE,THE,PHI) 
jetset74.F:      COMMON/LUDAT1/MSTU(200),PARU(200),MSTJ(200),PARJ(200) 
jetset74.F:      SAVE /LUJETS/,/LUDAT1/,/LUDAT2/ 
jetset74.F:      IF(MSTU(12).GE.1) CALL lulist(0) 
jetset74.F:      IPA=MAX(1,IABS(IP)) 
jetset74.F:      IF(IPA.GT.MSTU(4)) CALL LUERRM(21, 
jetset74.F:     &'(LU1ENT:) writing outside LUJETS memory') 
jetset74.F:      IF(KC.EQ.0) CALL LUERRM(12,'(LU1ENT:) unknown flavour code') 
jetset74.F:      IF(MSTU(10).EQ.1) PM=P(IPA,5) 
jetset74.F:      IF(MSTU(10).GE.2) PM=ULMASS(KF) 
jetset74.F:      DO 100 J=1,5 
jetset74.F:  100 CONTINUE 
jetset74.F:      K(IPA,1)=1 
jetset74.F:      IF(IP.LT.0) K(IPA,1)=2 
jetset74.F:      P(IPA,1)=PA*SIN(THE)*COS(PHI) 
jetset74.F:      SUBROUTINE LU2ENT(IP,KF1,KF2,PECM) 
jetset74.F:      COMMON/LUDAT1/MSTU(200),PARU(200),MSTJ(200),PARJ(200) 
jetset74.F:      SAVE /LUJETS/,/LUDAT1/,/LUDAT2/ 
jetset74.F:      IF(MSTU(12).GE.1) CALL lulist(0) 
jetset74.F:      IPA=MAX(1,IABS(IP)) 
jetset74.F:      IF(IPA.GT.MSTU(4)-1) CALL LUERRM(21, 
jetset74.F:      KC1=LUCOMP(KF1) 
jetset74.F:      IF(KC1.EQ.0.OR.KC2.EQ.0) CALL LUERRM(12, 
jetset74.F:      PM1=0. 
jetset74.F:      IF(MSTU(10).EQ.1) PM1=P(IPA,5) 
jetset74.F:      IF(MSTU(10).GE.2) PM1=ULMASS(KF1) 
jetset74.F:      IF(MSTU(10).EQ.1) PM2=P(IPA+1,5) 
jetset74.F:      IF(MSTU(10).GE.2) PM2=ULMASS(KF2) 
jetset74.F:      DO 110 I=IPA,IPA+1 
jetset74.F:      DO 100 J=1,5 
jetset74.F:  100 CONTINUE 
jetset74.F:  110 CONTINUE 
jetset74.F:      KQ1=KCHG(KC1,2)*ISIGN(1,KF1) 
jetset74.F:      KQ2=KCHG(KC2,2)*ISIGN(1,KF2) 
jetset74.F:      IF(MSTU(19).EQ.1) THEN 
jetset74.F:        MSTU(19)=0 
jetset74.F:        IF(KQ1+KQ2.NE.0.AND.KQ1+KQ2.NE.4) CALL LUERRM(2, 
jetset74.F:      K(IPA,2)=KF1 
jetset74.F:      K(IPA+1,2)=KF2 
jetset74.F:        K(IPA,1)=1 
jetset74.F:        IF(KQ1.NE.0.AND.KQ2.NE.0) K(IPA,1)=2 
jetset74.F:        K(IPA+1,1)=1 
jetset74.F:        K(IPA,1)=3 
jetset74.F:        K(IPA+1,1)=3 
jetset74.F:        K(IPA,4)=MSTU(5)*(IPA+1) 
jetset74.F:        K(IPA+1,4)=MSTU(5)*IPA 
jetset74.F:        K(IPA+1,5)=K(IPA+1,4) 
jetset74.F:      IF(PECM.LE.PM1+PM2) CALL LUERRM(13, 
jetset74.F:      PA=SQRT(MAX(0.,(PECM**2-PM1**2-PM2**2)**2-(2.*PM1*PM2)**2))/ 
jetset74.F:      P(IPA,4)=SQRT(PM1**2+PA**2) 
jetset74.F:      P(IPA,5)=PM1 
jetset74.F:      P(IPA+1,3)=-PA 
jetset74.F:      P(IPA+1,4)=SQRT(PM2**2+PA**2) 
jetset74.F:      P(IPA+1,5)=PM2 
jetset74.F:      N=IPA+1 
jetset74.F:      SUBROUTINE LU3ENT(IP,KF1,KF2,KF3,PECM,X1,X3) 
jetset74.F:      COMMON/LUDAT1/MSTU(200),PARU(200),MSTJ(200),PARJ(200) 
jetset74.F:      SAVE /LUJETS/,/LUDAT1/,/LUDAT2/ 
jetset74.F:      IF(MSTU(12).GE.1) CALL lulist(0) 
jetset74.F:      IPA=MAX(1,IABS(IP)) 
jetset74.F:      IF(IPA.GT.MSTU(4)-2) CALL LUERRM(21, 
jetset74.F:      KC1=LUCOMP(KF1) 
jetset74.F:      IF(KC1.EQ.0.OR.KC2.EQ.0.OR.KC3.EQ.0) CALL LUERRM(12, 
jetset74.F:      PM1=0. 
jetset74.F:      IF(MSTU(10).EQ.1) PM1=P(IPA,5) 
jetset74.F:      IF(MSTU(10).GE.2) PM1=ULMASS(KF1) 
jetset74.F:      IF(MSTU(10).EQ.1) PM2=P(IPA+1,5) 
jetset74.F:      IF(MSTU(10).GE.2) PM2=ULMASS(KF2) 
jetset74.F:      IF(MSTU(10).EQ.1) PM3=P(IPA+2,5) 
jetset74.F:      IF(MSTU(10).GE.2) PM3=ULMASS(KF3) 
jetset74.F:      DO 110 I=IPA,IPA+2 
jetset74.F:      DO 100 J=1,5 
jetset74.F:  100 CONTINUE 
jetset74.F:  110 CONTINUE 
jetset74.F:      KQ1=KCHG(KC1,2)*ISIGN(1,KF1) 
jetset74.F:      KQ2=KCHG(KC2,2)*ISIGN(1,KF2) 
jetset74.F:      KQ3=KCHG(KC3,2)*ISIGN(1,KF3) 
jetset74.F:      IF(MSTU(19).EQ.1) THEN 
jetset74.F:        MSTU(19)=0 
jetset74.F:      ELSEIF(KQ1.EQ.0.AND.KQ2.EQ.0.AND.KQ3.EQ.0) THEN 
jetset74.F:      ELSEIF(KQ1.NE.0.AND.KQ2.EQ.2.AND.(KQ1+KQ3.EQ.0.OR. 
jetset74.F:     &KQ1+KQ3.EQ.4)) THEN 
jetset74.F:      K(IPA,2)=KF1 
jetset74.F:      K(IPA+1,2)=KF2 
jetset74.F:        K(IPA,1)=1 
jetset74.F:        IF(KQ1.NE.0.AND.(KQ2.NE.0.OR.KQ3.NE.0)) K(IPA,1)=2 
jetset74.F:        K(IPA+1,1)=1 
jetset74.F:        IF(KQ2.NE.0.AND.KQ3.NE.0) K(IPA+1,1)=2 
jetset74.F:        K(IPA+2,1)=1 
jetset74.F:        K(IPA,1)=3 
jetset74.F:        K(IPA+1,1)=3 
jetset74.F:        K(IPA+2,1)=3 
jetset74.F:        IF(KQ1.EQ.-1) KCS=5 
jetset74.F:        K(IPA,KCS)=MSTU(5)*(IPA+1) 
jetset74.F:        K(IPA+1,KCS)=MSTU(5)*(IPA+2) 
jetset74.F:        K(IPA+1,9-KCS)=MSTU(5)*IPA 
jetset74.F:        K(IPA+2,9-KCS)=MSTU(5)*(IPA+1) 
jetset74.F:      IF(0.5*X1*PECM.LE.PM1.OR.0.5*(2.-X1-X3)*PECM.LE.PM2.OR. 
jetset74.F:     &0.5*X3*PECM.LE.PM3) MKERR=1 
jetset74.F:      PA1=SQRT(MAX(1E-10,(0.5*X1*PECM)**2-PM1**2)) 
jetset74.F:      PA2=SQRT(MAX(1E-10,(0.5*(2.-X1-X3)*PECM)**2-PM2**2)) 
jetset74.F:      PA3=SQRT(MAX(1E-10,(0.5*X3*PECM)**2-PM3**2)) 
jetset74.F:      CTHE2=(PA3**2-PA1**2-PA2**2)/(2.*PA1*PA2) 
jetset74.F:      CTHE3=(PA2**2-PA1**2-PA3**2)/(2.*PA1*PA3) 
jetset74.F:      IF(ABS(CTHE2).GE.1.001.OR.ABS(CTHE3).GE.1.001) MKERR=1 
jetset74.F:      CTHE3=MAX(-1.,MIN(1.,CTHE3)) 
jetset74.F:      IF(MKERR.NE.0) CALL LUERRM(13, 
jetset74.F:      P(IPA,3)=PA1 
jetset74.F:      P(IPA,4)=SQRT(PA1**2+PM1**2) 
jetset74.F:      P(IPA,5)=PM1 
jetset74.F:      P(IPA+2,1)=PA3*SQRT(1.-CTHE3**2) 
jetset74.F:      P(IPA+1,1)=-P(IPA+2,1) 
jetset74.F:      P(IPA+1,3)=-P(IPA,3)-P(IPA+2,3) 
jetset74.F:      P(IPA+1,4)=SQRT(P(IPA+1,1)**2+P(IPA+1,3)**2+PM2**2) 
jetset74.F:      P(IPA+1,5)=PM2 
jetset74.F:      SUBROUTINE LU4ENT(IP,KF1,KF2,KF3,KF4,PECM,X1,X2,X4,X12,X14) 
jetset74.F:      COMMON/LUDAT1/MSTU(200),PARU(200),MSTJ(200),PARJ(200) 
jetset74.F:      SAVE /LUJETS/,/LUDAT1/,/LUDAT2/ 
jetset74.F:      IF(MSTU(12).GE.1) CALL lulist(0) 
jetset74.F:      IPA=MAX(1,IABS(IP)) 
jetset74.F:      IF(IPA.GT.MSTU(4)-3) CALL LUERRM(21, 
jetset74.F:      KC1=LUCOMP(KF1) 
jetset74.F:      IF(KC1.EQ.0.OR.KC2.EQ.0.OR.KC3.EQ.0.OR.KC4.EQ.0) CALL LUERRM(12, 
jetset74.F:      PM1=0. 
jetset74.F:      IF(MSTU(10).EQ.1) PM1=P(IPA,5) 
jetset74.F:      IF(MSTU(10).GE.2) PM1=ULMASS(KF1) 
jetset74.F:      IF(MSTU(10).EQ.1) PM2=P(IPA+1,5) 
jetset74.F:      IF(MSTU(10).GE.2) PM2=ULMASS(KF2) 
jetset74.F:      IF(MSTU(10).EQ.1) PM3=P(IPA+2,5) 
jetset74.F:      IF(MSTU(10).GE.2) PM3=ULMASS(KF3) 
jetset74.F:      IF(MSTU(10).EQ.1) PM4=P(IPA+3,5) 
jetset74.F:      IF(MSTU(10).GE.2) PM4=ULMASS(KF4) 
jetset74.F:      DO 110 I=IPA,IPA+3 
jetset74.F:      DO 100 J=1,5 
jetset74.F:  100 CONTINUE 
jetset74.F:  110 CONTINUE 
jetset74.F:      KQ1=KCHG(KC1,2)*ISIGN(1,KF1) 
jetset74.F:      KQ2=KCHG(KC2,2)*ISIGN(1,KF2) 
jetset74.F:      KQ3=KCHG(KC3,2)*ISIGN(1,KF3) 
jetset74.F:      KQ4=KCHG(KC4,2)*ISIGN(1,KF4) 
jetset74.F:      IF(MSTU(19).EQ.1) THEN 
jetset74.F:        MSTU(19)=0 
jetset74.F:      ELSEIF(KQ1.EQ.0.AND.KQ2.EQ.0.AND.KQ3.EQ.0.AND.KQ4.EQ.0) THEN 
jetset74.F:      ELSEIF(KQ1.NE.0.AND.KQ2.EQ.2.AND.KQ3.EQ.2.AND.(KQ1+KQ4.EQ.0.OR. 
jetset74.F:     &KQ1+KQ4.EQ.4)) THEN 
jetset74.F:      ELSEIF(KQ1.NE.0.AND.KQ1+KQ2.EQ.0.AND.KQ3.NE.0.AND.KQ3+KQ4.EQ.0.) 
jetset74.F:      K(IPA,2)=KF1 
jetset74.F:      K(IPA+1,2)=KF2 
jetset74.F:        K(IPA,1)=1 
jetset74.F:        IF(KQ1.NE.0.AND.(KQ2.NE.0.OR.KQ3.NE.0.OR.KQ4.NE.0)) K(IPA,1)=2 
jetset74.F:        K(IPA+1,1)=1 
jetset74.F:        IF(KQ2.NE.0.AND.KQ1+KQ2.NE.0.AND.(KQ3.NE.0.OR.KQ4.NE.0)) 
jetset74.F:     &  K(IPA+1,1)=2 
jetset74.F:        K(IPA+2,1)=1 
jetset74.F:        IF(KQ3.NE.0.AND.KQ4.NE.0) K(IPA+2,1)=2 
jetset74.F:        K(IPA+3,1)=1 
jetset74.F:      ELSEIF(KQ1+KQ2.NE.0) THEN 
jetset74.F:        K(IPA,1)=3 
jetset74.F:        K(IPA+1,1)=3 
jetset74.F:        K(IPA+2,1)=3 
jetset74.F:        K(IPA+3,1)=3 
jetset74.F:        IF(KQ1.EQ.-1) KCS=5 
jetset74.F:        K(IPA,KCS)=MSTU(5)*(IPA+1) 
jetset74.F:        K(IPA+1,KCS)=MSTU(5)*(IPA+2) 
jetset74.F:        K(IPA+1,9-KCS)=MSTU(5)*IPA 
jetset74.F:        K(IPA+2,9-KCS)=MSTU(5)*(IPA+1) 
jetset74.F:        K(IPA,1)=3 
jetset74.F:        K(IPA+1,1)=3 
jetset74.F:        K(IPA+2,1)=3 
jetset74.F:        K(IPA+3,1)=3 
jetset74.F:        K(IPA,4)=MSTU(5)*(IPA+1) 
jetset74.F:        K(IPA+1,4)=MSTU(5)*IPA 
jetset74.F:        K(IPA+1,5)=K(IPA+1,4) 
jetset74.F:      IF(0.5*X1*PECM.LE.PM1.OR.0.5*X2*PECM.LE.PM2.OR.0.5*(2.-X1-X2-X4)* 
jetset74.F:     &PECM.LE.PM3.OR.0.5*X4*PECM.LE.PM4) MKERR=1 
jetset74.F:      PA1=SQRT(MAX(1E-10,(0.5*X1*PECM)**2-PM1**2)) 
jetset74.F:      PA2=SQRT(MAX(1E-10,(0.5*X2*PECM)**2-PM2**2)) 
jetset74.F:      PA4=SQRT(MAX(1E-10,(0.5*X4*PECM)**2-PM4**2)) 
jetset74.F:      X24=X1+X2+X4-1.-X12-X14+(PM3**2-PM1**2-PM2**2-PM4**2)/PECM**2 
jetset74.F:      CTHE4=(X1*X4-2.*X14)*PECM**2/(4.*PA1*PA4) 
jetset74.F:      IF(ABS(CTHE4).GE.1.002) MKERR=1 
jetset74.F:      CTHE4=MAX(-1.,MIN(1.,CTHE4)) 
jetset74.F:      STHE4=SQRT(1.-CTHE4**2) 
jetset74.F:      CTHE2=(X1*X2-2.*X12)*PECM**2/(4.*PA1*PA2) 
jetset74.F:      IF(ABS(CTHE2).GE.1.002) MKERR=1 
jetset74.F:      CTHE2=MAX(-1.,MIN(1.,CTHE2)) 
jetset74.F:      STHE2=SQRT(1.-CTHE2**2) 
jetset74.F:     &MAX(1E-8*PECM**2,4.*PA2*STHE2*PA4*STHE4) 
jetset74.F:      IF(ABS(CPHI2).GE.1.05) MKERR=1 
jetset74.F:      CPHI2=MAX(-1.,MIN(1.,CPHI2)) 
jetset74.F:      IF(MKERR.EQ.1) CALL LUERRM(13, 
jetset74.F:      P(IPA,3)=PA1 
jetset74.F:      P(IPA,4)=SQRT(PA1**2+PM1**2) 
jetset74.F:      P(IPA,5)=PM1 
jetset74.F:      P(IPA+3,1)=PA4*STHE4 
jetset74.F:      P(IPA+1,1)=PA2*STHE2*CPHI2 
jetset74.F:      P(IPA+1,2)=PA2*STHE2*SQRT(1.-CPHI2**2)*(-1.)**INT(RLU(0)+0.5) 
jetset74.F:      P(IPA+1,3)=PA2*CTHE2 
jetset74.F:      P(IPA+1,4)=SQRT(PA2**2+PM2**2) 
jetset74.F:      P(IPA+1,5)=PM2 
jetset74.F:      P(IPA+2,1)=-P(IPA+1,1)-P(IPA+3,1) 
jetset74.F:      P(IPA+2,2)=-P(IPA+1,2) 
jetset74.F:      P(IPA+2,3)=-P(IPA,3)-P(IPA+1,3)-P(IPA+3,3) 
jetset74.F:      P(IPA+2,4)=SQRT(P(IPA+2,1)**2+P(IPA+2,2)**2+P(IPA+2,3)**2+PM3**2) 
jetset74.F:      COMMON/LUDAT1/MSTU(200),PARU(200),MSTJ(200),PARJ(200) 
jetset74.F:      SAVE /LUJETS/,/LUDAT1/,/LUDAT2/ 
jetset74.F:      IF(NJOIN.LT.2) GOTO 120 
jetset74.F:      DO 100 IJN=1,NJOIN 
jetset74.F:      IF(I.LE.0.OR.I.GT.N) GOTO 120 
jetset74.F:      IF(K(I,1).LT.1.OR.K(I,1).GT.3) GOTO 120 
jetset74.F:      IF(KC.EQ.0) GOTO 120 
jetset74.F:      KQ=KCHG(KC,2)*ISIGN(1,K(I,2)) 
jetset74.F:      IF(KQ.EQ.0) GOTO 120 
jetset74.F:      IF(IJN.NE.1.AND.IJN.NE.NJOIN.AND.KQ.NE.2) GOTO 120 
jetset74.F:      IF(IJN.EQ.1) KQS=KQ 
jetset74.F:  100 CONTINUE 
jetset74.F:      IF(KQSUM.NE.0) GOTO 120 
jetset74.F:      DO 110 IJN=1,NJOIN 
jetset74.F:      K(I,1)=3 
jetset74.F:      IF(IJN.NE.1) IP=IJOIN(IJN-1) 
jetset74.F:      IF(IJN.EQ.1) IP=IJOIN(NJOIN) 
jetset74.F:      IF(IJN.NE.NJOIN) IN=IJOIN(IJN+1) 
jetset74.F:      IF(IJN.EQ.NJOIN) IN=IJOIN(1) 
jetset74.F:      IF(IJN.EQ.1.AND.KQS.NE.2) K(I,9-KCS)=0 
jetset74.F:  110 CONTINUE 
jetset74.F:  120 CALL LUERRM(12, 
jetset74.F:      COMMON/LUDAT1/MSTU(200),PARU(200),MSTJ(200),PARJ(200) 
jetset74.F:      COMMON/LUDATR/MRLU(6),RRLU(100) 
jetset74.F:      COMMON/PYINT1/MINT(400),VINT(400) 
jetset74.F:      COMMON/PYINT3/XSFX(2,-40:40),ISIG(1000,3),SIGH(1000) 
jetset74.F:      COMMON/PYINT4/WIDP(21:40,0:40),WIDE(21:40,0:40),WIDS(21:40,3) 
jetset74.F:      SAVE /LUJETS/,/LUDAT1/,/LUDAT2/,/LUDAT3/,/LUDAT4/,/LUDATR/ 
jetset74.F:      SAVE /PYSUBS/,/PYPARS/,/PYINT1/,/PYINT2/,/PYINT3/,/PYINT4/, 
jetset74.F:      CHARACTER CHIN*(*),CHFIX*104,CHBIT*104,CHOLD*8,CHNEW*8,CHOLD2*28, 
jetset74.F:     &CHNEW2*28,CHNAM*4,CHVAR(43)*4,CHALP(2)*26,CHIND*8,CHINI*10, 
jetset74.F:     &CHINR*16 
jetset74.F:      DATA ((MSVAR(I,J),J=1,8),I=1,43)/ 1,7*0,  1,2,1,4000,1,5,2*0, 
jetset74.F:     & 2,2,1,4000,1,5,2*0,  2,2,1,4000,1,5,2*0,  1,1,1,200,4*0, 
jetset74.F:     & 2,1,1,200,4*0,  1,1,1,200,4*0,  2,1,1,200,4*0, 
jetset74.F:     & 1,2,1,500,1,3,2*0,  2,2,1,500,1,4,2*0,  2,1,1,2000,4*0, 
jetset74.F:     & 2,2,1,4,1,4,2*0,  1,2,1,500,1,3,2*0,  1,2,1,2000,1,2,2*0, 
jetset74.F:     & 2,1,1,2000,4*0,  1,2,1,2000,1,5,2*0,  3,1,1,500,4*0, 
jetset74.F:     & 1,1,1,6,4*0,  2,1,1,100,4*0, 
jetset74.F:     & 1,7*0,  1,1,1,200,4*0,  1,2,1,2,-40,40,2*0,  2,1,1,200,4*0, 
jetset74.F:     & 1,1,1,200,4*0,  2,1,1,200,4*0,  1,1,1,200,4*0,  2,1,1,200,4*0, 
jetset74.F:     & 1,1,1,400,4*0,  2,1,1,400,4*0,  1,1,1,200,4*0, 
jetset74.F:     & 1,2,1,200,1,2,2*0,  2,2,1,200,1,20,2*0,  1,3,1,40,1,4,1,2, 
jetset74.F:     & 2,2,1,2,-40,40,2*0,  1,2,1,1000,1,3,2*0,  2,1,1,1000,4*0, 
jetset74.F:     & 2,2,21,40,0,40,2*0,  2,2,21,40,0,40,2*0,  2,2,21,40,1,3,2*0, 
jetset74.F:     & 1,2,0,200,1,3,2*0,  2,2,0,200,1,3,2*0,  4,1,0,200,4*0, 
jetset74.F:      IF(MSTU(12).GE.1) CALL lulist(0) 
jetset74.F:      LBIT=101 
jetset74.F:  100 LBIT=LBIT-1 
jetset74.F:      IF(CHBIT(LBIT:LBIT).EQ.' ') GOTO 100 
jetset74.F:      DO 110 LCOM=1,LBIT 
jetset74.F:      IF(CHBIT(LCOM:LCOM).EQ.' ') GOTO 110 
jetset74.F:      LTOT=LTOT+1 
jetset74.F:  110 CONTINUE 
jetset74.F:  120 LHIG=LLOW+1 
jetset74.F:  130 LHIG=LHIG+1 
jetset74.F:      IF(LHIG.LE.LTOT.AND.CHFIX(LHIG:LHIG).NE.';') GOTO 130 
jetset74.F:      LBIT=LHIG-LLOW-1 
jetset74.F:      CHBIT(1:LBIT)=CHFIX(LLOW+1:LHIG-1) 
jetset74.F:      LNAM=1 
jetset74.F:  140 LNAM=LNAM+1 
jetset74.F:     &LNAM.LE.4) GOTO 140 
jetset74.F:      CHNAM=CHBIT(1:LNAM-1)//' ' 
jetset74.F:      DO 160 LCOM=1,LNAM-1 
jetset74.F:      DO 150 LALP=1,26 
jetset74.F:      IF(CHNAM(LCOM:LCOM).EQ.CHALP(1)(LALP:LALP)) CHNAM(LCOM:LCOM)= 
jetset74.F:  150 CONTINUE 
jetset74.F:  160 CONTINUE 
jetset74.F:      DO 170 IV=1,43 
jetset74.F:  170 CONTINUE 
jetset74.F:        CALL LUERRM(18,'(LUGIVE:) do not recognize variable '//CHNAM) 
jetset74.F:        IF(LLOW.LT.LTOT) GOTO 120 
jetset74.F:      I1=0 
jetset74.F:  180   LIND=LIND+1 
jetset74.F:        IF(CHBIT(LIND:LIND).NE.')'.AND.CHBIT(LIND:LIND).NE.',') GOTO 180 
jetset74.F:        IF((CHBIT(LNAM+1:LNAM+1).EQ.'C'.OR.CHBIT(LNAM+1:LNAM+1).EQ.'c'). 
jetset74.F:     &  AND.(IVAR.EQ.9.OR.IVAR.EQ.10.OR.IVAR.EQ.13.OR.IVAR.EQ.17)) THEN 
jetset74.F:          CHIND(LNAM-LIND+11:8)=CHBIT(LNAM+2:LIND-1) 
jetset74.F:          I1=LUCOMP(KF) 
jetset74.F:        ELSEIF(CHBIT(LNAM+1:LNAM+1).EQ.'C'.OR.CHBIT(LNAM+1:LNAM+1).EQ. 
jetset74.F:          CALL LUERRM(18,'(LUGIVE:) not allowed to use C index for '// 
jetset74.F:          IF(LLOW.LT.LTOT) GOTO 120 
jetset74.F:          CHIND(LNAM-LIND+10:8)=CHBIT(LNAM+1:LIND-1) 
jetset74.F:          READ(CHIND,'(I8)') I1 
jetset74.F:        IF(CHBIT(LNAM:LNAM).EQ.')') LNAM=LNAM+1 
jetset74.F:        NINDX=1 
jetset74.F:  190   LIND=LIND+1 
jetset74.F:        IF(CHBIT(LIND:LIND).NE.')'.AND.CHBIT(LIND:LIND).NE.',') GOTO 190 
jetset74.F:        CHIND(LNAM-LIND+10:8)=CHBIT(LNAM+1:LIND-1) 
jetset74.F:        IF(CHBIT(LNAM:LNAM).EQ.')') LNAM=LNAM+1 
jetset74.F:  200   LIND=LIND+1 
jetset74.F:        CHIND(LNAM-LIND+10:8)=CHBIT(LNAM+1:LIND-1) 
jetset74.F:        LNAM=LIND+1 
jetset74.F:      IF(NINDX.NE.MSVAR(IVAR,2)) IERR=1 
jetset74.F:      IF(NINDX.GE.1.AND.(I1.LT.MSVAR(IVAR,3).OR.I1.GT.MSVAR(IVAR,4))) 
jetset74.F:      IF(IERR.GE.1) THEN 
jetset74.F:        CALL LUERRM(18,'(LUGIVE:) unallowed indices for '// 
jetset74.F:     &  CHBIT(1:LNAM-1)) 
jetset74.F:        IF(LLOW.LT.LTOT) GOTO 120 
jetset74.F:      IF(IVAR.EQ.1) THEN 
jetset74.F:        IOLD=K(I1,I2) 
jetset74.F:        ROLD=P(I1,I2) 
jetset74.F:        ROLD=V(I1,I2) 
jetset74.F:        IOLD=MSTU(I1) 
jetset74.F:        ROLD=PARU(I1) 
jetset74.F:        IOLD=MSTJ(I1) 
jetset74.F:        ROLD=PARJ(I1) 
jetset74.F:        IOLD=KCHG(I1,I2) 
jetset74.F:      ELSEIF(IVAR.EQ.10) THEN 
jetset74.F:        ROLD=PMAS(I1,I2) 
jetset74.F:      ELSEIF(IVAR.EQ.11) THEN 
jetset74.F:        ROLD=PARF(I1) 
jetset74.F:      ELSEIF(IVAR.EQ.12) THEN 
jetset74.F:        ROLD=VCKM(I1,I2) 
jetset74.F:      ELSEIF(IVAR.EQ.13) THEN 
jetset74.F:        IOLD=MDCY(I1,I2) 
jetset74.F:      ELSEIF(IVAR.EQ.14) THEN 
jetset74.F:        IOLD=MDME(I1,I2) 
jetset74.F:      ELSEIF(IVAR.EQ.15) THEN 
jetset74.F:        ROLD=BRAT(I1) 
jetset74.F:      ELSEIF(IVAR.EQ.16) THEN 
jetset74.F:        IOLD=KFDP(I1,I2) 
jetset74.F:      ELSEIF(IVAR.EQ.17) THEN 
jetset74.F:        CHOLD=CHAF(I1) 
jetset74.F:      ELSEIF(IVAR.EQ.18) THEN 
jetset74.F:        IOLD=MRLU(I1) 
jetset74.F:      ELSEIF(IVAR.EQ.19) THEN 
jetset74.F:        ROLD=RRLU(I1) 
jetset74.F:      ELSEIF(IVAR.EQ.21) THEN 
jetset74.F:        IOLD=MSUB(I1) 
jetset74.F:        IOLD=KFIN(I1,I2) 
jetset74.F:        ROLD=CKIN(I1) 
jetset74.F:        IOLD=MSTP(I1) 
jetset74.F:        ROLD=PARP(I1) 
jetset74.F:        IOLD=MSTI(I1) 
jetset74.F:        ROLD=PARI(I1) 
jetset74.F:        IOLD=MINT(I1) 
jetset74.F:        ROLD=VINT(I1) 
jetset74.F:        IOLD=ISET(I1) 
jetset74.F:      ELSEIF(IVAR.EQ.31) THEN 
jetset74.F:        IOLD=KFPR(I1,I2) 
jetset74.F:        ROLD=COEF(I1,I2) 
jetset74.F:        IOLD=ICOL(I1,I2,I3) 
jetset74.F:        ROLD=XSFX(I1,I2) 
jetset74.F:        IOLD=ISIG(I1,I2) 
jetset74.F:        ROLD=SIGH(I1) 
jetset74.F:        ROLD=WIDP(I1,I2) 
jetset74.F:        ROLD=WIDE(I1,I2) 
jetset74.F:        ROLD=WIDS(I1,I2) 
jetset74.F:        IOLD=NGEN(I1,I2) 
jetset74.F:      ELSEIF(IVAR.EQ.41) THEN 
jetset74.F:        ROLD=XSEC(I1,I2) 
jetset74.F:        CHOLD2=PROC(I1) 
jetset74.F:        ROLD=SIGT(I1,I2,I3) 
jetset74.F:        CHBIT(LNAM:14)=' ' 
jetset74.F:        CHBIT(15:60)=' has the value                                ' 
jetset74.F:        IF(MSVAR(IVAR,1).EQ.1) THEN 
jetset74.F:          WRITE(CHBIT(51:60),'(I10)') IOLD 
jetset74.F:        ELSEIF(MSVAR(IVAR,1).EQ.2) THEN 
jetset74.F:          WRITE(CHBIT(47:60),'(F14.5)') ROLD 
jetset74.F:        ELSEIF(MSVAR(IVAR,1).EQ.3) THEN 
jetset74.F:        IF(MSTU(13).GE.1) WRITE(MSTU(11),5000) CHBIT(1:60) 
jetset74.F:        IF(LLOW.LT.LTOT) GOTO 120 
jetset74.F:      IF(MSVAR(IVAR,1).EQ.1) THEN 
jetset74.F:        CHINI(LNAM-LBIT+11:10)=CHBIT(LNAM+1:LBIT) 
jetset74.F:        READ(CHINI,'(I10)') INEW 
jetset74.F:      ELSEIF(MSVAR(IVAR,1).EQ.2) THEN 
jetset74.F:        CHINR(LNAM-LBIT+17:16)=CHBIT(LNAM+1:LBIT) 
jetset74.F:        READ(CHINR,'(F16.2)') RNEW 
jetset74.F:      ELSEIF(MSVAR(IVAR,1).EQ.3) THEN 
jetset74.F:        CHNEW=CHBIT(LNAM+1:LBIT)//' ' 
jetset74.F:        CHNEW2=CHBIT(LNAM+1:LBIT)//' ' 
jetset74.F:      IF(IVAR.EQ.1) THEN 
jetset74.F:        K(I1,I2)=INEW 
jetset74.F:        P(I1,I2)=RNEW 
jetset74.F:        V(I1,I2)=RNEW 
jetset74.F:        MSTU(I1)=INEW 
jetset74.F:        PARU(I1)=RNEW 
jetset74.F:        MSTJ(I1)=INEW 
jetset74.F:        PARJ(I1)=RNEW 
jetset74.F:        KCHG(I1,I2)=INEW 
jetset74.F:      ELSEIF(IVAR.EQ.10) THEN 
jetset74.F:        PMAS(I1,I2)=RNEW 
jetset74.F:      ELSEIF(IVAR.EQ.11) THEN 
jetset74.F:        PARF(I1)=RNEW 
jetset74.F:      ELSEIF(IVAR.EQ.12) THEN 
jetset74.F:        VCKM(I1,I2)=RNEW 
jetset74.F:      ELSEIF(IVAR.EQ.13) THEN 
jetset74.F:        MDCY(I1,I2)=INEW 
jetset74.F:      ELSEIF(IVAR.EQ.14) THEN 
jetset74.F:        MDME(I1,I2)=INEW 
jetset74.F:      ELSEIF(IVAR.EQ.15) THEN 
jetset74.F:        BRAT(I1)=RNEW 
jetset74.F:      ELSEIF(IVAR.EQ.16) THEN 
jetset74.F:        KFDP(I1,I2)=INEW 
jetset74.F:      ELSEIF(IVAR.EQ.17) THEN 
jetset74.F:        CHAF(I1)=CHNEW 
jetset74.F:      ELSEIF(IVAR.EQ.18) THEN 
jetset74.F:        MRLU(I1)=INEW 
jetset74.F:      ELSEIF(IVAR.EQ.19) THEN 
jetset74.F:        RRLU(I1)=RNEW 
jetset74.F:      ELSEIF(IVAR.EQ.21) THEN 
jetset74.F:        MSUB(I1)=INEW 
jetset74.F:        KFIN(I1,I2)=INEW 
jetset74.F:        CKIN(I1)=RNEW 
jetset74.F:        MSTP(I1)=INEW 
jetset74.F:        PARP(I1)=RNEW 
jetset74.F:        MSTI(I1)=INEW 
jetset74.F:        PARI(I1)=RNEW 
jetset74.F:        MINT(I1)=INEW 
jetset74.F:        VINT(I1)=RNEW 
jetset74.F:        ISET(I1)=INEW 
jetset74.F:      ELSEIF(IVAR.EQ.31) THEN 
jetset74.F:        KFPR(I1,I2)=INEW 
jetset74.F:        COEF(I1,I2)=RNEW 
jetset74.F:        ICOL(I1,I2,I3)=INEW 
jetset74.F:        XSFX(I1,I2)=RNEW 
jetset74.F:        ISIG(I1,I2)=INEW 
jetset74.F:        SIGH(I1)=RNEW 
jetset74.F:        WIDP(I1,I2)=RNEW 
jetset74.F:        WIDE(I1,I2)=RNEW 
jetset74.F:        WIDS(I1,I2)=RNEW 
jetset74.F:        NGEN(I1,I2)=INEW 
jetset74.F:      ELSEIF(IVAR.EQ.41) THEN 
jetset74.F:        XSEC(I1,I2)=RNEW 
jetset74.F:        PROC(I1)=CHNEW2 
jetset74.F:        SIGT(I1,I2,I3)=RNEW 
jetset74.F:      CHBIT(LNAM:14)=' ' 
jetset74.F:      CHBIT(15:60)=' changed from                to               ' 
jetset74.F:      IF(MSVAR(IVAR,1).EQ.1) THEN 
jetset74.F:        WRITE(CHBIT(33:42),'(I10)') IOLD 
jetset74.F:        WRITE(CHBIT(51:60),'(I10)') INEW 
jetset74.F:        IF(MSTU(13).GE.1) WRITE(MSTU(11),5000) CHBIT(1:60) 
jetset74.F:      ELSEIF(MSVAR(IVAR,1).EQ.2) THEN 
jetset74.F:        WRITE(CHBIT(29:42),'(F14.5)') ROLD 
jetset74.F:        WRITE(CHBIT(47:60),'(F14.5)') RNEW 
jetset74.F:        IF(MSTU(13).GE.1) WRITE(MSTU(11),5000) CHBIT(1:60) 
jetset74.F:      ELSEIF(MSVAR(IVAR,1).EQ.3) THEN 
jetset74.F:        IF(MSTU(13).GE.1) WRITE(MSTU(11),5000) CHBIT(1:60) 
jetset74.F:        CHBIT(15:88)=' changed from '//CHOLD2//' to '//CHNEW2 
jetset74.F:        IF(MSTU(13).GE.1) WRITE(MSTU(11),5100) CHBIT(1:88) 
jetset74.F:      IF(LLOW.LT.LTOT) GOTO 120 
jetset74.F:C...Format statement for output on unit MSTU(11) (by default 6). 
jetset74.F: 5100 FORMAT(5X,A88) 
jetset74.F:      COMMON/LUDAT1/MSTU(200),PARU(200),MSTJ(200),PARJ(200) 
jetset74.F:      SAVE /LUJETS/,/LUDAT1/,/LUDAT2/,/LUDAT3/ 
jetset74.F:      IF(MSTU(12).GE.1) CALL lulist(0) 
jetset74.F:      MSTU(31)=MSTU(31)+1 
jetset74.F:      MSTU(1)=0 
jetset74.F:      IF(MSTU(17).LE.0) MSTU(90)=0 
jetset74.F:      MCONS=1 
jetset74.F:      DO 110 I=1,2 
jetset74.F:      DO 100 J=1,6 
jetset74.F:  100 CONTINUE 
jetset74.F:  110 CONTINUE 
jetset74.F:      DO 130 I=1,N 
jetset74.F:      IF(K(I,1).LE.0.OR.K(I,1).GT.10) GOTO 130 
jetset74.F:      DO 120 J=1,4 
jetset74.F:      PS(1,J)=PS(1,J)+P(I,J) 
jetset74.F:  120 CONTINUE 
jetset74.F:      PS(1,6)=PS(1,6)+LUCHGE(K(I,2)) 
jetset74.F:  130 CONTINUE 
jetset74.F:      PARU(21)=PS(1,4) 
jetset74.F:  140 MBE=MBE+1 
jetset74.F:  150 IP=IP+1 
jetset74.F:      IF(K(IP,1).GT.0.AND.K(IP,1).LE.10) KC=LUCOMP(K(IP,2)) 
jetset74.F:        IF(MSTJ(21).GE.1.AND.MDCY(KC,1).GE.1.AND.(MSTJ(51).LE.0.OR.MBE 
jetset74.F:     &  .EQ.2.OR.PMAS(KC,2).GE.PARJ(91).OR.IABS(K(IP,2)).EQ.311)) 
jetset74.F:          IP1=MSTJ(92) 
jetset74.F:          QMAX=SQRT(MAX(0.,(P(IP1,4)+P(IP1+1,4))**2-(P(IP1,1)+P(IP1+1, 
jetset74.F:     &    1))**2-(P(IP1,2)+P(IP1+1,2))**2-(P(IP1,3)+P(IP1+1,3))**2)) 
jetset74.F:          CALL LUSHOW(IP1,IP1+1,QMAX) 
jetset74.F:          CALL LUPREP(IP1) 
jetset74.F:          IP1=-MSTJ(92) 
jetset74.F:          CALL LUSHOW(IP1,-3,P(IP,5)) 
jetset74.F:          CALL LUPREP(IP1) 
jetset74.F:      ELSEIF(K(IP,1).EQ.1.OR.K(IP,1).EQ.2) THEN 
jetset74.F:        MFRAG=MSTJ(1) 
jetset74.F:        IF(MFRAG.GE.1.AND.K(IP,1).EQ.1) MFRAG=2 
jetset74.F:        IF(MSTJ(21).GE.2.AND.K(IP,1).EQ.2.AND.N.GT.IP) THEN 
jetset74.F:          IF(K(IP+1,1).EQ.1.AND.K(IP+1,3).EQ.K(IP,3).AND. 
jetset74.F:            IF(KCHG(LUCOMP(K(K(IP,3),2)),2).EQ.0) MFRAG=MIN(1,MFRAG) 
jetset74.F:        IF(MFRAG.EQ.1) CALL LUSTRF(IP) 
jetset74.F:        IF(MFRAG.EQ.2.AND.K(IP,1).EQ.1) MCONS=0 
jetset74.F:      IF(MSTU(24).NE.0.AND.MSTU(21).GE.2) THEN 
jetset74.F:        GOTO 150 
jetset74.F:        CALL LUERRM(11,'(LUEXEC:) no more memory left in LUJETS') 
jetset74.F:      IF(MBE.EQ.1.AND.MSTJ(51).GE.1) THEN 
jetset74.F:        GOTO 140 
jetset74.F:      DO 170 I=1,N 
jetset74.F:      IF(K(I,1).LE.0.OR.K(I,1).GT.10) GOTO 170 
jetset74.F:      DO 160 J=1,4 
jetset74.F:  160 CONTINUE 
jetset74.F:  170 CONTINUE 
jetset74.F:      PDEV=(ABS(PS(2,1)-PS(1,1))+ABS(PS(2,2)-PS(1,2))+ABS(PS(2,3)- 
jetset74.F:     &PS(1,3))+ABS(PS(2,4)-PS(1,4)))/(1.+ABS(PS(2,4))+ABS(PS(1,4))) 
jetset74.F:      IF(MCONS.EQ.1.AND.PDEV.GT.PARU(11)) CALL LUERRM(15, 
jetset74.F:      IF(MCONS.EQ.1.AND.ABS(PS(2,6)-PS(1,6)).GT.0.1) CALL LUERRM(15, 
jetset74.F:      COMMON/LUDAT1/MSTU(200),PARU(200),MSTJ(200),PARJ(200) 
jetset74.F:      SAVE /LUJETS/,/LUDAT1/,/LUDAT2/,/LUDAT3/ 
jetset74.F:      I1=N 
jetset74.F:      DO 130 MQGST=1,2 
jetset74.F:      DO 120 I=MAX(1,IP),N 
jetset74.F:      IF(K(I,1).NE.3) GOTO 120 
jetset74.F:      IF(KC.EQ.0) GOTO 120 
jetset74.F:      IF(KQ.EQ.0.OR.(MQGST.EQ.1.AND.KQ.EQ.2)) GOTO 120 
jetset74.F:      IF(KQ*ISIGN(1,K(I,2)).LT.0) KCS=5 
jetset74.F:  100 NSTP=NSTP+1 
jetset74.F:        CALL LUERRM(14,'(LUPREP:) caught in infinite loop') 
jetset74.F:      IF(K(IA,1).EQ.3) THEN 
jetset74.F:        IF(I1.GE.MSTU(4)-MSTU(32)-5) THEN 
jetset74.F:          CALL LUERRM(11,'(LUPREP:) no more memory left in LUJETS') 
jetset74.F:        I1=I1+1 
jetset74.F:        K(I1,1)=2 
jetset74.F:        IF(NSTP.GE.2.AND.IABS(K(IA,2)).NE.21) K(I1,1)=1 
jetset74.F:        K(I1,2)=K(IA,2) 
jetset74.F:        K(I1,3)=IA 
jetset74.F:        K(I1,4)=0 
jetset74.F:        K(I1,5)=0 
jetset74.F:        DO 110 J=1,5 
jetset74.F:        P(I1,J)=P(IA,J) 
jetset74.F:        V(I1,J)=V(IA,J) 
jetset74.F:  110   CONTINUE 
jetset74.F:        K(IA,1)=K(IA,1)+10 
jetset74.F:        IF(K(I1,1).EQ.1) GOTO 120 
jetset74.F:        MREV=1 
jetset74.F:        CALL LUERRM(12,'(LUPREP:) colour rearrangement failed') 
jetset74.F:        IF(MREV.EQ.1) KCS=9-KCS 
jetset74.F:      IF(IA.NE.I) GOTO 100 
jetset74.F:      K(I1,1)=1 
jetset74.F:  120 CONTINUE 
jetset74.F:  130 CONTINUE 
jetset74.F:      N=I1 
jetset74.F:      IF(MSTJ(14).LT.0) RETURN 
jetset74.F:      IF(MSTJ(14).EQ.0) GOTO 320 
jetset74.F:  140 NSIN=N-NS 
jetset74.F:      PDM=1.+PARJ(32) 
jetset74.F:      DO 190 I=MAX(1,IP),NS 
jetset74.F:      IF(K(I,1).NE.1.AND.K(I,1).NE.2) THEN 
jetset74.F:      ELSEIF(K(I,1).EQ.2.AND.IC.EQ.0) THEN 
jetset74.F:        NSIN=NSIN+1 
jetset74.F:        DO 150 J=1,4 
jetset74.F:  150   CONTINUE 
jetset74.F:        MSTJ(93)=1 
jetset74.F:      ELSEIF(K(I,1).EQ.2) THEN 
jetset74.F:        DO 160 J=1,4 
jetset74.F:  160   CONTINUE 
jetset74.F:        DO 170 J=1,4 
jetset74.F:  170   CONTINUE 
jetset74.F:        MSTJ(93)=1 
jetset74.F:        PD=SQRT(MAX(0D0,DPS(4)**2-DPS(1)**2-DPS(2)**2-DPS(3)**2))-DPS(5) 
jetset74.F:          DO 180 J=1,5 
jetset74.F:  180     CONTINUE 
jetset74.F:          IC1=IC 
jetset74.F:        NSIN=NSIN+1 
jetset74.F:  190 CONTINUE 
jetset74.F:      PECM=SQRT(MAX(0D0,DPC(4)**2-DPC(1)**2-DPC(2)**2-DPC(3)**2)) 
jetset74.F:      K(N+1,1)=11 
jetset74.F:      K(N+1,2)=91 
jetset74.F:      K(N+1,3)=IC1 
jetset74.F:      K(N+1,4)=N+2 
jetset74.F:      K(N+1,5)=N+3 
jetset74.F:      P(N+1,1)=DPC(1) 
jetset74.F:      P(N+1,2)=DPC(2) 
jetset74.F:      P(N+1,3)=DPC(3) 
jetset74.F:      P(N+1,4)=DPC(4) 
jetset74.F:      P(N+1,5)=PECM 
jetset74.F:      K(N+2,1)=1 
jetset74.F:      K(N+3,1)=1 
jetset74.F:      IF(MSTU(16).NE.2) THEN 
jetset74.F:        K(N+2,3)=N+1 
jetset74.F:        K(N+3,3)=N+1 
jetset74.F:        K(N+2,3)=IC1 
jetset74.F:      IF(IABS(K(IC1,2)).NE.21) THEN 
jetset74.F:        KC1=LUCOMP(K(IC1,2)) 
jetset74.F:        IF(KC1.EQ.0.OR.KC2.EQ.0) GOTO 320 
jetset74.F:        KQ1=KCHG(KC1,2)*ISIGN(1,K(IC1,2)) 
jetset74.F:        KQ2=KCHG(KC2,2)*ISIGN(1,K(IC2,2)) 
jetset74.F:        IF(KQ1+KQ2.NE.0) GOTO 320 
jetset74.F:  200   CALL LUKFDI(K(IC1,2),0,KFLN,K(N+2,2)) 
jetset74.F:        IF(IABS(K(IC2,2)).NE.21) GOTO 320 
jetset74.F:  210   CALL LUKFDI(1+INT((2.+PARJ(2))*RLU(0)),0,KFLN,KFDMP) 
jetset74.F:        IF(K(N+2,2).EQ.0.OR.K(N+3,2).EQ.0) GOTO 210 
jetset74.F:      IF(P(N+2,5)+P(N+3,5)+PARJ(64).GE.PECM.AND.NSIN.EQ.1) GOTO 320 
jetset74.F:        UE(3)=2.*RLU(0)-1. 
jetset74.F:        UE(1)=SQRT(1.-UE(3)**2)*COS(PHI) 
jetset74.F:        UE(2)=SQRT(1.-UE(3)**2)*SIN(PHI) 
jetset74.F:        DO 220 J=1,3 
jetset74.F:        MSTU(33)=1 
jetset74.F:        CALL LUDBRB(N+2,N+3,0.,0.,DPC(1)/DPC(4),DPC(2)/DPC(4), 
jetset74.F:        DO 230 I=IC1,IC2 
jetset74.F:        IF(K(I,1).EQ.1.OR.K(I,1).EQ.2) NP=NP+1 
jetset74.F:        HA=P(IC1,4)*P(IC2,4)-P(IC1,1)*P(IC2,1)-P(IC1,2)*P(IC2,2)- 
jetset74.F:     &  P(IC1,3)*P(IC2,3) 
jetset74.F:        IF(NP.GE.3.OR.HA.LE.1.25*P(IC1,5)*P(IC2,5)) GOTO 260 
jetset74.F:        HD1=0.5*(P(N+2,5)**2-P(IC1,5)**2) 
jetset74.F:        HR=SQRT(MAX(0.,((HA-HD1-HD2)**2-(P(N+2,5)*P(N+3,5))**2)/ 
jetset74.F:     &  (HA**2-(P(IC1,5)*P(IC2,5))**2)))-1. 
jetset74.F:        HC=P(IC1,5)**2+2.*HA+P(IC2,5)**2 
jetset74.F:        HK1=((P(IC2,5)**2+HA)*HR+HD1-HD2)/HC 
jetset74.F:        HK2=((P(IC1,5)**2+HA)*HR+HD2-HD1)/HC 
jetset74.F:        DO 240 J=1,4 
jetset74.F:        P(N+2,J)=(1.+HK1)*P(IC1,J)-HK2*P(IC2,J) 
jetset74.F:        P(N+3,J)=(1.+HK2)*P(IC2,J)-HK1*P(IC1,J) 
jetset74.F:      DO 250 J=1,4 
jetset74.F:      V(N+1,J)=V(IC1,J) 
jetset74.F:      V(N+2,J)=V(IC1,J) 
jetset74.F:      V(N+1,5)=0. 
jetset74.F:  260 K(N+1,5)=N+2 
jetset74.F:      IF(IABS(K(IC1,2)).GT.100.AND.IABS(K(IC2,2)).GT.100) THEN 
jetset74.F:      ELSEIF(IABS(K(IC1,2)).NE.21) THEN 
jetset74.F:        CALL LUKFDI(K(IC1,2),K(IC2,2),KFLDMP,K(N+2,2)) 
jetset74.F:        KFLN=1+INT((2.+PARJ(2))*RLU(0)) 
jetset74.F:      DO 280 MCOMB=1,3 
jetset74.F:      DO 270 I=MAX(1,IP),N 
jetset74.F:      IF(K(I,1).LE.0.OR.K(I,1).GT.10.OR.(I.GE.IC1.AND.I.LE.IC2 
jetset74.F:     &.AND.K(I,1).GE.1.AND.K(I,1).LE.2)) GOTO 270 
jetset74.F:      IF(MCOMB.EQ.1) KCI=LUCOMP(K(I,2)) 
jetset74.F:      IF(MCOMB.EQ.1.AND.KCI.EQ.0) GOTO 270 
jetset74.F:      IF(MCOMB.EQ.1.AND.KCHG(KCI,2).EQ.0.AND.I.LE.NS) GOTO 270 
jetset74.F:      IF(MCOMB.EQ.2.AND.IABS(K(I,2)).GT.10.AND.IABS(K(I,2)).LE.100) 
jetset74.F:      HCR=DPC(4)*P(I,4)-DPC(1)*P(I,1)-DPC(2)*P(I,2)-DPC(3)*P(I,3) 
jetset74.F:        HK1=(0.5*(P(N+2,5)**2-PECM**2)+HD*HK2)/HB 
jetset74.F:        DO 290 J=1,4 
jetset74.F:        P(N+2,J)=(1.+HK1)*DPC(J)-HK2*P(IR,J) 
jetset74.F:        P(IR,J)=(1.+HK2)*P(IR,J)-HK1*DPC(J) 
jetset74.F:        V(N+1,J)=V(IC1,J) 
jetset74.F:        V(N+2,J)=V(IC1,J) 
jetset74.F:        V(N+1,5)=0. 
jetset74.F:  300 DO 310 I=IC1,IC2 
jetset74.F:      IF((K(I,1).EQ.1.OR.K(I,1).EQ.2).AND.KCHG(LUCOMP(K(I,2)),2).NE.0) 
jetset74.F:        K(I,1)=K(I,1)+10 
jetset74.F:        IF(MSTU(16).NE.2) THEN 
jetset74.F:          K(I,4)=NSAV+1 
jetset74.F:          K(I,5)=NSAV+1 
jetset74.F:  310 CONTINUE 
jetset74.F:      IF(N.LT.MSTU(4)-MSTU(32)-5) GOTO 140 
jetset74.F:      DO 330 J=1,5 
jetset74.F:      DO 360 I=MAX(1,IP),N 
jetset74.F:      IF(K(I,1).LE.0.OR.K(I,1).GT.10) GOTO 360 
jetset74.F:      KQ=KCHG(KC,2)*ISIGN(1,K(I,2)) 
jetset74.F:      NP=NP+1 
jetset74.F:        KFN=KFN+1 
jetset74.F:        MSTJ(93)=1 
jetset74.F:      DO 340 J=1,4 
jetset74.F:      IF(K(I,1).EQ.1) THEN 
jetset74.F:        IF(NP.NE.1.AND.(KFN.EQ.1.OR.KFN.GE.3.OR.KQS.NE.0)) CALL 
jetset74.F:        IF(NP.NE.1.AND.DPS(4)**2-DPS(1)**2-DPS(2)**2-DPS(3)**2.LT. 
jetset74.F:        DO 350 J=1,5 
jetset74.F:      COMMON/LUDAT1/MSTU(200),PARU(200),MSTJ(200),PARJ(200) 
jetset74.F:      SAVE /LUJETS/,/LUDAT1/,/LUDAT2/ 
jetset74.F:      FOUR(I,J)=P(I,4)*P(J,4)-P(I,1)*P(J,1)-P(I,2)*P(J,2)-P(I,3)*P(J,3) 
jetset74.F:      DFOUR(I,J)=DP(I,4)*DP(J,4)-DP(I,1)*DP(J,1)-DP(I,2)*DP(J,2)- 
jetset74.F:      MSTJ(91)=0 
jetset74.F:      DO 100 J=1,5 
jetset74.F:  100 CONTINUE 
jetset74.F:      MJU(1)=0 
jetset74.F:      I=IP-1 
jetset74.F:  110 I=I+1 
jetset74.F:        CALL LUERRM(12,'(LUSTRF:) failed to reconstruct jet system') 
jetset74.F:        IF(MSTU(21).GE.1) RETURN 
jetset74.F:      IF(K(I,1).NE.1.AND.K(I,1).NE.2.AND.K(I,1).NE.41) GOTO 110 
jetset74.F:      IF(KC.EQ.0) GOTO 110 
jetset74.F:      KQ=KCHG(KC,2)*ISIGN(1,K(I,2)) 
jetset74.F:      IF(KQ.EQ.0) GOTO 110 
jetset74.F:      IF(N+5*NP+11.GT.MSTU(4)-MSTU(32)-5) THEN 
jetset74.F:        CALL LUERRM(11,'(LUSTRF:) no more memory left in LUJETS') 
jetset74.F:        IF(MSTU(21).GE.1) RETURN 
jetset74.F:      NP=NP+1 
jetset74.F:      DO 120 J=1,5 
jetset74.F:  120 CONTINUE 
jetset74.F:      DPS(4)=DPS(4)+SQRT(DBLE(P(I,1))**2+DBLE(P(I,2))**2+ 
jetset74.F:      IF(K(I,1).EQ.41) THEN 
jetset74.F:        IF(KQSUM.EQ.KQ) MJU(1)=N+NP 
jetset74.F:      IF(K(I,1).EQ.2.OR.K(I,1).EQ.41) GOTO 110 
jetset74.F:        CALL LUERRM(12,'(LUSTRF:) unphysical flavour combination') 
jetset74.F:        IF(MSTU(21).GE.1) RETURN 
jetset74.F:        MSTU(33)=1 
jetset74.F:        CALL LUDBRB(N+1,N+NP,0.,0.,-DPS(1)/DPS(4),-DPS(2)/DPS(4), 
jetset74.F:        MBST=1 
jetset74.F:        HHBZ=SQRT(MAX(1D-6,DPS(4)+DPS(3))/MAX(1D-6,DPS(4)-DPS(3))) 
jetset74.F:        DO 130 I=N+1,N+NP 
jetset74.F:        HHPMT=P(I,1)**2+P(I,2)**2+P(I,5)**2 
jetset74.F:  130   CONTINUE 
jetset74.F:      PARU12=PARU(12) 
jetset74.F:      PARU13=PARU(13) 
jetset74.F:      MJU(3)=MJU(1) 
jetset74.F:  140 IF(NR.GE.3) THEN 
jetset74.F:        PDRMIN=2.*PARU12 
jetset74.F:        DO 150 I=N+1,N+NR 
jetset74.F:        IF(I.EQ.N+NR.AND.IABS(K(N+1,2)).NE.21) GOTO 150 
jetset74.F:        I1=I+1 
jetset74.F:        IF(I.EQ.N+NR) I1=N+1 
jetset74.F:        IF(K(I,1).EQ.41.OR.K(I1,1).EQ.41) GOTO 150 
jetset74.F:        IF(MJU(1).NE.0.AND.I1.LT.MJU(1).AND.IABS(K(I1,2)).NE.21) 
jetset74.F:     &  GOTO 150 
jetset74.F:        IF(MJU(2).NE.0.AND.I.GT.MJU(2).AND.IABS(K(I,2)).NE.21) GOTO 150 
jetset74.F:        PAP=SQRT((P(I,1)**2+P(I,2)**2+P(I,3)**2)*(P(I1,1)**2+ 
jetset74.F:     &  P(I1,2)**2+P(I1,3)**2)) 
jetset74.F:        PVP=P(I,1)*P(I1,1)+P(I,2)*P(I1,2)+P(I,3)*P(I1,3) 
jetset74.F:        PDR=4.*(PAP-PVP)**2/MAX(1E-6,PARU13**2*PAP+2.*(PAP-PVP)) 
jetset74.F:  150   CONTINUE 
jetset74.F:        IF(PDRMIN.LT.PARU12.AND.IR.EQ.N+NR) THEN 
jetset74.F:          DO 160 J=1,4 
jetset74.F:          P(N+1,J)=P(N+1,J)+P(N+NR,J) 
jetset74.F:  160     CONTINUE 
jetset74.F:          P(N+1,5)=SQRT(MAX(0.,P(N+1,4)**2-P(N+1,1)**2-P(N+1,2)**2- 
jetset74.F:     &    P(N+1,3)**2)) 
jetset74.F:          NR=NR-1 
jetset74.F:          GOTO 140 
jetset74.F:        ELSEIF(PDRMIN.LT.PARU12) THEN 
jetset74.F:          DO 170 J=1,4 
jetset74.F:          P(IR,J)=P(IR,J)+P(IR+1,J) 
jetset74.F:  170     CONTINUE 
jetset74.F:          P(IR,5)=SQRT(MAX(0.,P(IR,4)**2-P(IR,1)**2-P(IR,2)**2- 
jetset74.F:          DO 190 I=IR+1,N+NR-1 
jetset74.F:          K(I,2)=K(I+1,2) 
jetset74.F:          DO 180 J=1,5 
jetset74.F:          P(I,J)=P(I+1,J) 
jetset74.F:  180     CONTINUE 
jetset74.F:  190     CONTINUE 
jetset74.F:          IF(IR.EQ.N+NR-1) K(IR,2)=K(N+NR,2) 
jetset74.F:          NR=NR-1 
jetset74.F:          IF(MJU(1).GT.IR) MJU(1)=MJU(1)-1 
jetset74.F:          IF(MJU(2).GT.IR) MJU(2)=MJU(2)-1 
jetset74.F:          GOTO 140 
jetset74.F:      NTRYR=NTRYR+1 
jetset74.F:      NRS=MAX(5*NR+11,NP) 
jetset74.F:  200 NTRY=NTRY+1 
jetset74.F:      IF(NTRY.GT.100.AND.NTRYR.LE.4) THEN 
jetset74.F:        PARU12=4.*PARU12 
jetset74.F:        PARU13=2.*PARU13 
jetset74.F:        GOTO 140 
jetset74.F:      ELSEIF(NTRY.GT.100) THEN 
jetset74.F:        CALL LUERRM(14,'(LUSTRF:) caught in infinite loop') 
jetset74.F:        IF(MSTU(21).GE.1) RETURN 
jetset74.F:      IF(MJU(1).EQ.0.AND.MJU(2).EQ.0) GOTO 580 
jetset74.F:      DO 570 JT=1,2 
jetset74.F:      DO 220 IU=1,3 
jetset74.F:      DO 210 J=1,5 
jetset74.F:  210 CONTINUE 
jetset74.F:      DO 240 I1=N+1+(JT-1)*(NR-1),N+NR+(JT-1)*(1-NR),JS 
jetset74.F:      IF(K(I1,2).NE.21.AND.IU.LE.2) THEN 
jetset74.F:        IU=IU+1 
jetset74.F:        IJU(IU)=I1 
jetset74.F:      DO 230 J=1,4 
jetset74.F:      PJU(IU,J)=PJU(IU,J)+P(I1,J) 
jetset74.F:      DO 250 IU=1,3 
jetset74.F:      PJU(IU,5)=SQRT(PJU(IU,1)**2+PJU(IU,2)**2+PJU(IU,3)**2) 
jetset74.F:      IF(K(IJU(3),2)/100.NE.10*K(IJU(1),2)+K(IJU(2),2).AND. 
jetset74.F:     &K(IJU(3),2)/100.NE.10*K(IJU(2),2)+K(IJU(1),2)) THEN 
jetset74.F:        CALL LUERRM(12,'(LUSTRF:) unphysical flavour combination') 
jetset74.F:        IF(MSTU(21).GE.1) RETURN 
jetset74.F:      T12=(PJU(1,1)*PJU(2,1)+PJU(1,2)*PJU(2,2)+PJU(1,3)*PJU(2,3))/ 
jetset74.F:     &(PJU(1,5)*PJU(2,5)) 
jetset74.F:      T13=(PJU(1,1)*PJU(3,1)+PJU(1,2)*PJU(3,2)+PJU(1,3)*PJU(3,3))/ 
jetset74.F:     &(PJU(1,5)*PJU(3,5)) 
jetset74.F:      T23=(PJU(2,1)*PJU(3,1)+PJU(2,2)*PJU(3,2)+PJU(2,3)*PJU(3,3))/ 
jetset74.F:      T11=SQRT((2./3.)*(1.-T12)*(1.-T13)/(1.-T23)) 
jetset74.F:      T22=SQRT((2./3.)*(1.-T12)*(1.-T23)/(1.-T13)) 
jetset74.F:      TSQ=SQRT((2.*T11*T22+T12-1.)*(1.+T12)) 
jetset74.F:      T1F=(TSQ-T22*(1.+T12))/(1.-T12**2) 
jetset74.F:      T2F=(TSQ-T11*(1.+T12))/(1.-T12**2) 
jetset74.F:      DO 260 J=1,3 
jetset74.F:      TJU(J)=-(T1F*PJU(1,J)/PJU(1,5)+T2F*PJU(2,J)/PJU(2,5)) 
jetset74.F:      TJU(4)=SQRT(1.+TJU(1)**2+TJU(2)**2+TJU(3)**2) 
jetset74.F:      DO 270 IU=1,3 
jetset74.F:      PJU(IU,5)=TJU(4)*PJU(IU,4)-TJU(1)*PJU(IU,1)-TJU(2)*PJU(IU,2)- 
jetset74.F:      IF(PJU(1,5)+PJU(2,5).GT.PJU(1,4)+PJU(2,4)) THEN 
jetset74.F:        DO 280 J=1,3 
jetset74.F:        TJU(4)=1. 
jetset74.F:        PJU(1,5)=PJU(1,4) 
jetset74.F:      DO 550 IU=1,2 
jetset74.F:      NS=IJU(IU+1)-IJU(IU) 
jetset74.F:      DO 310 IS=1,NS 
jetset74.F:      IS1=IJU(IU)+IS-1 
jetset74.F:      DO 290 J=1,5 
jetset74.F:      DP(1,J)=0.5*P(IS1,J) 
jetset74.F:      IF(IS.EQ.1) DP(1,J)=P(IS1,J) 
jetset74.F:      IF(IS.EQ.NS) DP(2,4)=SQRT(PJU(IU,1)**2+PJU(IU,2)**2+PJU(IU,3)**2) 
jetset74.F:      DP(3,5)=DFOUR(1,1) 
jetset74.F:      DHKC=DFOUR(1,2) 
jetset74.F:        DP(1,4)=SQRT(DP(1,1)**2+DP(1,2)**2+DP(1,3)**2) 
jetset74.F:        DP(2,4)=SQRT(DP(2,1)**2+DP(2,2)**2+DP(2,3)**2) 
jetset74.F:        DHKC=DFOUR(1,2) 
jetset74.F:      DHK1=0.5*((DP(4,5)+DHKC)/DHKS-1.) 
jetset74.F:      DHK2=0.5*((DP(3,5)+DHKC)/DHKS-1.) 
jetset74.F:      IN1=N+NR+4*IS-3 
jetset74.F:      P(IN1,5)=SQRT(DP(3,5)+2.*DHKC+DP(4,5)) 
jetset74.F:      DO 300 J=1,4 
jetset74.F:      P(IN1,J)=(1.+DHK1)*DP(1,J)-DHK2*DP(2,J) 
jetset74.F:      P(IN1+1,J)=(1.+DHK2)*DP(2,J)-DHK1*DP(1,J) 
jetset74.F:  310 CONTINUE 
jetset74.F:      MSTU91=MSTU(90) 
jetset74.F:  320 NTRY=NTRY+1 
jetset74.F:      IF(NTRY.GT.100.AND.NTRYR.LE.4) THEN 
jetset74.F:        PARU12=4.*PARU12 
jetset74.F:        PARU13=2.*PARU13 
jetset74.F:        GOTO 140 
jetset74.F:      ELSEIF(NTRY.GT.100) THEN 
jetset74.F:        CALL LUERRM(14,'(LUSTRF:) caught in infinite loop') 
jetset74.F:        IF(MSTU(21).GE.1) RETURN 
jetset74.F:      MSTU(90)=MSTU91 
jetset74.F:      IE(1)=K(N+1+(JT/2)*(NP-1),3) 
jetset74.F:      IN(4)=N+NR+1 
jetset74.F:      IN(5)=IN(4)+1 
jetset74.F:      IN(6)=N+NR+4*NS+1 
jetset74.F:      DO 340 JQ=1,2 
jetset74.F:      DO 330 IN1=N+NR+2+JQ,N+NR+4*NS-2+JQ,4 
jetset74.F:      P(IN1,1)=2-JQ 
jetset74.F:      P(IN1,2)=JQ-1 
jetset74.F:      P(IN1,3)=1. 
jetset74.F:      KFL(1)=K(IJU(IU),2) 
jetset74.F:      PX(1)=0. 
jetset74.F:      PY(1)=0. 
jetset74.F:      GAM(1)=0. 
jetset74.F:      DO 350 J=1,5 
jetset74.F:      DO 360 J=1,4 
jetset74.F:      DP(1,J)=P(IN(4),J) 
jetset74.F:      DP(2,J)=P(IN(4)+1,J) 
jetset74.F:      DP(1,4)=SQRT(DP(1,1)**2+DP(1,2)**2+DP(1,3)**2) 
jetset74.F:      DP(2,4)=SQRT(DP(2,1)**2+DP(2,2)**2+DP(2,3)**2) 
jetset74.F:      DP(5,1)=DP(1,1)/DP(1,4)-DP(2,1)/DP(2,4) 
jetset74.F:      DP(5,2)=DP(1,2)/DP(1,4)-DP(2,2)/DP(2,4) 
jetset74.F:      DP(5,3)=DP(1,3)/DP(1,4)-DP(2,3)/DP(2,4) 
jetset74.F:      IF(DP(5,1)**2.LE.DP(5,2)**2+DP(5,3)**2) DP(3,1)=1. 
jetset74.F:      IF(DP(5,1)**2.GT.DP(5,2)**2+DP(5,3)**2) DP(3,3)=1. 
jetset74.F:      IF(DP(5,2)**2.LE.DP(5,1)**2+DP(5,3)**2) DP(4,2)=1. 
jetset74.F:      IF(DP(5,2)**2.GT.DP(5,1)**2+DP(5,3)**2) DP(4,3)=1. 
jetset74.F:      DHC12=DFOUR(1,2) 
jetset74.F:      DHCX1=DFOUR(3,1)/DHC12 
jetset74.F:      DHCX2=DFOUR(3,2)/DHC12 
jetset74.F:      DHCXX=1D0/SQRT(1D0+2D0*DHCX1*DHCX2*DHC12) 
jetset74.F:      DHCY1=DFOUR(4,1)/DHC12 
jetset74.F:      DHCY2=DFOUR(4,2)/DHC12 
jetset74.F:      DHCYX=DHCXX*(DHCX1*DHCY2+DHCX2*DHCY1)*DHC12 
jetset74.F:      DHCYY=1D0/SQRT(1D0+2D0*DHCY1*DHCY2*DHC12-DHCYX**2) 
jetset74.F:      DO 370 J=1,4 
jetset74.F:      DP(3,J)=DHCXX*(DP(3,J)-DHCX2*DP(1,J)-DHCX1*DP(2,J)) 
jetset74.F:      P(IN(6)+1,J)=DHCYY*(DP(4,J)-DHCY2*DP(1,J)-DHCY1*DP(2,J)- 
jetset74.F:  380 I=I+1 
jetset74.F:        CALL LUERRM(11,'(LUSTRF:) no more memory left in LUJETS') 
jetset74.F:        IF(MSTU(21).GE.1) RETURN 
jetset74.F:      IRANKJ=IRANKJ+1 
jetset74.F:      K(I,1)=1 
jetset74.F:      K(I,3)=IE(1) 
jetset74.F:  390 CALL LUKFDI(KFL(1),0,KFL(3),K(I,2)) 
jetset74.F:      IF(MSTJ(12).GE.3.AND.IRANKJ.EQ.1.AND.IABS(KFL(1)).LE.10.AND. 
jetset74.F:     &IABS(KFL(3)).GT.10) THEN 
jetset74.F:        IF(RLU(0).GT.PARJ(19)) GOTO 390 
jetset74.F:      CALL LUPTDI(KFL(1),PX(3),PY(3)) 
jetset74.F:      PR(1)=P(I,5)**2+(PX(1)+PX(3))**2+(PY(1)+PY(3))**2 
jetset74.F:      CALL LUZDIS(KFL(1),KFL(3),PR(1),Z) 
jetset74.F:      IF(IABS(KFL(1)).GE.4.AND.IABS(KFL(1)).LE.8.AND. 
jetset74.F:        MSTU(90)=MSTU(90)+1 
jetset74.F:      GAM(3)=(1.-Z)*(GAM(1)+PR(1)/Z) 
jetset74.F:      DO 400 J=1,3 
jetset74.F:      IF(IN(1)+1.EQ.IN(2).AND.Z*P(IN(1)+2,3)*P(IN(2)+2,3)* 
jetset74.F:     &P(IN(1),5)**2.GE.PR(1)) THEN 
jetset74.F:        P(IN(1)+2,4)=Z*P(IN(1)+2,3) 
jetset74.F:        P(IN(2)+2,4)=PR(1)/(P(IN(1)+2,4)*P(IN(1),5)**2) 
jetset74.F:        DO 410 J=1,4 
jetset74.F:        P(I,J)=(PX(1)+PX(3))*P(IN(3),J)+(PY(1)+PY(3))*P(IN(3)+1,J) 
jetset74.F:  410   CONTINUE 
jetset74.F:      ELSEIF(IN(1)+1.EQ.IN(2)) THEN 
jetset74.F:        P(IN(2)+2,1)=1. 
jetset74.F:        IF(FOUR(IN(1),IN(2)).LE.1E-2) THEN 
jetset74.F:          P(IN(1)+2,4)=P(IN(1)+2,3) 
jetset74.F:          P(IN(1)+2,1)=0. 
jetset74.F:          IN(1)=IN(1)+4 
jetset74.F:  420 IF(IN(1).GT.N+NR+4*NS.OR.IN(2).GT.N+NR+4*NS.OR. 
jetset74.F:     &IN(1).GT.IN(2)) GOTO 320 
jetset74.F:      IF(IN(1).NE.IN(4).OR.IN(2).NE.IN(5)) THEN 
jetset74.F:        DO 430 J=1,4 
jetset74.F:        DP(1,J)=P(IN(1),J) 
jetset74.F:        DP(1,4)=SQRT(DP(1,1)**2+DP(1,2)**2+DP(1,3)**2) 
jetset74.F:        DP(2,4)=SQRT(DP(2,1)**2+DP(2,2)**2+DP(2,3)**2) 
jetset74.F:        DHC12=DFOUR(1,2) 
jetset74.F:        IF(DHC12.LE.1E-2) THEN 
jetset74.F:          P(IN(1)+2,4)=P(IN(1)+2,3) 
jetset74.F:          P(IN(1)+2,1)=0. 
jetset74.F:          IN(1)=IN(1)+4 
jetset74.F:        DP(5,1)=DP(1,1)/DP(1,4)-DP(2,1)/DP(2,4) 
jetset74.F:        DP(5,2)=DP(1,2)/DP(1,4)-DP(2,2)/DP(2,4) 
jetset74.F:        DP(5,3)=DP(1,3)/DP(1,4)-DP(2,3)/DP(2,4) 
jetset74.F:        IF(DP(5,1)**2.LE.DP(5,2)**2+DP(5,3)**2) DP(3,1)=1. 
jetset74.F:        IF(DP(5,1)**2.GT.DP(5,2)**2+DP(5,3)**2) DP(3,3)=1. 
jetset74.F:        IF(DP(5,2)**2.LE.DP(5,1)**2+DP(5,3)**2) DP(4,2)=1. 
jetset74.F:        IF(DP(5,2)**2.GT.DP(5,1)**2+DP(5,3)**2) DP(4,3)=1. 
jetset74.F:        DHCX1=DFOUR(3,1)/DHC12 
jetset74.F:        DHCX2=DFOUR(3,2)/DHC12 
jetset74.F:        DHCXX=1D0/SQRT(1D0+2D0*DHCX1*DHCX2*DHC12) 
jetset74.F:        DHCY1=DFOUR(4,1)/DHC12 
jetset74.F:        DHCY2=DFOUR(4,2)/DHC12 
jetset74.F:        DHCYX=DHCXX*(DHCX1*DHCY2+DHCX2*DHCY1)*DHC12 
jetset74.F:        DHCYY=1D0/SQRT(1D0+2D0*DHCY1*DHCY2*DHC12-DHCYX**2) 
jetset74.F:        DO 440 J=1,4 
jetset74.F:        DP(3,J)=DHCXX*(DP(3,J)-DHCX2*DP(1,J)-DHCX1*DP(2,J)) 
jetset74.F:        P(IN(3)+1,J)=DHCYY*(DP(4,J)-DHCY2*DP(1,J)-DHCY1*DP(2,J)- 
jetset74.F:        PXP=-(PX(3)*FOUR(IN(6),IN(3))+PY(3)*FOUR(IN(6)+1,IN(3))) 
jetset74.F:        PYP=-(PX(3)*FOUR(IN(6),IN(3)+1)+PY(3)*FOUR(IN(6)+1,IN(3)+1)) 
jetset74.F:        IF(ABS(PXP**2+PYP**2-PX(3)**2-PY(3)**2).LT.0.01) THEN 
jetset74.F:      DO 470 J=1,4 
jetset74.F:      P(I,J)=PX(1)*P(IN(6),J)+PY(1)*P(IN(6)+1,J)+PX(3)*P(IN(3),J)+ 
jetset74.F:     &PY(3)*P(IN(3)+1,J) 
jetset74.F:      DO 450 IN1=IN(4),IN(1)-4,4 
jetset74.F:      P(I,J)=P(I,J)+P(IN1+2,3)*P(IN1,J) 
jetset74.F:      DHM(1)=FOUR(I,I) 
jetset74.F:      DHM(2)=2.*FOUR(I,IN(1)) 
jetset74.F:      DHM(4)=2.*FOUR(IN(1),IN(2)) 
jetset74.F:      DO 490 IN2=IN(1)+1,IN(2),4 
jetset74.F:      DO 480 IN1=IN(1),IN2-1,4 
jetset74.F:      DHC=2.*FOUR(IN1,IN2) 
jetset74.F:      DHG(1)=DHG(1)+P(IN1+2,1)*P(IN2+2,1)*DHC 
jetset74.F:      IF(IN1.EQ.IN(1)) DHG(2)=DHG(2)-P(IN2+2,1)*DHC 
jetset74.F:      IF(IN2.EQ.IN(2)) DHG(3)=DHG(3)+P(IN1+2,1)*DHC 
jetset74.F:      IF(IN1.EQ.IN(1).AND.IN2.EQ.IN(2)) DHG(4)=DHG(4)-DHC 
jetset74.F:      DHS1=DHM(3)*DHG(4)-DHM(4)*DHG(3) 
jetset74.F:      IF(ABS(DHS1).LT.1E-4) GOTO 320 
jetset74.F:      DHS2=DHM(4)*(GAM(3)-DHG(1))-DHM(2)*DHG(3)-DHG(4)* 
jetset74.F:     &(P(I,5)**2-DHM(1))+DHG(2)*DHM(3) 
jetset74.F:      DHS3=DHM(2)*(GAM(3)-DHG(1))-DHG(2)*(P(I,5)**2-DHM(1)) 
jetset74.F:      P(IN(2)+2,4)=0.5*(SQRT(MAX(0D0,DHS2**2-4.*DHS1*DHS3))/ABS(DHS1)- 
jetset74.F:     &DHS2/DHS1) 
jetset74.F:      P(IN(1)+2,4)=(P(I,5)**2-DHM(1)-DHM(3)*P(IN(2)+2,4))/ 
jetset74.F:        P(IN(2)+2,1)=1. 
jetset74.F:        IF(FOUR(IN(1),IN(2)).LE.1E-2) THEN 
jetset74.F:          P(IN(1)+2,4)=P(IN(1)+2,3) 
jetset74.F:          P(IN(1)+2,1)=0. 
jetset74.F:          IN(1)=IN(1)+4 
jetset74.F:      ELSEIF(P(IN(1)+2,4).GT.P(IN(1)+2,3)) THEN 
jetset74.F:        P(IN(1)+2,4)=P(IN(1)+2,3) 
jetset74.F:        P(IN(1)+2,1)=0. 
jetset74.F:        IN(1)=IN(1)+JS 
jetset74.F:  500 DO 510 J=1,4 
jetset74.F:      P(I,J)=P(I,J)+P(IN(1)+2,4)*P(IN(1),J)+P(IN(2)+2,4)*P(IN(2),J) 
jetset74.F:  510 CONTINUE 
jetset74.F:      PJU(IU+3,5)=TJU(4)*PJU(IU+3,4)-TJU(1)*PJU(IU+3,1)- 
jetset74.F:        KFL(1)=-KFL(3) 
jetset74.F:        PX(1)=-PX(3) 
jetset74.F:        PY(1)=-PY(3) 
jetset74.F:        GAM(1)=GAM(3) 
jetset74.F:          DO 520 J=1,4 
jetset74.F:          P(IN(6)+1,J)=P(IN(3)+1,J) 
jetset74.F:        DO 530 JQ=1,2 
jetset74.F:        P(IN(JQ)+2,1)=P(IN(JQ)+2,1)-(3-2*JQ)*P(IN(JQ)+2,4) 
jetset74.F:      IF(IABS(KFL(1)).GT.10) GOTO 320 
jetset74.F:      I=I-1 
jetset74.F:      KFJH(IU)=KFL(1) 
jetset74.F:      DO 540 J=1,4 
jetset74.F:      PJU(IU+3,J)=PJU(IU+3,J)-P(I+1,J) 
jetset74.F:      KFLS=2*INT(RLU(0)+3.*PARJ(4)/(1.+3.*PARJ(4)))+1 
jetset74.F:      IF(KFJH(1).EQ.KFJH(2)) KFLS=3 
jetset74.F:      IF(ISTA.NE.I) KFJS(JT)=ISIGN(1000*MAX(IABS(KFJH(1)), 
jetset74.F:     &IABS(KFJH(2)))+100*MIN(IABS(KFJH(1)),IABS(KFJH(2)))+ 
jetset74.F:     &KFLS,KFJH(1)) 
jetset74.F:      DO 560 J=1,4 
jetset74.F:      PJS(JT,J)=PJU(1,J)+PJU(2,J)+P(MJU(JT),J) 
jetset74.F:      PJS(JT,5)=SQRT(MAX(0.,PJS(JT,4)**2-PJS(JT,1)**2-PJS(JT,2)**2- 
jetset74.F:  580 IF(MJU(1).NE.0.AND.MJU(2).NE.0) THEN 
jetset74.F:        NS=MJU(2)-MJU(1) 
jetset74.F:        NB=MJU(1)-N 
jetset74.F:      ELSEIF(MJU(1).NE.0) THEN 
jetset74.F:        NS=N+NR-MJU(1) 
jetset74.F:        NB=MJU(1)-N 
jetset74.F:        NB=1 
jetset74.F:      ELSEIF(IABS(K(N+1,2)).NE.21) THEN 
jetset74.F:        NS=NR-1 
jetset74.F:        NB=1 
jetset74.F:        NS=NR+1 
jetset74.F:        DO 590 IS=1,NR 
jetset74.F:        P(N+NR+IS,1)=0.5*FOUR(N+IS,N+IS+1-NR*(IS/NR)) 
jetset74.F:        W2SUM=W2SUM+P(N+NR+IS,1) 
jetset74.F:  600   NB=NB+1 
jetset74.F:        W2SUM=W2SUM-P(N+NR+NB,1) 
jetset74.F:      DO 630 IS=1,NS 
jetset74.F:      IS1=N+IS+NB-1-NR*((IS+NB-2)/NR) 
jetset74.F:      IS2=N+IS+NB-NR*((IS+NB-1)/NR) 
jetset74.F:      DO 610 J=1,5 
jetset74.F:      DP(1,J)=P(IS1,J) 
jetset74.F:      IF(IABS(K(IS1,2)).EQ.21) DP(1,J)=0.5*DP(1,J) 
jetset74.F:      IF(IS1.EQ.MJU(1)) DP(1,J)=PJS(1,J)-PJS(3,J) 
jetset74.F:      IF(IABS(K(IS2,2)).EQ.21) DP(2,J)=0.5*DP(2,J) 
jetset74.F:  610 CONTINUE 
jetset74.F:      DP(3,5)=DFOUR(1,1) 
jetset74.F:      DHKC=DFOUR(1,2) 
jetset74.F:        DP(3,5)=DP(1,5)**2 
jetset74.F:        DP(1,4)=SQRT(DP(1,1)**2+DP(1,2)**2+DP(1,3)**2+DP(1,5)**2) 
jetset74.F:        DP(2,4)=SQRT(DP(2,1)**2+DP(2,2)**2+DP(2,3)**2+DP(2,5)**2) 
jetset74.F:        DHKC=DFOUR(1,2) 
jetset74.F:      DHK1=0.5*((DP(4,5)+DHKC)/DHKS-1.) 
jetset74.F:      DHK2=0.5*((DP(3,5)+DHKC)/DHKS-1.) 
jetset74.F:      IN1=N+NR+4*IS-3 
jetset74.F:      P(IN1,5)=SQRT(DP(3,5)+2.*DHKC+DP(4,5)) 
jetset74.F:      DO 620 J=1,4 
jetset74.F:      P(IN1,J)=(1.+DHK1)*DP(1,J)-DHK2*DP(2,J) 
jetset74.F:      P(IN1+1,J)=(1.+DHK2)*DP(2,J)-DHK1*DP(1,J) 
jetset74.F:      MSTU91=MSTU(90) 
jetset74.F:  640 NTRY=NTRY+1 
jetset74.F:      IF(NTRY.GT.100.AND.NTRYR.LE.4) THEN 
jetset74.F:        PARU12=4.*PARU12 
jetset74.F:        PARU13=2.*PARU13 
jetset74.F:        GOTO 140 
jetset74.F:      ELSEIF(NTRY.GT.100) THEN 
jetset74.F:        CALL LUERRM(14,'(LUSTRF:) caught in infinite loop') 
jetset74.F:        IF(MSTU(21).GE.1) RETURN 
jetset74.F:      MSTU(90)=MSTU91 
jetset74.F:      DO 660 J=1,4 
jetset74.F:      DO 650 IS=1,NR 
jetset74.F:      DO 680 JT=1,2 
jetset74.F:      IF(NS.GT.NR) IRANK(JT)=1 
jetset74.F:      IE(JT)=K(N+1+(JT/2)*(NP-1),3) 
jetset74.F:      IN(3*JT+1)=N+NR+1+4*(JT/2)*(NS-1) 
jetset74.F:      IN(3*JT+2)=IN(3*JT+1)+1 
jetset74.F:      IN(3*JT+3)=N+NR+4*NS+2*JT-1 
jetset74.F:      DO 670 IN1=N+NR+2+JT,N+NR+4*NS-2+JT,4 
jetset74.F:      P(IN1,1)=2-JT 
jetset74.F:      P(IN1,2)=JT-1 
jetset74.F:      P(IN1,3)=1. 
jetset74.F:        PX(1)=0. 
jetset74.F:        PY(1)=0. 
jetset74.F:        IF(NS.EQ.1.AND.MJU(1)+MJU(2).EQ.0) CALL LUPTDI(0,PX(1),PY(1)) 
jetset74.F:        PX(2)=-PX(1) 
jetset74.F:        PY(2)=-PY(1) 
jetset74.F:        DO 690 JT=1,2 
jetset74.F:        MSTJ(93)=1 
jetset74.F:        KFL(3)=INT(1.+(2.+PARJ(2))*RLU(0))*(-1)**INT(RLU(0)+0.5) 
jetset74.F:        CALL LUKFDI(KFL(3),0,KFL(1),KDUMP) 
jetset74.F:        KFL(2)=-KFL(1) 
jetset74.F:        IF(IABS(KFL(1)).GT.10.AND.RLU(0).GT.0.5) THEN 
jetset74.F:          KFL(2)=-(KFL(1)+ISIGN(10000,KFL(1))) 
jetset74.F:        ELSEIF(IABS(KFL(1)).GT.10) THEN 
jetset74.F:          KFL(1)=-(KFL(2)+ISIGN(10000,KFL(2))) 
jetset74.F:        CALL LUPTDI(KFL(1),PX(1),PY(1)) 
jetset74.F:        PX(2)=-PX(1) 
jetset74.F:        PY(2)=-PY(1) 
jetset74.F:        PR3=MIN(25.,0.1*P(N+NR+1,5)**2) 
jetset74.F:  700   CALL LUZDIS(KFL(1),KFL(2),PR3,Z) 
jetset74.F:        ZR=PR3/(Z*P(N+NR+1,5)**2) 
jetset74.F:        IF(ZR.GE.1.) GOTO 700 
jetset74.F:        DO 710 JT=1,2 
jetset74.F:        MSTJ(93)=1 
jetset74.F:        GAM(JT)=PR3*(1.-Z)/Z 
jetset74.F:        IN1=N+NR+3+4*(JT/2)*(NS-1) 
jetset74.F:        P(IN1,JT)=1.-Z 
jetset74.F:        P(IN1,3-JT)=JT-1 
jetset74.F:        P(IN1,3)=(2-JT)*(1.-Z)+(JT-1)*Z 
jetset74.F:        P(IN1+1,JT)=ZR 
jetset74.F:        P(IN1+1,3-JT)=2-JT 
jetset74.F:        P(IN1+1,3)=(2-JT)*(1.-ZR)+(JT-1)*ZR 
jetset74.F:  710   CONTINUE 
jetset74.F:      DO 750 JT=1,2 
jetset74.F:      IF(JT.EQ.1.OR.NS.EQ.NR-1) THEN 
jetset74.F:        IN1=IN(3*JT+1) 
jetset74.F:        DO 720 J=1,4 
jetset74.F:        DP(1,J)=P(IN1,J) 
jetset74.F:        DP(2,J)=P(IN1+1,J) 
jetset74.F:        DP(1,4)=SQRT(DP(1,1)**2+DP(1,2)**2+DP(1,3)**2) 
jetset74.F:        DP(2,4)=SQRT(DP(2,1)**2+DP(2,2)**2+DP(2,3)**2) 
jetset74.F:        DP(5,1)=DP(1,1)/DP(1,4)-DP(2,1)/DP(2,4) 
jetset74.F:        DP(5,2)=DP(1,2)/DP(1,4)-DP(2,2)/DP(2,4) 
jetset74.F:        DP(5,3)=DP(1,3)/DP(1,4)-DP(2,3)/DP(2,4) 
jetset74.F:        IF(DP(5,1)**2.LE.DP(5,2)**2+DP(5,3)**2) DP(3,1)=1. 
jetset74.F:        IF(DP(5,1)**2.GT.DP(5,2)**2+DP(5,3)**2) DP(3,3)=1. 
jetset74.F:        IF(DP(5,2)**2.LE.DP(5,1)**2+DP(5,3)**2) DP(4,2)=1. 
jetset74.F:        IF(DP(5,2)**2.GT.DP(5,1)**2+DP(5,3)**2) DP(4,3)=1. 
jetset74.F:        DHC12=DFOUR(1,2) 
jetset74.F:        DHCX1=DFOUR(3,1)/DHC12 
jetset74.F:        DHCX2=DFOUR(3,2)/DHC12 
jetset74.F:        DHCXX=1D0/SQRT(1D0+2D0*DHCX1*DHCX2*DHC12) 
jetset74.F:        DHCY1=DFOUR(4,1)/DHC12 
jetset74.F:        DHCY2=DFOUR(4,2)/DHC12 
jetset74.F:        DHCYX=DHCXX*(DHCX1*DHCY2+DHCX2*DHCY1)*DHC12 
jetset74.F:        DHCYY=1D0/SQRT(1D0+2D0*DHCY1*DHCY2*DHC12-DHCYX**2) 
jetset74.F:        DO 730 J=1,4 
jetset74.F:        DP(3,J)=DHCXX*(DP(3,J)-DHCX2*DP(1,J)-DHCX1*DP(2,J)) 
jetset74.F:        P(IN3+1,J)=DHCYY*(DP(4,J)-DHCY2*DP(1,J)-DHCY1*DP(2,J)- 
jetset74.F:        DO 740 J=1,4 
jetset74.F:        P(IN3+3,J)=P(IN3+1,J) 
jetset74.F:      IF(MJU(1)+MJU(2).GT.0) THEN 
jetset74.F:        DO 770 JT=1,2 
jetset74.F:        DO 760 J=1,4 
jetset74.F:  780 I=I+1 
jetset74.F:        CALL LUERRM(11,'(LUSTRF:) no more memory left in LUJETS') 
jetset74.F:        IF(MSTU(21).GE.1) RETURN 
jetset74.F:      JT=1.5+RLU(0) 
jetset74.F:      IF(IABS(KFL(3-JT)).GT.10) JT=3-JT 
jetset74.F:      IRANK(JT)=IRANK(JT)+1 
jetset74.F:      K(I,1)=1 
jetset74.F:      IF(MSTJ(12).GE.3.AND.IRANK(JT).EQ.1.AND.IABS(KFL(JT)).LE.10.AND. 
jetset74.F:     &IABS(KFL(3)).GT.10) THEN 
jetset74.F:        IF(RLU(0).GT.PARJ(19)) GOTO 790 
jetset74.F:      MSTJ(93)=1 
jetset74.F:      IF(MSTJ(11).EQ.2) PARJST=PARJ(34) 
jetset74.F:      WMIN=PARJST+PMQ(1)+PMQ(2)+PARJ(36)*PMQ(3) 
jetset74.F:      IF(IABS(KFL(JT)).GT.10.AND.IABS(KFL(3)).GT.10) WMIN= 
jetset74.F:      IF(WREM2.LT.0.10) GOTO 640 
jetset74.F:      IF(WREM2.LT.MAX(WMIN*(1.+(2.*RLU(0)-1.)*PARJ(37)), 
jetset74.F:     &PARJ(32)+PMQ(1)+PMQ(2))**2) GOTO 940 
jetset74.F:        MSTU(90)=MSTU(90)+1 
jetset74.F:      KFL1A=IABS(KFL(1)) 
jetset74.F:      IF(MAX(MOD(KFL1A,10),MOD(KFL1A/1000,10),MOD(KFL2A,10), 
jetset74.F:     &MOD(KFL2A/1000,10)).GE.4) THEN 
jetset74.F:        PW12=SQRT(MAX(0.,(WREM2-PR(1)-PR(2))**2-4.*PR(1)*PR(2))) 
jetset74.F:        Z=(WREM2+PR(JT)-PR(JR)+PW12*(2.*Z-1.))/(2.*WREM2) 
jetset74.F:        IF((1.-Z)*(WREM2-PR(JT)/Z).LT.PR(JR)) GOTO 940 
jetset74.F:      GAM(3)=(1.-Z)*(GAM(JT)+PR(JT)/Z) 
jetset74.F:      DO 800 J=1,3 
jetset74.F:      IF(IN(1)+1.EQ.IN(2).AND.Z*P(IN(1)+2,3)*P(IN(2)+2,3)* 
jetset74.F:     &P(IN(1),5)**2.GE.PR(JT)) THEN 
jetset74.F:        P(IN(JR)+2,4)=PR(JT)/(P(IN(JT)+2,4)*P(IN(1),5)**2) 
jetset74.F:        DO 810 J=1,4 
jetset74.F:        P(I,J)=(PX(JT)+PX(3))*P(IN(3),J)+(PY(JT)+PY(3))*P(IN(3)+1,J) 
jetset74.F:  810   CONTINUE 
jetset74.F:      ELSEIF(IN(1)+1.EQ.IN(2)) THEN 
jetset74.F:        P(IN(JR)+2,JT)=1. 
jetset74.F:        IF(FOUR(IN(1),IN(2)).LE.1E-2) THEN 
jetset74.F:  820 IF(JS*IN(1).GT.JS*IN(3*JR+1).OR.JS*IN(2).GT.JS*IN(3*JR+2).OR. 
jetset74.F:     &IN(1).GT.IN(2)) GOTO 640 
jetset74.F:      IF(IN(1).NE.IN(3*JT+1).OR.IN(2).NE.IN(3*JT+2)) THEN 
jetset74.F:        DO 830 J=1,4 
jetset74.F:        DP(1,J)=P(IN(1),J) 
jetset74.F:        DP(1,4)=SQRT(DP(1,1)**2+DP(1,2)**2+DP(1,3)**2) 
jetset74.F:        DP(2,4)=SQRT(DP(2,1)**2+DP(2,2)**2+DP(2,3)**2) 
jetset74.F:        DHC12=DFOUR(1,2) 
jetset74.F:        IF(DHC12.LE.1E-2) THEN 
jetset74.F:        DP(5,1)=DP(1,1)/DP(1,4)-DP(2,1)/DP(2,4) 
jetset74.F:        DP(5,2)=DP(1,2)/DP(1,4)-DP(2,2)/DP(2,4) 
jetset74.F:        DP(5,3)=DP(1,3)/DP(1,4)-DP(2,3)/DP(2,4) 
jetset74.F:        IF(DP(5,1)**2.LE.DP(5,2)**2+DP(5,3)**2) DP(3,1)=1. 
jetset74.F:        IF(DP(5,1)**2.GT.DP(5,2)**2+DP(5,3)**2) DP(3,3)=1. 
jetset74.F:        IF(DP(5,2)**2.LE.DP(5,1)**2+DP(5,3)**2) DP(4,2)=1. 
jetset74.F:        IF(DP(5,2)**2.GT.DP(5,1)**2+DP(5,3)**2) DP(4,3)=1. 
jetset74.F:        DHCX1=DFOUR(3,1)/DHC12 
jetset74.F:        DHCX2=DFOUR(3,2)/DHC12 
jetset74.F:        DHCXX=1D0/SQRT(1D0+2D0*DHCX1*DHCX2*DHC12) 
jetset74.F:        DHCY1=DFOUR(4,1)/DHC12 
jetset74.F:        DHCY2=DFOUR(4,2)/DHC12 
jetset74.F:        DHCYX=DHCXX*(DHCX1*DHCY2+DHCX2*DHCY1)*DHC12 
jetset74.F:        DHCYY=1D0/SQRT(1D0+2D0*DHCY1*DHCY2*DHC12-DHCYX**2) 
jetset74.F:        DO 840 J=1,4 
jetset74.F:        DP(3,J)=DHCXX*(DP(3,J)-DHCX2*DP(1,J)-DHCX1*DP(2,J)) 
jetset74.F:        P(IN(3)+1,J)=DHCYY*(DP(4,J)-DHCY2*DP(1,J)-DHCY1*DP(2,J)- 
jetset74.F:     &  FOUR(IN(3*JT+3)+1,IN(3))) 
jetset74.F:        PYP=-(PX(3)*FOUR(IN(3*JT+3),IN(3)+1)+PY(3)* 
jetset74.F:     &  FOUR(IN(3*JT+3)+1,IN(3)+1)) 
jetset74.F:        IF(ABS(PXP**2+PYP**2-PX(3)**2-PY(3)**2).LT.0.01) THEN 
jetset74.F:      DO 870 J=1,4 
jetset74.F:      P(I,J)=PX(JT)*P(IN(3*JT+3),J)+PY(JT)*P(IN(3*JT+3)+1,J)+ 
jetset74.F:     &PX(3)*P(IN(3),J)+PY(3)*P(IN(3)+1,J) 
jetset74.F:      DO 850 IN1=IN(3*JT+1),IN(1)-4*JS,4*JS 
jetset74.F:      P(I,J)=P(I,J)+P(IN1+2,3)*P(IN1,J) 
jetset74.F:      DHM(1)=FOUR(I,I) 
jetset74.F:      DHM(2)=2.*FOUR(I,IN(1)) 
jetset74.F:      DHM(4)=2.*FOUR(IN(1),IN(2)) 
jetset74.F:      DO 890 IN2=IN(1)+1,IN(2),4 
jetset74.F:      DO 880 IN1=IN(1),IN2-1,4 
jetset74.F:      DHC=2.*FOUR(IN1,IN2) 
jetset74.F:      DHG(1)=DHG(1)+P(IN1+2,JT)*P(IN2+2,JT)*DHC 
jetset74.F:      IF(IN1.EQ.IN(1)) DHG(2)=DHG(2)-JS*P(IN2+2,JT)*DHC 
jetset74.F:      IF(IN2.EQ.IN(2)) DHG(3)=DHG(3)+JS*P(IN1+2,JT)*DHC 
jetset74.F:      IF(IN1.EQ.IN(1).AND.IN2.EQ.IN(2)) DHG(4)=DHG(4)-DHC 
jetset74.F:      DHS1=DHM(JR+1)*DHG(4)-DHM(4)*DHG(JR+1) 
jetset74.F:      IF(ABS(DHS1).LT.1E-4) GOTO 640 
jetset74.F:      DHS2=DHM(4)*(GAM(3)-DHG(1))-DHM(JT+1)*DHG(JR+1)-DHG(4)* 
jetset74.F:     &(P(I,5)**2-DHM(1))+DHG(JT+1)*DHM(JR+1) 
jetset74.F:      DHS3=DHM(JT+1)*(GAM(3)-DHG(1))-DHG(JT+1)*(P(I,5)**2-DHM(1)) 
jetset74.F:      P(IN(JR)+2,4)=0.5*(SQRT(MAX(0D0,DHS2**2-4.*DHS1*DHS3))/ABS(DHS1)- 
jetset74.F:     &DHS2/DHS1) 
jetset74.F:      IF(DHM(JT+1)+DHM(4)*P(IN(JR)+2,4).LE.0.) GOTO 640 
jetset74.F:      P(IN(JT)+2,4)=(P(I,5)**2-DHM(1)-DHM(JR+1)*P(IN(JR)+2,4))/ 
jetset74.F:     &(DHM(JT+1)+DHM(4)*P(IN(JR)+2,4)) 
jetset74.F:        P(IN(JR)+2,JT)=1. 
jetset74.F:        IF(FOUR(IN(1),IN(2)).LE.1E-2) THEN 
jetset74.F:  900 DO 910 J=1,4 
jetset74.F:      P(I,J)=P(I,J)+P(IN(1)+2,4)*P(IN(1),J)+P(IN(2)+2,4)*P(IN(2),J) 
jetset74.F:  910 CONTINUE 
jetset74.F:        DO 920 J=1,4 
jetset74.F:        P(IN(3*JT+3)+1,J)=P(IN(3)+1,J) 
jetset74.F:      DO 930 JQ=1,2 
jetset74.F:  940 I=I+1 
jetset74.F:      K(I,1)=1 
jetset74.F:      JQ=1 
jetset74.F:      DHC12=FOUR(IN(3*JQ+1),IN(3*JQ+2)) 
jetset74.F:      DHR1=FOUR(N+NRS,IN(3*JQ+2))/DHC12 
jetset74.F:      DHR2=FOUR(N+NRS,IN(3*JQ+1))/DHC12 
jetset74.F:        PY(3-JQ)=-FOUR(N+NRS,IN(3*JQ+3)+1)-PY(JQ) 
jetset74.F:        PR(3-JQ)=P(I+(JT+JQ-3)**2-1,5)**2+(PX(3-JQ)+(2*JQ-3)*JS* 
jetset74.F:      WREM2=WREM2+(PX(1)+PX(2))**2+(PY(1)+PY(2))**2 
jetset74.F:      FD=(SQRT(PR(1))+SQRT(PR(2)))/SQRT(WREM2) 
jetset74.F:      IF(MJU(1)+MJU(2).NE.0.AND.I.EQ.ISAV+2.AND.FD.GE.1.) GOTO 200 
jetset74.F:      IF(FD.GE.1.) GOTO 640 
jetset74.F:      IF(MSTJ(11).NE.2) PREV=0.5*EXP(MAX(-50.,LOG(FD)*PARJ(38)* 
jetset74.F:     &(PR(1)+PR(2))**2)) 
jetset74.F:      IF(MSTJ(11).EQ.2) PREV=0.5*FD**PARJ(39) 
jetset74.F:      KFL1A=IABS(KFL(1)) 
jetset74.F:      IF(MAX(MOD(KFL1A,10),MOD(KFL1A/1000,10),MOD(KFL2A,10), 
jetset74.F:     &MOD(KFL2A/1000,10)).GE.6) FB=SIGN(SQRT(MAX(0.,FA**2- 
jetset74.F:      DO 950 J=1,4 
jetset74.F:      P(I-1,J)=(PX(JT)+PX(3))*P(IN(3*JQ+3),J)+(PY(JT)+PY(3))* 
jetset74.F:     &P(IN(3*JQ+3)+1,J)+0.5*(DHR1*(FA+FB)*P(IN(3*JQ+1),J)+ 
jetset74.F:      P(I,J)=P(N+NRS,J)-P(I-1,J) 
jetset74.F:      IF(P(I-1,4).LT.P(I-1,5).OR.P(I,4).LT.P(I,5)) GOTO 640 
jetset74.F:      N=I-NRS+1 
jetset74.F:      DO 960 I=NSAV+1,NSAV+NP 
jetset74.F:      K(IM,1)=K(IM,1)+10 
jetset74.F:      IF(MSTU(16).NE.2) THEN 
jetset74.F:        K(IM,4)=NSAV+1 
jetset74.F:        K(IM,5)=NSAV+1 
jetset74.F:      NSAV=NSAV+1 
jetset74.F:      K(NSAV,1)=11 
jetset74.F:      K(NSAV,4)=NSAV+1 
jetset74.F:      DO 970 J=1,4 
jetset74.F:      P(NSAV,5)=SQRT(MAX(0D0,DPS(4)**2-DPS(1)**2-DPS(2)**2-DPS(3)**2)) 
jetset74.F:      DO 990 I=NSAV+1,N 
jetset74.F:      DO 980 J=1,5 
jetset74.F:      K(I,J)=K(I+NRS-1,J) 
jetset74.F:      P(I,J)=P(I+NRS-1,J) 
jetset74.F:      MSTU91=MSTU(90) 
jetset74.F:      DO 1000 IZ=MSTU90+1,MSTU91 
jetset74.F:      MSTU9T(IZ)=MSTU(90+IZ)-NRS+1-NSAV+N 
jetset74.F: 1000 CONTINUE 
jetset74.F:      DO 1020 I=NSAV+1,N 
jetset74.F:      DO 1010 J=1,5 
jetset74.F: 1010 CONTINUE 
jetset74.F: 1020 CONTINUE 
jetset74.F:      I1=NSAV 
jetset74.F:      DO 1050 I=N+1,2*N-NSAV 
jetset74.F:      IF(K(I,3).NE.IE(1)) GOTO 1050 
jetset74.F:      I1=I1+1 
jetset74.F:      DO 1030 J=1,5 
jetset74.F:      K(I1,J)=K(I,J) 
jetset74.F:      P(I1,J)=P(I,J) 
jetset74.F: 1030 CONTINUE 
jetset74.F:      IF(MSTU(16).NE.2) K(I1,3)=NSAV 
jetset74.F:      DO 1040 IZ=MSTU90+1,MSTU91 
jetset74.F:        MSTU(90)=MSTU(90)+1 
jetset74.F:        MSTU(90+MSTU(90))=I1 
jetset74.F: 1040 CONTINUE 
jetset74.F: 1050 CONTINUE 
jetset74.F:      DO 1080 I=2*N-NSAV,N+1,-1 
jetset74.F:      IF(K(I,3).EQ.IE(1)) GOTO 1080 
jetset74.F:      I1=I1+1 
jetset74.F:      DO 1060 J=1,5 
jetset74.F:      K(I1,J)=K(I,J) 
jetset74.F:      P(I1,J)=P(I,J) 
jetset74.F: 1060 CONTINUE 
jetset74.F:      IF(MSTU(16).NE.2) K(I1,3)=NSAV 
jetset74.F:      DO 1070 IZ=MSTU90+1,MSTU91 
jetset74.F:        MSTU(90)=MSTU(90)+1 
jetset74.F:        MSTU(90+MSTU(90))=I1 
jetset74.F: 1070 CONTINUE 
jetset74.F: 1080 CONTINUE 
jetset74.F:        MSTU(33)=1 
jetset74.F:        CALL LUDBRB(NSAV+1,N,0.,0.,DPS(1)/DPS(4),DPS(2)/DPS(4), 
jetset74.F:        DO 1090 I=NSAV+1,N 
jetset74.F:        HHPMT=P(I,1)**2+P(I,2)**2+P(I,5)**2 
jetset74.F: 1090   CONTINUE 
jetset74.F:      DO 1110 I=NSAV+1,N 
jetset74.F:      DO 1100 J=1,4 
jetset74.F: 1100 CONTINUE 
jetset74.F: 1110 CONTINUE 
jetset74.F:      COMMON/LUDAT1/MSTU(200),PARU(200),MSTJ(200),PARJ(200) 
jetset74.F:      SAVE /LUJETS/,/LUDAT1/,/LUDAT2/ 
jetset74.F:      DO 100 J=1,5 
jetset74.F:  100 CONTINUE 
jetset74.F:      I=IP-1 
jetset74.F:  110 I=I+1 
jetset74.F:        CALL LUERRM(12,'(LUINDF:) failed to reconstruct jet system') 
jetset74.F:        IF(MSTU(21).GE.1) RETURN 
jetset74.F:      IF(K(I,1).NE.1.AND.K(I,1).NE.2) GOTO 110 
jetset74.F:      IF(KC.EQ.0) GOTO 110 
jetset74.F:      KQ=KCHG(KC,2)*ISIGN(1,K(I,2)) 
jetset74.F:      IF(KQ.EQ.0) GOTO 110 
jetset74.F:      NJET=NJET+1 
jetset74.F:      DO 120 J=1,5 
jetset74.F:  120 CONTINUE 
jetset74.F:      IF(K(I,1).EQ.2.OR.(MSTJ(3).LE.5.AND.N.GT.I.AND. 
jetset74.F:     &K(I+1,1).EQ.2)) GOTO 110 
jetset74.F:      IF(NJET.NE.1.AND.KQSUM.NE.0) THEN 
jetset74.F:        CALL LUERRM(12,'(LUINDF:) unphysical flavour combination') 
jetset74.F:        IF(MSTU(21).GE.1) RETURN 
jetset74.F:      IF(NJET.NE.1) THEN 
jetset74.F:        MSTU(33)=1 
jetset74.F:        CALL LUDBRB(NSAV+1,NSAV+NJET,0.,0.,-DPS(1)/DPS(4), 
jetset74.F:      DO 130 J=1,3 
jetset74.F:  130 CONTINUE 
jetset74.F:      DO 140 I=NSAV+1,NSAV+NJET 
jetset74.F:        NFI(KFA)=NFI(KFA)+ISIGN(1,K(I,2)) 
jetset74.F:      ELSEIF(KFA.GT.1000) THEN 
jetset74.F:        KFLA=MOD(KFA/1000,10) 
jetset74.F:        KFLB=MOD(KFA/100,10) 
jetset74.F:        IF(KFLA.LE.3) NFI(KFLA)=NFI(KFLA)+ISIGN(1,K(I,2)) 
jetset74.F:        IF(KFLB.LE.3) NFI(KFLB)=NFI(KFLB)+ISIGN(1,K(I,2)) 
jetset74.F:  140 CONTINUE 
jetset74.F:  150 NTRY=NTRY+1 
jetset74.F:        CALL LUERRM(14,'(LUINDF:) caught in infinite loop') 
jetset74.F:        IF(MSTU(21).GE.1) RETURN 
jetset74.F:      DO 160 J=1,3 
jetset74.F:  160 CONTINUE 
jetset74.F:      DO 230 IP1=NSAV+1,NSAV+NJET 
jetset74.F:      MSTJ(91)=0 
jetset74.F:      NSAV1=N 
jetset74.F:      MSTU91=MSTU(90) 
jetset74.F:      KFLH=IABS(K(IP1,2)) 
jetset74.F:      IF(KFLH.GT.10) KFLH=MOD(KFLH/1000,10) 
jetset74.F:      WF=P(IP1,4)+SQRT(P(IP1,1)**2+P(IP1,2)**2+P(IP1,3)**2) 
jetset74.F:  170 IF(IABS(K(IP1,2)).NE.21) THEN 
jetset74.F:        NSTR=1 
jetset74.F:        KFLO(1)=K(IP1,2) 
jetset74.F:        CALL LUPTDI(0,PXO(1),PYO(1)) 
jetset74.F:        WO(1)=WF 
jetset74.F:        NSTR=1 
jetset74.F:        IF(MSTJ(2).EQ.2) MSTJ(91)=1 
jetset74.F:        KFLO(1)=INT(1.+(2.+PARJ(2))*RLU(0))*(-1)**INT(RLU(0)+0.5) 
jetset74.F:        CALL LUPTDI(0,PXO(1),PYO(1)) 
jetset74.F:        WO(1)=WF 
jetset74.F:        IF(MSTJ(2).EQ.4) MSTJ(91)=1 
jetset74.F:        KFLO(1)=INT(1.+(2.+PARJ(2))*RLU(0))*(-1)**INT(RLU(0)+0.5) 
jetset74.F:        KFLO(2)=-KFLO(1) 
jetset74.F:        CALL LUPTDI(0,PXO(1),PYO(1)) 
jetset74.F:        PXO(2)=-PXO(1) 
jetset74.F:        PYO(2)=-PYO(1) 
jetset74.F:        WO(1)=WF*RLU(0)**(1./3.) 
jetset74.F:        WO(2)=WF-WO(1) 
jetset74.F:      DO 220 ISTR=1,NSTR 
jetset74.F:  180 I=N 
jetset74.F:      MSTU(90)=MSTU91 
jetset74.F:      KFL1=KFLO(ISTR) 
jetset74.F:      PX1=PXO(ISTR) 
jetset74.F:      PY1=PYO(ISTR) 
jetset74.F:  190 I=I+1 
jetset74.F:        CALL LUERRM(11,'(LUINDF:) no more memory left in LUJETS') 
jetset74.F:        IF(MSTU(21).GE.1) RETURN 
jetset74.F:      IRANK=IRANK+1 
jetset74.F:      K(I,1)=1 
jetset74.F:      K(I,3)=IP1 
jetset74.F:  200 CALL LUKFDI(KFL1,0,KFL2,K(I,2)) 
jetset74.F:      IF(K(I,2).EQ.0) GOTO 180 
jetset74.F:      IF(MSTJ(12).GE.3.AND.IRANK.EQ.1.AND.IABS(KFL1).LE.10.AND. 
jetset74.F:     &IABS(KFL2).GT.10) THEN 
jetset74.F:        IF(RLU(0).GT.PARJ(19)) GOTO 200 
jetset74.F:      CALL LUPTDI(KFL1,PX2,PY2) 
jetset74.F:      P(I,1)=PX1+PX2 
jetset74.F:      P(I,2)=PY1+PY2 
jetset74.F:      PR=P(I,5)**2+P(I,1)**2+P(I,2)**2 
jetset74.F:      CALL LUZDIS(KFL1,KFL2,PR,Z) 
jetset74.F:      IF(IABS(KFL1).GE.4.AND.IABS(KFL1).LE.8.AND.MSTU(90).LT.8) THEN 
jetset74.F:        MZSAV=1 
jetset74.F:        MSTU(90)=MSTU(90)+1 
jetset74.F:      IF(MSTJ(3).GE.1.AND.IRANK.EQ.1.AND.KFLH.GE.4.AND. 
jetset74.F:     &P(I,3).LE.0.001) THEN 
jetset74.F:        IF(W.GE.P(I,5)+0.5*PARJ(32)) GOTO 180 
jetset74.F:        P(I,3)=0.0001 
jetset74.F:      KFL1=-KFL2 
jetset74.F:      PX1=-PX2 
jetset74.F:      PY1=-PY2 
jetset74.F:      W=(1.-Z)*W 
jetset74.F:      DO 210 J=1,5 
jetset74.F:  210 CONTINUE 
jetset74.F:        I=I-1 
jetset74.F:        IF(MZSAV.EQ.1) MSTU(90)=MSTU(90)-1 
jetset74.F:      IF(W.GT.PARJ(31)) GOTO 190 
jetset74.F:      IF(MOD(MSTJ(3),5).EQ.4.AND.N.EQ.NSAV1) WF=WF+0.1*PARJ(32) 
jetset74.F:      IF(MOD(MSTJ(3),5).EQ.4.AND.N.EQ.NSAV1) GOTO 170 
jetset74.F:      THE=ulangl(P(IP1,3),SQRT(P(IP1,1)**2+P(IP1,2)**2)) 
jetset74.F:      PHI=ulangl(P(IP1,1),P(IP1,2)) 
jetset74.F:      MSTU(33)=1 
jetset74.F:      CALL LUDBRB(NSAV1+1,N,THE,PHI,0D0,0D0,0D0) 
jetset74.F:      K(K(IP1,3),4)=NSAV1+1 
jetset74.F:      K(K(IP1,3),5)=N 
jetset74.F:      IF(NJET.EQ.1.OR.MSTJ(3).LE.0) GOTO 490 
jetset74.F:      IF(MOD(MSTJ(3),5).NE.0.AND.N-NSAV-NJET.LT.2) GOTO 150 
jetset74.F:      DO 240 I=NSAV+NJET+1,N 
jetset74.F:      KFLA=MOD(KFA/1000,10) 
jetset74.F:      KFLB=MOD(KFA/100,10) 
jetset74.F:      KFLC=MOD(KFA/10,10) 
jetset74.F:        IF(KFLB.LE.3) NFL(KFLB)=NFL(KFLB)-ISIGN(1,K(I,2))*(-1)**KFLB 
jetset74.F:        IF(KFLC.LE.3) NFL(KFLC)=NFL(KFLC)+ISIGN(1,K(I,2))*(-1)**KFLB 
jetset74.F:        IF(KFLA.LE.3) NFL(KFLA)=NFL(KFLA)-ISIGN(1,K(I,2)) 
jetset74.F:        IF(KFLB.LE.3) NFL(KFLB)=NFL(KFLB)-ISIGN(1,K(I,2)) 
jetset74.F:        IF(KFLC.LE.3) NFL(KFLC)=NFL(KFLC)-ISIGN(1,K(I,2)) 
jetset74.F:      NREQ=(IABS(NFL(1))+IABS(NFL(2))+IABS(NFL(3))-IABS(NFL(1)+ 
jetset74.F:     &NFL(2)+NFL(3)))/2+IABS(NFL(1)+NFL(2)+NFL(3))/3 
jetset74.F:      DO 260 I=NSAV+NJET+1,N 
jetset74.F:      P2=P(I,1)**2+P(I,2)**2+P(I,3)**2 
jetset74.F:      IF(K(I,1).EQ.1.AND.P2.LT.P2MIN) IREM=I 
jetset74.F:      IF(K(I,1).EQ.1.AND.P2.LT.P2MIN) P2MIN=P2 
jetset74.F:      IF(IREM.EQ.0) GOTO 150 
jetset74.F:      K(IREM,1)=7 
jetset74.F:      KFLA=MOD(KFA/1000,10) 
jetset74.F:      KFLB=MOD(KFA/100,10) 
jetset74.F:      KFLC=MOD(KFA/10,10) 
jetset74.F:      IF(KFLA.GE.4.OR.KFLB.GE.4) K(IREM,1)=8 
jetset74.F:      IF(K(IREM,1).EQ.8) GOTO 250 
jetset74.F:        ISGN=ISIGN(1,K(IREM,2))*(-1)**KFLB 
jetset74.F:        IF(KFLA.LE.3) NFL(KFLA)=NFL(KFLA)+ISIGN(1,K(IREM,2)) 
jetset74.F:        IF(KFLB.LE.3) NFL(KFLB)=NFL(KFLB)+ISIGN(1,K(IREM,2)) 
jetset74.F:        IF(KFLC.LE.3) NFL(KFLC)=NFL(KFLC)+ISIGN(1,K(IREM,2)) 
jetset74.F:      NREM=NREM+1 
jetset74.F:      NREQ=(IABS(NFL(1))+IABS(NFL(2))+IABS(NFL(3))-IABS(NFL(1)+ 
jetset74.F:     &NFL(2)+NFL(3)))/2+IABS(NFL(1)+NFL(2)+NFL(3))/3 
jetset74.F:      DO 270 I=NSAV+NJET+1,N 
jetset74.F:      IF(K(I,1).EQ.8) K(I,1)=1 
jetset74.F:      IF(NFL(1)+NFL(2)+NFL(3).NE.0) NFET=3 
jetset74.F:      IF(NREQ.LT.NREM) NFET=1 
jetset74.F:      IF(IABS(NFL(1))+IABS(NFL(2))+IABS(NFL(3)).EQ.0) NFET=0 
jetset74.F:      DO 290 J=1,NFET 
jetset74.F:      IFET(J)=1+(IABS(NFL(1))+IABS(NFL(2))+IABS(NFL(3)))*RLU(0) 
jetset74.F:      KFLF(J)=ISIGN(1,NFL(1)) 
jetset74.F:      IF(IFET(J).GT.IABS(NFL(1))) KFLF(J)=ISIGN(2,NFL(2)) 
jetset74.F:      IF(IFET(J).GT.IABS(NFL(1))+IABS(NFL(2))) KFLF(J)=ISIGN(3,NFL(3)) 
jetset74.F:      IF(NFET.EQ.2.AND.(IFET(1).EQ.IFET(2).OR.KFLF(1)*KFLF(2).GT.0)) 
jetset74.F:      IF(NFET.EQ.3.AND.(IFET(1).EQ.IFET(2).OR.IFET(1).EQ.IFET(3).OR. 
jetset74.F:     &IFET(2).EQ.IFET(3).OR.KFLF(1)*KFLF(2).LT.0.OR.KFLF(1)*KFLF(3) 
jetset74.F:     &.LT.0.OR.KFLF(1)*(NFL(1)+NFL(2)+NFL(3)).LT.0)) GOTO 280 
jetset74.F:      IF(NFET.EQ.0) KFLF(1)=1+INT((2.+PARJ(2))*RLU(0)) 
jetset74.F:      IF(NFET.EQ.0) KFLF(2)=-KFLF(1) 
jetset74.F:      IF(NFET.EQ.1) KFLF(2)=ISIGN(1+INT((2.+PARJ(2))*RLU(0)),-KFLF(1)) 
jetset74.F:        KFLFC=ISIGN(1000*MAX(IABS(KFLF(1)),IABS(KFLF(3)))+ 
jetset74.F:     &  100*MIN(IABS(KFLF(1)),IABS(KFLF(3)))+1,KFLF(1)) 
jetset74.F:        IF(KFLF(1).EQ.KFLF(3).OR.(1.+3.*PARJ(4))*RLU(0).GT.1.) 
jetset74.F:        KFLFC=KFLF(1) 
jetset74.F:      DO 300 J=1,MAX(2,NFET) 
jetset74.F:      NFL(IABS(KFLF(J)))=NFL(IABS(KFLF(J)))-ISIGN(1,KFLF(J)) 
jetset74.F:      NPOS=MIN(1+INT(RLU(0)*NREM),NREM) 
jetset74.F:      DO 310 I=NSAV+NJET+1,N 
jetset74.F:      IF(K(I,1).EQ.7) NPOS=NPOS-1 
jetset74.F:      IF(K(I,1).EQ.1.OR.NPOS.NE.0) GOTO 310 
jetset74.F:      K(I,1)=1 
jetset74.F:      P(I,4)=SQRT(P(I,1)**2+P(I,2)**2+P(I,3)**2+P(I,5)**2) 
jetset74.F:  310 CONTINUE 
jetset74.F:      NREM=NREM-1 
jetset74.F:      NREQ=(IABS(NFL(1))+IABS(NFL(2))+IABS(NFL(3))-IABS(NFL(1)+ 
jetset74.F:     &NFL(2)+NFL(3)))/2+IABS(NFL(1)+NFL(2)+NFL(3))/3 
jetset74.F:        DO 340 J=1,3 
jetset74.F:        DO 330 I=NSAV+NJET+1,N 
jetset74.F:        PSI(4)=PSI(1)**2+PSI(2)**2+PSI(3)**2 
jetset74.F:        DO 350 I=NSAV+NJET+1,N 
jetset74.F:        IF(MOD(MSTJ(3),5).EQ.1) PWS=PWS+P(I,4) 
jetset74.F:        IF(MOD(MSTJ(3),5).EQ.2) PWS=PWS+SQRT(P(I,5)**2+(PSI(1)*P(I,1)+ 
jetset74.F:        IF(MOD(MSTJ(3),5).EQ.3) PWS=PWS+1. 
jetset74.F:        DO 370 I=NSAV+NJET+1,N 
jetset74.F:        IF(MOD(MSTJ(3),5).EQ.1) PW=P(I,4) 
jetset74.F:        IF(MOD(MSTJ(3),5).EQ.2) PW=SQRT(P(I,5)**2+(PSI(1)*P(I,1)+ 
jetset74.F:        IF(MOD(MSTJ(3),5).EQ.3) PW=1. 
jetset74.F:        DO 360 J=1,3 
jetset74.F:        P(I,4)=SQRT(P(I,1)**2+P(I,2)**2+P(I,3)**2+P(I,5)**2) 
jetset74.F:        DO 390 I=N+1,N+NJET 
jetset74.F:        K(I,1)=0 
jetset74.F:        DO 380 J=1,5 
jetset74.F:        DO 410 I=NSAV+NJET+1,N 
jetset74.F:        IR1=K(I,3) 
jetset74.F:        IR2=N+IR1-NSAV 
jetset74.F:        K(IR2,1)=K(IR2,1)+1 
jetset74.F:        PLS=(P(I,1)*P(IR1,1)+P(I,2)*P(IR1,2)+P(I,3)*P(IR1,3))/ 
jetset74.F:     &  (P(IR1,1)**2+P(IR1,2)**2+P(IR1,3)**2) 
jetset74.F:        DO 400 J=1,3 
jetset74.F:        P(IR2,J)=P(IR2,J)+P(I,J)-PLS*P(IR1,J) 
jetset74.F:  410   CONTINUE 
jetset74.F:        DO 420 I=N+1,N+NJET 
jetset74.F:        IF(K(I,1).NE.0) PSS=PSS+P(I,4)/(PECM*(0.8*P(I,5)+0.2)) 
jetset74.F:        DO 440 I=NSAV+NJET+1,N 
jetset74.F:        IR1=K(I,3) 
jetset74.F:        IR2=N+IR1-NSAV 
jetset74.F:        PLS=(P(I,1)*P(IR1,1)+P(I,2)*P(IR1,2)+P(I,3)*P(IR1,3))/ 
jetset74.F:     &  (P(IR1,1)**2+P(IR1,2)**2+P(IR1,3)**2) 
jetset74.F:        DO 430 J=1,3 
jetset74.F:        P(I,J)=P(I,J)-P(IR2,J)/K(IR2,1)+(1./(P(IR2,5)*PSS)-1.)*PLS* 
jetset74.F:     &  P(IR1,J) 
jetset74.F:        P(I,4)=SQRT(P(I,1)**2+P(I,2)**2+P(I,3)**2+P(I,5)**2) 
jetset74.F:        DO 450 I=NSAV+NJET+1,N 
jetset74.F:        IF(PMS.GE.PECM) GOTO 150 
jetset74.F:  460   NECO=NECO+1 
jetset74.F:        DO 480 I=NSAV+NJET+1,N 
jetset74.F:        DO 470 J=1,3 
jetset74.F:        P(I,4)=SQRT(P(I,1)**2+P(I,2)**2+P(I,3)**2+P(I,5)**2) 
jetset74.F:        IF(NECO.LT.10.AND.ABS(PECM-PES).GT.2E-6*PECM) GOTO 460 
jetset74.F:  490 DO 500 I=NSAV+NJET+1,N 
jetset74.F:      IF(MSTU(16).NE.2) K(I,3)=NSAV+1 
jetset74.F:      IF(MSTU(16).EQ.2) K(I,3)=K(K(I,3),3) 
jetset74.F:      DO 510 I=NSAV+1,NSAV+NJET 
jetset74.F:      I1=K(I,3) 
jetset74.F:      K(I1,1)=K(I1,1)+10 
jetset74.F:      IF(MSTU(16).NE.2) THEN 
jetset74.F:        K(I1,4)=NSAV+1 
jetset74.F:        K(I1,5)=NSAV+1 
jetset74.F:        K(I1,4)=K(I1,4)-NJET+1 
jetset74.F:        K(I1,5)=K(I1,5)-NJET+1 
jetset74.F:        IF(K(I1,5).LT.K(I1,4)) THEN 
jetset74.F:          K(I1,4)=0 
jetset74.F:          K(I1,5)=0 
jetset74.F:  510 CONTINUE 
jetset74.F:      NSAV=NSAV+1 
jetset74.F:      K(NSAV,1)=11 
jetset74.F:      K(NSAV,4)=NSAV+1 
jetset74.F:      K(NSAV,5)=N-NJET+1 
jetset74.F:      DO 520 J=1,4 
jetset74.F:      P(NSAV,5)=SQRT(MAX(0D0,DPS(4)**2-DPS(1)**2-DPS(2)**2-DPS(3)**2)) 
jetset74.F:      DO 530 J=1,5 
jetset74.F:      K(I-NJET+1,J)=K(I,J) 
jetset74.F:      P(I-NJET+1,J)=P(I,J) 
jetset74.F:      V(I-NJET+1,J)=V(I,J) 
jetset74.F:      N=N-NJET+1 
jetset74.F:      DO 550 IZ=MSTU90+1,MSTU(90) 
jetset74.F:      MSTU(90+IZ)=MSTU(90+IZ)-NJET+1 
jetset74.F:      IF(NJET.NE.1) CALL LUDBRB(NSAV+1,N,0.,0.,DPS(1)/DPS(4), 
jetset74.F:      DO 570 I=NSAV+1,N 
jetset74.F:      DO 560 J=1,4 
jetset74.F:      COMMON/LUDAT1/MSTU(200),PARU(200),MSTJ(200),PARJ(200) 
jetset74.F:      SAVE /LUJETS/,/LUDAT1/,/LUDAT2/,/LUDAT3/ 
jetset74.F:      DIMENSION VDCY(4),KFLO(4),KFL1(4),PV(10,5),RORD(10),UE(3),BE(3), 
jetset74.F:     &WTCOR(10),PTAU(4),PCMTAU(4) 
jetset74.F:      DATA WTCOR/2.,5.,15.,60.,250.,1500.,1.2E4,1.2E5,150.,16./ 
jetset74.F:      FOUR(I,J)=P(I,4)*P(J,4)-P(I,1)*P(J,1)-P(I,2)*P(J,2)-P(I,3)*P(J,3) 
jetset74.F:      HMEPS(HA)=((1.-HRQ-HA)**2+3.*HA*(1.+HRQ-HA))* 
jetset74.F:     &SQRT((1.-HRQ-HA)**2-4.*HRQ*HA) 
jetset74.F:      KFS=ISIGN(1,K(IP,2)) 
jetset74.F:      IF(K(IP,1).EQ.5) THEN 
jetset74.F:      ELSEIF(K(IP,1).NE.4) THEN 
jetset74.F:      DO 100 J=1,4 
jetset74.F:  100 CONTINUE 
jetset74.F:        IF(PMAS(KC,4).GT.PARJ(71)) MOUT=1 
jetset74.F:        IF(VDCY(1)**2+VDCY(2)**2+VDCY(3)**2.GT.PARJ(72)**2) MOUT=1 
jetset74.F:        IF(VDCY(1)**2+VDCY(2)**2.GT.PARJ(73)**2) MOUT=1 
jetset74.F:        IF(ABS(VDCY(3)).GT.PARJ(74)) MOUT=1 
jetset74.F:      IF(MOUT.EQ.1.AND.K(IP,1).NE.5) THEN 
jetset74.F:        K(IP,1)=4 
jetset74.F:      IF(KFA.EQ.15.AND.MSTJ(28).GE.1) THEN 
jetset74.F:        DO 110 J=1,4 
jetset74.F:  110   CONTINUE 
jetset74.F:  120   IMTAU=K(IMTAU,3) 
jetset74.F:            DO 130 J=1,4 
jetset74.F:  130       CONTINUE 
jetset74.F:            DO 140 J=1,4 
jetset74.F:  140       CONTINUE 
jetset74.F:          GOTO 120 
jetset74.F:        ELSEIF(IABS(K(IMTAU,2)).GT.100) THEN 
jetset74.F:          DO 160 II=K(IMTAU,4),K(IMTAU,5) 
jetset74.F:          IF(K(II,2)*ISIGN(1,K(ITAU,2)).EQ.-16) THEN 
jetset74.F:            DO 150 J=1,4 
jetset74.F:  150       CONTINUE 
jetset74.F:  160     CONTINUE 
jetset74.F:          DO 170 II=IMTAU+1,IP-1 
jetset74.F:     &    ABS(P(II,5)-P(IORIG,5)).LT.1E-5*P(IORIG,5)) IORIG=II 
jetset74.F:  170     CONTINUE 
jetset74.F:          DO 180 J=1,4 
jetset74.F:  180     CONTINUE 
jetset74.F:        DO 190 J=1,3 
jetset74.F:  190   CONTINUE 
jetset74.F:        IF(KFORIG.NE.0) CALL LUDBRB(ITAU,ITAU,0.,0.,-DBETAU(1), 
jetset74.F:        PHITAU=ulangl(P(ITAU,1),P(ITAU,2)) 
jetset74.F:        THETAU=ulangl(P(ITAU,3),P(ITAU,1)) 
jetset74.F:          DO 200 II=NSAV+1,NSAV+NDECAY 
jetset74.F:          K(II,1)=1 
jetset74.F:        DO 210 J=1,4 
jetset74.F:  210   CONTINUE 
jetset74.F:          CALL LUDBRB(NSAV+1,N,THETAU,PHITAU,0D0,0D0,0D0) 
jetset74.F:          IF(KFORIG.NE.0) CALL LUDBRB(NSAV+1,N,0.,0.,DBETAU(1), 
jetset74.F:      IF((KFA.EQ.511.OR.KFA.EQ.531).AND.MSTJ(26).GE.1) THEN 
jetset74.F:        IF(KFA.EQ.531) XBBMIX=PARJ(77) 
jetset74.F:        IF(SIN(0.5*XBBMIX*V(IP,5)/PMAS(KC,4))**2.GT.RLU(0)) MMIX=1 
jetset74.F:        IF(MMIX.EQ.1) KFS=-KFS 
jetset74.F:      IF(MOD(KFA/1000,10).EQ.0.AND.(KCA.EQ.85.OR.KCA.EQ.87)) KFS=-KFS 
jetset74.F:        KFSP=1 
jetset74.F:        KFSP=1 
jetset74.F:        KFSN=1 
jetset74.F:      DO 230 IDL=MDCY(KCA,2),MDCY(KCA,2)+MDCY(KCA,3)-1 
jetset74.F:      IF(MDME(IDL,1).NE.1.AND.KFSP*MDME(IDL,1).NE.2.AND. 
jetset74.F:     &KFSN*MDME(IDL,1).NE.3) GOTO 230 
jetset74.F:      IF(MDME(IDL,2).GT.100) GOTO 230 
jetset74.F:      NOPE=NOPE+1 
jetset74.F:      IDL=MDCY(KCA,2)-1 
jetset74.F:  250 IDL=IDL+1 
jetset74.F:      IF(MDME(IDL,1).NE.1.AND.KFSP*MDME(IDL,1).NE.2.AND. 
jetset74.F:     &KFSN*MDME(IDL,1).NE.3) THEN 
jetset74.F:        IF(IDL.LT.MDCY(KCA,2)+MDCY(KCA,3)-1) GOTO 250 
jetset74.F:      ELSEIF(MDME(IDL,2).GT.100) THEN 
jetset74.F:        IF(IDL.LT.MDCY(KCA,2)+MDCY(KCA,3)-1) GOTO 250 
jetset74.F:        IF(IDL.LT.MDCY(KCA,2)+MDCY(KCA,3)-1.AND.RBR.GT.0.) GOTO 250 
jetset74.F:  260 NTRY=NTRY+1 
jetset74.F:      IF(NTRY.GT.1000) THEN 
jetset74.F:        CALL LUERRM(14,'(LUDECY:) caught in infinite loop') 
jetset74.F:        IF(MSTU(21).GE.1) RETURN 
jetset74.F:      IF(MMAT.GE.11.AND.MMAT.NE.46.AND.P(IP,4).GT.20.*P(IP,5)) MBST=1 
jetset74.F:      DO 270 J=1,4 
jetset74.F:      PV(1,J)=0. 
jetset74.F:      IF(MBST.EQ.0) PV(1,J)=P(IP,J) 
jetset74.F:      IF(MBST.EQ.1) PV(1,4)=P(IP,5) 
jetset74.F:      PV(1,5)=P(IP,5) 
jetset74.F:      IF(KFA.GT.80) MHADDY=1 
jetset74.F:      IF(MDME(IDC+1,2).EQ.101) JTMAX=10 
jetset74.F:      DO 280 JT=1,JTMAX 
jetset74.F:      IF(JT.GE.6) KP=KFDP(IDC+1,JT-5) 
jetset74.F:      IF(KPA.GT.80) MHADDY=1 
jetset74.F:      IF(KCHG(KCP,3).EQ.0.AND.KPA.NE.81.AND.KPA.NE.82) THEN 
jetset74.F:      ELSEIF(KPA.NE.81.AND.KPA.NE.82) THEN 
jetset74.F:      ELSEIF(KPA.EQ.81.AND.MOD(KFA/1000,10).EQ.0) THEN 
jetset74.F:        KFP=-KFS*MOD(KFA/10,10) 
jetset74.F:      ELSEIF(KPA.EQ.81.AND.MOD(KFA/100,10).GE.MOD(KFA/10,10)) THEN 
jetset74.F:        KFP=KFS*(100*MOD(KFA/10,100)+3) 
jetset74.F:      ELSEIF(KPA.EQ.81) THEN 
jetset74.F:        KFP=KFS*(1000*MOD(KFA/10,10)+100*MOD(KFA/100,10)+1) 
jetset74.F:        CALL LUKFDI(-KFS*INT(1.+(2.+PARJ(2))*RLU(0)),0,KFP,KDUMP) 
jetset74.F:        MSTJ(93)=1 
jetset74.F:        IF(PV(1,5).LT.PARJ(32)+2.*ULMASS(KFP)) GOTO 260 
jetset74.F:        IF(IABS(KFP).GT.10) KFP=KFP+ISIGN(10000,KFP) 
jetset74.F:      IF(KPA.EQ.81.OR.KPA.EQ.82) KCP=LUCOMP(KFP) 
jetset74.F:      IF(MMAT.GE.11.AND.MMAT.LE.30.AND.KQP.NE.0) THEN 
jetset74.F:        NQ=NQ+1 
jetset74.F:     &MOD(NQ,2).EQ.1) THEN 
jetset74.F:        NQ=NQ-1 
jetset74.F:        K(I,1)=1 
jetset74.F:        MSTJ(93)=1 
jetset74.F:        I=I+1 
jetset74.F:        NP=NP+1 
jetset74.F:        IF(MMAT.NE.33.AND.KQP.NE.0) NQ=NQ+1 
jetset74.F:        IF(MMAT.EQ.33.AND.KQP.NE.0.AND.KQP.NE.2) NQ=NQ+1 
jetset74.F:        K(I,1)=1+MOD(NQ,2) 
jetset74.F:        IF(MMAT.EQ.4.AND.JT.LE.2.AND.KFP.EQ.21) K(I,1)=2 
jetset74.F:        IF(MMAT.EQ.4.AND.JT.EQ.3) K(I,1)=1 
jetset74.F:        IF(PS+PARJ(64).GT.PV(1,5)) GOTO 240 
jetset74.F:  290 IF(MMAT.GE.11.AND.MMAT.LE.30) THEN 
jetset74.F:        CNDE=PARJ(61)*LOG(MAX((PV(1,5)-PS-PSQ)/PARJ(62),1.1)) 
jetset74.F:        IF(MMAT.EQ.12) CNDE=CNDE+PARJ(63) 
jetset74.F:  300   NTRY=NTRY+1 
jetset74.F:        IF(NTRY.GT.1000) THEN 
jetset74.F:          CALL LUERRM(14,'(LUDECY:) caught in infinite loop') 
jetset74.F:          IF(MSTU(21).GE.1) RETURN 
jetset74.F:          GAUSS=SQRT(-2.*CNDE*LOG(MAX(1E-10,RLU(0))))* 
jetset74.F:          IF(ND.LT.NP+NQ/2.OR.ND.LT.2.OR.ND.GT.10) GOTO 300 
jetset74.F:          IF(MMAT.EQ.13.AND.ND.EQ.2) GOTO 300 
jetset74.F:          IF(MMAT.EQ.14.AND.ND.LE.3) GOTO 300 
jetset74.F:          IF(MMAT.EQ.15.AND.ND.LE.4) GOTO 300 
jetset74.F:        DO 310 JT=1,4 
jetset74.F:        KFL1(JT)=KFLO(JT) 
jetset74.F:  310   CONTINUE 
jetset74.F:        DO 320 I=N+NP+1,N+ND-NQ/2 
jetset74.F:        JT=1+INT((NQ-1)*RLU(0)) 
jetset74.F:        CALL LUKFDI(KFL1(JT),0,KFL2,K(I,2)) 
jetset74.F:        KFL1(JT)=-KFL2 
jetset74.F:        IF(JT.EQ.4.AND.ISIGN(1,KFL1(1)*(10-IABS(KFL1(1))))* 
jetset74.F:     &  ISIGN(1,KFL1(JT)*(10-IABS(KFL1(JT)))).GT.0) JT=3 
jetset74.F:        CALL LUKFDI(KFL1(1),KFL1(JT),KFLDMP,K(N+ND-NQ/2+1,2)) 
jetset74.F:        IF(K(N+ND-NQ/2+1,2).EQ.0) GOTO 300 
jetset74.F:        IF(NQ.EQ.4) CALL LUKFDI(KFL1(JT2),KFL1(JT3),KFLDMP,K(N+ND,2)) 
jetset74.F:        DO 340 I=N+NP+1,N+ND 
jetset74.F:        K(I,1)=1 
jetset74.F:        IF(PS+PARJ(64).GT.PV(1,5)) GOTO 300 
jetset74.F:      ELSEIF((MMAT.EQ.31.OR.MMAT.EQ.33.OR.MMAT.EQ.44.OR.MMAT.EQ.45) 
jetset74.F:        PQT=(P(N+NP,5)+PARJ(65))/PV(1,5) 
jetset74.F:        DO 350 J=1,5 
jetset74.F:        P(N+NP,J)=PQT*PV(1,J) 
jetset74.F:        PV(1,J)=(1.-PQT)*PV(1,J) 
jetset74.F:        IF(PS+PARJ(64).GT.PV(1,5)) GOTO 260 
jetset74.F:        ND=NP-1 
jetset74.F:        MREM=1 
jetset74.F:        MSTJ(93)=1 
jetset74.F:        PSMC=ULMASS(K(N+1,2)) 
jetset74.F:        MSTJ(93)=1 
jetset74.F:        IF(MAX(PS,PSMC)+PARJ(32).GT.PV(1,5)) GOTO 240 
jetset74.F:        HR1=(P(N+1,5)/PV(1,5))**2 
jetset74.F:        HR2=(P(N+2,5)/PV(1,5))**2 
jetset74.F:        IF((1.-HR1-HR2)*(2.+HR1+HR2)*SQRT((1.-HR1-HR2)**2-4.*HR1*HR2) 
jetset74.F:        IF(NP.GE.2.AND.PS+PARJ(64).GT.PV(1,5)) GOTO 260 
jetset74.F:        HLQ=(PARJ(32)/PV(1,5))**2 
jetset74.F:        HUQ=(1.-(P(N+2,5)+PARJ(64))/PV(1,5))**2 
jetset74.F:        HRQ=(P(N+2,5)/PV(1,5))**2 
jetset74.F:        P(N+1,5)=PV(1,5)*SQRT(HW) 
jetset74.F:        HQW=(PV(1,5)/PMAS(24,1))**2 
jetset74.F:        HLW=(PARJ(32)/PMAS(24,1))**2 
jetset74.F:        HUW=((PV(1,5)-P(N+2,5)-PARJ(64))/PMAS(24,1))**2 
jetset74.F:        HRQ=(P(N+2,5)/PV(1,5))**2 
jetset74.F:        HG=PMAS(24,2)/PMAS(24,1) 
jetset74.F:        HATL=ATAN((HLW-1.)/HG) 
jetset74.F:        HM=MIN(1.,HUW-0.001) 
jetset74.F:        HMV1=HMEPS(HM/HQW)/((HM-1.)**2+HG**2) 
jetset74.F:        HMV2=HMEPS(HM/HQW)/((HM-1.)**2+HG**2) 
jetset74.F:        IF(HMV2.GT.HMV1.AND.HM-HG.GT.HLW) THEN 
jetset74.F:          HMV1=HMV2 
jetset74.F:        HMV=MIN(2.*HMV1,HMEPS(HM/HQW)/HG**2) 
jetset74.F:        HM1=1.-SQRT(1./HMV-HG**2) 
jetset74.F:        IF(HM1.GT.HLW.AND.HM1.LT.HM) THEN 
jetset74.F:          HM=HM1 
jetset74.F:        ELSEIF(HMV2.LE.HMV1) THEN 
jetset74.F:          HM=MAX(HLW,HM-MIN(0.1,1.-HM)) 
jetset74.F:        HATM=ATAN((HM-1.)/HG) 
jetset74.F:        HWT1=(HATM-HATL)/HG 
jetset74.F:        HWT2=HMV*(MIN(1.,HUW)-HM) 
jetset74.F:        IF(HUW.GT.1.) THEN 
jetset74.F:          HATU=ATAN((HUW-1.)/HG) 
jetset74.F:          HMP1=HMEPS(1./HQW) 
jetset74.F:          HWT3=HMP1*HATU/HG 
jetset74.F:  380   HREG=RLU(0)*(HWT1+HWT2+HWT3) 
jetset74.F:        IF(HREG.LE.HWT1) THEN 
jetset74.F:          HW=1.+HG*TAN(HATL+RLU(0)*(HATM-HATL)) 
jetset74.F:        ELSEIF(HREG.LE.HWT1+HWT2) THEN 
jetset74.F:          HW=HM+RLU(0)*(MIN(1.,HUW)-HM) 
jetset74.F:          HACC=HMEPS(HW/HQW)/((HW-1.)**2+HG**2)/HMV 
jetset74.F:          HW=1.+HG*TAN(RLU(0)*HATU) 
jetset74.F:          HACC=HMEPS(HW/HQW)/HMP1 
jetset74.F:        P(N+1,5)=PMAS(24,1)*SQRT(HW) 
jetset74.F:        IF(MMAT.EQ.46.AND.MSTJ(27).EQ.1) THEN 
jetset74.F:          DO 390 IL=MAX(IP-2,IM+1),MIN(IP+2,N) 
jetset74.F:          IF(K(IL,3).EQ.IM) NM=NM+1 
jetset74.F:          IF(NM.NE.2.OR.KFAM.LE.100.OR.MOD(KFAM,10).NE.1.OR. 
jetset74.F:     &    MOD(KFAM/1000,10).NE.0) NM=0 
jetset74.F:            IF((KFAS.LE.100.OR.MOD(KFAS,10).NE.1.OR. 
jetset74.F:     &      MOD(KFAS/1000,10).NE.0).AND.KFAS.NE.22) NM=0 
jetset74.F:          MSGN=ISIGN(1,K(IM,2)*K(IP,2)) 
jetset74.F:          IF(KFAM.GT.100.AND.MOD(KFAM/1000,10).EQ.0) MSGN= 
jetset74.F:     &    MSGN*(-1)**MOD(KFAM/100,10) 
jetset74.F:      IF(ND.EQ.1) THEN 
jetset74.F:        DO 400 J=1,4 
jetset74.F:        P(N+1,J)=P(IP,J) 
jetset74.F:        WTMAX=1./WTCOR(ND-2) 
jetset74.F:        PMAX=PV(1,5)-PS+P(N+ND,5) 
jetset74.F:        DO 410 IL=ND-1,1,-1 
jetset74.F:        PMIN=PMIN+P(N+IL+1,5) 
jetset74.F:  410   CONTINUE 
jetset74.F:        PMES=4.*PMAS(11,1)**2 
jetset74.F:        PMRHO2=PMAS(131,1)**2 
jetset74.F:        PGRHO2=PMAS(131,2)**2 
jetset74.F:        WT=(1+0.5*PMES/PMST)*SQRT(MAX(0.,1.-PMES/PMST))* 
jetset74.F:     &  (1.-PMST/P(IP,5)**2)**3*(1.+PGRHO2/PMRHO2)/ 
jetset74.F:     &  ((1.-PMST/PMRHO2)**2+PGRHO2/PMRHO2) 
jetset74.F:        PV(2,5)=MAX(2.00001*PMAS(11,1),SQRT(PMST)) 
jetset74.F:  440   RORD(1)=1. 
jetset74.F:        DO 470 IL1=2,ND-1 
jetset74.F:        DO 450 IL2=IL1-1,1,-1 
jetset74.F:        RORD(IL2+1)=RORD(IL2) 
jetset74.F:  460   RORD(IL2+1)=RSAV 
jetset74.F:        WT=1. 
jetset74.F:        DO 480 IL=ND-1,1,-1 
jetset74.F:        PV(IL,5)=PV(IL+1,5)+P(N+IL,5)+(RORD(IL)-RORD(IL+1))*(PV(1,5)-PS) 
jetset74.F:        WT=WT*PAWT(PV(IL,5),PV(IL+1,5),P(N+IL,5)) 
jetset74.F:  490 DO 510 IL=1,ND-1 
jetset74.F:      PA=PAWT(PV(IL,5),PV(IL+1,5),P(N+IL,5)) 
jetset74.F:      UE(3)=2.*RLU(0)-1. 
jetset74.F:      UE(1)=SQRT(1.-UE(3)**2)*COS(PHI) 
jetset74.F:      UE(2)=SQRT(1.-UE(3)**2)*SIN(PHI) 
jetset74.F:      DO 500 J=1,3 
jetset74.F:      PV(IL+1,J)=-PA*UE(J) 
jetset74.F:      PV(IL+1,4)=SQRT(PA**2+PV(IL+1,5)**2) 
jetset74.F:  510 CONTINUE 
jetset74.F:      DO 520 J=1,4 
jetset74.F:      DO 560 IL=ND-1,1,-1 
jetset74.F:      DO 530 J=1,3 
jetset74.F:      BEP=BE(1)*P(I,1)+BE(2)*P(I,2)+BE(3)*P(I,3) 
jetset74.F:      DO 540 J=1,3 
jetset74.F:      P(I,J)=P(I,J)+GA*(GA*BEP/(1.+GA)+P(I,4))*BE(J) 
jetset74.F:      NTRY=NTRY+1 
jetset74.F:      IF(MMAT.EQ.1) THEN 
jetset74.F:        WT=(P(N+1,5)*P(N+2,5)*P(N+3,5))**2-(P(N+1,5)*FOUR(N+2,N+3))**2 
jetset74.F:     &  -(P(N+2,5)*FOUR(N+1,N+3))**2-(P(N+3,5)*FOUR(N+1,N+2))**2 
jetset74.F:     &  +2.*FOUR(N+1,N+2)*FOUR(N+1,N+3)*FOUR(N+2,N+3) 
jetset74.F:        IF(MAX(WT*WTCOR(9)/P(IP,5)**6,0.001).LT.RLU(0)) GOTO 420 
jetset74.F:        FOUR12=FOUR(N+1,N+2) 
jetset74.F:        FOUR13=FOUR(N+1,N+3) 
jetset74.F:        WT=(PMST-0.5*PMES)*(FOUR12**2+FOUR13**2)+ 
jetset74.F:     &  PMES*(FOUR12*FOUR13+FOUR12**2+FOUR13**2) 
jetset74.F:C...Matrix element for S0 -> S1 + V1 -> S1 + S2 + S3 (S scalar, 
jetset74.F:C...V vector), of form cos**2(theta02) in V1 rest frame, and for 
jetset74.F:C...S0 -> gamma + V1 -> gamma + S2 + S3, of form sin**2(theta02). 
jetset74.F:        FOUR10=FOUR(IP,IM) 
jetset74.F:        FOUR12=FOUR(IP,N+1) 
jetset74.F:        FOUR02=FOUR(IM,N+1) 
jetset74.F:        PMS1=P(IP,5)**2 
jetset74.F:        PMS2=P(N+1,5)**2 
jetset74.F:        IF(KFAS.NE.22) HNUM=(FOUR10*FOUR12-PMS1*FOUR02)**2 
jetset74.F:        IF(KFAS.EQ.22) HNUM=PMS1*(2.*FOUR10*FOUR12*FOUR02- 
jetset74.F:     &  PMS1*FOUR02**2-PMS0*FOUR12**2-PMS2*FOUR10**2+PMS1*PMS0*PMS2) 
jetset74.F:        HNUM=MAX(1E-6*PMS1**2*PMS0*PMS2,HNUM) 
jetset74.F:        HDEN=(FOUR10**2-PMS1*PMS0)*(FOUR12**2-PMS1*PMS2) 
jetset74.F:        HX1=2.*FOUR(IP,N+1)/P(IP,5)**2 
jetset74.F:        WT=((1.-HX1)/(HX2*HX3))**2+((1.-HX2)/(HX1*HX3))**2+ 
jetset74.F:     &  ((1.-HX3)/(HX1*HX2))**2 
jetset74.F:        IF(K(IP+1,2).EQ.22.AND.(1.-HX1)*P(IP,5)**2.LT.4.*PARJ(32)**2) 
jetset74.F:      ELSEIF(MMAT.EQ.41) THEN 
jetset74.F:        HX1=2.*FOUR(IP,N+1)/P(IP,5)**2 
jetset74.F:        HXM=MIN(0.75,2.*(1.-PS/P(IP,5))) 
jetset74.F:        IF(HX1*(3.-2.*HX1).LT.RLU(0)*HXM*(3.-2.*HXM)) GOTO 420 
jetset74.F:        IF(MBST.EQ.0) WT=FOUR(IP,N+1)*FOUR(N+2,N+3) 
jetset74.F:        IF(MBST.EQ.1) WT=P(IP,5)*P(N+1,4)*FOUR(N+2,N+3) 
jetset74.F:        IF(WT.LT.RLU(0)*P(IP,5)*PV(1,5)**3/WTCOR(10)) GOTO 420 
jetset74.F:        DO 580 J=1,4 
jetset74.F:        P(N+NP+1,J)=0. 
jetset74.F:        P(N+NP+1,J)=P(N+NP+1,J)+P(IS,J) 
jetset74.F:        IF(MBST.EQ.0) WT=FOUR(IP,N+1)*FOUR(N+2,N+NP+1) 
jetset74.F:        IF(MBST.EQ.1) WT=P(IP,5)*P(N+1,4)*FOUR(N+2,N+NP+1) 
jetset74.F:        IF(WT.LT.RLU(0)*P(IP,5)*PV(1,5)**3/WTCOR(10)) GOTO 420 
jetset74.F:        IF(MSGN.GT.0) WT=FOUR(IM,N+1)*FOUR(N+2,IP+1) 
jetset74.F:        IF(MSGN.LT.0) WT=FOUR(IM,N+2)*FOUR(N+1,IP+1) 
jetset74.F:        IF(WT.LT.RLU(0)*P(IM,5)**4/WTCOR(10)) GOTO 490 
jetset74.F:  590 IF(MREM.EQ.1) THEN 
jetset74.F:        DO 600 J=1,5 
jetset74.F:        PV(1,J)=PV(1,J)/(1.-PQT) 
jetset74.F:        ND=ND+1 
jetset74.F:      IF((MMAT.EQ.31.OR.MMAT.EQ.45).AND.ND.EQ.3) THEN 
jetset74.F:        MSTJ(93)=1 
jetset74.F:        MSTJ(93)=1 
jetset74.F:        K(N+2,1)=1 
jetset74.F:        PS=P(N+1,5)+P(N+2,5) 
jetset74.F:        MSTJ(93)=1 
jetset74.F:        MSTJ(93)=1 
jetset74.F:        K(N+3,1)=1 
jetset74.F:        DO 610 J=1,3 
jetset74.F:  610   CONTINUE 
jetset74.F:        P(N+3,4)=SQRT(P(N+3,1)**2+P(N+3,2)**2+P(N+3,3)**2+P(N+3,5)**2) 
jetset74.F:        HA=P(N+1,4)**2-P(N+2,4)**2 
jetset74.F:        HB=HA-(P(N+1,5)**2-P(N+2,5)**2) 
jetset74.F:        HC=(P(N+1,1)-P(N+2,1))**2+(P(N+1,2)-P(N+2,2))**2+ 
jetset74.F:     &  (P(N+1,3)-P(N+2,3))**2 
jetset74.F:        HD=(PV(1,4)-P(N+3,4))**2 
jetset74.F:        HE=HA**2-2.*HD*(P(N+1,4)**2+P(N+2,4)**2)+HD**2 
jetset74.F:        DO 620 J=1,3 
jetset74.F:        PCOR=HH*(P(N+1,J)-P(N+2,J)) 
jetset74.F:        P(N+1,J)=P(N+1,J)+PCOR 
jetset74.F:        P(N+1,4)=SQRT(P(N+1,1)**2+P(N+1,2)**2+P(N+1,3)**2+P(N+1,5)**2) 
jetset74.F:        P(N+2,4)=SQRT(P(N+2,1)**2+P(N+2,2)**2+P(N+2,3)**2+P(N+2,5)**2) 
jetset74.F:        ND=ND-1 
jetset74.F:     &.AND.IABS(K(N+1,2)).LT.10) THEN 
jetset74.F:        PMR=SQRT(MAX(0.,P(N+1,5)**2+P(N+2,5)**2+2.*FOUR(N+1,N+2))) 
jetset74.F:        MSTJ(93)=1 
jetset74.F:        PM1=ULMASS(K(N+1,2)) 
jetset74.F:        MSTJ(93)=1 
jetset74.F:        IF(PMR.GT.PARJ(32)+PM1+PM2) GOTO 640 
jetset74.F:        KFLDUM=INT(1.5+RLU(0)) 
jetset74.F:        CALL LUKFDI(K(N+1,2),-ISIGN(KFLDUM,K(N+1,2)),KFLDMP,KF1) 
jetset74.F:        IF(KF1.EQ.0.OR.KF2.EQ.0) GOTO 260 
jetset74.F:        PSM=ULMASS(KF1)+ULMASS(KF2) 
jetset74.F:        IF(ND.EQ.4.OR.KFA.EQ.15) GOTO 260 
jetset74.F:        K(N+1,1)=1 
jetset74.F:        KFTEMP=K(N+1,2) 
jetset74.F:        CALL LUKFDI(KFTEMP,K(N+2,2),KFLDMP,K(N+1,2)) 
jetset74.F:        IF(K(N+1,2).EQ.0) GOTO 260 
jetset74.F:        P(N+1,5)=ULMASS(K(N+1,2)) 
jetset74.F:        PS=P(N+1,5)+P(N+2,5) 
jetset74.F:        IF(PS+PARJ(64).GT.PV(1,5)) GOTO 260 
jetset74.F:  640 IF((MMAT.EQ.42.OR.MMAT.EQ.48).AND.IABS(K(N+1,2)).LT.10) THEN 
jetset74.F:        KFLO(1)=K(N+1,2) 
jetset74.F:        K(N+1,1)=K(N+3,1) 
jetset74.F:        K(N+1,2)=K(N+3,2) 
jetset74.F:        DO 650 J=1,5 
jetset74.F:        PV(1,J)=P(N+1,J)+P(N+2,J) 
jetset74.F:        P(N+1,J)=P(N+3,J) 
jetset74.F:        PV(1,5)=PMR 
jetset74.F:        N=N+1 
jetset74.F:        PSQ=ULMASS(KFLO(1)) 
jetset74.F:        MMAT=11 
jetset74.F:      IF(MBST.EQ.1) THEN 
jetset74.F:        DO 670 J=1,3 
jetset74.F:        DO 690 I=NSAV+1,N 
jetset74.F:        BEP=BE(1)*P(I,1)+BE(2)*P(I,2)+BE(3)*P(I,3) 
jetset74.F:        DO 680 J=1,3 
jetset74.F:        P(I,J)=P(I,J)+GA*(GA*BEP/(1.+GA)+P(I,4))*BE(J) 
jetset74.F:      DO 710 I=NSAV+1,N 
jetset74.F:      DO 700 J=1,4 
jetset74.F:  710 CONTINUE 
jetset74.F:      IF(MSTJ(23).GE.1.AND.MMAT.EQ.4.AND.K(NSAV+1,2).EQ.21) THEN 
jetset74.F:        K(NSAV+1,1)=3 
jetset74.F:        K(NSAV+2,1)=3 
jetset74.F:        K(NSAV+3,1)=3 
jetset74.F:        K(NSAV+1,4)=MSTU(5)*(NSAV+2) 
jetset74.F:        K(NSAV+1,5)=MSTU(5)*(NSAV+3) 
jetset74.F:        K(NSAV+2,5)=MSTU(5)*(NSAV+1) 
jetset74.F:        K(NSAV+3,4)=MSTU(5)*(NSAV+1) 
jetset74.F:        MSTJ(92)=-(NSAV+1) 
jetset74.F:      ELSEIF(MSTJ(23).GE.1.AND.MMAT.EQ.4) THEN 
jetset74.F:        K(NSAV+2,1)=3 
jetset74.F:        K(NSAV+3,1)=3 
jetset74.F:      ELSEIF(MSTJ(23).GE.1.AND.(MMAT.EQ.32.OR.MMAT.EQ.44.OR.MMAT.EQ.46) 
jetset74.F:     &.AND.IABS(K(NSAV+1,2)).LE.10.AND.IABS(K(NSAV+2,2)).LE.10) THEN 
jetset74.F:        K(NSAV+1,1)=3 
jetset74.F:        K(NSAV+2,1)=3 
jetset74.F:        K(NSAV+1,4)=MSTU(5)*(NSAV+2) 
jetset74.F:        K(NSAV+1,5)=MSTU(5)*(NSAV+2) 
jetset74.F:        K(NSAV+2,4)=MSTU(5)*(NSAV+1) 
jetset74.F:        K(NSAV+2,5)=MSTU(5)*(NSAV+1) 
jetset74.F:        MSTJ(92)=NSAV+1 
jetset74.F:      ELSEIF(MSTJ(23).GE.1.AND.(MMAT.EQ.32.OR.MMAT.EQ.44.OR.MMAT.EQ.46) 
jetset74.F:     &.AND.IABS(K(NSAV+1,2)).LE.20.AND.IABS(K(NSAV+2,2)).LE.20) THEN 
jetset74.F:        MSTJ(92)=NSAV+1 
jetset74.F:      ELSEIF(MSTJ(23).GE.1.AND.MMAT.EQ.33.AND.IABS(K(NSAV+2,2)).EQ.21) 
jetset74.F:        K(NSAV+1,1)=3 
jetset74.F:        K(NSAV+2,1)=3 
jetset74.F:        K(NSAV+3,1)=3 
jetset74.F:        KCP=LUCOMP(K(NSAV+1,2)) 
jetset74.F:        KQP=KCHG(KCP,2)*ISIGN(1,K(NSAV+1,2)) 
jetset74.F:        K(NSAV+1,JCON)=MSTU(5)*(NSAV+2) 
jetset74.F:        K(NSAV+2,9-JCON)=MSTU(5)*(NSAV+1) 
jetset74.F:        MSTJ(92)=NSAV+1 
jetset74.F:      ELSEIF(MSTJ(23).GE.1.AND.MMAT.EQ.33) THEN 
jetset74.F:        K(NSAV+1,1)=3 
jetset74.F:        K(NSAV+3,1)=3 
jetset74.F:        K(NSAV+1,4)=MSTU(5)*(NSAV+3) 
jetset74.F:        K(NSAV+1,5)=MSTU(5)*(NSAV+3) 
jetset74.F:        K(NSAV+3,4)=MSTU(5)*(NSAV+1) 
jetset74.F:        K(NSAV+3,5)=MSTU(5)*(NSAV+1) 
jetset74.F:        MSTJ(92)=NSAV+1 
jetset74.F:      ELSEIF(MSTJ(27).GE.1.AND.MMAT.EQ.45.AND.ND.EQ.3) THEN 
jetset74.F:        K(NSAV+2,1)=3 
jetset74.F:        K(NSAV+3,1)=3 
jetset74.F:        MSTJ(92)=NSAV+1 
jetset74.F:      IF(K(IP,1).EQ.5) K(IP,1)=15 
jetset74.F:      IF(K(IP,1).LE.10) K(IP,1)=11 
jetset74.F:      IF(MMIX.EQ.1.AND.MSTJ(26).EQ.2.AND.K(IP,1).EQ.11) K(IP,1)=12 
jetset74.F:      K(IP,4)=NSAV+1 
jetset74.F:      SUBROUTINE LUKFDI(KFL1,KFL2,KFL3,KF) 
jetset74.F:      COMMON/LUDAT1/MSTU(200),PARU(200),MSTJ(200),PARJ(200) 
jetset74.F:      SAVE /LUDAT1/,/LUDAT2/ 
jetset74.F:      KF1A=IABS(KFL1) 
jetset74.F:      IF(KF1A.EQ.0) RETURN 
jetset74.F:        IF(KF1A.LE.10.AND.KF2A.LE.10.AND.KFL1*KFL2.GT.0) RETURN 
jetset74.F:        IF(KF1A.GT.10.AND.KF2A.GT.10) RETURN 
jetset74.F:        IF((KF1A.GT.10.OR.KF2A.GT.10).AND.KFL1*KFL2.LT.0) RETURN 
jetset74.F:      IF(MSTJ(15).EQ.1) THEN 
jetset74.F:        KTAB1=-1 
jetset74.F:        IF(KF1A.GE.1.AND.KF1A.LE.6) KTAB1=KF1A 
jetset74.F:        KFL1A=MOD(KF1A/1000,10) 
jetset74.F:        KFL1B=MOD(KF1A/100,10) 
jetset74.F:        KFL1S=MOD(KF1A,10) 
jetset74.F:        IF(KFL1A.GE.1.AND.KFL1A.LE.4.AND.KFL1B.GE.1.AND.KFL1B.LE.4) 
jetset74.F:     &  KTAB1=6+KFL1A*(KFL1A-2)+2*KFL1B+(KFL1S-1)/2 
jetset74.F:        IF(KFL1A.GE.1.AND.KFL1A.LE.4.AND.KFL1A.EQ.KFL1B) KTAB1=KTAB1-1 
jetset74.F:        IF(KF1A.GE.1.AND.KF1A.LE.6) KFL1A=KF1A 
jetset74.F:          KTAB2=-1 
jetset74.F:          IF(KF2A.GE.1.AND.KF2A.LE.6) KTAB2=KF2A 
jetset74.F:          KFL2A=MOD(KF2A/1000,10) 
jetset74.F:          KFL2B=MOD(KF2A/100,10) 
jetset74.F:          KFL2S=MOD(KF2A,10) 
jetset74.F:          IF(KFL2A.GE.1.AND.KFL2A.LE.4.AND.KFL2B.GE.1.AND.KFL2B.LE.4) 
jetset74.F:     &    KTAB2=6+KFL2A*(KFL2A-2)+2*KFL2B+(KFL2S-1)/2 
jetset74.F:          IF(KFL2A.GE.1.AND.KFL2A.LE.4.AND.KFL2A.EQ.KFL2B) KTAB2=KTAB2-1 
jetset74.F:        IF(KTAB1.GE.0.AND.KTAB2.GE.0) GOTO 150 
jetset74.F:  100 PAR2=PARJ(2) 
jetset74.F:      IF(MSTJ(12).GE.2) THEN 
jetset74.F:        PAR4M=1./(3.*SQRT(PARJ(4))) 
jetset74.F:        PARS0=PARJ(5)*(2.+(1.+PAR2*PAR3M*PARJ(7))*(1.+PAR4M)) 
jetset74.F:        PARS1=PARJ(7)*PARS0/(2.*PAR3M)+PARJ(5)*(PARJ(6)*(1.+PAR4M)+ 
jetset74.F:        PARS2=PARJ(5)*2.*PARJ(6)*PARJ(7)*(PAR2*PARJ(7)+(1.+PAR4M)/PAR3M) 
jetset74.F:        PARSM=MAX(PARS0,PARS1,PARS2) 
jetset74.F:        PAR4=PAR4*(1.+PARSM)/(1.+PARSM/(3.*PAR4M)) 
jetset74.F:  110 MBARY=0 
jetset74.F:      IF(KF1A.LE.10) THEN 
jetset74.F:        IF(KF2A.EQ.0.AND.MSTJ(12).GE.1.AND.(1.+PARJ(1))*RLU(0).GT.1.) 
jetset74.F:     &  MBARY=1 
jetset74.F:        IF(KF2A.GT.10) MBARY=2 
jetset74.F:        IF(KF2A.GT.10.AND.KF2A.LE.10000) KFDA=KF2A 
jetset74.F:        IF(KF1A.LE.10000) KFDA=KF1A 
jetset74.F:      IF(KFDA.NE.0.AND.MSTJ(12).GE.2) THEN 
jetset74.F:        KFLDA=MOD(KFDA/1000,10) 
jetset74.F:        KFLDB=MOD(KFDA/100,10) 
jetset74.F:        KFLDS=MOD(KFDA,10) 
jetset74.F:        IF(MAX(KFLDA,KFLDB).EQ.3) WTDQ=PARS1 
jetset74.F:        IF(KFLDS.EQ.1) WTDQ=WTDQ/(3.*PAR4M) 
jetset74.F:        IF((1.+WTDQ)*RLU(0).GT.1.) MBARY=-1 
jetset74.F:        IF(MBARY.EQ.-1.AND.KF2A.NE.0) RETURN 
jetset74.F:        KFS=ISIGN(1,KFL1) 
jetset74.F:          IF(KF2A.EQ.0) KFL3=ISIGN(1+INT((2.+PAR2)*RLU(0)),-KFL1) 
jetset74.F:          KFLA=MAX(KF1A,KF2A+IABS(KFL3)) 
jetset74.F:          KFLB=MIN(KF1A,KF2A+IABS(KFL3)) 
jetset74.F:          IF(KFLA.NE.KF1A) KFS=-KFS 
jetset74.F:          KFL1A=MOD(KF1A/1000,10) 
jetset74.F:          KFL1B=MOD(KF1A/100,10) 
jetset74.F:  120     KFL1D=KFL1A+INT(RLU(0)+0.5)*(KFL1B-KFL1A) 
jetset74.F:          KFL1E=KFL1A+KFL1B-KFL1D 
jetset74.F:          IF((KFL1D.EQ.3.AND.RLU(0).GT.PARDM).OR.(KFL1E.EQ.3.AND. 
jetset74.F:            KFL1D=KFL1A+KFL1B-KFL1D 
jetset74.F:            KFL1E=KFL1A+KFL1B-KFL1E 
jetset74.F:          KFL3A=1+INT((2.+PAR2*PAR3M*PARJ(7))*RLU(0)) 
jetset74.F:          IF((KFL1E.NE.KFL3A.AND.RLU(0).GT.(1.+PAR4M)/MAX(2.,1.+PAR4M)) 
jetset74.F:     &    .OR.(KFL1E.EQ.KFL3A.AND.RLU(0).GT.2./MAX(2.,1.+PAR4M))) 
jetset74.F:     &    GOTO 120 
jetset74.F:          IF(KFL1E.NE.KFL3A) KFLDS=2*INT(RLU(0)+1./(1.+PAR4M))+1 
jetset74.F:          KFL3=ISIGN(10000+1000*MAX(KFL1E,KFL3A)+100*MIN(KFL1E,KFL3A)+ 
jetset74.F:     &    KFLDS,-KFL1) 
jetset74.F:          KFLA=MAX(KFL1D,KFL3A) 
jetset74.F:          KFLB=MIN(KFL1D,KFL3A) 
jetset74.F:          IF(KFLA.NE.KFL1D) KFS=-KFS 
jetset74.F:        IF(KFLA.LE.2) KMUL=INT(PARJ(11)+RLU(0)) 
jetset74.F:        IF(KFLA.EQ.3) KMUL=INT(PARJ(12)+RLU(0)) 
jetset74.F:        IF(KFLA.GE.4) KMUL=INT(PARJ(13)+RLU(0)) 
jetset74.F:        IF(KMUL.EQ.0.AND.PARJ(14).GT.0.) THEN 
jetset74.F:          IF(RLU(0).LT.PARJ(14)) KMUL=2 
jetset74.F:        ELSEIF(KMUL.EQ.1.AND.PARJ(15)+PARJ(16)+PARJ(17).GT.0.) THEN 
jetset74.F:          IF(RMUL.LT.PARJ(15)) KMUL=3 
jetset74.F:          IF(KMUL.EQ.1.AND.RMUL.LT.PARJ(15)+PARJ(16)) KMUL=4 
jetset74.F:          IF(KMUL.EQ.1.AND.RMUL.LT.PARJ(15)+PARJ(16)+PARJ(17)) KMUL=5 
jetset74.F:        IF(KMUL.EQ.0.OR.KMUL.EQ.3) KFLS=1 
jetset74.F:          KF=(100*KFLA+10*KFLB+KFLS)*KFS*(-1)**KFLA 
jetset74.F:          IMIX=2*KFLA+10*KMUL 
jetset74.F:          IF(KFLA.LE.3) KF=110*(1+INT(RMIX+PARF(IMIX-1))+ 
jetset74.F:          IF(KFLA.GE.4) KF=110*KFLA+KFLS 
jetset74.F:        IF(KMUL.EQ.2.OR.KMUL.EQ.3) KF=KF+ISIGN(10000,KF) 
jetset74.F:        IF(KF.EQ.221) THEN 
jetset74.F:          IF(RLU(0).GT.PARJ(25)) GOTO 110 
jetset74.F:        ELSEIF(KF.EQ.331) THEN 
jetset74.F:          IF(RLU(0).GT.PARJ(26)) GOTO 110 
jetset74.F:  130   IF(KF1A.LE.10.AND.KF2A.EQ.0) THEN 
jetset74.F:          KFLA=KF1A 
jetset74.F:  140     KFLB=1+INT((2.+PAR2*PAR3)*RLU(0)) 
jetset74.F:          KFLC=1+INT((2.+PAR2*PAR3)*RLU(0)) 
jetset74.F:          KFLDS=1 
jetset74.F:          IF(KFLDS.EQ.1.AND.PAR4*RLU(0).GT.1.) GOTO 140 
jetset74.F:          IF(KFLDS.EQ.3.AND.PAR4.LT.RLU(0)) GOTO 140 
jetset74.F:          KFL3=ISIGN(1000*MAX(KFLB,KFLC)+100*MIN(KFLB,KFLC)+KFLDS,KFL1) 
jetset74.F:        ELSEIF(KF1A.LE.10) THEN 
jetset74.F:          KFLA=KF1A 
jetset74.F:          KFLB=MOD(KF2A/1000,10) 
jetset74.F:          KFLC=MOD(KF2A/100,10) 
jetset74.F:          KFLDS=MOD(KF2A,10) 
jetset74.F:          IF(KF2A.EQ.0) KFL3=ISIGN(1+INT((2.+PAR2)*RLU(0)),KFL1) 
jetset74.F:          KFLB=MOD(KF1A/1000,10) 
jetset74.F:          KFLC=MOD(KF1A/100,10) 
jetset74.F:          KFLDS=MOD(KF1A,10) 
jetset74.F:        IF(KFLA.NE.KFLB.AND.KFLA.NE.KFLC) KBARY=KBARY+1 
jetset74.F:        WT=PARF(60+KBARY)+PARJ(18)*PARF(70+KBARY) 
jetset74.F:        IF(MBARY.EQ.1.AND.MSTJ(12).GE.2) THEN 
jetset74.F:          IF(MAX(KFLB,KFLC).EQ.3) WTDQ=PARS1 
jetset74.F:          IF(KFLDS.EQ.1) WTDQ=WTDQ/(3.*PAR4M) 
jetset74.F:          IF(KFLDS.EQ.1) WT=WT*(1.+WTDQ)/(1.+PARSM/(3.*PAR4M)) 
jetset74.F:          IF(KFLDS.EQ.3) WT=WT*(1.+WTDQ)/(1.+PARSM) 
jetset74.F:        IF(KF2A.EQ.0.AND.WT.LT.RLU(0)) GOTO 130 
jetset74.F:        IF((PARF(60+KBARY)+PARJ(18)*PARF(70+KBARY))*RLU(0).GT. 
jetset74.F:          IF(KFLDS.EQ.1.AND.KFLA.EQ.KFLD) KFLL=1 
jetset74.F:          IF(KFLDS.EQ.1.AND.KFLA.NE.KFLD) KFLL=INT(0.25+RLU(0)) 
jetset74.F:        IF(KFLL.EQ.0) KF=ISIGN(1000*KFLD+100*KFLE+10*KFLF+KFLS,KFL1) 
jetset74.F:        IF(KFLL.EQ.1) KF=ISIGN(1000*KFLD+100*KFLF+10*KFLE+KFLS,KFL1) 
jetset74.F:  150 IF(KTAB2.EQ.0.AND.MSTJ(12).LE.0) THEN 
jetset74.F:        KT3L=1 
jetset74.F:      ELSEIF(KTAB2.EQ.0.AND.KTAB1.GE.7.AND.MSTJ(12).LE.1) THEN 
jetset74.F:        KT3L=1 
jetset74.F:        KT3L=1 
jetset74.F:      DO 170 KTS=0,2 
jetset74.F:      DO 160 KT3=KT3L,KT3U 
jetset74.F:      RFL=RFL+PARF(120+80*KTAB1+25*KTS+KT3) 
jetset74.F:  160 CONTINUE 
jetset74.F:  170 CONTINUE 
jetset74.F:      DO 190 KTS=0,2 
jetset74.F:      DO 180 KT3=KT3L,KT3U 
jetset74.F:      RFL=RFL-PARF(120+80*KTAB1+25*KTS+KT3) 
jetset74.F:  180 CONTINUE 
jetset74.F:  190 CONTINUE 
jetset74.F:        KFL3=ISIGN(KFL3A,KFL1*(2*KTAB1-13)) 
jetset74.F:        KFL3A=1 
jetset74.F:        IF(KTAB3.GE.11) KFL3A=3 
jetset74.F:        IF(KTAB3.GE.16) KFL3A=4 
jetset74.F:        KFL3=1000*KFL3A+100*KFL3B+1 
jetset74.F:        KFL3=ISIGN(KFL3,KFL1*(13-2*KTAB1)) 
jetset74.F:      IF(KFL3A.EQ.KFL1A.AND.KFL3B.EQ.KFL1B.AND.(KFL3A.LE.3.OR. 
jetset74.F:        RFL=RLU(0)*(PARF(143+80*KTAB1+25*KTABS)+PARF(144+80*KTAB1+ 
jetset74.F:     &  25*KTABS)+PARF(145+80*KTAB1+25*KTABS)) 
jetset74.F:        KF=110+2*KTABS+1 
jetset74.F:        IF(RFL.GT.PARF(143+80*KTAB1+25*KTABS)) KF=220+2*KTABS+1 
jetset74.F:        IF(RFL.GT.PARF(143+80*KTAB1+25*KTABS)+PARF(144+80*KTAB1+ 
jetset74.F:     &  25*KTABS)) KF=330+2*KTABS+1 
jetset74.F:      ELSEIF(KTAB1.LE.6.AND.KTAB3.LE.6) THEN 
jetset74.F:        KFLA=MAX(KTAB1,KTAB3) 
jetset74.F:        KFLB=MIN(KTAB1,KTAB3) 
jetset74.F:        KFS=ISIGN(1,KFL1) 
jetset74.F:        IF(KFLA.NE.KF1A) KFS=-KFS 
jetset74.F:        KF=(100*KFLA+10*KFLB+2*KTABS+1)*KFS*(-1)**KFLA 
jetset74.F:      ELSEIF(KTAB1.GE.7.AND.KTAB3.GE.7) THEN 
jetset74.F:        KFS=ISIGN(1,KFL1) 
jetset74.F:        IF(KFL1A.EQ.KFL3A) THEN 
jetset74.F:          KFLA=MAX(KFL1B,KFL3B) 
jetset74.F:          KFLB=MIN(KFL1B,KFL3B) 
jetset74.F:          IF(KFLA.NE.KFL1B) KFS=-KFS 
jetset74.F:        ELSEIF(KFL1A.EQ.KFL3B) THEN 
jetset74.F:          KFLB=KFL1B 
jetset74.F:        ELSEIF(KFL1B.EQ.KFL3A) THEN 
jetset74.F:          KFLA=KFL1A 
jetset74.F:        ELSEIF(KFL1B.EQ.KFL3B) THEN 
jetset74.F:          KFLA=MAX(KFL1A,KFL3A) 
jetset74.F:          KFLB=MIN(KFL1A,KFL3A) 
jetset74.F:          IF(KFLA.NE.KFL1A) KFS=-KFS 
jetset74.F:          GOTO 100 
jetset74.F:        KF=(100*KFLA+10*KFLB+2*KTABS+1)*KFS*(-1)**KFLA 
jetset74.F:        IF(KTAB1.GE.7) THEN 
jetset74.F:          KFLB=KFL1A 
jetset74.F:          KFLC=KFL1B 
jetset74.F:          KFLA=KFL1A 
jetset74.F:        IF(KTABS.EQ.0) KF=ISIGN(1000*KFLD+100*KFLF+10*KFLE+2,KFL1) 
jetset74.F:        IF(KTABS.GE.1) KF=ISIGN(1000*KFLD+100*KFLE+10*KFLF+2*KTABS,KFL1) 
jetset74.F:        GOTO 100 
jetset74.F:      COMMON/LUDAT1/MSTU(200),PARU(200),MSTJ(200),PARJ(200) 
jetset74.F:      SAVE /LUDAT1/ 
jetset74.F:      PT=PARJ(21)*SQRT(-LOG(MAX(1E-10,RLU(0)))) 
jetset74.F:      IF(MSTJ(91).EQ.1) PT=PARJ(22)*PT 
jetset74.F:      IF(KFLA.EQ.0.AND.MSTJ(13).LE.0) PT=0. 
jetset74.F:      SUBROUTINE LUZDIS(KFL1,KFL2,PR,Z) 
jetset74.F:      COMMON/LUDAT1/MSTU(200),PARU(200),MSTJ(200),PARJ(200) 
jetset74.F:      SAVE /LUDAT1/,/LUDAT2/ 
jetset74.F:      KFLA=IABS(KFL1) 
jetset74.F:      IF(KFLA.GE.10) KFLH=MOD(KFLA/1000,10) 
jetset74.F:      IF(MSTJ(11).EQ.1.OR.(MSTJ(11).EQ.3.AND.KFLH.LE.3).OR. 
jetset74.F:     &MSTJ(11).GE.4) THEN 
jetset74.F:        FA=PARJ(41) 
jetset74.F:        IF(MSTJ(91).EQ.1) FA=PARJ(43) 
jetset74.F:        IF(KFLB.GE.10) FA=FA+PARJ(45) 
jetset74.F:        IF(MSTJ(91).EQ.1) FBB=PARJ(44) 
jetset74.F:        FC=1. 
jetset74.F:        IF(KFLA.GE.10) FC=FC-PARJ(45) 
jetset74.F:        IF(KFLB.GE.10) FC=FC+PARJ(45) 
jetset74.F:        IF(MSTJ(11).GE.4.AND.KFLH.GE.4.AND.KFLH.LE.5) THEN 
jetset74.F:          IF(MSTJ(11).EQ.5.AND.KFLH.EQ.5) FRED=PARJ(47) 
jetset74.F:          FC=FC+FRED*FBB*PARF(100+KFLH)**2 
jetset74.F:        ELSEIF(MSTJ(11).GE.4.AND.KFLH.GE.6.AND.KFLH.LE.8) THEN 
jetset74.F:          IF(MSTJ(11).EQ.5) FRED=PARJ(48) 
jetset74.F:          FC=FC+FRED*FBB*PMAS(KFLH,1)**2 
jetset74.F:        MC=1 
jetset74.F:        IF(ABS(FC-1.).GT.0.01) MC=2 
jetset74.F:          MA=1 
jetset74.F:          ZMAX=1. 
jetset74.F:        ELSEIF(ABS(FC-FA).LT.0.01) THEN 
jetset74.F:          IF(ZMAX.GT.0.9999.AND.FB.GT.100.) ZMAX=MIN(ZMAX,1.-FA/FB) 
jetset74.F:        IF(ZMAX.LT.0.1) THEN 
jetset74.F:          MMAX=1 
jetset74.F:          IF(MC.EQ.1) THEN 
jetset74.F:            FINT=1.-LOG(ZDIV) 
jetset74.F:            ZDIVC=ZDIV**(1.-FC) 
jetset74.F:            FINT=1.+(1.-1./ZDIVC)/(FC-1.) 
jetset74.F:        ELSEIF(ZMAX.GT.0.85.AND.FB.GT.1.) THEN 
jetset74.F:          ZDIV=FSCB-1./ZMAX-(FC/FB)*LOG(ZMAX*0.5*(FSCB+FC/FB)) 
jetset74.F:          IF(MA.GE.2) ZDIV=ZDIV+(FA/FB)*LOG(1.-ZMAX) 
jetset74.F:          FINT=1.+FB*(1.-ZDIV) 
jetset74.F:  100   Z=RLU(0) 
jetset74.F:        FPRE=1. 
jetset74.F:        IF(MMAX.EQ.1) THEN 
jetset74.F:          IF(FINT*RLU(0).LE.1.) THEN 
jetset74.F:          ELSEIF(MC.EQ.1) THEN 
jetset74.F:            Z=1./(ZDIVC+Z*(1.-ZDIVC))**(1./(1.-FC)) 
jetset74.F:          IF(FINT*RLU(0).LE.1.) THEN 
jetset74.F:            Z=ZDIV+Z*(1.-ZDIV) 
jetset74.F:        IF(Z.LE.0..OR.Z.GE.1.) GOTO 100 
jetset74.F:        FEXP=FC*LOG(ZMAX/Z)+FB*(1./ZMAX-1./Z) 
jetset74.F:        IF(MA.GE.2) FEXP=FEXP+FA*LOG((1.-Z)/(1.-ZMAX)) 
jetset74.F:        IF(FVAL.LT.RLU(0)*FPRE) GOTO 100 
jetset74.F:C...Generate z according to Field-Feynman, SLAC, (1-z)**c OR z**c. 
jetset74.F:        FC=PARJ(50+MAX(1,KFLH)) 
jetset74.F:        IF(MSTJ(91).EQ.1) FC=PARJ(59) 
jetset74.F:  110   Z=RLU(0) 
jetset74.F:        IF(FC.GE.0..AND.FC.LE.1.) THEN 
jetset74.F:          IF(FC.GT.RLU(0)) Z=1.-Z**(1./3.) 
jetset74.F:        ELSEIF(FC.GT.-1.AND.FC.LT.0.) THEN 
jetset74.F:          IF(-4.*FC*Z*(1.-Z)**2.LT.RLU(0)*((1.-Z)**2-FC*Z)**2) GOTO 110 
jetset74.F:          IF(FC.GT.0.) Z=1.-Z**(1./FC) 
jetset74.F:          IF(FC.LT.0.) Z=Z**(-1./FC) 
jetset74.F:      SUBROUTINE LUSHOW(IP1,IP2,QMAX) 
jetset74.F:      COMMON/LUDAT1/MSTU(200),PARU(200),MSTJ(200),PARJ(200) 
jetset74.F:      SAVE /LUJETS/,/LUDAT1/,/LUDAT2/ 
jetset74.F:      IF(MSTJ(41).LE.0.OR.(MSTJ(41).EQ.1.AND.QMAX.LE.PARJ(82)).OR. 
jetset74.F:      DO 100 IF=0,40 
jetset74.F:  100 CONTINUE 
jetset74.F:      KSH(21)=1 
jetset74.F:      PMTH(1,21)=ULMASS(21) 
jetset74.F:      PMTH(2,21)=SQRT(PMTH(1,21)**2+0.25*PARJ(82)**2) 
jetset74.F:      PMTH(3,21)=2.*PMTH(2,21) 
jetset74.F:      PMTH(4,21)=PMTH(3,21) 
jetset74.F:      PMTH(5,21)=PMTH(3,21) 
jetset74.F:      PMTH(1,22)=ULMASS(22) 
jetset74.F:      PMTH(2,22)=SQRT(PMTH(1,22)**2+0.25*PARJ(83)**2) 
jetset74.F:      PMQTH1=PARJ(82) 
jetset74.F:      IF(MSTJ(41).GE.2) PMQTH1=MIN(PARJ(82),PARJ(83)) 
jetset74.F:      PMQTH2=PMTH(2,21) 
jetset74.F:      IF(MSTJ(41).GE.2) PMQTH2=MIN(PMTH(2,21),PMTH(2,22)) 
jetset74.F:      DO 110 IF=1,8 
jetset74.F:      KSH(IF)=1 
jetset74.F:      PMTH(1,IF)=ULMASS(IF) 
jetset74.F:      PMTH(2,IF)=SQRT(PMTH(1,IF)**2+0.25*PMQTH1**2) 
jetset74.F:      PMTH(4,IF)=SQRT(PMTH(1,IF)**2+0.25*PARJ(82)**2)+PMTH(2,21) 
jetset74.F:      PMTH(5,IF)=SQRT(PMTH(1,IF)**2+0.25*PARJ(83)**2)+PMTH(2,22) 
jetset74.F:  110 CONTINUE 
jetset74.F:      DO 120 IF=11,17,2 
jetset74.F:      IF(MSTJ(41).GE.2) KSH(IF)=1 
jetset74.F:      PMTH(1,IF)=ULMASS(IF) 
jetset74.F:      PMTH(2,IF)=SQRT(PMTH(1,IF)**2+0.25*PARJ(83)**2) 
jetset74.F:  120 CONTINUE 
jetset74.F:      PT2MIN=MAX(0.5*PARJ(82),1.1*PARJ(81))**2 
jetset74.F:      ALAMS=PARJ(81)**2 
jetset74.F:      IF(IP1.GT.0.AND.IP1.LE.MIN(N,MSTU(4)-MSTU(32)).AND.IP2.EQ.0) THEN 
jetset74.F:        NPA=1 
jetset74.F:        IPA(1)=IP1 
jetset74.F:      ELSEIF(MIN(IP1,IP2).GT.0.AND.MAX(IP1,IP2).LE.MIN(N,MSTU(4)- 
jetset74.F:        IPA(1)=IP1 
jetset74.F:      ELSEIF(IP1.GT.0.AND.IP1.LE.MIN(N,MSTU(4)-MSTU(32)).AND.IP2.LT.0 
jetset74.F:        DO 130 I=1,NPA 
jetset74.F:        IPA(I)=IP1+I-1 
jetset74.F:  130   CONTINUE 
jetset74.F:        CALL LUERRM(12, 
jetset74.F:        IF(MSTU(21).GE.1) RETURN 
jetset74.F:      DO 140 J=1,5 
jetset74.F:  140 CONTINUE 
jetset74.F:      DO 160 I=1,NPA 
jetset74.F:        IF(KSH(KFLA(I)).EQ.1) PMA(I)=PMTH(3,KFLA(I)) 
jetset74.F:        IREJ=IREJ+1 
jetset74.F:        IF(KSH(KFLA(I)).EQ.0.OR.PMA(I).GT.QMAX) IREJ=IREJ+1 
jetset74.F:      DO 150 J=1,4 
jetset74.F:  150 CONTINUE 
jetset74.F:  160 CONTINUE 
jetset74.F:      PS(5)=SQRT(MAX(0.,PS(4)**2-PS(1)**2-PS(2)**2-PS(3)**2)) 
jetset74.F:      IF(NPA.EQ.1) PS(5)=PS(4) 
jetset74.F:      IF(PS(5).LE.PM+PMQTH1) RETURN 
jetset74.F:      IF(NPA.EQ.2.AND.MSTJ(47).GE.1) THEN 
jetset74.F:        IF(KFLA(1).GE.1.AND.KFLA(1).LE.8.AND.KFLA(2).GE.1.AND. 
jetset74.F:     &  KFLA(2).LE.8) M3JC=1 
jetset74.F:        IF((KFLA(1).EQ.11.OR.KFLA(1).EQ.13.OR.KFLA(1).EQ.15.OR. 
jetset74.F:     &  KFLA(1).EQ.17).AND.KFLA(2).EQ.KFLA(1)) M3JC=1 
jetset74.F:        IF((KFLA(1).EQ.11.OR.KFLA(1).EQ.13.OR.KFLA(1).EQ.15.OR. 
jetset74.F:     &  KFLA(1).EQ.17).AND.KFLA(2).EQ.KFLA(1)+1) M3JC=1 
jetset74.F:        IF((KFLA(1).EQ.12.OR.KFLA(1).EQ.14.OR.KFLA(1).EQ.16.OR. 
jetset74.F:     &  KFLA(1).EQ.18).AND.KFLA(2).EQ.KFLA(1)-1) M3JC=1 
jetset74.F:        IF(MSTJ(47).EQ.2.OR.MSTJ(47).EQ.4) M3JC=1 
jetset74.F:        IF(M3JC.EQ.1.AND.MSTJ(47).GE.3.AND.KFLA(1).EQ.KFLA(2)) THEN 
jetset74.F:          M3JCM=1 
jetset74.F:          QME=(2.*PMTH(KFLA(1),1)/PS(5))**2 
jetset74.F:      IF(MSTJ(50).GE.1.AND.MSTJ(50).LE.3.AND.NPA.EQ.2) MIIS=MSTJ(50) 
jetset74.F:        DO 180 I=1,2 
jetset74.F:        IF(KCA.NE.0) KCII(I)=KCHG(KCA,2)*ISIGN(1,K(IPA(I),2)) 
jetset74.F:          DO 170 J=1,2 
jetset74.F:          IF(ICSI.GT.0.AND.ICSI.NE.IPA(1).AND.ICSI.NE.IPA(2).AND. 
jetset74.F:     &    (KCII(I).EQ.(-1)**(J+1).OR.KCII(I).EQ.2)) THEN 
jetset74.F:            NIIS(I)=NIIS(I)+1 
jetset74.F:  170     CONTINUE 
jetset74.F:  180   CONTINUE 
jetset74.F:        IF(NIIS(1)+NIIS(2).EQ.0) MIIS=0 
jetset74.F:        DO 200 I=1,2 
jetset74.F:        DO 190 J=1,5 
jetset74.F:  190   CONTINUE 
jetset74.F:        DO 220 I=3,2+NIIS(1) 
jetset74.F:        DO 210 J=1,5 
jetset74.F:        K(N+I,J)=K(IIIS(1,I-2),J) 
jetset74.F:        P(N+I,J)=P(IIIS(1,I-2),J) 
jetset74.F:  210   CONTINUE 
jetset74.F:        DO 240 I=3+NIIS(1),2+NIIS(1)+NIIS(2) 
jetset74.F:        DO 230 J=1,5 
jetset74.F:        K(N+I,J)=K(IIIS(2,I-2-NIIS(1)),J) 
jetset74.F:        P(N+I,J)=P(IIIS(2,I-2-NIIS(1)),J) 
jetset74.F:        CALL LUDBRB(N+1,N+2+NIIS(1)+NIIS(2),0.,0.,-DBLE(PS(1)/PS(4)), 
jetset74.F:        PHI=ulangl(P(N+1,1),P(N+1,2)) 
jetset74.F:        CALL LUDBRB(N+1,N+2+NIIS(1)+NIIS(2),0.,-PHI,0D0,0D0,0D0) 
jetset74.F:        THE=ulangl(P(N+1,3),P(N+1,1)) 
jetset74.F:        CALL LUDBRB(N+1,N+2+NIIS(1)+NIIS(2),-THE,0.,0D0,0D0,0D0) 
jetset74.F:        DO 250 I=3,2+NIIS(1) 
jetset74.F:        THEIIS(1,I-2)=ulangl(P(N+I,3),SQRT(P(N+I,1)**2+P(N+I,2)**2)) 
jetset74.F:        PHIIIS(1,I-2)=ulangl(P(N+I,1),P(N+I,2)) 
jetset74.F:        DO 260 I=3+NIIS(1),2+NIIS(1)+NIIS(2) 
jetset74.F:        THEIIS(2,I-2-NIIS(1))=PARU(1)-ulangl(P(N+I,3), 
jetset74.F:     &  SQRT(P(N+I,1)**2+P(N+I,2)**2)) 
jetset74.F:        PHIIIS(2,I-2-NIIS(1))=ulangl(P(N+I,1),P(N+I,2)) 
jetset74.F:        CALL LUERRM(11,'(LUSHOW:) no more memory left in LUJETS') 
jetset74.F:        IF(MSTU(21).GE.1) RETURN 
jetset74.F:        K(N+1,1)=11 
jetset74.F:        K(N+1,2)=21 
jetset74.F:        K(N+1,3)=0 
jetset74.F:        K(N+1,4)=0 
jetset74.F:        K(N+1,5)=0 
jetset74.F:        P(N+1,1)=0. 
jetset74.F:        P(N+1,2)=0. 
jetset74.F:        P(N+1,3)=0. 
jetset74.F:        P(N+1,4)=PS(5) 
jetset74.F:        P(N+1,5)=PS(5) 
jetset74.F:        V(N+1,5)=PS(5)**2 
jetset74.F:        N=N+1 
jetset74.F:      IF(NPA.EQ.1) IM=NS-1 
jetset74.F:  270 IM=IM+1 
jetset74.F:        IF(IM.GT.N) GOTO 510 
jetset74.F:        IGM=-1 
jetset74.F:        CALL LUERRM(11,'(LUSHOW:) no more memory left in LUJETS') 
jetset74.F:        IF(MSTU(21).GE.1) RETURN 
jetset74.F:        IF(K(IM-1,3).EQ.IGM) IAU=IM-1 
jetset74.F:        IF(N.GE.IM+1.AND.K(IM+1,3).EQ.IGM) IAU=IM+1 
jetset74.F:        K(IM,4)=N+1 
jetset74.F:        DO 280 I=1,NEP 
jetset74.F:        K(N+1,3)=IPA(1) 
jetset74.F:        DO 290 I=1,NEP 
jetset74.F:      ELSEIF(KFLM.NE.21) THEN 
jetset74.F:        K(N+1,2)=K(IM,2) 
jetset74.F:      ELSEIF(K(IM,5).EQ.21) THEN 
jetset74.F:        K(N+1,2)=21 
jetset74.F:        K(N+2,2)=21 
jetset74.F:        K(N+1,2)=K(IM,5) 
jetset74.F:      DO 300 IP=1,NEP 
jetset74.F:      K(N+IP,1)=3 
jetset74.F:      IF(KCHG(LUCOMP(KFLD(IP)),2).EQ.0) K(N+IP,1)=1 
jetset74.F:        IF(KSH(KFLD(IP)).EQ.1) ISI(IP)=1 
jetset74.F:        DO 310 I=1,NPA 
jetset74.F:        IF(NPA.GE.3) P(N+I,4)=(PS(4)*P(IPA(I),4)-PS(1)*P(IPA(I),1)- 
jetset74.F:  310   CONTINUE 
jetset74.F:        P(N+1,5)=MIN(P(IM,5),V(IM,1)*PEM) 
jetset74.F:        P(N+2,5)=MIN(P(IM,5),(1.-V(IM,1))*PEM) 
jetset74.F:        IF(K(N+2,2).EQ.22) P(N+2,5)=PMTH(1,22) 
jetset74.F:      DO 320 I=1,NEP 
jetset74.F:      IF(ISI(I).EQ.1) THEN 
jetset74.F:        IF(P(N+I,5).LE.PMTH(3,KFLD(I))) P(N+I,5)=PMTH(1,KFLD(I)) 
jetset74.F:      IF(NEP.EQ.1) INUM=1 
jetset74.F:      DO 340 I=1,NEP 
jetset74.F:      IF(INUM.EQ.0.AND.ISL(I).EQ.1) INUM=I 
jetset74.F:      DO 350 I=1,NEP 
jetset74.F:      IF(INUM.EQ.0.AND.ITRY(I).EQ.0.AND.ISI(I).EQ.1) THEN 
jetset74.F:        DO 360 I=1,NEP 
jetset74.F:        IF(ISI(I).EQ.1.AND.PMSD(I).GE.PMQTH2) THEN 
jetset74.F:      INUM=MAX(1,INUM) 
jetset74.F:      IEP(1)=N+INUM 
jetset74.F:      IEP(I)=IEP(I-1)+1 
jetset74.F:      IF(IEP(I).GT.N+NEP) IEP(I)=N+1 
jetset74.F:      DO 380 I=1,NEP 
jetset74.F:      ITRY(INUM)=ITRY(INUM)+1 
jetset74.F:        CALL LUERRM(14,'(LUSHOW:) caught in infinite loop') 
jetset74.F:        IF(MSTU(21).GE.1) RETURN 
jetset74.F:      IF(KFL(1).GT.40) GOTO 430 
jetset74.F:      IF(KSH(KFL(1)).EQ.0) GOTO 430 
jetset74.F:      IF(P(IEP(1),5).LT.PMTH(2,KFL(1))) GOTO 430 
jetset74.F:      IF(MIIS.GE.1.AND.IEP(1).LE.NS+3) THEN 
jetset74.F:        III=IEP(1)-NS-1 
jetset74.F:        IF(IABS(KCII(III)).EQ.1.AND.NIIS(III).EQ.1) THEN 
jetset74.F:          ISII(III)=1 
jetset74.F:        ELSEIF(KCII(III).EQ.2.AND.NIIS(III).EQ.1) THEN 
jetset74.F:          IF(RLU(0).GT.0.5) ISII(III)=1 
jetset74.F:          ISII(III)=1 
jetset74.F:      IF(NEP.EQ.1) THEN 
jetset74.F:        IF(INUM.EQ.1) PMED=V(IM,1)*PEM 
jetset74.F:        IF(INUM.EQ.2) PMED=(1.-V(IM,1))*PEM 
jetset74.F:      IF(MOD(MSTJ(43),2).EQ.1) THEN 
jetset74.F:        ZC=PMTH(2,21)/PMED 
jetset74.F:        ZC=0.5*(1.-SQRT(MAX(0.,1.-(2.*PMTH(2,21)/PMED)**2))) 
jetset74.F:        IF(ZC.LT.1E-4) ZC=(PMTH(2,21)/PMED)**2 
jetset74.F:        ZCE=0.5*(1.-SQRT(MAX(0.,1.-(2.*PMTH(2,22)/PMED)**2))) 
jetset74.F:        IF(ZCE.LT.1E-4) ZCE=(PMTH(2,22)/PMED)**2 
jetset74.F:      ZC=MIN(ZC,0.491) 
jetset74.F:      ZCE=MIN(ZCE,0.491) 
jetset74.F:      IF((MSTJ(41).EQ.1.AND.ZC.GT.0.49).OR.(MSTJ(41).GE.2.AND. 
jetset74.F:        P(IEP(1),5)=PMTH(1,KFL(1)) 
jetset74.F:        V(IEP(1),5)=P(IEP(1),5)**2 
jetset74.F:      IF(MSTJ(49).EQ.0.AND.KFL(1).EQ.21) THEN 
jetset74.F:        FBR=6.*LOG((1.-ZC)/ZC)+MSTJ(45)*(0.5-ZC) 
jetset74.F:        FBR=(8./3.)*LOG((1.-ZC)/ZC) 
jetset74.F:      ELSEIF(MSTJ(49).EQ.1.AND.KFL(1).EQ.21) THEN 
jetset74.F:        FBR=(PARJ(87)+MSTJ(45)*PARJ(88))*(1.-2.*ZC) 
jetset74.F:      ELSEIF(MSTJ(49).EQ.1) THEN 
jetset74.F:        FBR=(1.-2.*ZC)/3. 
jetset74.F:        IF(IGM.EQ.0.AND.M3JC.EQ.1) FBR=4.*FBR 
jetset74.F:      ELSEIF(KFL(1).EQ.21) THEN 
jetset74.F:        FBR=2.*LOG((1.-ZC)/ZC) 
jetset74.F:      IF(KFL(1).GE.11.AND.KFL(1).LE.18) FBR=0. 
jetset74.F:      IF(MSTJ(41).GE.2.AND.KFL(1).GE.1.AND.KFL(1).LE.18) THEN 
jetset74.F:        FBRE=(KCHG(KFL(1),1)/3.)**2*2.*LOG((1.-ZCE)/ZCE) 
jetset74.F:        IF(MSTJ(41).EQ.10) FBRE=PARJ(84)*FBRE 
jetset74.F:  390 PMS=V(IEP(1),5) 
jetset74.F:          IF(KSH(KFL(I)).EQ.1) PM=PMTH(2,KFL(I)) 
jetset74.F:      DO 410 IF=4,MSTJ(45) 
jetset74.F:  410 CONTINUE 
jetset74.F:      IF(FBR.LT.1E-3) THEN 
jetset74.F:        PMSQCD=PMS*EXP(MAX(-50.,LOG(RLU(0))*PARU(2)/(PARU(111)*FBR))) 
jetset74.F:      ELSEIF(MSTJ(44).EQ.1) THEN 
jetset74.F:      IF(ZC.GT.0.49.OR.PMSQCD.LE.PMTH(4,KFL(1))**2) PMSQCD= 
jetset74.F:     &PMTH(2,KFL(1))**2 
jetset74.F:      V(IEP(1),5)=PMSQCD 
jetset74.F:      MCE=1 
jetset74.F:      IF(MSTJ(41).GE.2.AND.KFL(1).GE.1.AND.KFL(1).LE.18) THEN 
jetset74.F:        PMSQED=PMS*EXP(MAX(-50.,LOG(RLU(0))*PARU(2)/(PARU(101)*FBRE))) 
jetset74.F:        IF(ZCE.GT.0.49.OR.PMSQED.LE.PMTH(5,KFL(1))**2) PMSQED= 
jetset74.F:     &  PMTH(2,KFL(1))**2 
jetset74.F:          V(IEP(1),5)=PMSQED 
jetset74.F:      P(IEP(1),5)=SQRT(V(IEP(1),5)) 
jetset74.F:      IF(P(IEP(1),5).LE.PMTH(3,KFL(1))) THEN 
jetset74.F:        P(IEP(1),5)=PMTH(1,KFL(1)) 
jetset74.F:        V(IEP(1),5)=P(IEP(1),5)**2 
jetset74.F:        Z=1.-(1.-ZCE)*(ZCE/(1.-ZCE))**RLU(0) 
jetset74.F:        IF(1.+Z**2.LT.2.*RLU(0)) GOTO 390 
jetset74.F:        K(IEP(1),5)=22 
jetset74.F:      ELSEIF(MSTJ(49).NE.1.AND.KFL(1).NE.21) THEN 
jetset74.F:        Z=1.-(1.-ZC)*(ZC/(1.-ZC))**RLU(0) 
jetset74.F:        IF(1.+Z**2.LT.2.*RLU(0)) GOTO 390 
jetset74.F:        K(IEP(1),5)=21 
jetset74.F:        Z=(1.-ZC)*(ZC/(1.-ZC))**RLU(0) 
jetset74.F:        IF(RLU(0).GT.0.5) Z=1.-Z 
jetset74.F:        IF((1.-Z*(1.-Z))**2.LT.RLU(0)) GOTO 390 
jetset74.F:        K(IEP(1),5)=21 
jetset74.F:      ELSEIF(MSTJ(49).NE.1) THEN 
jetset74.F:        Z=ZC+(1.-2.*ZC)*RLU(0) 
jetset74.F:        IF(Z**2+(1.-Z)**2.LT.RLU(0)) GOTO 390 
jetset74.F:        KFLB=1+INT(MSTJ(45)*RLU(0)) 
jetset74.F:        PMQ=4.*PMTH(2,KFLB)**2/V(IEP(1),5) 
jetset74.F:        IF(PMQ.GE.1.) GOTO 390 
jetset74.F:        PMQ0=4.*PMTH(2,21)**2/V(IEP(1),5) 
jetset74.F:        IF(MOD(MSTJ(43),2).EQ.0.AND.(1.+0.5*PMQ)*SQRT(1.-PMQ).LT. 
jetset74.F:     &  RLU(0)*(1.+0.5*PMQ0)*SQRT(1.-PMQ0)) GOTO 390 
jetset74.F:        K(IEP(1),5)=KFLB 
jetset74.F:      ELSEIF(KFL(1).NE.21) THEN 
jetset74.F:        Z=1.-SQRT(ZC**2+RLU(0)*(1.-2.*ZC)) 
jetset74.F:        K(IEP(1),5)=21 
jetset74.F:        Z=ZC+(1.-2.*ZC)*RLU(0) 
jetset74.F:        K(IEP(1),5)=21 
jetset74.F:        Z=ZC+(1.-2.*ZC)*RLU(0) 
jetset74.F:        KFLB=1+INT(MSTJ(45)*RLU(0)) 
jetset74.F:        PMQ=4.*PMTH(2,KFLB)**2/V(IEP(1),5) 
jetset74.F:        IF(PMQ.GE.1.) GOTO 390 
jetset74.F:        K(IEP(1),5)=KFLB 
jetset74.F:      IF(MCE.EQ.1.AND.MSTJ(44).GE.2) THEN 
jetset74.F:        IF(Z*(1.-Z)*V(IEP(1),5).LT.PT2MIN) GOTO 390 
jetset74.F:        IF(ALFM/LOG(V(IEP(1),5)*Z*(1.-Z)/ALAMS).LT.RLU(0)) GOTO 390 
jetset74.F:      IF(KFL(1).EQ.21) THEN 
jetset74.F:        KFLGD1=IABS(K(IEP(1),5)) 
jetset74.F:        KFLGD2=KFLGD1 
jetset74.F:        KFLGD1=KFL(1) 
jetset74.F:        KFLGD2=IABS(K(IEP(1),5)) 
jetset74.F:      IF(NEP.EQ.1) THEN 
jetset74.F:        PED=P(IEP(1),4) 
jetset74.F:        PED=0.5*(V(IM,5)+V(IEP(1),5)-PM2**2)/P(IM,5) 
jetset74.F:        IF(IEP(1).EQ.N+1) PED=V(IM,1)*PEM 
jetset74.F:        IF(IEP(1).EQ.N+2) PED=(1.-V(IM,1))*PEM 
jetset74.F:      IF(MOD(MSTJ(43),2).EQ.1) THEN 
jetset74.F:        PMQ1=(PMTH(1,KFLGD1)**2+PMQTH3**2)/V(IEP(1),5) 
jetset74.F:        PMQ2=(PMTH(1,KFLGD2)**2+PMQTH3**2)/V(IEP(1),5) 
jetset74.F:        ZD=SQRT(MAX(0.,(1.-V(IEP(1),5)/PED**2)*((1.-PMQ1-PMQ2)**2- 
jetset74.F:     &  4.*PMQ1*PMQ2))) 
jetset74.F:        ZH=1.+PMQ1-PMQ2 
jetset74.F:        ZD=SQRT(MAX(0.,1.-V(IEP(1),5)/PED**2)) 
jetset74.F:        ZH=1. 
jetset74.F:      IF(KFL(1).EQ.21) V(IEP(1),3)=LOG(ZU*(1.-ZL)/MAX(1E-20,ZL* 
jetset74.F:     &(1.-ZU))) 
jetset74.F:      IF(KFL(1).NE.21) V(IEP(1),3)=LOG((1.-ZL)/MAX(1E-10,1.-ZU)) 
jetset74.F:      IF(MSTJ(40).NE.0.AND.KFL(1).NE.21) THEN
jetset74.F:          EGLU=0.5*PS(5)*(1.-Z)*(1.+V(IEP(1),5)/V(NS+1,5))
jetset74.F:          EGLU=PMED*(1.-Z)
jetset74.F:        IF(MSTJ(40).EQ.1) THEN
jetset74.F:          IF(1.-CHI.LT.RLU(0)) GOTO 390
jetset74.F:      IF(IGM.EQ.0.AND.M3JC.EQ.1) THEN 
jetset74.F:        X1=Z*(1.+V(IEP(1),5)/V(NS+1,5)) 
jetset74.F:        X2=1.-V(IEP(1),5)/V(NS+1,5) 
jetset74.F:        X3=(1.-X1)+(1.-X2) 
jetset74.F:          KI1=K(IPA(INUM),2) 
jetset74.F:          QF1=KCHG(IABS(KI1),1)*ISIGN(1,KI1)/3. 
jetset74.F:          QF2=KCHG(IABS(KI2),1)*ISIGN(1,KI2)/3. 
jetset74.F:          WSHOW=QF1**2*(1.-X1)/X3*(1.+(X1/(2.-X2))**2)+ 
jetset74.F:     &    QF2**2*(1.-X2)/X3*(1.+(X2/(2.-X1))**2) 
jetset74.F:          WME=(QF1*(1.-X1)/X3-QF2*(1.-X2)/X3)**2*(X1**2+X2**2) 
jetset74.F:        ELSEIF(MSTJ(49).NE.1) THEN 
jetset74.F:          WSHOW=1.+(1.-X1)/X3*(X1/(2.-X2))**2+ 
jetset74.F:     &    (1.-X2)/X3*(X2/(2.-X1))**2 
jetset74.F:          WME=X1**2+X2**2 
jetset74.F:          IF(M3JCM.EQ.1) WME=WME-QME*X3-0.5*QME**2- 
jetset74.F:     &    (0.5*QME+0.25*QME**2)*((1.-X2)/(1.-X1)+(1.-X1)/(1.-X2)) 
jetset74.F:          WSHOW=4.*X3*((1.-X1)/(2.-X2)**2+(1.-X2)/(2.-X1)**2) 
jetset74.F:          IF(MSTJ(102).GE.2) WME=X3**2-2.*(1.+X3)*(1.-X1)*(1.-X2)* 
jetset74.F:     &    PARJ(171) 
jetset74.F:      ELSEIF(MCE.EQ.1.AND.IGM.GT.0.AND.MSTJ(42).GE.2) THEN 
jetset74.F:        MAOM=1 
jetset74.F:        ZM=V(IM,1) 
jetset74.F:        IF(IEP(1).EQ.N+2) ZM=1.-V(IM,1) 
jetset74.F:        THE2ID=Z*(1.-Z)*(ZM*P(IM,4))**2/V(IEP(1),5) 
jetset74.F:          IF(MAOM.EQ.1) GOTO 420 
jetset74.F:        IF(MAOM.EQ.1) THEN 
jetset74.F:          THE2IM=V(IAOM,1)*(1.-V(IAOM,1))*P(IAOM,4)**2/V(IAOM,5) 
jetset74.F:      IF(MSTJ(48).EQ.1) THEN 
jetset74.F:        IF(NEP.EQ.1.AND.IM.EQ.NS) THEN 
jetset74.F:          THE2ID=Z*(1.-Z)*PS(4)**2/V(IEP(1),5) 
jetset74.F:          IF(THE2ID.LT.1./PARJ(85)**2) GOTO 390 
jetset74.F:        ELSEIF(NEP.EQ.2.AND.IEP(1).EQ.NS+2) THEN 
jetset74.F:          THE2ID=Z*(1.-Z)*(0.5*P(IM,4))**2/V(IEP(1),5) 
jetset74.F:          IF(THE2ID.LT.1./PARJ(85)**2) GOTO 390 
jetset74.F:        ELSEIF(NEP.EQ.2.AND.IEP(1).EQ.NS+3) THEN 
jetset74.F:          THE2ID=Z*(1.-Z)*(0.5*P(IM,4))**2/V(IEP(1),5) 
jetset74.F:          IF(THE2ID.LT.1./PARJ(86)**2) GOTO 390 
jetset74.F:      IF(MIIS.GE.2.AND.IEP(1).LE.NS+3) THEN 
jetset74.F:        THE2D=MAX((1.-Z)/Z,Z/(1.-Z))*V(IEP(1),5)/(0.5*P(IM,4))**2 
jetset74.F:        IF(IEP(1).EQ.NS+2.AND.ISII(1).GE.1) THEN 
jetset74.F:          IF(THE2D.GT.THEIIS(1,ISII(1))**2) GOTO 390 
jetset74.F:        ELSEIF(IEP(1).EQ.NS+3.AND.ISII(2).GE.1) THEN 
jetset74.F:  430 V(IEP(1),1)=Z 
jetset74.F:      ISL(1)=0 
jetset74.F:      IF(NEP.EQ.1) GOTO 460 
jetset74.F:      IF(NEP.EQ.2.AND.P(IEP(1),5)+P(IEP(2),5).GE.P(IM,5)) GOTO 330 
jetset74.F:      DO 440 I=1,NEP 
jetset74.F:        IF(KSH(KFLD(I)).EQ.1) THEN 
jetset74.F:C...Check if chosen multiplet m1,m2,z1,z2 is physical. 
jetset74.F:        PA1S=(P(N+1,4)+P(N+1,5))*(P(N+1,4)-P(N+1,5)) 
jetset74.F:        PTS=0.25*(2.*PA1S*PA2S+2.*PA1S*PA3S+2.*PA2S*PA3S- 
jetset74.F:     &  PA1S**2-PA2S**2-PA3S**2)/PA1S 
jetset74.F:        DO 450 I1=N+1,N+2 
jetset74.F:        KFLDA=IABS(K(I1,2)) 
jetset74.F:        IF(P(I1,5).LT.PMTH(2,KFLDA)) GOTO 450 
jetset74.F:        IF(KFLDA.EQ.21) THEN 
jetset74.F:          KFLGD1=IABS(K(I1,5)) 
jetset74.F:          KFLGD2=KFLGD1 
jetset74.F:          KFLGD1=KFLDA 
jetset74.F:          KFLGD2=IABS(K(I1,5)) 
jetset74.F:        I2=2*N+3-I1 
jetset74.F:          PED=0.5*(V(IM,5)+V(I1,5)-V(I2,5))/P(IM,5) 
jetset74.F:          IF(I1.EQ.N+1) ZM=V(IM,1) 
jetset74.F:          IF(I1.EQ.N+2) ZM=1.-V(IM,1) 
jetset74.F:          PML=SQRT((V(IM,5)-V(N+1,5)-V(N+2,5))**2- 
jetset74.F:     &    4.*V(N+1,5)*V(N+2,5)) 
jetset74.F:          PED=PEM*(0.5*(V(IM,5)-PML+V(I1,5)-V(I2,5))+PML*ZM)/V(IM,5) 
jetset74.F:        IF(MOD(MSTJ(43),2).EQ.1) THEN 
jetset74.F:          PMQ1=(PMTH(1,KFLGD1)**2+PMQTH3**2)/V(I1,5) 
jetset74.F:          PMQ2=(PMTH(1,KFLGD2)**2+PMQTH3**2)/V(I1,5) 
jetset74.F:          ZD=SQRT(MAX(0.,(1.-V(I1,5)/PED**2)*((1.-PMQ1-PMQ2)**2- 
jetset74.F:     &    4.*PMQ1*PMQ2))) 
jetset74.F:          ZH=1.+PMQ1-PMQ2 
jetset74.F:          ZD=SQRT(MAX(0.,1.-V(I1,5)/PED**2)) 
jetset74.F:          ZH=1. 
jetset74.F:        IF(I1.EQ.N+1.AND.(V(I1,1).LT.ZL.OR.V(I1,1).GT.ZU)) ISL(1)=1 
jetset74.F:        IF(I1.EQ.N+2.AND.(V(I1,1).LT.ZL.OR.V(I1,1).GT.ZU)) ISL(2)=1 
jetset74.F:        IF(KFLDA.EQ.21) V(I1,4)=LOG(ZU*(1.-ZL)/MAX(1E-20,ZL*(1.-ZU))) 
jetset74.F:        IF(KFLDA.NE.21) V(I1,4)=LOG((1.-ZL)/MAX(1E-10,1.-ZU)) 
jetset74.F:        IF(ISL(1).EQ.1.AND.ISL(2).EQ.1.AND.ISLM.NE.0) THEN 
jetset74.F:        ELSEIF(ISL(1).EQ.1.AND.ISL(2).EQ.1) THEN 
jetset74.F:          ZDR1=MAX(0.,V(N+1,3)/MAX(1E-6,V(N+1,4))-1.) 
jetset74.F:          ZDR2=MAX(0.,V(N+2,3)/MAX(1E-6,V(N+2,4))-1.) 
jetset74.F:          IF(ZDR2.GT.RLU(0)*(ZDR1+ZDR2)) ISL(1)=0 
jetset74.F:          IF(ISL(1).EQ.1) ISL(2)=0 
jetset74.F:          IF(ISL(1).EQ.0) ISLM=1 
jetset74.F:        IF(ISL(1).EQ.1.OR.ISL(2).EQ.1) GOTO 330 
jetset74.F:      IF(IGM.GT.0.AND.MOD(MSTJ(43),2).EQ.1.AND.(P(N+1,5).GE. 
jetset74.F:     &PMTH(2,KFLD(1)).OR.P(N+2,5).GE.PMTH(2,KFLD(2)))) THEN 
jetset74.F:        PMQ1=V(N+1,5)/V(IM,5) 
jetset74.F:        ZD=SQRT(MAX(0.,(1.-V(IM,5)/PEM**2)*((1.-PMQ1-PMQ2)**2- 
jetset74.F:     &  4.*PMQ1*PMQ2))) 
jetset74.F:        ZH=1.+PMQ1-PMQ2 
jetset74.F:        IF(V(IM,1).LT.ZL.OR.V(IM,1).GT.ZU) GOTO 330 
jetset74.F:      IF(NEP.EQ.1) THEN 
jetset74.F:        P(N+1,1)=0. 
jetset74.F:        P(N+1,2)=0. 
jetset74.F:        P(N+1,3)=SQRT(MAX(0.,(P(IPA(1),4)+P(N+1,5))*(P(IPA(1),4)- 
jetset74.F:     &  P(N+1,5)))) 
jetset74.F:        P(N+1,4)=P(IPA(1),4) 
jetset74.F:        V(N+1,2)=P(N+1,4) 
jetset74.F:        PED1=0.5*(V(IM,5)+V(N+1,5)-V(N+2,5))/P(IM,5) 
jetset74.F:        P(N+1,1)=0. 
jetset74.F:        P(N+1,2)=0. 
jetset74.F:        P(N+1,3)=SQRT(MAX(0.,(PED1+P(N+1,5))*(PED1-P(N+1,5)))) 
jetset74.F:        P(N+1,4)=PED1 
jetset74.F:        P(N+2,1)=0. 
jetset74.F:        P(N+2,3)=-P(N+1,3) 
jetset74.F:        P(N+2,4)=P(IM,5)-PED1 
jetset74.F:        V(N+1,2)=P(N+1,4) 
jetset74.F:        P(N+1,1)=0. 
jetset74.F:        P(N+1,2)=0. 
jetset74.F:        P(N+1,3)=SQRT(MAX(0.,PA1S)) 
jetset74.F:        P(N+2,1)=SQRT(PTS) 
jetset74.F:        P(N+2,3)=0.5*(PA3S-PA2S-PA1S)/P(N+1,3) 
jetset74.F:        P(N+3,1)=-P(N+2,1) 
jetset74.F:        P(N+3,3)=-(P(N+1,3)+P(N+2,3)) 
jetset74.F:        V(N+1,2)=P(N+1,4) 
jetset74.F:        ZM=V(IM,1) 
jetset74.F:        PMLS=(V(IM,5)-V(N+1,5)-V(N+2,5))**2-4.*V(N+1,5)*V(N+2,5) 
jetset74.F:        ELSEIF(MOD(MSTJ(43),2).EQ.1) THEN 
jetset74.F:          PTS=(PEM**2*(ZM*(1.-ZM)*V(IM,5)-(1.-ZM)*V(N+1,5)- 
jetset74.F:          PTS=PMLS*(ZM*(1.-ZM)*PEM**2/V(IM,5)-0.25)/PZM**2 
jetset74.F:        IF(MSTJ(49).NE.1.AND.MOD(MSTJ(46),2).EQ.1.AND.K(IM,2).EQ.21. 
jetset74.F:          IF(K(IGM,3).NE.0) MAZIP=1 
jetset74.F:          ZAU=V(IGM,1) 
jetset74.F:          IF(IAU.EQ.IM+1) ZAU=1.-V(IGM,1) 
jetset74.F:          IF(K(IGM,2).NE.21) THEN 
jetset74.F:            HAZIP=2.*ZAU/(1.+ZAU**2) 
jetset74.F:            HAZIP=(ZAU/(1.-ZAU*(1.-ZAU)))**2 
jetset74.F:          IF(K(N+1,2).NE.21) THEN 
jetset74.F:            HAZIP=HAZIP*(-2.*ZM*(1.-ZM))/(1.-2.*ZM*(1.-ZM)) 
jetset74.F:            HAZIP=HAZIP*(ZM*(1.-ZM)/(1.-ZM*(1.-ZM)))**2 
jetset74.F:        IF(MSTJ(49).NE.2.AND.MSTJ(46).GE.2.AND.(K(N+1,2).EQ.21.OR. 
jetset74.F:     &  K(N+2,2).EQ.21).AND.IAU.NE.0) THEN 
jetset74.F:          IF(K(IGM,3).NE.0) MAZIC=N+1 
jetset74.F:          IF(K(IGM,3).NE.0.AND.K(N+1,2).NE.21) MAZIC=N+2 
jetset74.F:          IF(K(IGM,3).NE.0.AND.K(N+1,2).EQ.21.AND.K(N+2,2).EQ.21.AND. 
jetset74.F:          IF(MAZIC.EQ.N+2) ZS=1.-ZM 
jetset74.F:          ZGM=V(IGM,1) 
jetset74.F:          IF(IAU.EQ.IM-1) ZGM=1.-V(IGM,1) 
jetset74.F:          IF(MAZIC.EQ.0) ZGM=1. 
jetset74.F:     &    SQRT((1.-ZS)*(1.-ZGM)/(ZS*ZGM)) 
jetset74.F:        IF(MOD(MSTJ(43),2).EQ.1) THEN 
jetset74.F:          P(N+1,4)=PEM*V(IM,1) 
jetset74.F:          P(N+1,4)=PEM*(0.5*(V(IM,5)-SQRT(PMLS)+V(N+1,5)-V(N+2,5))+ 
jetset74.F:        P(N+1,1)=PT*COS(PHI) 
jetset74.F:        P(N+1,2)=PT*SIN(PHI) 
jetset74.F:          P(N+1,3)=0.5*(V(N+2,5)-V(N+1,5)-V(IM,5)+2.*PEM*P(N+1,4))/PZM 
jetset74.F:          P(N+1,3)=0. 
jetset74.F:        P(N+2,1)=-P(N+1,1) 
jetset74.F:        P(N+2,2)=-P(N+1,2) 
jetset74.F:        P(N+2,3)=PZM-P(N+1,3) 
jetset74.F:        P(N+2,4)=PEM-P(N+1,4) 
jetset74.F:          V(N+1,2)=(PEM*P(N+1,4)-PZM*P(N+1,3))/P(IM,5) 
jetset74.F:          BEX=P(IGM,1)/P(IGM,4) 
jetset74.F:          GABEP=GA*(GA*(BEX*P(IM,1)+BEY*P(IM,2)+BEZ*P(IM,3))/(1.+GA)- 
jetset74.F:          GA=1. 
jetset74.F:        THE=ulangl(P(IM,3)+GABEP*BEZ,SQRT((P(IM,1)+GABEP*BEX)**2+ 
jetset74.F:        PHI=ulangl(P(IM,1)+GABEP*BEX,P(IM,2)+GABEP*BEY) 
jetset74.F:        DO 480 I=N+1,N+2 
jetset74.F:        DP(1)=COS(THE)*COS(PHI)*P(I,1)-SIN(PHI)*P(I,2)+ 
jetset74.F:        DP(2)=COS(THE)*SIN(PHI)*P(I,1)+COS(PHI)*P(I,2)+ 
jetset74.F:        DP(3)=-SIN(THE)*P(I,1)+COS(THE)*P(I,3) 
jetset74.F:        DBP=BEX*DP(1)+BEY*DP(2)+BEZ*DP(3) 
jetset74.F:        DGABP=GA*(GA*DBP/(1D0+GA)+DP(4)) 
jetset74.F:        P(I,1)=DP(1)+DGABP*BEX 
jetset74.F:        DO 490 J=1,3 
jetset74.F:        DPT(1,J)=P(IM,J) 
jetset74.F:        DPT(3,J)=P(N+1,J) 
jetset74.F:        DPMA=DPT(1,1)*DPT(2,1)+DPT(1,2)*DPT(2,2)+DPT(1,3)*DPT(2,3) 
jetset74.F:        DPMD=DPT(1,1)*DPT(3,1)+DPT(1,2)*DPT(3,2)+DPT(1,3)*DPT(3,3) 
jetset74.F:        DPMM=DPT(1,1)**2+DPT(1,2)**2+DPT(1,3)**2 
jetset74.F:        DO 500 J=1,3 
jetset74.F:        DPT(4,J)=DPT(2,J)-DPMA*DPT(1,J)/DPMM 
jetset74.F:        DPT(5,J)=DPT(3,J)-DPMD*DPT(1,J)/DPMM 
jetset74.F:        DPT(4,4)=SQRT(DPT(4,1)**2+DPT(4,2)**2+DPT(4,3)**2) 
jetset74.F:        DPT(5,4)=SQRT(DPT(5,1)**2+DPT(5,2)**2+DPT(5,3)**2) 
jetset74.F:        IF(MIN(DPT(4,4),DPT(5,4)).GT.0.1*PARJ(82)) THEN 
jetset74.F:          CAD=(DPT(4,1)*DPT(5,1)+DPT(4,2)*DPT(5,2)+ 
jetset74.F:            IF(1.+HAZIP*(2.*CAD**2-1.).LT.RLU(0)*(1.+ABS(HAZIP))) 
jetset74.F:            IF((1.-HAZIC)*(1.-HAZIC*CAD)/(1.+HAZIC**2-2.*HAZIC*CAD) 
jetset74.F:      IF(MOD(MIIS,2).EQ.1.AND.IGM.EQ.NS+1.AND.(K(N+1,2).EQ.21.OR. 
jetset74.F:     &K(N+2,2).EQ.21)) THEN 
jetset74.F:        III=IM-NS-1 
jetset74.F:        IF(ISII(III).GE.1) THEN 
jetset74.F:          IAZIID=N+1 
jetset74.F:          IF(K(N+1,2).NE.21) IAZIID=N+2 
jetset74.F:          IF(K(N+1,2).EQ.21.AND.K(N+2,2).EQ.21.AND. 
jetset74.F:     &    P(N+1,4).GT.P(N+2,4)) IAZIID=N+2 
jetset74.F:        THEIID=ulangl(P(IAZIID,3),SQRT(P(IAZIID,1)**2+P(IAZIID,2)**2)) 
jetset74.F:          IF(III.EQ.2) THEIID=PARU(1)-THEIID 
jetset74.F:          PHIIID=ulangl(P(IAZIID,1),P(IAZIID,2)) 
jetset74.F:          IF(PHIREL.GT.PARU(1)) PHIREL=PARU(2)-PHIREL 
jetset74.F:          IF((1.-HAZII)*(1.-HAZII*CAD)/(1.+HAZII**2-2.*HAZII*CAD) 
jetset74.F:      IF(IGM.GE.0) K(IM,1)=14 
jetset74.F:        CALL LUERRM(11,'(LUSHOW:) no more memory left in LUJETS') 
jetset74.F:        IF(MSTU(21).GE.1) N=NS 
jetset74.F:        IF(MSTU(21).GE.1) RETURN 
jetset74.F:  510 IF(NPA.GE.2) THEN 
jetset74.F:        K(NS+1,1)=11 
jetset74.F:        K(NS+1,2)=94 
jetset74.F:        K(NS+1,3)=IP1 
jetset74.F:        IF(IP2.GT.0.AND.IP2.LT.IP1) K(NS+1,3)=IP2 
jetset74.F:        K(NS+1,4)=NS+2 
jetset74.F:        K(NS+1,5)=NS+1+NPA 
jetset74.F:        IIM=1 
jetset74.F:      DO 520 I=NS+1+IIM,N 
jetset74.F:      IF(K(I,1).LE.10.AND.K(I,2).EQ.22) THEN 
jetset74.F:        K(I,1)=1 
jetset74.F:      ELSEIF(K(I,1).LE.10.AND.IABS(K(I,2)).GE.11.AND. 
jetset74.F:     &IABS(K(I,2)).LE.18) THEN 
jetset74.F:        K(I,1)=1 
jetset74.F:      ELSEIF(K(I,1).LE.10) THEN 
jetset74.F:      ELSEIF(K(MOD(K(I,4),MSTU(5))+1,2).NE.22) THEN 
jetset74.F:        ID1=MOD(K(I,4),MSTU(5)) 
jetset74.F:        IF(K(I,2).GE.1.AND.K(I,2).LE.8) ID1=MOD(K(I,4),MSTU(5))+1 
jetset74.F:        ID2=2*MOD(K(I,4),MSTU(5))+1-ID1 
jetset74.F:        K(I,4)=MSTU(5)*(K(I,4)/MSTU(5))+ID1 
jetset74.F:        K(ID1,4)=K(ID1,4)+MSTU(5)*I 
jetset74.F:        K(ID1,5)=K(ID1,5)+MSTU(5)*ID2 
jetset74.F:        K(ID2,4)=K(ID2,4)+MSTU(5)*ID1 
jetset74.F:        ID1=MOD(K(I,4),MSTU(5)) 
jetset74.F:        ID2=ID1+1 
jetset74.F:        K(I,4)=MSTU(5)*(K(I,4)/MSTU(5))+ID1 
jetset74.F:        K(I,5)=MSTU(5)*(K(I,5)/MSTU(5))+ID1 
jetset74.F:        IF(IABS(K(I,2)).LE.10.OR.K(ID1,1).GE.11) THEN 
jetset74.F:          K(ID1,4)=K(ID1,4)+MSTU(5)*I 
jetset74.F:          K(ID1,5)=K(ID1,5)+MSTU(5)*I 
jetset74.F:          K(ID1,4)=0 
jetset74.F:          K(ID1,5)=0 
jetset74.F:        BEX=PS(1)/PS(4) 
jetset74.F:        GABEP=GA*(GA*(BEX*P(IPA(1),1)+BEY*P(IPA(1),2)+BEZ*P(IPA(1),3)) 
jetset74.F:     &  /(1.+GA)-P(IPA(1),4)) 
jetset74.F:      THE=ulangl(P(IPA(1),3)+GABEP*BEZ,SQRT((P(IPA(1),1) 
jetset74.F:     &+GABEP*BEX)**2+(P(IPA(1),2)+GABEP*BEY)**2)) 
jetset74.F:      PHI=ulangl(P(IPA(1),1)+GABEP*BEX,P(IPA(1),2)+GABEP*BEY) 
jetset74.F:        CHI=ulangl(COS(THE)*COS(PHI)*(P(IPA(2),1)+GABEP*BEX)+COS(THE)* 
jetset74.F:     &  BEZ),-SIN(PHI)*(P(IPA(2),1)+GABEP*BEX)+COS(PHI)*(P(IPA(2),2)+ 
jetset74.F:        MSTU(33)=1 
jetset74.F:        CALL LUDBRB(NS+1,N,0.,CHI,0D0,0D0,0D0) 
jetset74.F:      MSTU(33)=1 
jetset74.F:      CALL LUDBRB(NS+1,N,THE,PHI,DBEX,DBEY,DBEZ) 
jetset74.F:      DO 540 I=NS+1,N 
jetset74.F:      DO 530 J=1,5 
jetset74.F:      V(I,J)=V(IP1,J) 
jetset74.F:        DO 550 IP=1,NPA 
jetset74.F:        K(IPA(IP),1)=14 
jetset74.F:        IF(IIM.EQ.1.AND.MSTU(16).NE.2) K(NS+IIM+IP,3)=NS+1 
jetset74.F:        IF(K(NS+IIM+IP,1).NE.1) THEN 
jetset74.F:      COMMON/LUDAT1/MSTU(200),PARU(200),MSTJ(200),PARJ(200) 
jetset74.F:      SAVE /LUJETS/,/LUDAT1/ 
jetset74.F:      DIMENSION DPS(4),KFBE(9),NBE(0:9),BEI(100) 
jetset74.F:      DATA KFBE/211,-211,111,321,-321,130,310,221,331/ 
jetset74.F:      IF((MSTJ(51).NE.1.AND.MSTJ(51).NE.2).OR.N-NSAV.LE.1) RETURN 
jetset74.F:      DO 100 J=1,4 
jetset74.F:  100 CONTINUE 
jetset74.F:      DO 120 I=1,N 
jetset74.F:      IF(K(I,1).LE.10.AND.((KFA.GT.10.AND.KFA.LE.20).OR.KFA.EQ.22).AND.
jetset74.F:        IF(KFMA.GT.10.AND.KFMA.LE.80) K(I,1)=-K(I,1)
jetset74.F:      IF(K(I,1).LE.0.OR.K(I,1).GT.10) GOTO 120 
jetset74.F:      DO 110 J=1,4 
jetset74.F:  110 CONTINUE 
jetset74.F:  120 CONTINUE 
jetset74.F:      CALL LUDBRB(0,0,0.,0.,-DPS(1)/DPS(4),-DPS(2)/DPS(4), 
jetset74.F:      DO 130 I=1,N 
jetset74.F:      IF(K(I,1).GE.1.AND.K(I,1).LE.10) PECM=PECM+P(I,4) 
jetset74.F:  130 CONTINUE 
jetset74.F:      DO 160 IBE=1,MIN(9,MSTJ(52)) 
jetset74.F:      NBE(IBE)=NBE(IBE-1) 
jetset74.F:      DO 150 I=NSAV+1,N 
jetset74.F:      IF(K(I,2).NE.KFBE(IBE)) GOTO 150 
jetset74.F:      IF(K(I,1).LE.0.OR.K(I,1).GT.10) GOTO 150 
jetset74.F:        CALL LUERRM(11,'(LUBOEI:) no more memory left in LUJETS') 
jetset74.F:      NBE(IBE)=NBE(IBE)+1 
jetset74.F:      K(NBE(IBE),1)=I 
jetset74.F:      DO 140 J=1,3 
jetset74.F:  140 CONTINUE 
jetset74.F:  150 CONTINUE 
jetset74.F:  160 CONTINUE 
jetset74.F:      DO 220 IBE=1,MIN(9,MSTJ(52)) 
jetset74.F:      IF(IBE.NE.1.AND.IBE.NE.4.AND.IBE.LE.7) GOTO 180 
jetset74.F:      IF(IBE.EQ.1.AND.MAX(NBE(1)-NBE(0),NBE(2)-NBE(1),NBE(3)-NBE(2)) 
jetset74.F:     &.LE.1) GOTO 180 
jetset74.F:     &NBE(7)-NBE(6)).LE.1) GOTO 180 
jetset74.F:      IF(IBE.GE.8.AND.NBE(IBE)-NBE(IBE-1).LE.1) GOTO 180 
jetset74.F:      IF(IBE.EQ.1) PMHQ=2.*ULMASS(211) 
jetset74.F:      IF(IBE.EQ.4) PMHQ=2.*ULMASS(321) 
jetset74.F:      IF(IBE.EQ.8) PMHQ=2.*ULMASS(221) 
jetset74.F:      IF(IBE.EQ.9) PMHQ=2.*ULMASS(331) 
jetset74.F:      QDEL=0.1*MIN(PMHQ,PARJ(93)) 
jetset74.F:      IF(MSTJ(51).EQ.1) THEN 
jetset74.F:        NBIN=MIN(100,NINT(9.*PARJ(93)/QDEL)) 
jetset74.F:        NBIN=MIN(100,NINT(3.*PARJ(93)/QDEL)) 
jetset74.F:      DO 170 IBIN=1,NBIN 
jetset74.F:      BEI(IBIN)=QDEL*(QBIN**2+QDEL**2/12.)/SQRT(QBIN**2+PMHQ**2) 
jetset74.F:      IF(MSTJ(51).EQ.1) THEN 
jetset74.F:      IF(IBIN.GE.2) BEI(IBIN)=BEI(IBIN)+BEI(IBIN-1) 
jetset74.F:  170 CONTINUE 
jetset74.F:  180 DO 210 I1M=NBE(IBE-1)+1,NBE(IBE)-1 
jetset74.F:      I1=K(I1M,1) 
jetset74.F:      DO 200 I2M=I1M+1,NBE(IBE) 
jetset74.F:      I2=K(I2M,1) 
jetset74.F:      Q2OLD=MAX(0.,(P(I1,4)+P(I2,4))**2-(P(I1,1)+P(I2,1))**2-(P(I1,2)+ 
jetset74.F:     &P(I2,2))**2-(P(I1,3)+P(I2,3))**2-(P(I1,5)+P(I2,5))**2) 
jetset74.F:      IF(QOLD.LT.1E-3*QDEL) THEN 
jetset74.F:      ELSEIF(QOLD.LT.(NBIN-0.1)*QDEL) THEN 
jetset74.F:        RINP=(RBIN**3-IBIN**3)/(3*IBIN*(IBIN+1)+1) 
jetset74.F:        QMOV=(BEI(IBIN)+RINP*(BEI(IBIN+1)-BEI(IBIN)))* 
jetset74.F:      HC1=(P(I1,4)+P(I2,4))**2-(Q2OLD-Q2NEW) 
jetset74.F:      HC2=(Q2OLD-Q2NEW)*(P(I1,4)-P(I2,4))**2 
jetset74.F:      HA=0.5*(1.-SQRT(HC1*Q2NEW/(HC1*Q2OLD-HC2))) 
jetset74.F:      DO 190 J=1,3 
jetset74.F:      PD=HA*(P(I2,J)-P(I1,J)) 
jetset74.F:      P(I1M,J)=P(I1M,J)+PD 
jetset74.F:  190 CONTINUE 
jetset74.F:  210 CONTINUE 
jetset74.F:      DO 240 IM=NBE(0)+1,NBE(MIN(9,MSTJ(52))) 
jetset74.F:      I=K(IM,1) 
jetset74.F:      DO 230 J=1,3 
jetset74.F:      P(I,4)=SQRT(P(I,5)**2+P(I,1)**2+P(I,2)**2+P(I,3)**2) 
jetset74.F:      DO 250 I=1,N 
jetset74.F:      IF(K(I,1).LE.0.OR.K(I,1).GT.10) GOTO 250 
jetset74.F:      DO 270 I=1,N 
jetset74.F:      IF(K(I,1).LE.0.OR.K(I,1).GT.10) GOTO 270 
jetset74.F:      DO 260 J=1,3 
jetset74.F:      P(I,4)=SQRT(P(I,5)**2+P(I,1)**2+P(I,2)**2+P(I,3)**2) 
jetset74.F:      CALL LUDBRB(0,0,0.,0.,DPS(1)/DPS(4),DPS(2)/DPS(4),DPS(3)/DPS(4)) 
jetset74.F:      DO 280 I=1,N
jetset74.F:      IF(K(I,1).LT.0) K(I,1)=-K(I,1)
jetset74.F:      COMMON/LUDAT1/MSTU(200),PARU(200),MSTJ(200),PARJ(200) 
jetset74.F:      SAVE /LUDAT1/,/LUDAT2/ 
jetset74.F:      PARF(106)=PMAS(6,1) 
jetset74.F:      PARF(107)=PMAS(7,1) 
jetset74.F:      PARF(108)=PMAS(8,1) 
jetset74.F:      IF((MSTJ(93).EQ.1.OR.MSTJ(93).EQ.2).AND.KFA.LE.10) THEN 
jetset74.F:        ULMASS=PARF(100+KFA) 
jetset74.F:        IF(MSTJ(93).EQ.2) ULMASS=MAX(0.,ULMASS-PARF(121)) 
jetset74.F:      ELSEIF(KFA.LE.100.OR.KC.LE.80.OR.KC.GT.100) THEN 
jetset74.F:        ULMASS=PMAS(KC,1) 
jetset74.F:        KFLA=MOD(KFA/1000,10) 
jetset74.F:        KFLB=MOD(KFA/100,10) 
jetset74.F:        KFLC=MOD(KFA/10,10) 
jetset74.F:        KFLS=MOD(KFA,10) 
jetset74.F:        KFLR=MOD(KFA/10000,10) 
jetset74.F:        PMA=PARF(100+KFLA) 
jetset74.F:        PMB=PARF(100+KFLB) 
jetset74.F:        PMC=PARF(100+KFLC) 
jetset74.F:          IF(KFLS.EQ.1) PMSPL=-3./(PMB*PMC) 
jetset74.F:          IF(KFLS.GE.3) PMSPL=1./(PMB*PMC) 
jetset74.F:          ULMASS=PARF(111)+PMB+PMC+PARF(113)*PARF(101)**2*PMSPL 
jetset74.F:          IF(KFLS.EQ.1) KMUL=3 
jetset74.F:          ULMASS=PARF(113+KMUL)+PMB+PMC 
jetset74.F:          IF(KFLS.EQ.1) PMSPL=-3./(PMA*PMB) 
jetset74.F:          IF(KFLS.EQ.3) PMSPL=1./(PMA*PMB) 
jetset74.F:          ULMASS=2.*PARF(112)/3.+PMA+PMB+PARF(114)*PARF(101)**2*PMSPL 
jetset74.F:          IF(MSTJ(93).EQ.1) ULMASS=PMA+PMB 
jetset74.F:          IF(MSTJ(93).EQ.2) ULMASS=MAX(0.,ULMASS-PARF(122)- 
jetset74.F:     &    2.*PARF(112)/3.) 
jetset74.F:            PMSPL=1./(PMA*PMB)-2./(PMA*PMC)-2./(PMB*PMC) 
jetset74.F:            PMSPL=-2./(PMA*PMB)-2./(PMA*PMC)+1./(PMB*PMC) 
jetset74.F:            PMSPL=1./(PMA*PMB)+1./(PMA*PMC)+1./(PMB*PMC) 
jetset74.F:          ULMASS=PARF(112)+PMA+PMB+PMC+PARF(114)*PARF(101)**2*PMSPL 
jetset74.F:      IF(MSTJ(24).GE.1.AND.PMAS(KC,2).GT.1E-4) THEN 
jetset74.F:        IF(MSTJ(24).EQ.1.OR.(MSTJ(24).EQ.2.AND.KFA.GT.100)) THEN 
jetset74.F:          ULMASS=ULMASS+0.5*PMAS(KC,2)*TAN((2.*RLU(0)-1.)* 
jetset74.F:      COMMON/LUDAT1/MSTU(200),PARU(200),MSTJ(200),PARJ(200) 
jetset74.F:      SAVE /LUDAT1/,/LUDAT2/,/LUDAT4/ 
jetset74.F:      CHARACTER CHAU*16 
jetset74.F:      KFLA=MOD(KFA/1000,10) 
jetset74.F:      KFLB=MOD(KFA/100,10) 
jetset74.F:      KFLC=MOD(KFA/10,10) 
jetset74.F:      KFLS=MOD(KFA,10) 
jetset74.F:      KFLR=MOD(KFA/10000,10) 
jetset74.F:      IF(KFA.LE.100.OR.(KFA.GT.100.AND.KC.GT.100)) THEN 
jetset74.F:        DO 100 LEM=1,8 
jetset74.F:  100   CONTINUE 
jetset74.F:        CHAU(1:2)=CHAF(KFLA)(1:1)//CHAF(KFLB)(1:1) 
jetset74.F:        IF(KFLS.EQ.1) CHAU(3:4)='_0' 
jetset74.F:        IF(KFLS.EQ.3) CHAU(3:4)='_1' 
jetset74.F:        IF(KFLB.EQ.5) CHAU(1:1)='B' 
jetset74.F:        IF(KFLB.EQ.6) CHAU(1:1)='T' 
jetset74.F:        IF(KFLB.EQ.7) CHAU(1:1)='L' 
jetset74.F:        IF(KFLB.EQ.8) CHAU(1:1)='H' 
jetset74.F:        LEN=1 
jetset74.F:        IF(KFLR.EQ.0.AND.KFLS.EQ.1) THEN 
jetset74.F:        ELSEIF(KFLR.EQ.1.AND.KFLS.EQ.3) THEN 
jetset74.F:          CHAU(2:3)='_1' 
jetset74.F:        ELSEIF(KFLR.EQ.1.AND.KFLS.EQ.1) THEN 
jetset74.F:          CHAU(2:4)='*_1' 
jetset74.F:          CHAU(LEN+1:LEN+2)='_'//CHAF(KFLC)(1:1) 
jetset74.F:          CHAU(LEN+1:LEN+1)=CHAF(KFLC)(1:1) 
jetset74.F:          LEN=LEN+1 
jetset74.F:        CHAU(LEN+1:LEN+2)='_'//CHAF(KFLA)(1:1) 
jetset74.F:          CHAU(LEN+1:LEN+2)=CHAF(KFLB)(1:1)//CHAF(KFLC)(1:1) 
jetset74.F:          CHAU(LEN+1:LEN+1)=CHAF(KFLB)(1:1) 
jetset74.F:          LEN=LEN+1 
jetset74.F:          CHAU(LEN+1:LEN+2)=CHAF(KFLC)(1:1)//CHAF(KFLB)(1:1) 
jetset74.F:          CHAU(LEN+1:LEN+1)=CHAF(KFLC)(1:1) 
jetset74.F:          LEN=LEN+1 
jetset74.F:      ELSEIF(KFA.GT.10.AND.KFA.LE.40.AND.KQ.NE.0.AND.MOD(KQ,3).EQ.0) 
jetset74.F:      ELSEIF(KFA.EQ.89.OR.(KFA.GE.91.AND.KFA.LE.99)) THEN 
jetset74.F:      ELSEIF(KFA.GT.100.AND.KFLA.EQ.0.AND.KQ.NE.0) THEN 
jetset74.F:      ELSEIF(MSTU(15).LE.1) THEN 
jetset74.F:        CHAU(LEN+1:LEN+1)='~' 
jetset74.F:        LEN=LEN+1 
jetset74.F:        CHAU(LEN+1:LEN+3)='bar' 
jetset74.F:      IF(KQ.EQ.6) CHAU(LEN+1:LEN+2)='++' 
jetset74.F:      IF(KQ.EQ.-6) CHAU(LEN+1:LEN+2)='--' 
jetset74.F:      IF(KQ.EQ.3) CHAU(LEN+1:LEN+1)='+' 
jetset74.F:      IF(KQ.EQ.-3) CHAU(LEN+1:LEN+1)='-' 
jetset74.F:      ELSEIF(KQ.EQ.0.AND.(KFA.GE.81.AND.KFA.LE.100)) THEN 
jetset74.F:      ELSEIF(KFA.GT.100.AND.KFLA.EQ.0.AND.KFLB.EQ.KFLC.AND. 
jetset74.F:     &KFLB.NE.1) THEN 
jetset74.F:        CHAU(LEN+1:LEN+1)='0' 
jetset74.F:      ELSEIF(KFA.LE.100.OR.KC.LE.80.OR.KC.GT.100) THEN 
jetset74.F:        LUCHGE=KCHG(KC,1) 
jetset74.F:      ELSEIF(MOD(KFA/1000,10).EQ.0) THEN 
jetset74.F:        LUCHGE=(KCHG(MOD(KFA/100,10),1)-KCHG(MOD(KFA/10,10),1))* 
jetset74.F:     &  (-1)**MOD(KFA/100,10) 
jetset74.F:      ELSEIF(MOD(KFA/10,10).EQ.0) THEN 
jetset74.F:        LUCHGE=KCHG(MOD(KFA/1000,10),1)+KCHG(MOD(KFA/100,10),1) 
jetset74.F:        LUCHGE=KCHG(MOD(KFA/1000,10),1)+KCHG(MOD(KFA/100,10),1)+ 
jetset74.F:     &  KCHG(MOD(KFA/10,10),1) 
jetset74.F:      LUCHGE=LUCHGE*ISIGN(1,KF) 
jetset74.F:      DATA KFTAB/211,111,221,311,321,130,310,213,113,223, 
jetset74.F:     &313,323,2112,2212,210,2110,2210,110,220,330,440,30443,30553,0,0/ 
jetset74.F:      DATA KCTAB/101,111,112,102,103,221,222,121,131,132, 
jetset74.F:     &122,123,332,333,281,282,283,284,285,286,287,231,235,0,0/ 
jetset74.F:      IF(KFA.EQ.0.OR.KFA.GE.100000) THEN 
jetset74.F:      ELSEIF(KFA.LE.100) THEN 
jetset74.F:        DO 100 IKF=1,23 
jetset74.F:  100   CONTINUE 
jetset74.F:      KFLA=MOD(KFA/1000,10) 
jetset74.F:      KFLB=MOD(KFA/100,10) 
jetset74.F:      KFLC=MOD(KFA/10,10) 
jetset74.F:      KFLS=MOD(KFA,10) 
jetset74.F:      KFLR=MOD(KFA/10000,10) 
jetset74.F:      IF(KFA-10000*KFLR.LT.1000) THEN 
jetset74.F:          IF(KFLR.EQ.0.AND.KFLS.EQ.1) THEN 
jetset74.F:            LUCOMP=110+KFLB 
jetset74.F:            LUCOMP=130+KFLB 
jetset74.F:          ELSEIF(KFLR.EQ.1.AND.KFLS.EQ.3) THEN 
jetset74.F:            LUCOMP=150+KFLB 
jetset74.F:          ELSEIF(KFLR.EQ.1.AND.KFLS.EQ.1) THEN 
jetset74.F:            LUCOMP=170+KFLB 
jetset74.F:            LUCOMP=190+KFLB 
jetset74.F:            LUCOMP=210+KFLB 
jetset74.F:          IF(KFLR.EQ.0.AND.KFLS.EQ.1) THEN 
jetset74.F:            LUCOMP=100+((KFLB-1)*(KFLB-2))/2+KFLC 
jetset74.F:            LUCOMP=120+((KFLB-1)*(KFLB-2))/2+KFLC 
jetset74.F:          ELSEIF(KFLR.EQ.1.AND.KFLS.EQ.3) THEN 
jetset74.F:            LUCOMP=140+((KFLB-1)*(KFLB-2))/2+KFLC 
jetset74.F:          ELSEIF(KFLR.EQ.1.AND.KFLS.EQ.1) THEN 
jetset74.F:            LUCOMP=160+((KFLB-1)*(KFLB-2))/2+KFLC 
jetset74.F:            LUCOMP=180+((KFLB-1)*(KFLB-2))/2+KFLC 
jetset74.F:            LUCOMP=200+((KFLB-1)*(KFLB-2))/2+KFLC 
jetset74.F:        ELSEIF((KFLS.EQ.1.AND.KFLR.LE.1).OR.(KFLS.EQ.3.AND.KFLR.LE.2) 
jetset74.F:      ELSEIF((KFLR.EQ.0.OR.KFLR.EQ.1).AND.KFLC.EQ.0) THEN 
jetset74.F:        IF(KFLS.NE.1.AND.KFLS.NE.3) THEN 
jetset74.F:        ELSEIF(KFLS.EQ.1.AND.KFLA.EQ.KFLB) THEN 
jetset74.F:C...Spin 1/2 baryons. 
jetset74.F:          LUCOMP=300+((KFLA+1)*KFLA*(KFLA-1))/6+(KFLC*(KFLC-1))/2+KFLB 
jetset74.F:          LUCOMP=330+((KFLA+1)*KFLA*(KFLA-1))/6+(KFLB*(KFLB-1))/2+KFLC 
jetset74.F:          LUCOMP=360+((KFLA+1)*KFLA*(KFLA-1))/6+(KFLB*(KFLB-1))/2+KFLC 
jetset74.F:      COMMON/LUDAT1/MSTU(200),PARU(200),MSTJ(200),PARJ(200) 
jetset74.F:      SAVE /LUJETS/,/LUDAT1/ 
jetset74.F:      IF(MERR.LE.10) THEN 
jetset74.F:        MSTU(27)=MSTU(27)+1 
jetset74.F:        IF(MSTU(25).EQ.1.AND.MSTU(27).LE.MSTU(26)) WRITE(MSTU(11),5000) 
jetset74.F:     &  MERR,MSTU(31),CHMESS 
jetset74.F:        MSTU(23)=MSTU(23)+1 
jetset74.F:        MSTU(24)=MERR-10 
jetset74.F:        IF(MSTU(21).GE.1.AND.MSTU(23).LE.MSTU(22)) WRITE(MSTU(11),5100) 
jetset74.F:     &  MERR-10,MSTU(31),CHMESS 
jetset74.F:        IF(MSTU(21).GE.2.AND.MSTU(23).GT.MSTU(22)) THEN 
jetset74.F:          WRITE(MSTU(11),5100) MERR-10,MSTU(31),CHMESS 
jetset74.F:          WRITE(MSTU(11),5200) 
jetset74.F:          IF(MERR.NE.17) CALL lulist(2) 
jetset74.F:        WRITE(MSTU(11),5300) MERR-20,MSTU(31),CHMESS 
jetset74.F: 5100 FORMAT(/5X,'Error type',I2,' has occured after',I6, 
jetset74.F:      COMMON/LUDAT1/MSTU(200),PARU(200),MSTJ(200),PARJ(200) 
jetset74.F:      SAVE /LUDAT1/ 
jetset74.F:C...See R. Kleiss et al, CERN 89-08, vol. 3, pp. 129-131. 
jetset74.F:      AEMPI=PARU(101)/(3.*PARU(1)) 
jetset74.F:      IF(MSTU(101).LE.0.OR.Q2.LT.2E-6) THEN 
jetset74.F:        RPIGG=AEMPI*(13.4916+LOG(Q2))+0.00835*LOG(1.+Q2) 
jetset74.F:        RPIGG=AEMPI*(16.3200+2.*LOG(Q2))+0.00238*LOG(1.+3.927*Q2) 
jetset74.F:      ELSEIF(Q2.LT.1E4) THEN 
jetset74.F:        RPIGG=AEMPI*(13.4955+3.*LOG(Q2))+0.00165+0.00299*LOG(1.+Q2) 
jetset74.F:        RPIGG=AEMPI*(13.4955+3.*LOG(Q2))+0.00221+0.00293*LOG(1.+Q2) 
jetset74.F:      ULALEM=PARU(101)/(1.-RPIGG) 
jetset74.F:      PARU(108)=ULALEM 
jetset74.F:      COMMON/LUDAT1/MSTU(200),PARU(200),MSTJ(200),PARJ(200) 
jetset74.F:      SAVE /LUDAT1/,/LUDAT2/ 
jetset74.F:      IF(MSTU(111).LE.0) THEN 
jetset74.F:        ULALPS=PARU(111) 
jetset74.F:        MSTU(118)=MSTU(112) 
jetset74.F:        PARU(117)=0. 
jetset74.F:        PARU(118)=PARU(111) 
jetset74.F:      IF(MSTU(115).GE.2) Q2EFF=MAX(Q2,PARU(114)) 
jetset74.F:      NF=MSTU(112) 
jetset74.F:      ALAM2=PARU(112)**2 
jetset74.F:  100 IF(NF.GT.MAX(2,MSTU(113))) THEN 
jetset74.F:        Q2THR=PARU(113)*PMAS(NF,1)**2 
jetset74.F:          NF=NF-1 
jetset74.F:          GOTO 100 
jetset74.F:  110 IF(NF.LT.MIN(8,MSTU(114))) THEN 
jetset74.F:        Q2THR=PARU(113)*PMAS(NF+1,1)**2 
jetset74.F:          NF=NF+1 
jetset74.F:          GOTO 110 
jetset74.F:      IF(MSTU(115).EQ.1) Q2EFF=Q2EFF+ALAM2 
jetset74.F:      PARU(117)=SQRT(ALAM2) 
jetset74.F:      ALGQ=LOG(MAX(1.0001,Q2EFF/ALAM2)) 
jetset74.F:      IF(MSTU(111).EQ.1) THEN 
jetset74.F:        ULALPS=MIN(PARU(115),PARU(2)/(B0*ALGQ)) 
jetset74.F:        B1=(153.-19.*NF)/6. 
jetset74.F:        ULALPS=MIN(PARU(115),PARU(2)/(B0*ALGQ)*(1.-B1*LOG(ALGQ)/ 
jetset74.F:      MSTU(118)=NF 
jetset74.F:      PARU(118)=ULALPS 
jetset74.F:      COMMON/LUDAT1/MSTU(200),PARU(200),MSTJ(200),PARJ(200) 
jetset74.F:      SAVE /LUDAT1/ 
jetset74.F:      IF(R.LT.1E-20) RETURN 
jetset74.F:          ulangl=PARU(1)-ulangl 
jetset74.F:          ulangl=-PARU(1)-ulangl 
jetset74.F:      COMMON/LUDATR/MRLU(6),RRLU(100) 
jetset74.F:        DO 100 IBCK=1,NBCK 
jetset74.F:        BACKSPACE(LFN,ERR=110,IOSTAT=IERR) 
jetset74.F:  100   CONTINUE 
jetset74.F:      WRITE(LFN,ERR=110,IOSTAT=IERR) (MRLU(I1),I1=1,5), 
jetset74.F:     &(RRLU(I2),I2=1,100) 
jetset74.F:      MRLU(6)=MRLU(6)+1 
jetset74.F:  110 WRITE(CHERR,'(I8)') IERR 
jetset74.F:      CALL LUERRM(18,'(RLUGET:) error when accessing file, IOSTAT ='// 
jetset74.F:      COMMON/LUDATR/MRLU(6),RRLU(100) 
jetset74.F:        DO 100 IBCK=1,NBCK 
jetset74.F:        BACKSPACE(LFN,ERR=120,IOSTAT=IERR) 
jetset74.F:  100   CONTINUE 
jetset74.F:      NFOR=1+MAX(0,MOVE) 
jetset74.F:      DO 110 IFOR=1,NFOR 
jetset74.F:      READ(LFN,ERR=120,IOSTAT=IERR) (MRLU(I1),I1=1,5), 
jetset74.F:     &(RRLU(I2),I2=1,100) 
jetset74.F:  110 CONTINUE 
jetset74.F:  120 WRITE(CHERR,'(I8)') IERR 
jetset74.F:      CALL LUERRM(18,'(RLUSET:) error when accessing file, IOSTAT ='// 
jetset74.F:      COMMON/LUDAT1/MSTU(200),PARU(200),MSTJ(200),PARJ(200) 
jetset74.F:      SAVE /LUJETS/,/LUDAT1/ 
jetset74.F:      IMIN=1 
jetset74.F:      IF(MSTU(1).GT.0) IMIN=MSTU(1) 
jetset74.F:      GOTO 120 
jetset74.F:      IF(IMIN.LE.0) IMIN=1 
jetset74.F:        DO 110 I=MIN(IMIN,MSTU(4)),MIN(IMAX,MSTU(4)) 
jetset74.F:        DO 100 J=1,5 
jetset74.F:  100   CONTINUE 
jetset74.F:  110 CONTINUE 
jetset74.F:  120 IF(IMIN.GT.MSTU(4).OR.IMAX.GT.MSTU(4)) THEN 
jetset74.F:        CALL LUERRM(11,'(LUROBO:) range outside LUJETS memory') 
jetset74.F:      IF(THE**2+PHI**2.GT.1E-20) THEN 
jetset74.F:        ROT(1,1)=COS(THE)*COS(PHI) 
jetset74.F:        ROT(1,2)=-SIN(PHI) 
jetset74.F:        ROT(1,3)=SIN(THE)*COS(PHI) 
jetset74.F:        ROT(2,1)=COS(THE)*SIN(PHI) 
jetset74.F:        ROT(3,1)=-SIN(THE) 
jetset74.F:        DO 150 I=IMIN,IMAX 
jetset74.F:        IF(K(I,1).LE.0) GOTO 150 
jetset74.F:        DO 130 J=1,3 
jetset74.F:  130   CONTINUE 
jetset74.F:        DO 140 J=1,3 
jetset74.F:        P(I,J)=ROT(J,1)*PR(1)+ROT(J,2)*PR(2)+ROT(J,3)*PR(3) 
jetset74.F:        V(I,J)=ROT(J,1)*VR(1)+ROT(J,2)*VR(2)+ROT(J,3)*VR(3) 
jetset74.F:  140   CONTINUE 
jetset74.F:  150   CONTINUE 
jetset74.F:      IF(DBX**2+DBY**2+DBZ**2.GT.1E-20) THEN 
jetset74.F:        DGA=1D0/SQRT(1D0-DB**2) 
jetset74.F:        DO 170 I=IMIN,IMAX 
jetset74.F:        IF(K(I,1).LE.0) GOTO 170 
jetset74.F:        DO 160 J=1,4 
jetset74.F:  160   CONTINUE 
jetset74.F:        DBP=DBX*DP(1)+DBY*DP(2)+DBZ*DP(3) 
jetset74.F:        DGABP=DGA*(DGA*DBP/(1D0+DGA)+DP(4)) 
jetset74.F:        P(I,1)=DP(1)+DGABP*DBX 
jetset74.F:        DBV=DBX*DV(1)+DBY*DV(2)+DBZ*DV(3) 
jetset74.F:        DGABV=DGA*(DGA*DBV/(1D0+DGA)+DV(4)) 
jetset74.F:        V(I,1)=DV(1)+DGABV*DBX 
jetset74.F:  170   CONTINUE 
jetset74.F:      COMMON/LUDAT1/MSTU(200),PARU(200),MSTJ(200),PARJ(200) 
jetset74.F:      SAVE /LUJETS/,/LUDAT1/,/LUDAT2/ 
jetset74.F:        I1=MAX(1,MSTU(1))-1 
jetset74.F:        DO 110 I=MAX(1,MSTU(1)),IMAX 
jetset74.F:        IF(K(I,1).EQ.0.OR.K(I,1).GT.20) GOTO 110 
jetset74.F:        IF(MEDIT.EQ.1) THEN 
jetset74.F:          IF(K(I,1).GT.10) GOTO 110 
jetset74.F:          IF(K(I,1).GT.10) GOTO 110 
jetset74.F:          IF(KC.EQ.0.OR.KC.EQ.12.OR.KC.EQ.14.OR.KC.EQ.16.OR.KC.EQ.18) 
jetset74.F:     &    GOTO 110 
jetset74.F:          IF(K(I,1).GT.10) GOTO 110 
jetset74.F:          IF(KC.EQ.0) GOTO 110 
jetset74.F:          IF(KCHG(KC,2).EQ.0.AND.LUCHGE(K(I,2)).EQ.0) GOTO 110 
jetset74.F:          IF(K(I,1).EQ.13.OR.K(I,1).EQ.14) GOTO 110 
jetset74.F:          IF(KC.EQ.0) GOTO 110 
jetset74.F:          IF(K(I,1).GE.11.AND.KCHG(KC,2).EQ.0) GOTO 110 
jetset74.F:        I1=I1+1 
jetset74.F:        DO 100 J=1,5 
jetset74.F:        K(I1,J)=K(I,J) 
jetset74.F:        P(I1,J)=P(I,J) 
jetset74.F:        V(I1,J)=V(I,J) 
jetset74.F:  100   CONTINUE 
jetset74.F:        K(I1,3)=0 
jetset74.F:  110   CONTINUE 
jetset74.F:        IF(I1.LT.N) MSTU(3)=0 
jetset74.F:        IF(I1.LT.N) MSTU(70)=0 
jetset74.F:        N=I1 
jetset74.F:      ELSEIF(MEDIT.GE.11.AND.MEDIT.LE.15) THEN 
jetset74.F:        I1=0 
jetset74.F:        DO 120 I=1,N 
jetset74.F:        IF(MEDIT.EQ.11.AND.K(I,1).LT.0) GOTO 120 
jetset74.F:        IF(MEDIT.EQ.12.AND.K(I,1).EQ.0) GOTO 120 
jetset74.F:        IF(MEDIT.EQ.13.AND.(K(I,1).EQ.11.OR.K(I,1).EQ.12.OR. 
jetset74.F:     &  K(I,1).EQ.15).AND.K(I,2).NE.94) GOTO 120 
jetset74.F:        IF(MEDIT.EQ.14.AND.(K(I,1).EQ.13.OR.K(I,1).EQ.14.OR. 
jetset74.F:     &  K(I,2).EQ.94)) GOTO 120 
jetset74.F:        IF(MEDIT.EQ.15.AND.K(I,1).GE.21) GOTO 120 
jetset74.F:        I1=I1+1 
jetset74.F:        K(I,3)=K(I,3)+MSTU(5)*I1 
jetset74.F:  120   CONTINUE 
jetset74.F:        DO 140 I=1,N 
jetset74.F:        IF(K(I,1).LE.0.OR.K(I,1).GT.20.OR.K(I,3)/MSTU(5).EQ.0) GOTO 140 
jetset74.F:  130   IM=MOD(K(ID,3),MSTU(5)) 
jetset74.F:        IF(MEDIT.EQ.13.AND.IM.GT.0.AND.IM.LE.N) THEN 
jetset74.F:          IF((K(IM,1).EQ.11.OR.K(IM,1).EQ.12.OR.K(IM,1).EQ.15).AND. 
jetset74.F:            GOTO 130 
jetset74.F:        ELSEIF(MEDIT.EQ.14.AND.IM.GT.0.AND.IM.LE.N) THEN 
jetset74.F:          IF(K(IM,1).EQ.13.OR.K(IM,1).EQ.14.OR.K(IM,2).EQ.94) THEN 
jetset74.F:            GOTO 130 
jetset74.F:        IF(K(I,1).NE.3.AND.K(I,1).NE.13.AND.K(I,1).NE.14) THEN 
jetset74.F:  140   CONTINUE 
jetset74.F:        I1=0 
jetset74.F:        DO 170 I=1,N 
jetset74.F:        IF(K(I,3)/MSTU(5).EQ.0) GOTO 170 
jetset74.F:        I1=I1+1 
jetset74.F:        DO 150 J=1,5 
jetset74.F:        K(I1,J)=K(I,J) 
jetset74.F:        P(I1,J)=P(I,J) 
jetset74.F:        V(I1,J)=V(I,J) 
jetset74.F:  150   CONTINUE 
jetset74.F:        K(I1,3)=MOD(K(I1,3),MSTU(5)) 
jetset74.F:        DO 160 IZ=1,MSTU90 
jetset74.F:          MSTU(90)=MSTU(90)+1 
jetset74.F:          MSTU(90+MSTU(90))=I1 
jetset74.F:  160   CONTINUE 
jetset74.F:  170   CONTINUE 
jetset74.F:        IF(I1.LT.N) MSTU(3)=0 
jetset74.F:        IF(I1.LT.N) MSTU(70)=0 
jetset74.F:        N=I1 
jetset74.F:      ELSEIF(MEDIT.EQ.16) THEN 
jetset74.F:        DO 190 I=1,N 
jetset74.F:        IF(K(I,1).LE.10.OR.K(I,1).GT.20) GOTO 190 
jetset74.F:        IF(K(I,4).NE.0.OR.K(I,5).NE.0) GOTO 190 
jetset74.F:        DO 180 I1=I+1,N 
jetset74.F:        IF(K(I1,3).NE.I) THEN 
jetset74.F:          K(I,4)=I1 
jetset74.F:          K(I,5)=I1 
jetset74.F:  180   CONTINUE 
jetset74.F:        IF(K(I,4).NE.0) GOTO 190
jetset74.F:        IF(IM.LE.0.OR.IM.GE.I) GOTO 190
jetset74.F:        IF(K(IM,1).LE.20.OR.K(IM,1).GT.30) GOTO 190  
jetset74.F:        IF(K(IM,2).NE.K(I,2).OR.ABS(P(IM,5)-P(I,5)).GT.1E-2) GOTO 190
jetset74.F:        DO 182 I1=I+1,N 
jetset74.F:        IF(K(I1,3).NE.IM) THEN 
jetset74.F:          K(I,4)=I1 
jetset74.F:          K(I,5)=I1 
jetset74.F:  182   CONTINUE 
jetset74.F:        IF(K(I,4).NE.0) GOTO 190
jetset74.F:        ID1=IM
jetset74.F:        DO 184 I1=IM+1,I-1
jetset74.F:        IF(K(I1,3).EQ.IM.AND.K(I1,1).GT.20.AND.K(I1,1).LE.30) THEN
jetset74.F:          ID2=I1
jetset74.F:          IF(ID1.EQ.IM) ID1=I1
jetset74.F:  184   CONTINUE 
jetset74.F:        DO 186 I1=I+1,N 
jetset74.F:        IF(K(I1,3).NE.ID1.AND.K(I1,3).NE.ID2) THEN 
jetset74.F:          K(I,4)=I1 
jetset74.F:          K(I,5)=I1 
jetset74.F:  186   CONTINUE 
jetset74.F:  190   CONTINUE 
jetset74.F:      ELSEIF(MEDIT.EQ.21) THEN 
jetset74.F:          CALL LUERRM(11,'(LUEDIT:) no more memory left in LUJETS') 
jetset74.F:        DO 210 I=1,N 
jetset74.F:        DO 200 J=1,5 
jetset74.F:  210   CONTINUE 
jetset74.F:        DO 230 I=1,MSTU(32) 
jetset74.F:        DO 220 J=1,5 
jetset74.F:        I1=0 
jetset74.F:        DO 240 I=1,N 
jetset74.F:        IF(KH.GE.1) THEN 
jetset74.F:          IF(K(KH,1).GT.20) KH=0 
jetset74.F:        I1=I1+1 
jetset74.F:        IF(K(I,1).GT.10.AND.K(I,1).LE.20) K(I,1)=K(I,1)-10 
jetset74.F:  250   N=I1 
jetset74.F:      ELSEIF(MEDIT.EQ.31.OR.MEDIT.EQ.32) THEN 
jetset74.F:        CALL LUDBRB(1,N+MSTU(3),0.,-ulangl(P(MSTU(61),1), 
jetset74.F:     &  P(MSTU(61),2)),0D0,0D0,0D0) 
jetset74.F:        CALL LUDBRB(1,N+MSTU(3),-ulangl(P(MSTU(61),3), 
jetset74.F:     &  P(MSTU(61),1)),0.,0D0,0D0,0D0) 
jetset74.F:        CALL LUDBRB(1,N+MSTU(3),0.,-ulangl(P(MSTU(61)+1,1), 
jetset74.F:     &  P(MSTU(61)+1,2)),0D0,0D0,0D0) 
jetset74.F:        IF(MEDIT.EQ.31) RETURN 
jetset74.F:        DO 260 IS=1,2 
jetset74.F:        DO 270 I=1,N 
jetset74.F:        IF(K(I,1).LE.0.OR.K(I,1).GT.10) GOTO 270 
jetset74.F:        IF(MSTU(41).GE.2) THEN 
jetset74.F:          IF(KC.EQ.0.OR.KC.EQ.12.OR.KC.EQ.14.OR.KC.EQ.16.OR. 
jetset74.F:     &    KC.EQ.18) GOTO 270 
jetset74.F:          IF(MSTU(41).GE.3.AND.KCHG(KC,2).EQ.0.AND.LUCHGE(K(I,2)).EQ.0) 
jetset74.F:        NS(IS)=NS(IS)+1 
jetset74.F:        PTS(IS)=PTS(IS)+SQRT(P(I,1)**2+P(I,2)**2) 
jetset74.F:        IF(NS(1)*PTS(2)**2.LT.NS(2)*PTS(1)**2) 
jetset74.F:     &  CALL LUDBRB(1,N+MSTU(3),PARU(1),0.,0D0,0D0,0D0) 
jetset74.F:        DO 280 I=1,N 
jetset74.F:        IF(K(I,1).LE.0.OR.K(I,1).GT.10) GOTO 280 
jetset74.F:        IF(MSTU(41).GE.2) THEN 
jetset74.F:          IF(KC.EQ.0.OR.KC.EQ.12.OR.KC.EQ.14.OR.KC.EQ.16.OR. 
jetset74.F:     &    KC.EQ.18) GOTO 280 
jetset74.F:          IF(MSTU(41).GE.3.AND.KCHG(KC,2).EQ.0.AND.LUCHGE(K(I,2)).EQ.0) 
jetset74.F:        IS=2.-SIGN(0.5,P(I,1)) 
jetset74.F:        IF(PLS(2).GT.PLS(1)) CALL LUDBRB(1,N+MSTU(3),0.,PARU(1), 
jetset74.F:      COMMON/LUDAT1/MSTU(200),PARU(200),MSTJ(200),PARJ(200) 
jetset74.F:      SAVE /LUJETS/,/LUDAT1/,/LUDAT2/,/LUDAT3/ 
jetset74.F:      CHARACTER CHAP*16,CHAC*16,CHAN*16,CHAD(5)*16,CHDL(7)*4 
jetset74.F:      IF(MLIST.EQ.0.OR.MSTU(12).EQ.1) THEN 
jetset74.F:        MSTU(12)=0 
jetset74.F:      IF(MLIST.GE.1.AND.MLIST.LE.3) THEN 
jetset74.F:        IF(MLIST.EQ.1) WRITE(MSTU(11),5100) 
jetset74.F:        IF(MLIST.EQ.2) WRITE(MSTU(11),5200) 
jetset74.F:        IF(MLIST.EQ.3) WRITE(MSTU(11),5300) 
jetset74.F:        LMX=12 
jetset74.F:        IF(MLIST.GE.2) LMX=16 
jetset74.F:        DO 120 I=MAX(1,MSTU(1)),MAX(IMAX,N+MAX(0,MSTU(3))) 
jetset74.F:        IF((I.GT.IMAX.AND.I.LE.N).OR.K(I,1).LT.0) GOTO 120 
jetset74.F:        DO 100 LEM=1,16 
jetset74.F:  100   CONTINUE 
jetset74.F:        MDL=(K(I,1)+19)/10 
jetset74.F:          LDL=1 
jetset74.F:          IF(MDL.EQ.1.OR.MDL.EQ.7) LDL=2 
jetset74.F:            CHAC=CHDL(MDL)(1:2*LDL)//' ' 
jetset74.F:            CHAC=CHDL(MDL)(1:LDL)//CHAP(1:MIN(LEN,LMX-2*LDL))// 
jetset74.F:     &      CHDL(MDL)(LDL+1:2*LDL)//' ' 
jetset74.F:        IF(K(I,1).EQ.1.OR.K(I,1).EQ.2.OR.K(I,1).EQ.11.OR.K(I,1).EQ.12) 
jetset74.F:            IF(LEN+2*LDL+3.LE.LMX) CHAC(LMX-1:LMX-1)='X' 
jetset74.F:            ISTR=1 
jetset74.F:            IF(LEN+2*LDL+3.LE.LMX) CHAC(LMX-1:LMX-1)='A' 
jetset74.F:          ELSEIF(KCC.NE.0.AND.(K(I,1).EQ.2.OR.K(I,1).EQ.12)) THEN 
jetset74.F:            IF(LEN+2*LDL+3.LE.LMX) CHAC(LMX-1:LMX-1)='I' 
jetset74.F:            IF(LEN+2*LDL+3.LE.LMX) CHAC(LMX-1:LMX-1)='V' 
jetset74.F:        IF(MLIST.EQ.1.AND.ABS(P(I,4)).LT.9999.) THEN 
jetset74.F:          WRITE(MSTU(11),5400) I,CHAC(1:12),(K(I,J1),J1=1,3), 
jetset74.F:     &    (P(I,J2),J2=1,5) 
jetset74.F:        ELSEIF(MLIST.EQ.1.AND.ABS(P(I,4)).LT.99999.) THEN 
jetset74.F:          WRITE(MSTU(11),5500) I,CHAC(1:12),(K(I,J1),J1=1,3), 
jetset74.F:     &    (P(I,J2),J2=1,5) 
jetset74.F:        ELSEIF(MLIST.EQ.1) THEN 
jetset74.F:          WRITE(MSTU(11),5600) I,CHAC(1:12),(K(I,J1),J1=1,3), 
jetset74.F:     &    (P(I,J2),J2=1,5) 
jetset74.F:        ELSEIF(MSTU(5).EQ.10000.AND.(K(I,1).EQ.3.OR.K(I,1).EQ.13.OR. 
jetset74.F:     &  K(I,1).EQ.14)) THEN 
jetset74.F:          WRITE(MSTU(11),5700) I,CHAC,(K(I,J1),J1=1,3), 
jetset74.F:     &    K(I,4)/100000000,MOD(K(I,4)/10000,10000),MOD(K(I,4),10000), 
jetset74.F:     &    K(I,5)/100000000,MOD(K(I,5)/10000,10000),MOD(K(I,5),10000), 
jetset74.F:     &    (P(I,J2),J2=1,5) 
jetset74.F:          WRITE(MSTU(11),5800) I,CHAC,(K(I,J1),J1=1,5),(P(I,J2),J2=1,5) 
jetset74.F:        IF(MLIST.EQ.3) WRITE(MSTU(11),5900) (V(I,J),J=1,5) 
jetset74.F:        IF(MSTU(70).GE.1) THEN 
jetset74.F:          DO 110 J=1,MIN(10,MSTU(70)) 
jetset74.F:          IF(I.EQ.MSTU(70+J)) ISEP=1 
jetset74.F:  110     CONTINUE 
jetset74.F:          IF(ISEP.EQ.1.AND.MLIST.EQ.1) WRITE(MSTU(11),6000) 
jetset74.F:          IF(ISEP.EQ.1.AND.MLIST.GE.2) WRITE(MSTU(11),6100) 
jetset74.F:  120   CONTINUE 
jetset74.F:        DO 130 J=1,6 
jetset74.F:  130   CONTINUE 
jetset74.F:        IF(MLIST.EQ.1.AND.ABS(PS(4)).LT.9999.) THEN 
jetset74.F:          WRITE(MSTU(11),6200) PS(6),(PS(J),J=1,5) 
jetset74.F:        ELSEIF(MLIST.EQ.1.AND.ABS(PS(4)).LT.99999.) THEN 
jetset74.F:          WRITE(MSTU(11),6300) PS(6),(PS(J),J=1,5) 
jetset74.F:        ELSEIF(MLIST.EQ.1) THEN 
jetset74.F:          WRITE(MSTU(11),6400) PS(6),(PS(J),J=1,5) 
jetset74.F:          WRITE(MSTU(11),6500) PS(6),(PS(J),J=1,5) 
jetset74.F:      ELSEIF(MLIST.EQ.11) THEN 
jetset74.F:        WRITE(MSTU(11),6600) 
jetset74.F:        DO 140 KF=1,40 
jetset74.F:        IF(CHAP.NE.' '.AND.CHAN.EQ.' ') WRITE(MSTU(11),6700) KF,CHAP 
jetset74.F:        IF(CHAN.NE.' ') WRITE(MSTU(11),6700) KF,CHAP,-KF,CHAN 
jetset74.F:  140   CONTINUE 
jetset74.F:        DO 170 KFLS=1,3,2 
jetset74.F:        DO 160 KFLA=1,8 
jetset74.F:        DO 150 KFLB=1,KFLA-(3-KFLS)/2 
jetset74.F:        KF=1000*KFLA+100*KFLB+KFLS 
jetset74.F:        WRITE(MSTU(11),6700) KF,CHAP,-KF,CHAN 
jetset74.F:  150   CONTINUE 
jetset74.F:  160   CONTINUE 
jetset74.F:  170   CONTINUE 
jetset74.F:        KF=130 
jetset74.F:        WRITE(MSTU(11),6700) KF,CHAP 
jetset74.F:        KF=310 
jetset74.F:        WRITE(MSTU(11),6700) KF,CHAP 
jetset74.F:        IF(KMUL.EQ.0.OR.KMUL.EQ.3) KFLS=1 
jetset74.F:        IF(KMUL.EQ.2.OR.KMUL.EQ.3) KFLR=1 
jetset74.F:        DO 190 KFLB=1,8 
jetset74.F:        DO 180 KFLC=1,KFLB-1 
jetset74.F:        KF=10000*KFLR+100*KFLB+10*KFLC+KFLS 
jetset74.F:        WRITE(MSTU(11),6700) KF,CHAP,-KF,CHAN 
jetset74.F:  180   CONTINUE 
jetset74.F:        KF=10000*KFLR+110*KFLB+KFLS 
jetset74.F:        WRITE(MSTU(11),6700) KF,CHAP 
jetset74.F:  190   CONTINUE 
jetset74.F:        WRITE(MSTU(11),6700) KF,CHAP 
jetset74.F:        WRITE(MSTU(11),6700) KF,CHAP 
jetset74.F:        DO 240 KFLSP=1,3 
jetset74.F:        DO 230 KFLA=1,8 
jetset74.F:        DO 220 KFLB=1,KFLA 
jetset74.F:        DO 210 KFLC=1,KFLB 
jetset74.F:        IF(KFLSP.EQ.1.AND.(KFLA.EQ.KFLB.OR.KFLB.EQ.KFLC)) GOTO 210 
jetset74.F:        IF(KFLSP.EQ.2.AND.KFLA.EQ.KFLC) GOTO 210 
jetset74.F:        IF(KFLSP.EQ.1) KF=1000*KFLA+100*KFLC+10*KFLB+KFLS 
jetset74.F:        IF(KFLSP.GE.2) KF=1000*KFLA+100*KFLB+10*KFLC+KFLS 
jetset74.F:        WRITE(MSTU(11),6700) KF,CHAP,-KF,CHAN 
jetset74.F:  210   CONTINUE 
jetset74.F:      ELSEIF(MLIST.EQ.12) THEN 
jetset74.F:        WRITE(MSTU(11),6800) 
jetset74.F:        DO 270 KF=MAX(1,MSTU(1)),KFMAX 
jetset74.F:        IF(MSTU(14).EQ.0.AND.KF.GT.100.AND.KC.LE.100) GOTO 270 
jetset74.F:        IF(MSTU(14).GT.0.AND.KF.GT.100.AND.MAX(MOD(KF/1000,10), 
jetset74.F:     &  MOD(KF/100,10)).GT.MSTU(14)) GOTO 270 
jetset74.F:        IF(MSTU(14).GT.0.AND.KF.GT.100.AND.KC.EQ.90) GOTO 270 
jetset74.F:        IF(KF.LE.100.AND.CHAP.EQ.' '.AND.MDCY(KC,2).EQ.0) GOTO 270 
jetset74.F:        WRITE(MSTU(11),6900) KF,KC,CHAP,CHAN,KCHG(KC,1),KCHG(KC,2), 
jetset74.F:     &  KCHG(KC,3),PM,PMAS(KC,2),PMAS(KC,3),PMAS(KC,4),MDCY(KC,1) 
jetset74.F:        IF(KF.GT.100.AND.KC.LE.100) GOTO 270 
jetset74.F:        DO 260 IDC=MDCY(KC,2),MDCY(KC,2)+MDCY(KC,3)-1 
jetset74.F:        DO 250 J=1,5 
jetset74.F:        WRITE(MSTU(11),7000) IDC,MDME(IDC,1),MDME(IDC,2),BRAT(IDC), 
jetset74.F:     &  (CHAD(J),J=1,5) 
jetset74.F:      ELSEIF(MLIST.EQ.13) THEN 
jetset74.F:        WRITE(MSTU(11),7100) 
jetset74.F:        DO 280 I=1,200 
jetset74.F:        WRITE(MSTU(11),7200) I,MSTU(I),PARU(I),MSTJ(I),PARJ(I),PARF(I) 
jetset74.F:C...Format statements for output on unit MSTU(11) (by default 6). 
jetset74.F: 5100 FORMAT(///28X,'Event listing (summary)'//4X,'I  particle/jet KS', 
jetset74.F:     &'  K(I,1)   K(I,2) K(I,3)     K(I,4)      K(I,5)       P(I,1)', 
jetset74.F:     &'et  K(I,1)   K(I,2) K(I,3)     K(I,4)      K(I,5)       P(I,1)', 
jetset74.F:     &'V(I,1)       V(I,2)       V(I,3)       V(I,4)       V(I,5)'/) 
jetset74.F: 5400 FORMAT(1X,I4,2X,A12,1X,I2,1X,I6,1X,I4,5F9.3) 
jetset74.F: 5500 FORMAT(1X,I4,2X,A12,1X,I2,1X,I6,1X,I4,5F9.2) 
jetset74.F: 5600 FORMAT(1X,I4,2X,A12,1X,I2,1X,I6,1X,I4,5F9.1) 
jetset74.F: 5700 FORMAT(1X,I4,2X,A16,1X,I3,1X,I8,2X,I4,2(3X,I1,2I4),5F13.5) 
jetset74.F: 5800 FORMAT(1X,I4,2X,A16,1X,I3,1X,I8,2X,I4,2(3X,I9),5F13.5) 
jetset74.F: 5900 FORMAT(66X,5(1X,F12.3)) 
jetset74.F: 6000 FORMAT(1X,78('=')) 
jetset74.F: 6100 FORMAT(1X,130('=')) 
jetset74.F: 6200 FORMAT(19X,'sum:',F6.2,5X,5F9.3) 
jetset74.F: 6300 FORMAT(19X,'sum:',F6.2,5X,5F9.2) 
jetset74.F: 6400 FORMAT(19X,'sum:',F6.2,5X,5F9.1) 
jetset74.F: 6500 FORMAT(19X,'sum charge:',F6.2,3X,'sum momentum and inv. mass:', 
jetset74.F:     &5F13.5) 
jetset74.F: 6700 FORMAT(4X,I6,4X,A16,6X,I6,4X,A16) 
jetset74.F:     &'width',7X,'w-cut',5X,'lifetime',1X,'decay'/11X,'IDC',1X,'on/off', 
jetset74.F:     &1X,'ME',3X,'Br.rat.',4X,'decay products') 
jetset74.F: 6900 FORMAT(/1X,I6,3X,I4,4X,A16,A16,3I5,1X,F12.5,2(1X,F11.5), 
jetset74.F:     &2X,F12.5,3X,I2) 
jetset74.F: 7000 FORMAT(10X,I4,2X,I3,2X,I3,2X,F8.5,4X,5A16) 
jetset74.F: 7100 FORMAT(///20X,'Parameter value table'//4X,'I',3X,'MSTU(I)', 
jetset74.F: 7200 FORMAT(1X,I4,1X,I9,1X,F14.5,1X,I9,1X,F14.5,1X,F14.5) 
jetset74.F:      COMMON/LUDAT1/MSTU(200),PARU(200),MSTJ(200),PARJ(200) 
jetset74.F:      SAVE /LUDAT1/ 
jetset74.F:      CHARACTER MONTH(12)*3, LOGO(48)*32, REFER(22)*36, LINE*79, 
jetset74.F:     &VERS*1, SUBV*3, DATE*2, YEAR*4 
jetset74.F:      DATA (LOGO(J),J=1,10)/ 
jetset74.F:      DATA (LOGO(J),J=11,29)/ 
jetset74.F:     &'Last date of change: xx xxx 199x', 
jetset74.F:     &'Last date of change: xx xxx 199x', 
jetset74.F:     &'       CH-1211 Geneva 23,       ', 
jetset74.F:     &'   phone +41 - 22 - 767 28 20   ', 
jetset74.F:     &'     and CERN, Geneva 1993      '/ 
jetset74.F:      DATA (REFER(J),J=1,16)/ 
jetset74.F:     &'ter Physics Commun. 43 (1987) 367,  ', 
jetset74.F:     &'mputer Physics Commun. 46 (1987) 43.', 
jetset74.F:     &'T. Sjostrand, CERN-TH.7112/93 (1993)', 
jetset74.F:      DATA (REFER(J),J=17,22)/ 
jetset74.F:      IF(MSTP(183)/10.NE.199) THEN 
jetset74.F:        WRITE(VERS,'(I1)') MSTP(181) 
jetset74.F:        WRITE(SUBV,'(I3)') MSTP(182) 
jetset74.F:        WRITE(DATE,'(I2)') MSTP(185) 
jetset74.F:        LOGO(33)(25:27)=MONTH(MSTP(184)) 
jetset74.F:        WRITE(YEAR,'(I4)') MSTP(183) 
jetset74.F:      IF(MSTU(183)/10.NE.199) THEN 
jetset74.F:        WRITE(VERS,'(I1)') MSTU(181) 
jetset74.F:        WRITE(SUBV,'(I3)') MSTU(182) 
jetset74.F:        WRITE(DATE,'(I2)') MSTU(185) 
jetset74.F:        LOGO(36)(25:27)=MONTH(MSTU(184)) 
jetset74.F:        WRITE(YEAR,'(I4)') MSTU(183) 
jetset74.F:      DO 100 ILIN=1,48 
jetset74.F:      IF(ILIN.EQ.1) THEN 
jetset74.F:        LINE(1:1)='1' 
jetset74.F:      ELSEIF(ILIN.GE.6.AND.ILIN.LE.10) THEN 
jetset74.F:      ELSEIF(ILIN.GE.13.AND.ILIN.LE.31) THEN 
jetset74.F:        LINE(44:75)=LOGO(ILIN+17) 
jetset74.F:        LINE(41:76)=REFER(2*ILIN-66) 
jetset74.F:      IF(MSTU(183)/10.EQ.199) THEN 
jetset74.F:        WRITE(MSTU(11),'(A79)') LINE 
jetset74.F:  100 CONTINUE 
jetset74.F:      IF(MSTU(183)/10.EQ.199.AND.MSTP(183)/10.EQ.199) THEN 
jetset74.F:        IF(MSTU(182).LT.MSTP(186)) WRITE(MSTU(11), 
jetset74.F:        IF(MSTP(182).LT.MSTU(186)) WRITE(MSTU(11), 
jetset74.F:      COMMON/LUDAT1/MSTU(200),PARU(200),MSTJ(200),PARJ(200) 
jetset74.F:      SAVE /LUDAT1/,/LUDAT2/,/LUDAT3/,/LUDAT4/ 
jetset74.F:      CHARACTER CHINL*80,CHKC*4,CHVAR(19)*9,CHLIN*72, 
jetset74.F:     &CHBLK(20)*72,CHOLD*12,CHTMP*12,CHNEW*12,CHCOM*12 
jetset74.F:      DATA CHVAR/ 'KCHG(I,1)','KCHG(I,2)','KCHG(I,3)','PMAS(I,1)', 
jetset74.F:     &'PMAS(I,2)','PMAS(I,3)','PMAS(I,4)','MDCY(I,1)','MDCY(I,2)', 
jetset74.F:     &'MDCY(I,3)','MDME(I,1)','MDME(I,2)','BRAT(I)  ','KFDP(I,1)', 
jetset74.F:      IF(MSTU(12).GE.1) CALL lulist(0) 
jetset74.F:      IF(MUPDA.EQ.1) THEN 
jetset74.F:        DO 110 KC=1,MSTU(6) 
jetset74.F:        WRITE(LFN,5000) KC,CHAF(KC),(KCHG(KC,J1),J1=1,3), 
jetset74.F:     &  (PMAS(KC,J2),J2=1,4),MDCY(KC,1) 
jetset74.F:        DO 100 IDC=MDCY(KC,2),MDCY(KC,2)+MDCY(KC,3)-1 
jetset74.F:        WRITE(LFN,5100) MDME(IDC,1),MDME(IDC,2),BRAT(IDC), 
jetset74.F:     &  (KFDP(IDC,J),J=1,5) 
jetset74.F:  100   CONTINUE 
jetset74.F:  110   CONTINUE 
jetset74.F:        DO 130 I=1,MSTU(7) 
jetset74.F:        MDME(I,1)=1 
jetset74.F:        DO 120 J=1,5 
jetset74.F:  120   CONTINUE 
jetset74.F:  130   CONTINUE 
jetset74.F:  140   READ(LFN,5200,END=150) CHINL 
jetset74.F:            IF(NDC.NE.0) MDCY(KC,2)=IDC+1-NDC 
jetset74.F:          READ(CHINL,5000) KCR,CHAF(KC),(KCHG(KC,J1),J1=1,3), 
jetset74.F:     &    (PMAS(KC,J2),J2=1,4),MDCY(KC,1) 
jetset74.F:          IDC=IDC+1 
jetset74.F:          NDC=NDC+1 
jetset74.F:          READ(CHINL,5100) MDME(IDC,1),MDME(IDC,2),BRAT(IDC), 
jetset74.F:     &    (KFDP(IDC,J),J=1,5) 
jetset74.F:        GOTO 140 
jetset74.F:  150   MDCY(KC,2)=0 
jetset74.F:        IF(NDC.NE.0) MDCY(KC,2)=IDC+1-NDC 
jetset74.F:        DO 180 KC=1,MSTU(6) 
jetset74.F:        IF(MIN(PMAS(KC,1),PMAS(KC,2),PMAS(KC,3),PMAS(KC,1)-PMAS(KC,3), 
jetset74.F:     &  PMAS(KC,4)).LT.0..OR.MDCY(KC,3).LT.0) CALL LUERRM(17, 
jetset74.F:        DO 170 IDC=MDCY(KC,2),MDCY(KC,2)+MDCY(KC,3)-1 
jetset74.F:        IF(MDME(IDC,2).GT.80) GOTO 170 
jetset74.F:        KQ=KCHG(KC,1) 
jetset74.F:        PMS=PMAS(KC,1)-PMAS(KC,3)-PARJ(64) 
jetset74.F:        DO 160 J=1,5 
jetset74.F:        IF(KP.EQ.0.OR.KP.EQ.81.OR.IABS(KP).EQ.82) THEN 
jetset74.F:  160   CONTINUE 
jetset74.F:     &  (KC.LE.80.OR.KC.GT.100).AND.MDME(IDC,2).NE.34.AND. 
jetset74.F:     &  MDME(IDC,2).NE.61.AND.PMS.LT.0.) MERR=MAX(1,MERR) 
jetset74.F:        IF(MERR.EQ.3) CALL LUERRM(17, 
jetset74.F:        IF(MERR.EQ.2) CALL LUERRM(17, 
jetset74.F:        IF(MERR.EQ.1) CALL LUERRM(7, 
jetset74.F:  170   CONTINUE 
jetset74.F:        IF(ABS(BRSUM).GT.0.0005.AND.ABS(BRSUM-1.).GT.0.0005) CALL 
jetset74.F:     &  LUERRM(7,'(LUUPDA:) Sum of branching ratios is '//CHTMP(5:12)// 
jetset74.F:  180   CONTINUE 
jetset74.F:        DO 250 IVAR=1,19 
jetset74.F:        IF(IVAR.GE.11.AND.IVAR.LE.18) NDIM=MSTU(7) 
jetset74.F:        NLIN=1 
jetset74.F:        CHLIN(7:35)='DATA ('//CHVAR(IVAR)//',I=   1,    )/' 
jetset74.F:        DO 230 IDIM=1,NDIM 
jetset74.F:        IF(IVAR.EQ.1) WRITE(CHTMP,5400) KCHG(IDIM,1) 
jetset74.F:        IF(IVAR.EQ.4) WRITE(CHTMP,5500) PMAS(IDIM,1) 
jetset74.F:        IF(IVAR.EQ.8) WRITE(CHTMP,5400) MDCY(IDIM,1) 
jetset74.F:        IF(IVAR.EQ.10) WRITE(CHTMP,5400) MDCY(IDIM,3) 
jetset74.F:        IF(IVAR.EQ.11) WRITE(CHTMP,5400) MDME(IDIM,1) 
jetset74.F:        IF(IVAR.EQ.12) WRITE(CHTMP,5400) MDME(IDIM,2) 
jetset74.F:        IF(IVAR.EQ.13) WRITE(CHTMP,5500) BRAT(IDIM) 
jetset74.F:        IF(IVAR.EQ.14) WRITE(CHTMP,5400) KFDP(IDIM,1) 
jetset74.F:        IF(IVAR.EQ.15) WRITE(CHTMP,5400) KFDP(IDIM,2) 
jetset74.F:        IF(IVAR.EQ.16) WRITE(CHTMP,5400) KFDP(IDIM,3) 
jetset74.F:        IF(IVAR.EQ.17) WRITE(CHTMP,5400) KFDP(IDIM,4) 
jetset74.F:        IF(IVAR.EQ.18) WRITE(CHTMP,5400) KFDP(IDIM,5) 
jetset74.F:        IF(IVAR.EQ.19) CHTMP=CHAF(IDIM) 
jetset74.F:        LLOW=1 
jetset74.F:        LHIG=1 
jetset74.F:        DO 190 LL=1,12 
jetset74.F:        IF(CHTMP(13-LL:13-LL).NE.' ') LLOW=13-LL 
jetset74.F:  190   CONTINUE 
jetset74.F:        LNEW=1+LHIG-LLOW 
jetset74.F:        IF((IVAR.GE.4.AND.IVAR.LE.7).OR.IVAR.EQ.13) THEN 
jetset74.F:          LNEW=LNEW+1 
jetset74.F:  200     LNEW=LNEW-1 
jetset74.F:          IF(LNEW.EQ.1) CHNEW(1:2)='0.' 
jetset74.F:          IF(LNEW.EQ.1) LNEW=2 
jetset74.F:        ELSEIF(IVAR.EQ.19) THEN 
jetset74.F:          DO 210 LL=LNEW,1,-1 
jetset74.F:            CHNEW=CHTMP(1:LL)//''''//CHTMP(LL+1:11) 
jetset74.F:            LNEW=LNEW+1 
jetset74.F:  210     CONTINUE 
jetset74.F:          CHNEW(1:LNEW+2)=''''//CHTMP(1:LNEW)//'''' 
jetset74.F:          NRPT=1 
jetset74.F:          LRPT=LNEW+1 
jetset74.F:          IF(NRPT.GE.10) LRPT=LNEW+4 
jetset74.F:          IF(NRPT.GE.100) LRPT=LNEW+5 
jetset74.F:          IF(NRPT.GE.1000) LRPT=LNEW+6 
jetset74.F:          NRPT=NRPT+1 
jetset74.F:          LRPT=1 
jetset74.F:          IF(NRPT.GE.10) LRPT=2 
jetset74.F:          IF(NRPT.GE.100) LRPT=3 
jetset74.F:          IF(NRPT.GE.1000) LRPT=4 
jetset74.F:          CHCOM(1:LRPT+1+LNEW)=CHTMP(13-LRPT:12)//'*'//CHNEW(1:LNEW) 
jetset74.F:          LCOM=LRPT+1+LNEW 
jetset74.F:          CHLIN(LLIN+1:LLIN+LCOM+1)=CHCOM(1:LCOM)//',' 
jetset74.F:          LLIN=LLIN+LCOM+1 
jetset74.F:        ELSEIF(NLIN.LE.19) THEN 
jetset74.F:          CHLIN(LLIN+1:72)=' ' 
jetset74.F:          NLIN=NLIN+1 
jetset74.F:          CHLIN(6:6+LCOM+1)='&'//CHCOM(1:LCOM)//',' 
jetset74.F:          LLIN=6+LCOM+1 
jetset74.F:          CHBLK(1)(30:33)=CHTMP(9:12) 
jetset74.F:          DO 220 ILIN=1,NLIN 
jetset74.F:          NLIN=1 
jetset74.F:          CHLIN(7:35+LCOM+1)='DATA ('//CHVAR(IVAR)//',I=    ,    )/'// 
jetset74.F:     &    CHCOM(1:LCOM)//',' 
jetset74.F:          WRITE(CHTMP,5400) IDIM-NRPT+1 
jetset74.F:          CHLIN(25:28)=CHTMP(9:12) 
jetset74.F:          LLIN=35+LCOM+1 
jetset74.F:        CHBLK(1)(30:33)=CHTMP(9:12) 
jetset74.F:        DO 240 ILIN=1,NLIN 
jetset74.F: 5000 FORMAT(1X,I4,2X,A8,3I3,3F12.5,2X,F12.5,I3) 
jetset74.F: 5100 FORMAT(5X,2I5,F12.5,5I8) 
jetset74.F: 5400 FORMAT(I12) 
jetset74.F: 5500 FORMAT(F12.5) 
jetset74.F:      COMMON/LUDAT1/MSTU(200),PARU(200),MSTJ(200),PARJ(200) 
jetset74.F:      SAVE /LUJETS/,/LUDAT1/,/LUDAT2/ 
jetset74.F:      ELSEIF(I.EQ.0.AND.J.EQ.1) THEN 
jetset74.F:        DO 100 I1=1,N 
jetset74.F:        IF(J.EQ.2.AND.K(I1,1).GE.1.AND.K(I1,1).LE.10) KLU=KLU+1 
jetset74.F:        IF(J.EQ.6.AND.K(I1,1).GE.1.AND.K(I1,1).LE.10) KLU=KLU+ 
jetset74.F:     &  LUCHGE(K(I1,2)) 
jetset74.F:  100   CONTINUE 
jetset74.F:        IF(K(I,1).GE.1.AND.K(I,1).LE.10) KLU=1 
jetset74.F:      ELSEIF(J.LE.12) THEN 
jetset74.F:        IF(J.EQ.10.AND.KC.NE.0.AND.KQ.EQ.0) KLU=K(I,2) 
jetset74.F:        IF(J.EQ.11) KLU=KC 
jetset74.F:        IF(J.EQ.12) KLU=KQ*ISIGN(1,K(I,2)) 
jetset74.F:      ELSEIF(J.EQ.13) THEN 
jetset74.F:        KLU=MOD(KFA/100,10)*(-1)**MOD(KFA/100,10) 
jetset74.F:        IF(KFA.LT.10) KLU=KFA 
jetset74.F:        IF(MOD(KFA/1000,10).NE.0) KLU=MOD(KFA/1000,10) 
jetset74.F:        KLU=KLU*ISIGN(1,K(I,2)) 
jetset74.F:      ELSEIF(J.LE.15) THEN 
jetset74.F:        I1=I 
jetset74.F:  110   KLU=KLU+1 
jetset74.F:        I2=I1 
jetset74.F:        I1=K(I1,3) 
jetset74.F:        IF(I1.GT.0.AND.K(I1,1).GT.0.AND.K(I1,1).LE.20) GOTO 110 
jetset74.F:        IF(J.EQ.15) KLU=I2 
jetset74.F:      ELSEIF(J.EQ.16) THEN 
jetset74.F:        IF(K(I,1).LE.20.AND.((KFA.GE.11.AND.KFA.LE.20).OR.KFA.EQ.22.OR.        
jetset74.F:     &  (KFA.GT.100.AND.MOD(KFA/10,10).NE.0))) THEN  
jetset74.F:          I1=I
jetset74.F:  120     I2=I1 
jetset74.F:          I1=K(I1,3)
jetset74.F:          IF(I1.GT.0) THEN
jetset74.F:            KFAM=IABS(K(I1,2))
jetset74.F:            ILP=1
jetset74.F:            IF(KFAM.NE.0.AND.KFAM.LE.10) ILP=0
jetset74.F:            IF(KFAM.EQ.21.OR.KFAM.EQ.91.OR.KFAM.EQ.92.OR.KFAM.EQ.93) 
jetset74.F:            IF(KFAM.GT.100.AND.MOD(KFAM/10,10).EQ.0) ILP=0
jetset74.F:            IF(ILP.EQ.1) GOTO 120
jetset74.F:          IF(K(I1,1).EQ.12) THEN
jetset74.F:            DO 130 I3=I1+1,I2 
jetset74.F:            IF(K(I3,3).EQ.K(I2,3).AND.K(I3,2).NE.91.AND.K(I3,2).NE.92
jetset74.F:     &      .AND.K(I3,2).NE.93) KLU=KLU+1
jetset74.F:  130       CONTINUE
jetset74.F:  140       KLU=KLU+1
jetset74.F:            I3=I3+1
jetset74.F:            IF(I3.LT.N.AND.K(I3,3).EQ.K(I2,3)) GOTO 140           
jetset74.F:      ELSEIF(J.EQ.17) THEN 
jetset74.F:        I1=I 
jetset74.F:  150   KLU=KLU+1 
jetset74.F:        I3=I1 
jetset74.F:        I1=K(I1,3) 
jetset74.F:        I0=MAX(1,I1) 
jetset74.F:        IF(I1.EQ.0.OR.K(I0,1).LE.0.OR.K(I0,1).GT.20.OR.KC.EQ.0) THEN 
jetset74.F:          IF(KLU.EQ.1) KLU=-1 
jetset74.F:          IF(KLU.GT.1) KLU=0 
jetset74.F:        IF(KCHG(KC,2).EQ.0) GOTO 150 
jetset74.F:        IF(K(I1,1).NE.12) KLU=0 
jetset74.F:        IF(K(I1,1).NE.12) RETURN 
jetset74.F:        I2=I1 
jetset74.F:  160   I2=I2+1 
jetset74.F:        IF(I2.LT.N.AND.K(I2,1).NE.11) GOTO 160 
jetset74.F:        K3M=K(I3-1,3) 
jetset74.F:        IF(K3M.GE.I1.AND.K3M.LE.I2) KLU=0 
jetset74.F:        K3P=K(I3+1,3) 
jetset74.F:        IF(I3.LT.N.AND.K3P.GE.I1.AND.K3P.LE.I2) KLU=0 
jetset74.F:      ELSEIF(J.EQ.18) THEN 
jetset74.F:        IF(K(I,1).EQ.11.OR.K(I,1).EQ.12) KLU=MAX(0,K(I,5)-K(I,4)+1) 
jetset74.F:        IF(K(I,1).NE.3.AND.K(I,1).NE.13.AND.K(I,1).NE.14) RETURN 
jetset74.F:        IF(J.EQ.19) KLU=MOD(K(I,4)/MSTU(5),MSTU(5)) 
jetset74.F:        IF(J.EQ.21) KLU=MOD(K(I,4),MSTU(5)) 
jetset74.F:      COMMON/LUDAT1/MSTU(200),PARU(200),MSTJ(200),PARJ(200) 
jetset74.F:      SAVE /LUJETS/,/LUDAT1/,/LUDAT2/ 
jetset74.F:        DO 100 I1=1,N 
jetset74.F:        IF(K(I1,1).GT.0.AND.K(I1,1).LE.10) PLU=PLU+P(I1,J) 
jetset74.F:  100   CONTINUE 
jetset74.F:        DO 120 J1=1,4 
jetset74.F:        PSUM(J1)=0. 
jetset74.F:        DO 110 I1=1,N 
jetset74.F:        IF(K(I1,1).GT.0.AND.K(I1,1).LE.10) PSUM(J1)=PSUM(J1)+P(I1,J1) 
jetset74.F:  110   CONTINUE 
jetset74.F:  120 CONTINUE 
jetset74.F:        PLU=SQRT(MAX(0.,PSUM(4)**2-PSUM(1)**2-PSUM(2)**2-PSUM(3)**2)) 
jetset74.F:        DO 130 I1=1,N 
jetset74.F:        IF(K(I1,1).GT.0.AND.K(I1,1).LE.10) PLU=PLU+LUCHGE(K(I1,2))/3. 
jetset74.F:  130   CONTINUE 
jetset74.F:      ELSEIF(J.LE.12) THEN 
jetset74.F:        IF(J.EQ.7.OR.J.EQ.8) PLU=P(I,1)**2+P(I,2)**2+P(I,3)**2 
jetset74.F:        IF(J.EQ.9.OR.J.EQ.10) PLU=P(I,1)**2+P(I,2)**2 
jetset74.F:        IF(J.EQ.11.OR.J.EQ.12) PLU=P(I,5)**2+P(I,1)**2+P(I,2)**2 
jetset74.F:        IF(J.EQ.8.OR.J.EQ.10.OR.J.EQ.12) PLU=SQRT(PLU) 
jetset74.F:      ELSEIF(J.LE.16) THEN 
jetset74.F:        IF(J.LE.14) PLU=ulangl(P(I,3),SQRT(P(I,1)**2+P(I,2)**2)) 
jetset74.F:        IF(J.GE.15) PLU=ulangl(P(I,1),P(I,2)) 
jetset74.F:        IF(J.EQ.14.OR.J.EQ.16) PLU=PLU*180./PARU(1) 
jetset74.F:      ELSEIF(J.LE.19) THEN 
jetset74.F:        IF(J.EQ.17) PMR=P(I,5) 
jetset74.F:        IF(J.EQ.18) PMR=ULMASS(211) 
jetset74.F:        PR=MAX(1E-20,PMR**2+P(I,1)**2+P(I,2)**2) 
jetset74.F:     &  1E20)),P(I,3)) 
jetset74.F:        IF(J.EQ.20) PLU=2.*SQRT(P(I,1)**2+P(I,2)**2+P(I,3)**2)/PARU(21) 
jetset74.F:        IF(J.EQ.21) PLU=2.*P(I,3)/PARU(21) 
jetset74.F:        IF(J.EQ.22) PLU=2.*SQRT(P(I,1)**2+P(I,2)**2)/PARU(21) 
jetset74.F:        IF(J.EQ.23) PLU=2.*P(I,4)/PARU(21) 
jetset74.F:        IF(J.EQ.24) PLU=(P(I,4)+P(I,3))/PARU(21) 
jetset74.F:        IF(J.EQ.25) PLU=(P(I,4)-P(I,3))/PARU(21) 
jetset74.F:      COMMON/LUDAT1/MSTU(200),PARU(200),MSTJ(200),PARJ(200) 
jetset74.F:      SAVE /LUJETS/,/LUDAT1/,/LUDAT2/ 
jetset74.F:      DO 110 J1=1,3 
jetset74.F:      DO 100 J2=J1,3 
jetset74.F:      SM(J1,J2)=0. 
jetset74.F:  100 CONTINUE 
jetset74.F:  110 CONTINUE 
jetset74.F:      DO 140 I=1,N 
jetset74.F:      IF(K(I,1).LE.0.OR.K(I,1).GT.10) GOTO 140 
jetset74.F:      IF(MSTU(41).GE.2) THEN 
jetset74.F:        IF(KC.EQ.0.OR.KC.EQ.12.OR.KC.EQ.14.OR.KC.EQ.16.OR. 
jetset74.F:     &  KC.EQ.18) GOTO 140 
jetset74.F:        IF(MSTU(41).GE.3.AND.KCHG(KC,2).EQ.0.AND.LUCHGE(K(I,2)).EQ.0) 
jetset74.F:     &  GOTO 140 
jetset74.F:      NP=NP+1 
jetset74.F:      PA=SQRT(P(I,1)**2+P(I,2)**2+P(I,3)**2) 
jetset74.F:      PWT=1. 
jetset74.F:      IF(ABS(PARU(41)-2.).GT.0.001) PWT=MAX(1E-10,PA)**(PARU(41)-2.) 
jetset74.F:      DO 130 J1=1,3 
jetset74.F:      DO 120 J2=J1,3 
jetset74.F:      SM(J1,J2)=SM(J1,J2)+PWT*P(I,J1)*P(I,J2) 
jetset74.F:  120 CONTINUE 
jetset74.F:  130 CONTINUE 
jetset74.F:  140 CONTINUE 
jetset74.F:C...Very low multiplicities (0 or 1) not considered. 
jetset74.F:      IF(NP.LE.1) THEN 
jetset74.F:        SPH=-1. 
jetset74.F:        APL=-1. 
jetset74.F:      DO 160 J1=1,3 
jetset74.F:      DO 150 J2=J1,3 
jetset74.F:      SM(J1,J2)=SM(J1,J2)/PS 
jetset74.F:  150 CONTINUE 
jetset74.F:  160 CONTINUE 
jetset74.F:      SQ=(SM(1,1)*SM(2,2)+SM(1,1)*SM(3,3)+SM(2,2)*SM(3,3)-SM(1,2)**2- 
jetset74.F:     &SM(1,3)**2-SM(2,3)**2)/3.-1./9. 
jetset74.F:      SR=-0.5*(SQ+1./9.+SM(1,1)*SM(2,3)**2+SM(2,2)*SM(1,3)**2+SM(3,3)* 
jetset74.F:     &SM(1,2)**2-SM(1,1)*SM(2,2)*SM(3,3))+SM(1,2)*SM(1,3)*SM(2,3)+1./27. 
jetset74.F:      SP=COS(ACOS(MAX(MIN(SR/SQRT(-SQ**3),1.),-1.))/3.) 
jetset74.F:      P(N+1,4)=1./3.+SQRT(-SQ)*MAX(2.*SP,SQRT(3.*(1.-SP**2))-SP) 
jetset74.F:      P(N+3,4)=1./3.+SQRT(-SQ)*MIN(2.*SP,-SQRT(3.*(1.-SP**2))-SP) 
jetset74.F:      P(N+2,4)=1.-P(N+1,4)-P(N+3,4) 
jetset74.F:      IF(P(N+2,4).LT.1E-5) THEN 
jetset74.F:        SPH=-1. 
jetset74.F:        APL=-1. 
jetset74.F:      DO 240 I=1,3,2 
jetset74.F:      DO 180 J1=1,3 
jetset74.F:      SV(J1,J1)=SM(J1,J1)-P(N+I,4) 
jetset74.F:      DO 170 J2=J1+1,3 
jetset74.F:      SV(J1,J2)=SM(J1,J2) 
jetset74.F:      SV(J2,J1)=SM(J1,J2) 
jetset74.F:  170 CONTINUE 
jetset74.F:  180 CONTINUE 
jetset74.F:      DO 200 J1=1,3 
jetset74.F:      DO 190 J2=1,3 
jetset74.F:      IF(ABS(SV(J1,J2)).LE.SMAX) GOTO 190 
jetset74.F:      JA=J1 
jetset74.F:      SMAX=ABS(SV(J1,J2)) 
jetset74.F:  190 CONTINUE 
jetset74.F:      DO 220 J3=JA+1,JA+2 
jetset74.F:      J1=J3-3*((J3-1)/3) 
jetset74.F:      RL=SV(J1,JB)/SV(JA,JB) 
jetset74.F:      DO 210 J2=1,3 
jetset74.F:      SV(J1,J2)=SV(J1,J2)-RL*SV(JA,J2) 
jetset74.F:      IF(ABS(SV(J1,J2)).LE.SMAX) GOTO 210 
jetset74.F:      JC=J1 
jetset74.F:      SMAX=ABS(SV(J1,J2)) 
jetset74.F:  210 CONTINUE 
jetset74.F:      JB1=JB+1-3*(JB/3) 
jetset74.F:      JB2=JB+2-3*((JB+1)/3) 
jetset74.F:      P(N+I,JB1)=-SV(JC,JB2) 
jetset74.F:      P(N+I,JB2)=SV(JC,JB1) 
jetset74.F:      P(N+I,JB)=-(SV(JA,JB1)*P(N+I,JB1)+SV(JA,JB2)*P(N+I,JB2))/ 
jetset74.F:      PA=SQRT(P(N+I,1)**2+P(N+I,2)**2+P(N+I,3)**2) 
jetset74.F:      SGN=(-1.)**INT(RLU(0)+0.5) 
jetset74.F:      DO 230 J=1,3 
jetset74.F:      SGN=(-1.)**INT(RLU(0)+0.5) 
jetset74.F:      P(N+2,1)=SGN*(P(N+1,2)*P(N+3,3)-P(N+1,3)*P(N+3,2)) 
jetset74.F:      P(N+2,2)=SGN*(P(N+1,3)*P(N+3,1)-P(N+1,1)*P(N+3,3)) 
jetset74.F:      P(N+2,3)=SGN*(P(N+1,1)*P(N+3,2)-P(N+1,2)*P(N+3,1)) 
jetset74.F:      DO 260 I=1,3 
jetset74.F:      K(N+I,1)=31 
jetset74.F:      DO 250 J=1,5 
jetset74.F:      SPH=1.5*(P(N+2,4)+P(N+3,4)) 
jetset74.F:      APL=1.5*P(N+3,4) 
jetset74.F:      MSTU(61)=N+1 
jetset74.F:      IF(MSTU(43).LE.1) MSTU(3)=3 
jetset74.F:      COMMON/LUDAT1/MSTU(200),PARU(200),MSTJ(200),PARJ(200) 
jetset74.F:      SAVE /LUJETS/,/LUDAT1/,/LUDAT2/ 
jetset74.F:      DO 100 I=1,N 
jetset74.F:      IF(K(I,1).LE.0.OR.K(I,1).GT.10) GOTO 100 
jetset74.F:      IF(MSTU(41).GE.2) THEN 
jetset74.F:        IF(KC.EQ.0.OR.KC.EQ.12.OR.KC.EQ.14.OR.KC.EQ.16.OR. 
jetset74.F:     &  KC.EQ.18) GOTO 100 
jetset74.F:        IF(MSTU(41).GE.3.AND.KCHG(KC,2).EQ.0.AND.LUCHGE(K(I,2)).EQ.0) 
jetset74.F:     &  GOTO 100 
jetset74.F:      IF(N+NP+MSTU(44)+15.GE.MSTU(4)-MSTU(32)-5) THEN 
jetset74.F:        CALL LUERRM(11,'(LUTHRU:) no more memory left in LUJETS') 
jetset74.F:      NP=NP+1 
jetset74.F:      K(N+NP,1)=23 
jetset74.F:      P(N+NP,1)=P(I,1) 
jetset74.F:      P(N+NP,4)=SQRT(P(I,1)**2+P(I,2)**2+P(I,3)**2) 
jetset74.F:      P(N+NP,5)=1. 
jetset74.F:      IF(ABS(PARU(42)-1.).GT.0.001) P(N+NP,5)=P(N+NP,4)**(PARU(42)-1.) 
jetset74.F:  100 CONTINUE 
jetset74.F:C...Very low multiplicities (0 or 1) not considered. 
jetset74.F:      IF(NP.LE.1) THEN 
jetset74.F:        THR=-1. 
jetset74.F:        OBL=-1. 
jetset74.F:      DO 320 ILD=1,2 
jetset74.F:        K(N+NP+1,1)=31 
jetset74.F:        PHI=ulangl(P(N+NP+1,1),P(N+NP+1,2)) 
jetset74.F:        MSTU(33)=1 
jetset74.F:        CALL LUDBRB(N+1,N+NP+1,0.,-PHI,0D0,0D0,0D0) 
jetset74.F:        THE=ulangl(P(N+NP+1,3),P(N+NP+1,1)) 
jetset74.F:        CALL LUDBRB(N+1,N+NP+1,-THE,0.,0D0,0D0,0D0) 
jetset74.F:      DO 110 ILF=N+NP+4,N+NP+MSTU(44)+4 
jetset74.F:  110 CONTINUE 
jetset74.F:      DO 160 I=N+1,N+NP 
jetset74.F:      IF(ILD.EQ.2) P(I,4)=SQRT(P(I,1)**2+P(I,2)**2) 
jetset74.F:      DO 130 ILF=N+NP+MSTU(44)+3,N+NP+4,-1 
jetset74.F:      IF(P(I,4).LE.P(ILF,4)) GOTO 140 
jetset74.F:      DO 120 J=1,5 
jetset74.F:      P(ILF+1,J)=P(ILF,J) 
jetset74.F:  120 CONTINUE 
jetset74.F:  130 CONTINUE 
jetset74.F:  140 DO 150 J=1,5 
jetset74.F:      P(ILF+1,J)=P(I,J) 
jetset74.F:  150 CONTINUE 
jetset74.F:  160 CONTINUE 
jetset74.F:      DO 170 ILG=N+NP+MSTU(44)+5,N+NP+MSTU(44)+15 
jetset74.F:  170 CONTINUE 
jetset74.F:      NC=2**(MIN(MSTU(44),NP)-1) 
jetset74.F:      DO 250 ILC=1,NC 
jetset74.F:      DO 180 J=1,3 
jetset74.F:  180 CONTINUE 
jetset74.F:      DO 200 ILF=1,MIN(MSTU(44),NP) 
jetset74.F:      IF(2**ILF*((ILC+2**(ILF-1)-1)/2**ILF).GE.ILC) SGN=-SGN 
jetset74.F:      DO 190 J=1,4-ILD 
jetset74.F:  190 CONTINUE 
jetset74.F:      TDS=TDI(1)**2+TDI(2)**2+TDI(3)**2 
jetset74.F:      DO 220 ILG=N+NP+MSTU(44)+MIN(ILC,10)+4,N+NP+MSTU(44)+5,-1 
jetset74.F:      DO 210 J=1,4 
jetset74.F:      P(ILG+1,J)=P(ILG,J) 
jetset74.F:  210 CONTINUE 
jetset74.F:  230 DO 240 J=1,3 
jetset74.F:      P(ILG+1,J)=TDI(J) 
jetset74.F:      P(ILG+1,4)=TDS 
jetset74.F:  260 ILG=ILG+1 
jetset74.F:      DO 280 J=1,3 
jetset74.F:      IF(THP.LE.1E-10) TDI(J)=P(N+NP+MSTU(44)+4+ILG,J) 
jetset74.F:      IF(THP.GT.1E-10) TDI(J)=TPR(J) 
jetset74.F:      DO 300 I=N+1,N+NP 
jetset74.F:      SGN=SIGN(P(I,5),TDI(1)*P(I,1)+TDI(2)*P(I,2)+TDI(3)*P(I,3)) 
jetset74.F:      DO 290 J=1,4-ILD 
jetset74.F:      THP=SQRT(TPR(1)**2+TPR(2)**2+TPR(3)**2)/PS 
jetset74.F:      IF(THP.LT.P(N+NP+ILD,4)-PARU(48).AND.ILG.LT.MIN(10,NC)) GOTO 260 
jetset74.F:        SGN=(-1.)**INT(RLU(0)+0.5) 
jetset74.F:        DO 310 J=1,3 
jetset74.F:  310   CONTINUE 
jetset74.F:      IAGR=IAGR+1 
jetset74.F:      IF(IAGR.LT.MSTU(45).AND.ILG.LT.MIN(10,NC)) GOTO 260 
jetset74.F:      SGN=(-1.)**INT(RLU(0)+0.5) 
jetset74.F:      P(N+NP+3,1)=-SGN*P(N+NP+2,2) 
jetset74.F:      P(N+NP+3,2)=SGN*P(N+NP+2,1) 
jetset74.F:      DO 330 I=N+1,N+NP 
jetset74.F:      THP=THP+P(I,5)*ABS(P(N+NP+3,1)*P(I,1)+P(N+NP+3,2)*P(I,2)) 
jetset74.F:      DO 350 ILD=1,3 
jetset74.F:      K(N+ILD,1)=31 
jetset74.F:      DO 340 J=1,5 
jetset74.F:      CALL LUDBRB(N+1,N+3,THE,PHI,0D0,0D0,0D0) 
jetset74.F:      THR=P(N+1,4) 
jetset74.F:      MSTU(61)=N+1 
jetset74.F:      IF(MSTU(43).LE.1) MSTU(3)=3 
jetset74.F:      COMMON/LUDAT1/MSTU(200),PARU(200),MSTJ(200),PARJ(200) 
jetset74.F:      SAVE /LUJETS/,/LUDAT1/,/LUDAT2/ 
jetset74.F:      R2T(I1,I2)=(P(I1,5)*P(I2,5)-P(I1,1)*P(I2,1)-P(I1,2)*P(I2,2)- 
jetset74.F:     &P(I1,3)*P(I2,3))*2.*P(I1,5)*P(I2,5)/(0.0001+P(I1,5)+P(I2,5))**2 
jetset74.F:      R2M(I1,I2)=2.*P(I1,4)*P(I2,4)*(1.-(P(I1,1)*P(I2,1)+P(I1,2)* 
jetset74.F:     &P(I2,2)+P(I1,3)*P(I2,3))/(P(I1,5)*P(I2,5))) 
jetset74.F:        DO 100 J=1,5 
jetset74.F:  100   CONTINUE 
jetset74.F:        DO 110 I=N+1,N+NJET 
jetset74.F:        P(I,5)=SQRT(P(I,1)**2+P(I,2)**2+P(I,3)**2) 
jetset74.F:  110   CONTINUE 
jetset74.F:      DO 140 I=1,N 
jetset74.F:      IF(K(I,1).LE.0.OR.K(I,1).GT.10) GOTO 140 
jetset74.F:      IF(MSTU(41).GE.2) THEN 
jetset74.F:        IF(KC.EQ.0.OR.KC.EQ.12.OR.KC.EQ.14.OR.KC.EQ.16.OR. 
jetset74.F:     &  KC.EQ.18) GOTO 140 
jetset74.F:        IF(MSTU(41).GE.3.AND.KCHG(KC,2).EQ.0.AND.LUCHGE(K(I,2)).EQ.0) 
jetset74.F:     &  GOTO 140 
jetset74.F:        CALL LUERRM(11,'(LUCLUS:) no more memory left in LUJETS') 
jetset74.F:        NJET=-1 
jetset74.F:      NP=NP+1 
jetset74.F:      DO 120 J=1,5 
jetset74.F:  120 CONTINUE 
jetset74.F:      IF(MSTU(42).EQ.1.AND.K(I,2).NE.22) P(N+NP,5)=PMAS(101,1) 
jetset74.F:      P(N+NP,4)=SQRT(P(N+NP,5)**2+P(I,1)**2+P(I,2)**2+P(I,3)**2) 
jetset74.F:      P(N+NP,5)=SQRT(P(I,1)**2+P(I,2)**2+P(I,3)**2) 
jetset74.F:      DO 130 J=1,4 
jetset74.F:  130 CONTINUE 
jetset74.F:  140 CONTINUE 
jetset74.F:      DO 160 I=N+1,N+NP 
jetset74.F:      DO 150 J=1,5 
jetset74.F:  150 CONTINUE 
jetset74.F:  160 CONTINUE 
jetset74.F:      PS(5)=SQRT(MAX(0.,PS(4)**2-PS(1)**2-PS(2)**2-PS(3)**2)) 
jetset74.F:        NJET=-1 
jetset74.F:      RINIT=1.25*PARU(43) 
jetset74.F:  170 RINIT=0.8*RINIT 
jetset74.F:      DO 180 I=N+NP+1,N+2*NP 
jetset74.F:  180 CONTINUE 
jetset74.F:        DO 190 J=1,4 
jetset74.F:        P(N+1,J)=0. 
jetset74.F:  190   CONTINUE 
jetset74.F:        DO 210 I=N+NP+1,N+2*NP 
jetset74.F:        IF(P(I,5).GT.2.*RINIT) GOTO 210 
jetset74.F:        NREM=NREM-1 
jetset74.F:        K(I,4)=1 
jetset74.F:        DO 200 J=1,4 
jetset74.F:        P(N+1,J)=P(N+1,J)+P(I,J) 
jetset74.F:  210   CONTINUE 
jetset74.F:        P(N+1,5)=SQRT(P(N+1,1)**2+P(N+1,2)**2+P(N+1,3)**2) 
jetset74.F:        IF(P(N+1,5).GT.2.*RINIT) NPRE=1 
jetset74.F:        IF(RINIT.GE.0.2*PARU(43).AND.NPRE+NREM.LT.MSTU(47)) GOTO 170 
jetset74.F:        IF(NREM.EQ.0) GOTO 170 
jetset74.F:  220 NPRE=NPRE+1 
jetset74.F:      DO 230 I=N+NP+1,N+2*NP 
jetset74.F:      DO 240 J=1,5 
jetset74.F:      NREM=NREM-1 
jetset74.F:        DO 260 I=N+NP+1,N+2*NP 
jetset74.F:        NREM=NREM-1 
jetset74.F:        DO 250 J=1,4 
jetset74.F:        P(N+NPRE,5)=SQRT(P(N+NPRE,1)**2+P(N+NPRE,2)**2+P(N+NPRE,3)**2) 
jetset74.F:        DO 280 I=N+NP+1,N+2*NP 
jetset74.F:          DO 290 J=1,4 
jetset74.F:          P(N+NPRE,5)=SQRT(P(N+NPRE,1)**2+P(N+NPRE,2)**2+P(N+NPRE,3)**2) 
jetset74.F:          NREM=NREM-1 
jetset74.F:      IF(RINIT.GE.0.2*PARU(43).AND.NPRE+NREM.LT.MSTU(47)) GOTO 170 
jetset74.F:  310 IF(MSTU(46).LE.1) THEN 
jetset74.F:        DO 330 I=N+1,N+NJET 
jetset74.F:        DO 320 J=1,4 
jetset74.F:        DO 360 I=N+NP+1,N+2*NP 
jetset74.F:        DO 340 IJET=N+1,N+NJET 
jetset74.F:        DO 350 J=1,4 
jetset74.F:        DO 380 I=N+1,N+NJET 
jetset74.F:        DO 370 J=1,4 
jetset74.F:        P(I,5)=SQRT(P(I,1)**2+P(I,2)**2+P(I,3)**2) 
jetset74.F:      DO 400 ITRY1=N+1,N+NJET-1 
jetset74.F:      DO 390 ITRY2=ITRY1+1,N+NJET 
jetset74.F:      IF(MSTU(46).LE.2) R2=R2T(ITRY1,ITRY2) 
jetset74.F:      IF(MSTU(46).GE.3) R2=R2M(ITRY1,ITRY2) 
jetset74.F:      IMIN1=ITRY1 
jetset74.F:        IREC=MIN(IMIN1,IMIN2) 
jetset74.F:        IDEL=MAX(IMIN1,IMIN2) 
jetset74.F:        DO 410 J=1,4 
jetset74.F:        P(IREC,J)=P(IMIN1,J)+P(IMIN2,J) 
jetset74.F:  410   CONTINUE 
jetset74.F:        P(IREC,5)=SQRT(P(IREC,1)**2+P(IREC,2)**2+P(IREC,3)**2) 
jetset74.F:        DO 430 I=IDEL+1,N+NJET 
jetset74.F:        DO 420 J=1,5 
jetset74.F:        P(I-1,J)=P(I,J) 
jetset74.F:          DO 440 I=N+NP+1,N+2*NP 
jetset74.F:          IF(IORI.GT.IDEL) K(I,4)=K(I,4)-1 
jetset74.F:        NJET=NJET-1 
jetset74.F:      ELSEIF(NJET.EQ.MSTU(47).AND.MSTU(46).LE.1.AND.NLOOP.LE.2) THEN 
jetset74.F:        DO 450 I=N+1,N+NJET 
jetset74.F:        DO 460 I=N+NP+1,N+2*NP 
jetset74.F:        K(N+K(I,4),5)=K(N+K(I,4),5)+1 
jetset74.F:        DO 470 I=N+1,N+NJET 
jetset74.F:          NLOOP=NLOOP+1 
jetset74.F:          DO 480 I=N+NP+1,N+2*NP 
jetset74.F:          IF(K(N+K(I,4),5).LE.1.OR.P(I,5).LT.RINIT) GOTO 480 
jetset74.F:            DO 490 J=1,4 
jetset74.F:            P(IJET,5)=SQRT(P(IJET,1)**2+P(IJET,2)**2+P(IJET,3)**2) 
jetset74.F:      IF(MSTU(46).LE.1.AND.NLOOP.LE.2.AND.PSJT/PSS.GT.TSAV+PARU(48)) 
jetset74.F:        GOTO 310 
jetset74.F:      DO 510 I=N+1,N+NJET 
jetset74.F:      DO 500 J=1,5 
jetset74.F:  510 CONTINUE 
jetset74.F:      DO 540 INEW=N+1,N+NJET 
jetset74.F:      DO 520 ITRY=N+1,N+NJET 
jetset74.F:      K(INEW,1)=31 
jetset74.F:      DO 530 J=1,5 
jetset74.F:      V(IMAX,4)=-1. 
jetset74.F:      DO 550 I=N+NP+1,N+2*NP 
jetset74.F:      IF(K(K(I,3),1).NE.3) K(K(I,3),4)=IORI-N 
jetset74.F:      K(IORI,4)=K(IORI,4)+1 
jetset74.F:      DO 570 I=N+1,N+NJET 
jetset74.F:      DO 560 J=1,5 
jetset74.F:      MSTU(61)=N+1 
jetset74.F:      PARU(61)=PS(5) 
jetset74.F:      IF(NJET.LE.1) PARU(63)=0. 
jetset74.F:        NJET=-1 
jetset74.F:      IF(MSTU(43).LE.1) MSTU(3)=NJET 
jetset74.F:      COMMON/LUDAT1/MSTU(200),PARU(200),MSTJ(200),PARJ(200) 
jetset74.F:      SAVE /LUJETS/,/LUDAT1/,/LUDAT2/ 
jetset74.F:      PTLRAT=1./SINH(PARU(51))**2 
jetset74.F:      DO 110 I=1,N 
jetset74.F:      IF(K(I,1).LE.0.OR.K(I,1).GT.10) GOTO 110 
jetset74.F:      IF(P(I,1)**2+P(I,2)**2.LE.PTLRAT*P(I,3)**2) GOTO 110 
jetset74.F:      IF(MSTU(41).GE.2) THEN 
jetset74.F:        IF(KC.EQ.0.OR.KC.EQ.12.OR.KC.EQ.14.OR.KC.EQ.16.OR. 
jetset74.F:     &  KC.EQ.18) GOTO 110 
jetset74.F:        IF(MSTU(41).GE.3.AND.KCHG(KC,2).EQ.0.AND.LUCHGE(K(I,2)).EQ.0) 
jetset74.F:     &  GOTO 110 
jetset74.F:      NP=NP+1 
jetset74.F:      PT=SQRT(P(I,1)**2+P(I,2)**2) 
jetset74.F:      IETA=MAX(1,MIN(MSTU(51),1+INT(MSTU(51)*0.5*(ETA/PARU(51)+1.)))) 
jetset74.F:      PHI=ulangl(P(I,1),P(I,2)) 
jetset74.F:      IPHI=MAX(1,MIN(MSTU(52),1+INT(MSTU(52)*0.5*(PHI/PARU(1)+1.)))) 
jetset74.F:      DO 100 IC=N+1,NC 
jetset74.F:        K(IC,4)=K(IC,4)+1 
jetset74.F:        GOTO 110 
jetset74.F:  100 CONTINUE 
jetset74.F:        CALL LUERRM(11,'(LUCELL:) no more memory left in LUJETS') 
jetset74.F:      NC=NC+1 
jetset74.F:      K(NC,4)=1 
jetset74.F:      P(NC,1)=(PARU(51)/MSTU(51))*(2*IETA-1-MSTU(51)) 
jetset74.F:      P(NC,2)=(PARU(1)/MSTU(52))*(2*IPHI-1-MSTU(52)) 
jetset74.F:  110 CONTINUE 
jetset74.F:      IF(MSTU(53).GE.1) THEN 
jetset74.F:        DO 130 IC=N+1,NC 
jetset74.F:        IF(MSTU(53).EQ.2) PEI=P(IC,5)/COSH(P(IC,1)) 
jetset74.F:  120   PEF=PEI+PARU(55)*SQRT(-2.*LOG(MAX(1E-10,RLU(0)))*PEI)* 
jetset74.F:        IF(PEF.LT.0..OR.PEF.GT.PARU(56)*PEI) GOTO 120 
jetset74.F:        IF(MSTU(53).EQ.2) P(IC,5)=PEF*COSH(P(IC,1)) 
jetset74.F:  130   CONTINUE 
jetset74.F:        DO 140 IC=N+1,NCC 
jetset74.F:          NC=NC+1 
jetset74.F:          P(NC,1)=P(IC,1) 
jetset74.F:  140   CONTINUE 
jetset74.F:  150 ETMAX=0. 
jetset74.F:      DO 160 IC=N+1,NC 
jetset74.F:      IF(K(IC,5).NE.2) GOTO 160 
jetset74.F:      IF(P(IC,5).LE.ETMAX) GOTO 160 
jetset74.F:      ETA=P(IC,1) 
jetset74.F:  160 CONTINUE 
jetset74.F:        CALL LUERRM(11,'(LUCELL:) no more memory left in LUJETS') 
jetset74.F:      K(ICMAX,5)=1 
jetset74.F:      NJ=NJ+1 
jetset74.F:      K(NJ,5)=1 
jetset74.F:      P(NJ,1)=ETA 
jetset74.F:      DO 170 IC=N+1,NC 
jetset74.F:      IF(K(IC,5).EQ.0) GOTO 170 
jetset74.F:      IF(ABS(P(IC,1)-ETA).GT.PARU(54)) GOTO 170 
jetset74.F:      IF(DPHIA.GT.PARU(54).AND.DPHIA.LT.PARU(2)-PARU(54)) GOTO 170 
jetset74.F:      IF(DPHIA.GT.PARU(1)) PHIC=PHIC+SIGN(PARU(2),PHI) 
jetset74.F:      IF((P(IC,1)-ETA)**2+(PHIC-PHI)**2.GT.PARU(54)**2) GOTO 170 
jetset74.F:      P(NJ,3)=P(NJ,3)+P(IC,5)*P(IC,1) 
jetset74.F:  170 CONTINUE 
jetset74.F:        NJ=NJ-1 
jetset74.F:        DO 180 IC=N+1,NC 
jetset74.F:  180   CONTINUE 
jetset74.F:        IF(ABS(P(NJ,4)).GT.PARU(1)) P(NJ,4)=P(NJ,4)-SIGN(PARU(2), 
jetset74.F:        DO 190 IC=N+1,NC 
jetset74.F:  190   CONTINUE 
jetset74.F:        DO 200 J=1,4 
jetset74.F:        DO 210 IC=N+1,NC 
jetset74.F:        IF(K(IC,5).GE.0) GOTO 210 
jetset74.F:        P(NJ,1)=P(NJ,1)+P(IC,5)*COS(P(IC,2)) 
jetset74.F:        P(NJ,3)=P(NJ,3)+P(IC,5)*SINH(P(IC,1)) 
jetset74.F:        P(NJ,4)=P(NJ,4)+P(IC,5)*COSH(P(IC,1)) 
jetset74.F:  210   CONTINUE 
jetset74.F:      GOTO 150 
jetset74.F:  220 DO 250 I=1,NJ-NC 
jetset74.F:      DO 230 IJ=NC+1,NJ 
jetset74.F:      K(N+I,1)=31 
jetset74.F:      DO 240 J=1,5 
jetset74.F:        DO 260 I=N+1,N+NJET 
jetset74.F:        P(I,1)=P(I,5)*COS(P(I,4)) 
jetset74.F:        DO 270 I=N+1,N+NJET 
jetset74.F:        P(I,5)=SQRT(MAX(0.,P(I,4)**2-P(I,1)**2-P(I,2)**2-P(I,3)**2)) 
jetset74.F:      MSTU(61)=N+1 
jetset74.F:      IF(MSTU(43).LE.1) MSTU(3)=NJET 
jetset74.F:      COMMON/LUDAT1/MSTU(200),PARU(200),MSTJ(200),PARJ(200) 
jetset74.F:      SAVE /LUJETS/,/LUDAT1/,/LUDAT2/ 
jetset74.F:      DO 120 J1=1,3 
jetset74.F:      DO 100 J2=J1,3 
jetset74.F:      SM(J1,J2)=0. 
jetset74.F:  100 CONTINUE 
jetset74.F:      DO 110 J2=1,4 
jetset74.F:      PS(J1,J2)=0. 
jetset74.F:  110 CONTINUE 
jetset74.F:  120 CONTINUE 
jetset74.F:      DO 170 I=1,N 
jetset74.F:      IF(K(I,1).LE.0.OR.K(I,1).GT.10) GOTO 170 
jetset74.F:      IF(MSTU(41).GE.2) THEN 
jetset74.F:        IF(KC.EQ.0.OR.KC.EQ.12.OR.KC.EQ.14.OR.KC.EQ.16.OR. 
jetset74.F:     &  KC.EQ.18) GOTO 170 
jetset74.F:        IF(MSTU(41).GE.3.AND.KCHG(KC,2).EQ.0.AND.LUCHGE(K(I,2)).EQ.0) 
jetset74.F:     &  GOTO 170 
jetset74.F:      IF(N+NP+1.GE.MSTU(4)-MSTU(32)-5) THEN 
jetset74.F:        CALL LUERRM(11,'(LUJMAS:) no more memory left in LUJETS') 
jetset74.F:      NP=NP+1 
jetset74.F:      DO 130 J=1,5 
jetset74.F:  130 CONTINUE 
jetset74.F:      IF(MSTU(42).EQ.1.AND.K(I,2).NE.22) P(N+NP,5)=PMAS(101,1) 
jetset74.F:      P(N+NP,4)=SQRT(P(N+NP,5)**2+P(I,1)**2+P(I,2)**2+P(I,3)**2) 
jetset74.F:      DO 150 J1=1,3 
jetset74.F:      DO 140 J2=J1,3 
jetset74.F:      SM(J1,J2)=SM(J1,J2)+P(I,J1)*P(I,J2) 
jetset74.F:  140 CONTINUE 
jetset74.F:  150 CONTINUE 
jetset74.F:      PSS=PSS+(P(I,1)**2+P(I,2)**2+P(I,3)**2) 
jetset74.F:      DO 160 J=1,4 
jetset74.F:  160 CONTINUE 
jetset74.F:  170 CONTINUE 
jetset74.F:C...Very low multiplicities (0 or 1) not considered. 
jetset74.F:      IF(NP.LE.1) THEN 
jetset74.F:        PMH=-1. 
jetset74.F:        PML=-1. 
jetset74.F:      PARU(61)=SQRT(MAX(0.,PS(3,4)**2-PS(3,1)**2-PS(3,2)**2-PS(3,3)**2)) 
jetset74.F:      DO 190 J1=1,3 
jetset74.F:      DO 180 J2=J1,3 
jetset74.F:      SM(J1,J2)=SM(J1,J2)/PSS 
jetset74.F:  180 CONTINUE 
jetset74.F:  190 CONTINUE 
jetset74.F:      SQ=(SM(1,1)*SM(2,2)+SM(1,1)*SM(3,3)+SM(2,2)*SM(3,3)-SM(1,2)**2- 
jetset74.F:     &SM(1,3)**2-SM(2,3)**2)/3.-1./9. 
jetset74.F:      SR=-0.5*(SQ+1./9.+SM(1,1)*SM(2,3)**2+SM(2,2)*SM(1,3)**2+SM(3,3)* 
jetset74.F:     &SM(1,2)**2-SM(1,1)*SM(2,2)*SM(3,3))+SM(1,2)*SM(1,3)*SM(2,3)+1./27. 
jetset74.F:      SP=COS(ACOS(MAX(MIN(SR/SQRT(-SQ**3),1.),-1.))/3.) 
jetset74.F:      SMA=1./3.+SQRT(-SQ)*MAX(2.*SP,SQRT(3.*(1.-SP**2))-SP) 
jetset74.F:      DO 210 J1=1,3 
jetset74.F:      SM(J1,J1)=SM(J1,J1)-SMA 
jetset74.F:      DO 200 J2=J1+1,3 
jetset74.F:      SM(J2,J1)=SM(J1,J2) 
jetset74.F:  210 CONTINUE 
jetset74.F:      DO 230 J1=1,3 
jetset74.F:      DO 220 J2=1,3 
jetset74.F:      IF(ABS(SM(J1,J2)).LE.SMAX) GOTO 220 
jetset74.F:      JA=J1 
jetset74.F:      SMAX=ABS(SM(J1,J2)) 
jetset74.F:      DO 250 J3=JA+1,JA+2 
jetset74.F:      J1=J3-3*((J3-1)/3) 
jetset74.F:      RL=SM(J1,JB)/SM(JA,JB) 
jetset74.F:      DO 240 J2=1,3 
jetset74.F:      SM(J1,J2)=SM(J1,J2)-RL*SM(JA,J2) 
jetset74.F:      IF(ABS(SM(J1,J2)).LE.SMAX) GOTO 240 
jetset74.F:      JC=J1 
jetset74.F:      SMAX=ABS(SM(J1,J2)) 
jetset74.F:      JB1=JB+1-3*(JB/3) 
jetset74.F:      JB2=JB+2-3*((JB+1)/3) 
jetset74.F:      SAX(JB1)=-SM(JC,JB2) 
jetset74.F:      SAX(JB2)=SM(JC,JB1) 
jetset74.F:      SAX(JB)=-(SM(JA,JB1)*SAX(JB1)+SM(JA,JB2)*SAX(JB2))/SM(JA,JB) 
jetset74.F:      DO 270 I=N+1,N+NP 
jetset74.F:      PSAX=P(I,1)*SAX(1)+P(I,2)*SAX(2)+P(I,3)*SAX(3) 
jetset74.F:      IS=1 
jetset74.F:      DO 260 J=1,4 
jetset74.F:      PMS=MAX(1E-10,PS(1,4)**2-PS(1,1)**2-PS(1,2)**2-PS(1,3)**2)+ 
jetset74.F:     &MAX(1E-10,PS(2,4)**2-PS(2,1)**2-PS(2,2)**2-PS(2,3)**2) 
jetset74.F:      DO 290 J=1,4 
jetset74.F:      PS(3,J)=PS(1,J)-PS(2,J) 
jetset74.F:      DO 300 I=N+1,N+NP 
jetset74.F:      PPS=P(I,4)*PS(3,4)-P(I,1)*PS(3,1)-P(I,2)*PS(3,2)-P(I,3)*PS(3,3) 
jetset74.F:      IF(K(I,3).EQ.1) PMDI=2.*(P(I,5)**2-PPS) 
jetset74.F:        DO 310 J=1,4 
jetset74.F:  310   CONTINUE 
jetset74.F:      MSTU(61)=N+1 
jetset74.F:      PS(1,5)=SQRT(MAX(0.,PS(1,4)**2-PS(1,1)**2-PS(1,2)**2-PS(1,3)**2)) 
jetset74.F:      PS(2,5)=SQRT(MAX(0.,PS(2,4)**2-PS(2,1)**2-PS(2,2)**2-PS(2,3)**2)) 
jetset74.F:      PMH=MAX(PS(1,5),PS(2,5)) 
jetset74.F:      PML=MIN(PS(1,5),PS(2,5)) 
jetset74.F:      SUBROUTINE LUFOWO(H10,H20,H30,H40) 
jetset74.F:      COMMON/LUDAT1/MSTU(200),PARU(200),MSTJ(200),PARJ(200) 
jetset74.F:      SAVE /LUJETS/,/LUDAT1/,/LUDAT2/ 
jetset74.F:      DO 110 I=1,N 
jetset74.F:      IF(K(I,1).LE.0.OR.K(I,1).GT.10) GOTO 110 
jetset74.F:      IF(MSTU(41).GE.2) THEN 
jetset74.F:        IF(KC.EQ.0.OR.KC.EQ.12.OR.KC.EQ.14.OR.KC.EQ.16.OR. 
jetset74.F:     &  KC.EQ.18) GOTO 110 
jetset74.F:        IF(MSTU(41).GE.3.AND.KCHG(KC,2).EQ.0.AND.LUCHGE(K(I,2)).EQ.0) 
jetset74.F:     &  GOTO 110 
jetset74.F:        CALL LUERRM(11,'(LUFOWO:) no more memory left in LUJETS') 
jetset74.F:        H10=-1. 
jetset74.F:        H20=-1. 
jetset74.F:        H30=-1. 
jetset74.F:        H40=-1. 
jetset74.F:      NP=NP+1 
jetset74.F:      DO 100 J=1,3 
jetset74.F:  100 CONTINUE 
jetset74.F:      P(N+NP,4)=SQRT(P(I,1)**2+P(I,2)**2+P(I,3)**2) 
jetset74.F:  110 CONTINUE 
jetset74.F:C...Very low multiplicities (0 or 1) not considered. 
jetset74.F:      IF(NP.LE.1) THEN 
jetset74.F:        H10=-1. 
jetset74.F:        H20=-1. 
jetset74.F:        H30=-1. 
jetset74.F:        H40=-1. 
jetset74.F:C...Calculate H1 - H4. 
jetset74.F:      H10=0. 
jetset74.F:      DO 130 I1=N+1,N+NP 
jetset74.F:      DO 120 I2=I1+1,N+NP 
jetset74.F:      CTHE=(P(I1,1)*P(I2,1)+P(I1,2)*P(I2,2)+P(I1,3)*P(I2,3))/ 
jetset74.F:     &(P(I1,4)*P(I2,4)) 
jetset74.F:      H10=H10+P(I1,4)*P(I2,4)*CTHE 
jetset74.F:      H20=H20+P(I1,4)*P(I2,4)*(1.5*CTHE**2-0.5) 
jetset74.F:      H30=H30+P(I1,4)*P(I2,4)*(2.5*CTHE**3-1.5*CTHE) 
jetset74.F:      H40=H40+P(I1,4)*P(I2,4)*(4.375*CTHE**4-3.75*CTHE**2+0.375) 
jetset74.F:  120 CONTINUE 
jetset74.F:  130 CONTINUE 
jetset74.F:C...Calculate H1/H0 - H4/H0. Output. 
jetset74.F:      MSTU(61)=N+1 
jetset74.F:      H10=(HD+2.*H10)/H0 
jetset74.F:      COMMON/LUDAT1/MSTU(200),PARU(200),MSTJ(200),PARJ(200) 
jetset74.F:      SAVE /LUJETS/,/LUDAT1/,/LUDAT2/,/LUDAT3/ 
jetset74.F:      DIMENSION KFIS(100,2),NPIS(100,0:10),KFFS(400),NPFS(400,4), 
jetset74.F:     &FEVFM(10,4),FM1FM(3,10,4),FM2FM(3,10,4),FMOMA(4),FMOMS(4), 
jetset74.F:     &FEVEE(50),FE1EC(50),FE2EC(50),FE1EA(25),FE2EA(25), 
jetset74.F:     &KFFS,NPFS,NEVFM,NMUFM,FM1FM,FM2FM,NEVEE,FE1EC,FE2EC,FE1EA, 
jetset74.F:      CHARACTER CHAU*16,CHIS(2)*12,CHDC(8)*12 
jetset74.F:     &NKFFS/0/,NEVFM/0/,NMUFM/0/,FM1FM/120*0./,FM2FM/120*0./, 
jetset74.F:     &NEVEE/0/,FE1EC/50*0./,FE2EC/50*0./,FE1EA/25*0./,FE2EA/25*0./, 
jetset74.F:      IF(MTABU.EQ.10) THEN 
jetset74.F:      ELSEIF(MTABU.EQ.11) THEN 
jetset74.F:        NEVIS=NEVIS+1 
jetset74.F:        KFM1=2*IABS(MSTU(161)) 
jetset74.F:        IF(MSTU(161).GT.0) KFM1=KFM1-1 
jetset74.F:        KFM2=2*IABS(MSTU(162)) 
jetset74.F:        IF(MSTU(162).GT.0) KFM2=KFM2-1 
jetset74.F:        KFMN=MIN(KFM1,KFM2) 
jetset74.F:        KFMX=MAX(KFM1,KFM2) 
jetset74.F:        DO 100 I=1,NKFIS 
jetset74.F:        IF(KFMN.EQ.KFIS(I,1).AND.KFMX.EQ.KFIS(I,2)) THEN 
jetset74.F:          GOTO 110 
jetset74.F:        ELSEIF(KFMN.LT.KFIS(I,1).OR.(KFMN.EQ.KFIS(I,1).AND. 
jetset74.F:          GOTO 110 
jetset74.F:  100   CONTINUE 
jetset74.F:        IKFIS=NKFIS+1 
jetset74.F:  110   IF(IKFIS.LT.0) THEN 
jetset74.F:          IF(NKFIS.GE.100) RETURN 
jetset74.F:          DO 130 I=NKFIS,IKFIS,-1 
jetset74.F:          KFIS(I+1,1)=KFIS(I,1) 
jetset74.F:          KFIS(I+1,2)=KFIS(I,2) 
jetset74.F:          DO 120 J=0,10 
jetset74.F:          NPIS(I+1,J)=NPIS(I,J) 
jetset74.F:  120     CONTINUE 
jetset74.F:  130   CONTINUE 
jetset74.F:          NKFIS=NKFIS+1 
jetset74.F:          KFIS(IKFIS,1)=KFMN 
jetset74.F:          DO 140 J=0,10 
jetset74.F:  140     CONTINUE 
jetset74.F:        NPIS(IKFIS,0)=NPIS(IKFIS,0)+1 
jetset74.F:        DO 160 I=1,N 
jetset74.F:        IF(K(I,1).LE.0.OR.K(I,1).GT.12) THEN 
jetset74.F:        ELSEIF(IABS(K(I,2)).GT.80.AND.IABS(K(I,2)).LE.100) THEN 
jetset74.F:        ELSEIF(IABS(K(I,2)).GT.100.AND.MOD(IABS(K(I,2))/10,10).NE.0) 
jetset74.F:  150     IM=K(IM,3) 
jetset74.F:            NP=NP+1 
jetset74.F:          ELSEIF(K(IM,1).LE.0.OR.K(IM,1).GT.20) THEN 
jetset74.F:            NP=NP+1 
jetset74.F:          ELSEIF(IABS(K(IM,2)).GT.80.AND.IABS(K(IM,2)).LE.100) THEN 
jetset74.F:          ELSEIF(IABS(K(IM,2)).GT.100.AND.MOD(IABS(K(IM,2))/10,10).NE.0) 
jetset74.F:            GOTO 150 
jetset74.F:  160   CONTINUE 
jetset74.F:        NPCO=MAX(NP,1) 
jetset74.F:        IF(NP.GE.11) NPCO=8 
jetset74.F:        IF(NP.GE.16) NPCO=9 
jetset74.F:        IF(NP.GE.26) NPCO=10 
jetset74.F:        NPIS(IKFIS,NPCO)=NPIS(IKFIS,NPCO)+1 
jetset74.F:      ELSEIF(MTABU.EQ.12) THEN 
jetset74.F:        FAC=1./MAX(1,NEVIS) 
jetset74.F:        WRITE(MSTU(11),5000) NEVIS 
jetset74.F:        DO 170 I=1,NKFIS 
jetset74.F:        KFMN=KFIS(I,1) 
jetset74.F:        KFM1=(KFMN+1)/2 
jetset74.F:        IF(2*KFM1.EQ.KFMN) KFM1=-KFM1 
jetset74.F:        CALL LUNAME(KFM1,CHAU) 
jetset74.F:        CHIS(1)=CHAU(1:12) 
jetset74.F:        IF(CHAU(13:13).NE.' ') CHIS(1)(12:12)='?' 
jetset74.F:        IF(KFIS(I,1).EQ.0) KFMX=0 
jetset74.F:        KFM2=(KFMX+1)/2 
jetset74.F:        CHIS(2)=CHAU(1:12) 
jetset74.F:        IF(CHAU(13:13).NE.' ') CHIS(2)(12:12)='?' 
jetset74.F:        WRITE(MSTU(11),5100) CHIS(1),CHIS(2),FAC*NPIS(I,0), 
jetset74.F:     &  (NPIS(I,J)/FLOAT(NPIS(I,0)),J=1,10) 
jetset74.F:  170   CONTINUE 
jetset74.F:      ELSEIF(MTABU.EQ.13) THEN 
jetset74.F:        FAC=1./MAX(1,NEVIS) 
jetset74.F:        DO 190 I=1,NKFIS 
jetset74.F:        KFMN=KFIS(I,1) 
jetset74.F:        KFM1=(KFMN+1)/2 
jetset74.F:        IF(2*KFM1.EQ.KFMN) KFM1=-KFM1 
jetset74.F:        IF(KFIS(I,1).EQ.0) KFMX=0 
jetset74.F:        KFM2=(KFMX+1)/2 
jetset74.F:        K(I,1)=32 
jetset74.F:        K(I,3)=KFM1 
jetset74.F:        DO 180 J=1,5 
jetset74.F:  180   CONTINUE 
jetset74.F:  190   CONTINUE 
jetset74.F:        DO 200 J=1,5 
jetset74.F:        K(N+1,J)=0 
jetset74.F:        P(N+1,J)=0. 
jetset74.F:        V(N+1,J)=0. 
jetset74.F:        K(N+1,1)=32 
jetset74.F:        K(N+1,2)=99 
jetset74.F:        K(N+1,5)=NEVIS 
jetset74.F:        MSTU(3)=1 
jetset74.F:      ELSEIF(MTABU.EQ.21) THEN 
jetset74.F:        NEVFS=NEVFS+1 
jetset74.F:        DO 260 I=1,N 
jetset74.F:        IF(K(I,1).LE.0.OR.K(I,1).GT.20.OR.K(I,1).EQ.13) GOTO 260 
jetset74.F:        MSTU(62)=MSTU(62)+1 
jetset74.F:          MPRI=1 
jetset74.F:        ELSEIF(K(K(I,3),1).LE.0.OR.K(K(I,3),1).GT.20) THEN 
jetset74.F:          MPRI=1 
jetset74.F:        ELSEIF(K(K(I,3),2).GE.91.AND.K(K(I,3),2).LE.93) THEN 
jetset74.F:          MPRI=1 
jetset74.F:        ELSEIF(K(K(I,3),1).EQ.13) THEN 
jetset74.F:            MPRI=1 
jetset74.F:          ELSEIF(K(IM,1).LE.0.OR.K(IM,1).GT.20) THEN 
jetset74.F:            MPRI=1 
jetset74.F:            IF(KCHG(KCM,2).NE.0) MPRI=1 
jetset74.F:        IF(KC.NE.0.AND.MPRI.EQ.1) THEN 
jetset74.F:          IF(KCHG(KC,2).EQ.0) NPRFS=NPRFS+1 
jetset74.F:        IF(K(I,1).LE.10) THEN 
jetset74.F:          NFIFS=NFIFS+1 
jetset74.F:          IF(LUCHGE(K(I,2)).NE.0) NCHFS=NCHFS+1 
jetset74.F:        KFS=3-ISIGN(1,K(I,2))-MPRI 
jetset74.F:        DO 210 IP=1,NKFFS 
jetset74.F:  210   CONTINUE 
jetset74.F:        IKFFS=NKFFS+1 
jetset74.F:          DO 240 IP=NKFFS,IKFFS,-1 
jetset74.F:          KFFS(IP+1)=KFFS(IP) 
jetset74.F:          DO 230 J=1,4 
jetset74.F:          NPFS(IP+1,J)=NPFS(IP,J) 
jetset74.F:          NKFFS=NKFFS+1 
jetset74.F:          DO 250 J=1,4 
jetset74.F:        NPFS(IKFFS,KFS)=NPFS(IKFFS,KFS)+1 
jetset74.F:        FAC=1./MAX(1,NEVFS) 
jetset74.F:        WRITE(MSTU(11),5200) NEVFS,FAC*NPRFS,FAC*NFIFS,FAC*NCHFS 
jetset74.F:        DO 270 I=1,NKFFS 
jetset74.F:        IF(KC.NE.0) MDCYF=MDCY(KC,1) 
jetset74.F:        WRITE(MSTU(11),5300) KFFS(I),CHAU,MDCYF,(FAC*NPFS(I,J),J=1,4), 
jetset74.F:     &  FAC*(NPFS(I,1)+NPFS(I,2)+NPFS(I,3)+NPFS(I,4)) 
jetset74.F:        FAC=1./MAX(1,NEVFS) 
jetset74.F:        DO 290 I=1,NKFFS 
jetset74.F:        K(I,1)=32 
jetset74.F:        K(I,5)=NPFS(I,1)+NPFS(I,2)+NPFS(I,3)+NPFS(I,4) 
jetset74.F:        DO 280 J=1,4 
jetset74.F:        DO 300 J=1,5 
jetset74.F:        K(N+1,J)=0 
jetset74.F:        P(N+1,J)=0. 
jetset74.F:        V(N+1,J)=0. 
jetset74.F:        K(N+1,1)=32 
jetset74.F:        K(N+1,2)=99 
jetset74.F:        K(N+1,5)=NEVFS 
jetset74.F:        P(N+1,1)=FAC*NPRFS 
jetset74.F:        P(N+1,2)=FAC*NFIFS 
jetset74.F:        P(N+1,3)=FAC*NCHFS 
jetset74.F:        MSTU(3)=1 
jetset74.F:        DO 330 IM=1,3 
jetset74.F:        DO 320 IB=1,10 
jetset74.F:        DO 310 IP=1,4 
jetset74.F:        FM1FM(IM,IB,IP)=0. 
jetset74.F:  310   CONTINUE 
jetset74.F:      ELSEIF(MTABU.EQ.31) THEN 
jetset74.F:        NEVFM=NEVFM+1 
jetset74.F:        DO 410 I=1,N 
jetset74.F:        IF(K(I,1).LE.0.OR.K(I,1).GT.10) GOTO 410 
jetset74.F:        IF(MSTU(41).GE.2) THEN 
jetset74.F:          IF(KC.EQ.0.OR.KC.EQ.12.OR.KC.EQ.14.OR.KC.EQ.16.OR. 
jetset74.F:     &    KC.EQ.18) GOTO 410 
jetset74.F:          IF(MSTU(41).GE.3.AND.KCHG(KC,2).EQ.0.AND.LUCHGE(K(I,2)).EQ.0) 
jetset74.F:     &    GOTO 410 
jetset74.F:        IF(MSTU(42).EQ.1.AND.K(I,2).NE.22) PMR=ULMASS(211) 
jetset74.F:        PR=MAX(1E-20,PMR**2+P(I,1)**2+P(I,2)**2) 
jetset74.F:     &  1E20)),P(I,3)) 
jetset74.F:        IF(ABS(YETA).GT.PARU(57)) GOTO 410 
jetset74.F:        PHI=ulangl(P(I,1),P(I,2)) 
jetset74.F:        IYETA=512.*(YETA+PARU(57))/(2.*PARU(57)) 
jetset74.F:        IYETA=MAX(0,MIN(511,IYETA)) 
jetset74.F:        IPHI=512.*(PHI+PARU(1))/PARU(2) 
jetset74.F:        IPHI=MAX(0,MIN(511,IPHI)) 
jetset74.F:          CALL LUERRM(11,'(LUTABU:) no more memory left in LUJETS') 
jetset74.F:        NUPP=NUPP+1 
jetset74.F:        IF(NUPP.EQ.NLOW+1) THEN 
jetset74.F:          K(NUPP,1)=IYETA 
jetset74.F:          DO 350 I1=NUPP-1,NLOW+1,-1 
jetset74.F:          IF(IYETA.GE.K(I1,1)) GOTO 360 
jetset74.F:          K(I1+1,1)=K(I1,1) 
jetset74.F:  360     K(I1+1,1)=IYETA 
jetset74.F:          DO 370 I1=NUPP-1,NLOW+1,-1 
jetset74.F:          IF(IPHI.GE.K(I1,2)) GOTO 380 
jetset74.F:          K(I1+1,2)=K(I1,2) 
jetset74.F:  380     K(I1+1,2)=IPHI 
jetset74.F:          DO 390 I1=NUPP-1,NLOW+1,-1 
jetset74.F:          IF(IYEP.GE.K(I1,3)) GOTO 400 
jetset74.F:          K(I1+1,3)=K(I1,3) 
jetset74.F:  400     K(I1+1,3)=IYEP 
jetset74.F:  410   CONTINUE 
jetset74.F:        K(NUPP+1,1)=2**10 
jetset74.F:        K(NUPP+1,2)=2**10 
jetset74.F:        K(NUPP+1,3)=4**10 
jetset74.F:        DO 480 IM=1,3 
jetset74.F:        DO 430 IB=1,10 
jetset74.F:        DO 420 IP=1,4 
jetset74.F:        DO 450 IB=1,10 
jetset74.F:        IF(IM.LE.2) IBIN=2**(10-IB) 
jetset74.F:        IF(IM.EQ.3) IBIN=4**(10-IB) 
jetset74.F:        IAGR=K(NLOW+1,IM)/IBIN 
jetset74.F:        NAGR=1 
jetset74.F:        DO 440 I=NLOW+2,NUPP+1 
jetset74.F:          NAGR=NAGR+1 
jetset74.F:          IF(NAGR.EQ.1) THEN 
jetset74.F:            FEVFM(IB,1)=FEVFM(IB,1)+2. 
jetset74.F:            FEVFM(IB,1)=FEVFM(IB,1)+6. 
jetset74.F:            FEVFM(IB,1)=FEVFM(IB,1)+12. 
jetset74.F:            FEVFM(IB,1)=FEVFM(IB,1)+NAGR*(NAGR-1.) 
jetset74.F:            FEVFM(IB,2)=FEVFM(IB,2)+NAGR*(NAGR-1.)*(NAGR-2.) 
jetset74.F:            FEVFM(IB,3)=FEVFM(IB,3)+NAGR*(NAGR-1.)*(NAGR-2.)*(NAGR-3.) 
jetset74.F:            FEVFM(IB,4)=FEVFM(IB,4)+NAGR*(NAGR-1.)*(NAGR-2.)*(NAGR-3.)* 
jetset74.F:          NAGR=1 
jetset74.F:        DO 470 IB=10,1,-1 
jetset74.F:        DO 460 IP=1,4 
jetset74.F:        IF(FEVFM(1,IP).LT.0.5) THEN 
jetset74.F:          FEVFM(IB,IP)=2.**((IB-1)*IP)*FEVFM(IB,IP)/FEVFM(1,IP) 
jetset74.F:          FEVFM(IB,IP)=4.**((IB-1)*IP)*FEVFM(IB,IP)/FEVFM(1,IP) 
jetset74.F:        FM1FM(IM,IB,IP)=FM1FM(IM,IB,IP)+FEVFM(IB,IP) 
jetset74.F:        FAC=1./MAX(1,NEVFM) 
jetset74.F:        IF(MSTU(42).LE.0) WRITE(MSTU(11),5400) NEVFM,'eta' 
jetset74.F:        IF(MSTU(42).EQ.1) WRITE(MSTU(11),5400) NEVFM,'ypi' 
jetset74.F:        IF(MSTU(42).GE.2) WRITE(MSTU(11),5400) NEVFM,'y  ' 
jetset74.F:        DO 510 IM=1,3 
jetset74.F:        WRITE(MSTU(11),5500) 
jetset74.F:        DO 500 IB=1,10 
jetset74.F:        IF(IM.NE.2) BYETA=BYETA/2**(IB-1) 
jetset74.F:        IF(IM.NE.1) BPHI=BPHI/2**(IB-1) 
jetset74.F:        IF(IM.LE.2) BNAVE=FAC*NMUFM/FLOAT(2**(IB-1)) 
jetset74.F:        IF(IM.EQ.3) BNAVE=FAC*NMUFM/FLOAT(4**(IB-1)) 
jetset74.F:        DO 490 IP=1,4 
jetset74.F:        FMOMA(IP)=FAC*FM1FM(IM,IB,IP) 
jetset74.F:        WRITE(MSTU(11),5600) BYETA,BPHI,BNAVE,(FMOMA(IP),FMOMS(IP), 
jetset74.F:     &  IP=1,4) 
jetset74.F:  510   CONTINUE 
jetset74.F:        FAC=1./MAX(1,NEVFM) 
jetset74.F:        DO 540 IM=1,3 
jetset74.F:        DO 530 IB=1,10 
jetset74.F:        I=10*(IM-1)+IB 
jetset74.F:        K(I,1)=32 
jetset74.F:        K(I,3)=1 
jetset74.F:        IF(IM.NE.2) K(I,3)=2**(IB-1) 
jetset74.F:        K(I,4)=1 
jetset74.F:        IF(IM.NE.1) K(I,4)=2**(IB-1) 
jetset74.F:        P(I,1)=2.*PARU(57)/K(I,3) 
jetset74.F:        V(I,1)=PARU(2)/K(I,4) 
jetset74.F:        DO 520 IP=1,4 
jetset74.F:        P(I,IP+1)=FAC*FM1FM(IM,IB,IP) 
jetset74.F:        V(I,IP+1)=SQRT(MAX(0.,FAC*(FAC*FM2FM(IM,IB,IP)-P(I,IP+1)**2))) 
jetset74.F:        DO 550 J=1,5 
jetset74.F:        K(N+1,J)=0 
jetset74.F:        P(N+1,J)=0. 
jetset74.F:        V(N+1,J)=0. 
jetset74.F:        K(N+1,1)=32 
jetset74.F:        K(N+1,2)=99 
jetset74.F:        K(N+1,5)=NEVFM 
jetset74.F:        MSTU(3)=1 
jetset74.F:        DO 560 J=1,25 
jetset74.F:        FE1EC(J)=0. 
jetset74.F:        FE1EC(51-J)=0. 
jetset74.F:        FE2EC(51-J)=0. 
jetset74.F:        FE1EA(J)=0. 
jetset74.F:      ELSEIF(MTABU.EQ.41) THEN 
jetset74.F:        NEVEE=NEVEE+1 
jetset74.F:        DO 570 I=1,N 
jetset74.F:        IF(K(I,1).LE.0.OR.K(I,1).GT.10) GOTO 570 
jetset74.F:        IF(MSTU(41).GE.2) THEN 
jetset74.F:          IF(KC.EQ.0.OR.KC.EQ.12.OR.KC.EQ.14.OR.KC.EQ.16.OR. 
jetset74.F:     &    KC.EQ.18) GOTO 570 
jetset74.F:          IF(MSTU(41).GE.3.AND.KCHG(KC,2).EQ.0.AND.LUCHGE(K(I,2)).EQ.0) 
jetset74.F:        IF(MSTU(42).EQ.1.AND.K(I,2).NE.22) PMR=ULMASS(211) 
jetset74.F:          CALL LUERRM(11,'(LUTABU:) no more memory left in LUJETS') 
jetset74.F:        NUPP=NUPP+1 
jetset74.F:        P(NUPP,1)=P(I,1) 
jetset74.F:        P(NUPP,4)=SQRT(PMR**2+P(I,1)**2+P(I,2)**2+P(I,3)**2) 
jetset74.F:        P(NUPP,5)=MAX(1E-10,SQRT(P(I,1)**2+P(I,2)**2+P(I,3)**2)) 
jetset74.F:        FAC=(2./ECM**2)*50./PARU(1) 
jetset74.F:        DO 580 J=1,50 
jetset74.F:        DO 600 I1=NLOW+2,NUPP 
jetset74.F:        DO 590 I2=NLOW+1,I1-1 
jetset74.F:        CTHE=(P(I1,1)*P(I2,1)+P(I1,2)*P(I2,2)+P(I1,3)*P(I2,3))/ 
jetset74.F:     &  (P(I1,5)*P(I2,5)) 
jetset74.F:        THE=ACOS(MAX(-1.,MIN(1.,CTHE))) 
jetset74.F:        ITHE=MAX(1,MIN(50,1+INT(50.*THE/PARU(1)))) 
jetset74.F:        FEVEE(ITHE)=FEVEE(ITHE)+FAC*P(I1,4)*P(I2,4) 
jetset74.F:        DO 610 J=1,25 
jetset74.F:        FE1EC(J)=FE1EC(J)+FEVEE(J) 
jetset74.F:        FE1EC(51-J)=FE1EC(51-J)+FEVEE(51-J) 
jetset74.F:        FE2EC(51-J)=FE2EC(51-J)+FEVEE(51-J)**2 
jetset74.F:        FE1EA(J)=FE1EA(J)+(FEVEE(51-J)-FEVEE(J)) 
jetset74.F:        FE2EA(J)=FE2EA(J)+(FEVEE(51-J)-FEVEE(J))**2 
jetset74.F:  610   CONTINUE 
jetset74.F:        FAC=1./MAX(1,NEVEE) 
jetset74.F:        WRITE(MSTU(11),5700) NEVEE 
jetset74.F:        DO 620 J=1,25 
jetset74.F:        FEEC1=FAC*FE1EC(J) 
jetset74.F:        FEES1=SQRT(MAX(0.,FAC*(FAC*FE2EC(J)-FEEC1**2))) 
jetset74.F:        FEEC2=FAC*FE1EC(51-J) 
jetset74.F:        FEES2=SQRT(MAX(0.,FAC*(FAC*FE2EC(51-J)-FEEC2**2))) 
jetset74.F:        FEECA=FAC*FE1EA(J) 
jetset74.F:        WRITE(MSTU(11),5800) 3.6*(J-1),3.6*J,FEEC1,FEES1,FEEC2,FEES2, 
jetset74.F:        FAC=1./MAX(1,NEVEE) 
jetset74.F:        DO 630 I=1,25 
jetset74.F:        K(I,1)=32 
jetset74.F:        P(I,1)=FAC*FE1EC(I) 
jetset74.F:        V(I,1)=SQRT(MAX(0.,FAC*(FAC*FE2EC(I)-P(I,1)**2))) 
jetset74.F:        P(I,2)=FAC*FE1EC(51-I) 
jetset74.F:        V(I,2)=SQRT(MAX(0.,FAC*(FAC*FE2EC(51-I)-P(I,2)**2))) 
jetset74.F:        P(I,3)=FAC*FE1EA(I) 
jetset74.F:        P(I,4)=PARU(1)*(I-1)/50. 
jetset74.F:        P(I,5)=PARU(1)*I/50. 
jetset74.F:        V(I,4)=3.6*(I-1) 
jetset74.F:        DO 640 J=1,5 
jetset74.F:        K(N+1,J)=0 
jetset74.F:        P(N+1,J)=0. 
jetset74.F:        V(N+1,J)=0. 
jetset74.F:        K(N+1,1)=32 
jetset74.F:        K(N+1,2)=99 
jetset74.F:        K(N+1,5)=NEVEE 
jetset74.F:        MSTU(3)=1 
jetset74.F:      ELSEIF(MTABU.EQ.51) THEN 
jetset74.F:        NEVDC=NEVDC+1 
jetset74.F:        DO 670 I=1,N 
jetset74.F:        IF(K(I,1).LE.0.OR.K(I,1).GE.6) GOTO 670 
jetset74.F:        NDS=NDS+1 
jetset74.F:          NREDC=NREDC+1 
jetset74.F:        IF(K(I,2).LT.0) KFM=KFM-1 
jetset74.F:        DO 650 IDS=NDS-1,1,-1 
jetset74.F:        IIN=IDS+1 
jetset74.F:        KFDM(IDS+1)=KFDM(IDS) 
jetset74.F:        IIN=1 
jetset74.F:        DO 690 IDC=1,NKFDC 
jetset74.F:          DO 680 I=1,NDS 
jetset74.F:        IKFDC=NKFDC+1 
jetset74.F:          NREDC=NREDC+1 
jetset74.F:          DO 720 IDC=NKFDC,IKFDC,-1 
jetset74.F:          NPDC(IDC+1)=NPDC(IDC) 
jetset74.F:          DO 710 I=0,8 
jetset74.F:          KFDC(IDC+1,I)=KFDC(IDC,I) 
jetset74.F:  710     CONTINUE 
jetset74.F:          NKFDC=NKFDC+1 
jetset74.F:          DO 730 I=1,NDS 
jetset74.F:        NPDC(IKFDC)=NPDC(IKFDC)+1 
jetset74.F:        FAC=1./MAX(1,NEVDC) 
jetset74.F:        WRITE(MSTU(11),5900) NEVDC 
jetset74.F:        DO 750 IDC=1,NKFDC 
jetset74.F:        DO 740 I=1,KFDC(IDC,0) 
jetset74.F:        KF=(KFM+1)/2 
jetset74.F:        CHDC(I)=CHAU(1:12) 
jetset74.F:        IF(CHAU(13:13).NE.' ') CHDC(I)(12:12)='?' 
jetset74.F:        WRITE(MSTU(11),6000) FAC*NPDC(IDC),(CHDC(I),I=1,KFDC(IDC,0)) 
jetset74.F:        IF(NREDC.NE.0) WRITE(MSTU(11),6100) FAC*NREDC 
jetset74.F:        FAC=1./MAX(1,NEVDC) 
jetset74.F:        DO 780 IDC=1,NKFDC 
jetset74.F:        K(IDC,1)=32 
jetset74.F:        DO 760 J=1,5 
jetset74.F:        DO 770 I=1,KFDC(IDC,0) 
jetset74.F:        KF=(KFM+1)/2 
jetset74.F:        DO 790 J=1,5 
jetset74.F:        K(N+1,J)=0 
jetset74.F:        P(N+1,J)=0. 
jetset74.F:        V(N+1,J)=0. 
jetset74.F:        K(N+1,1)=32 
jetset74.F:        K(N+1,2)=99 
jetset74.F:        K(N+1,5)=NEVDC 
jetset74.F:        V(N+1,5)=FAC*NREDC 
jetset74.F:        MSTU(3)=1 
jetset74.F:C...Format statements for output on unit MSTU(11) (default 6). 
jetset74.F:     &4X,'hard interaction',24X,'1',7X,'2',7X,'3',7X,'4',7X,'5', 
jetset74.F:     &6X,'6-7',5X,'8-10',3X,'11-15',3X,'16-25',4X,'>25'/) 
jetset74.F: 5100 FORMAT(3X,A12,1X,A12,F10.5,1X,10F8.4) 
jetset74.F:     &5X,'Mean primary multiplicity =',F10.4/ 
jetset74.F:     &5X,'Mean final   multiplicity =',F10.4/ 
jetset74.F:     &5X,'Mean charged multiplicity =',F10.4// 
jetset74.F:     &5X,'KF    Particle/jet  MDCY',10X,'Particles',13X,'Antiparticles', 
jetset74.F: 5300 FORMAT(1X,I6,4X,A16,I2,5(1X,F11.6)) 
jetset74.F:     &3X,'delta-',A3,' delta-phi     <n>/bin',10X,'<F2>',18X,'<F3>', 
jetset74.F:     &18X,'<F4>',18X,'<F5>'/35X,4('     value     error  ')) 
jetset74.F: 5500 FORMAT(10X) 
jetset74.F: 5600 FORMAT(2X,2F10.4,F12.4,4(F12.4,F10.4)) 
jetset74.F:     &2X,'theta range',8X,'EEC(theta)',8X,'EEC(180-theta)',7X, 
jetset74.F: 5800 FORMAT(2X,F4.1,' - ',F4.1,3(F11.4,F9.4)) 
jetset74.F:     &2X,'Probability',10X,'Complete final state'/) 
jetset74.F: 6000 FORMAT(2X,F9.5,5X,8(A12,1X)) 
jetset74.F: 6100 FORMAT(2X,F9.5,5X,'into other channels (more than 8 particles ', 
jetset74.F:      COMMON/LUDAT1/MSTU(200),PARU(200),MSTJ(200),PARJ(200) 
jetset74.F:      SAVE /LUJETS/,/LUDAT1/,/LUDAT2/ 
jetset74.F:      IF(MSTU(12).GE.1) CALL lulist(0) 
jetset74.F:        CALL LUERRM(16,'(LUEEVT:) called with unknown flavour code') 
jetset74.F:        IF(MSTU(21).GE.1) RETURN 
jetset74.F:      IF(KFL.LE.5) ECMMIN=PARJ(127)+2.02*PARF(100+MAX(1,KFL)) 
jetset74.F:      IF(KFL.GE.6) ECMMIN=PARJ(127)+2.02*PMAS(KFL,1) 
jetset74.F:        CALL LUERRM(16,'(LUEEVT:) called with too small CM energy') 
jetset74.F:        IF(MSTU(21).GE.1) RETURN 
jetset74.F:      IF(MSTJ(109).EQ.2.AND.MSTJ(110).NE.1) THEN 
jetset74.F:     &  '(LUEEVT:) MSTJ(109) value requires MSTJ(110) = 1') 
jetset74.F:        MSTJ(110)=1 
jetset74.F:      IF(MSTJ(109).EQ.2.AND.MSTJ(111).NE.0) THEN 
jetset74.F:     &  '(LUEEVT:) MSTJ(109) value requires MSTJ(111) = 0') 
jetset74.F:        MSTJ(111)=0 
jetset74.F:      MSTU(111)=MSTJ(108) 
jetset74.F:      IF(MSTJ(108).EQ.2.AND.(MSTJ(101).EQ.0.OR.MSTJ(101).EQ.1)) 
jetset74.F:     &MSTU(111)=1 
jetset74.F:      PARU(112)=PARJ(121) 
jetset74.F:      IF(MSTU(111).EQ.2) PARU(112)=PARJ(122) 
jetset74.F:      IF(MSTJ(116).GT.0.AND.(MSTJ(116).GE.2.OR.ABS(ECM-PARJ(151)).GE. 
jetset74.F:     &PARJ(139).OR.10*MSTJ(102)+KFL.NE.MSTJ(119))) CALL LUXTOT(KFL,ECM, 
jetset74.F:      IF(MSTJ(116).GE.3) MSTJ(116)=1 
jetset74.F:      PARJ(171)=0. 
jetset74.F:  100 NTRY=NTRY+1 
jetset74.F:      IF(NTRY.GT.100) THEN 
jetset74.F:        CALL LUERRM(14,'(LUEEVT:) caught in an infinite loop') 
jetset74.F:      IF(MSTJ(115).GE.2) THEN 
jetset74.F:        CALL LU1ENT(NC-1,11,0.5*ECM,0.,0.) 
jetset74.F:        K(NC-1,1)=21 
jetset74.F:        CALL LU1ENT(NC,-11,0.5*ECM,PARU(1),0.) 
jetset74.F:        K(NC,1)=21 
jetset74.F:      IF(MSTJ(107).GE.1.AND.MSTJ(116).GE.1) CALL LURADK(ECM,MK,PAK, 
jetset74.F:      IF(MK.EQ.1) ECMC=SQRT(ECM*(ECM-2.*PAK)) 
jetset74.F:      IF(MSTJ(115).GE.1.AND.MK.EQ.1) THEN 
jetset74.F:        NC=NC+1 
jetset74.F:        CALL LU1ENT(NC,22,PAK,THEK,PHIK) 
jetset74.F:        K(NC,3)=MIN(MSTJ(115)/2,1) 
jetset74.F:      IF(MSTJ(115).GE.3) THEN 
jetset74.F:        NC=NC+1 
jetset74.F:        IF(MSTJ(102).EQ.2) KF=23 
jetset74.F:        MSTU10=MSTU(10) 
jetset74.F:        MSTU(10)=1 
jetset74.F:        CALL LU1ENT(NC,KF,ECMC,0.,0.) 
jetset74.F:        K(NC,1)=21 
jetset74.F:        K(NC,3)=1 
jetset74.F:        MSTU(10)=MSTU10 
jetset74.F:      IF(KFLC.EQ.0) GOTO 100 
jetset74.F:      KFLN=21 
jetset74.F:      IF(NJET.EQ.4) CALL LUX4JT(NJET,CUT,KFLC,ECMC,KFLN,X1,X2,X4, 
jetset74.F:     &X12,X14) 
jetset74.F:      IF(NJET.EQ.3) CALL LUX3JT(NJET,CUT,KFLC,ECMC,X1,X3) 
jetset74.F:      IF(NJET.EQ.2) MSTJ(120)=1 
jetset74.F:      IF(NJET.EQ.2.AND.MSTJ(101).NE.5) CALL LU2ENT(NC+1,KFLC,-KFLC,ECMC) 
jetset74.F:      IF(NJET.EQ.2.AND.MSTJ(101).EQ.5) CALL LU2ENT(-(NC+1),KFLC,-KFLC, 
jetset74.F:      IF(NJET.EQ.3) CALL LU3ENT(NC+1,KFLC,21,-KFLC,ECMC,X1,X3) 
jetset74.F:      IF(NJET.EQ.4.AND.KFLN.EQ.21) CALL LU4ENT(NC+1,KFLC,KFLN,KFLN, 
jetset74.F:     &-KFLC,ECMC,X1,X2,X4,X12,X14) 
jetset74.F:      IF(NJET.EQ.4.AND.KFLN.NE.21) CALL LU4ENT(NC+1,KFLC,-KFLN,KFLN, 
jetset74.F:     &-KFLC,ECMC,X1,X2,X4,X12,X14) 
jetset74.F:      IF(MSTU(24).NE.0) GOTO 100 
jetset74.F:      DO 110 IP=NC+1,N 
jetset74.F:      K(IP,3)=K(IP,3)+MIN(MSTJ(115)/2,1)+(MSTJ(115)/3)*(NC-1) 
jetset74.F:  110 CONTINUE 
jetset74.F:      IF(MSTJ(106).EQ.1) THEN 
jetset74.F:        CALL LUDBRB(NC+1,N,0.,CHI,0D0,0D0,0D0) 
jetset74.F:        CALL LUDBRB(NC+1,N,THE,PHI,0D0,0D0,0D0) 
jetset74.F:      IF(MK.EQ.1) THEN 
jetset74.F:        NMIN=NC+1-MSTJ(115)/3 
jetset74.F:      IF(MSTJ(101).EQ.5) THEN 
jetset74.F:        CALL LUSHOW(N-1,N,ECMC) 
jetset74.F:        MSTJ14=MSTJ(14) 
jetset74.F:        IF(MSTJ(105).EQ.-1) MSTJ(14)=-1 
jetset74.F:        IF(MSTJ(105).GE.0) MSTU(28)=0 
jetset74.F:        MSTJ(14)=MSTJ14 
jetset74.F:        IF(MSTJ(105).GE.0.AND.MSTU(28).NE.0) GOTO 100 
jetset74.F:      IF(MSTJ(105).EQ.1) CALL LUEXEC 
jetset74.F:      MSTU(161)=KFLC 
jetset74.F:      MSTU(162)=-KFLC 
jetset74.F:      COMMON/LUDAT1/MSTU(200),PARU(200),MSTJ(200),PARJ(200) 
jetset74.F:      SAVE /LUDAT1/,/LUDAT2/ 
jetset74.F:      PARJ(151)=ECM 
jetset74.F:      MSTJ(119)=10*MSTJ(102)+KFL 
jetset74.F:      IF(MSTJ(111).EQ.0) THEN 
jetset74.F:      ELSEIF(MSTU(111).EQ.0) THEN 
jetset74.F:        PARJ(168)=MIN(1.,MAX(PARJ(128),EXP(-12.*PARU(1)/ 
jetset74.F:     &  ((33.-2.*MSTU(112))*PARU(111))))) 
jetset74.F:        Q2R=PARJ(168)*ECM**2 
jetset74.F:        PARJ(168)=MIN(1.,MAX(PARJ(128),PARU(112)/ECM, 
jetset74.F:     &  (2.*PARU(112)/ECM)**2)) 
jetset74.F:        Q2R=PARJ(168)*ECM**2 
jetset74.F:      ALSPI=ULALPS(Q2R)/PARU(1) 
jetset74.F:      IF(MSTJ(101).EQ.0.OR.MSTJ(109).EQ.1) THEN 
jetset74.F:        RQCD=1. 
jetset74.F:      ELSEIF(IABS(MSTJ(101)).EQ.1.AND.MSTJ(109).EQ.0) THEN 
jetset74.F:        RQCD=1.+ALSPI 
jetset74.F:      ELSEIF(MSTJ(109).EQ.0) THEN 
jetset74.F:        RQCD=1.+ALSPI+(1.986-0.115*MSTU(118))*ALSPI**2 
jetset74.F:        IF(MSTJ(111).EQ.1) RQCD=MAX(1.,RQCD+(33.-2.*MSTU(112))/12.* 
jetset74.F:     &  LOG(PARJ(168))*ALSPI**2) 
jetset74.F:      ELSEIF(IABS(MSTJ(101)).EQ.1) THEN 
jetset74.F:        RQCD=1.+(3./4.)*ALSPI 
jetset74.F:        RQCD=1.+(3./4.)*ALSPI-(3./32.+0.519*MSTU(118))*ALSPI**2 
jetset74.F:      IF(MSTJ(102).GE.3) THEN 
jetset74.F:        RVA=3.*(3.+(4.*PARU(102)-1.)**2)+6.*RQCD*(2.+(1.-8.*PARU(102)/ 
jetset74.F:     &  3.)**2+(4.*PARU(102)/3.-1.)**2) 
jetset74.F:        DO 100 KFLC=5,6 
jetset74.F:        VQ=1. 
jetset74.F:        IF(MOD(MSTJ(103),2).EQ.1) VQ=SQRT(MAX(0.,1.-(2.*ULMASS(KFLC)/ 
jetset74.F:        IF(KFLC.EQ.5) VF=4.*PARU(102)/3.-1. 
jetset74.F:        IF(KFLC.EQ.6) VF=1.-8.*PARU(102)/3. 
jetset74.F:  100   CONTINUE 
jetset74.F:        PARJ(124)=PARU(101)*PARJ(123)*RVA/(48.*PARU(102)*(1.-PARU(102))) 
jetset74.F:      POLL=1.-PARJ(131)*PARJ(132) 
jetset74.F:      IF(MSTJ(102).GE.2) THEN 
jetset74.F:        SFF=1./(16.*PARU(102)*(1.-PARU(102))) 
jetset74.F:        SFW=ECM**4/((ECM**2-PARJ(123)**2)**2+(PARJ(123)*PARJ(124))**2) 
jetset74.F:        SFI=SFW*(1.-(PARJ(123)/ECM)**2) 
jetset74.F:        VE=4.*PARU(102)-1. 
jetset74.F:        SF1I=SFF*(VE*POLL+PARJ(132)-PARJ(131)) 
jetset74.F:        SF1W=SFF**2*((VE**2+1.)*POLL+2.*VE*(PARJ(132)-PARJ(131))) 
jetset74.F:        HF1I=SFI*SF1I 
jetset74.F:        HF1W=SFW*SF1W 
jetset74.F:      DO 110 KFLC=1,MAX(MSTJ(104),KFL) 
jetset74.F:      IF(KFL.GT.0.AND.KFLC.NE.KFL) GOTO 110 
jetset74.F:      MSTJ(93)=1 
jetset74.F:      IF(ECM.LT.2.*PMQ+PARJ(127)) GOTO 110 
jetset74.F:      QF=KCHG(KFLC,1)/3. 
jetset74.F:      VQ=1. 
jetset74.F:      IF(MOD(MSTJ(103),2).EQ.1) VQ=SQRT(1.-(2.*PMQ/ECM)**2) 
jetset74.F:      IF(MSTJ(102).LE.1) THEN 
jetset74.F:        VF=SIGN(1.,QF)-4.*QF*PARU(102) 
jetset74.F:        RQV=RQV-6.*QF*VF*SF1I 
jetset74.F:        RVA=RVA+3.*(VF**2+1.)*SF1W 
jetset74.F:        RTOT=RTOT+3.*(0.5*VQ*(3.-VQ**2)*(QF**2*POLL-2.*QF*VF*HF1I+ 
jetset74.F:     &  VF**2*HF1W)+VQ**3*HF1W) 
jetset74.F:  110 CONTINUE 
jetset74.F:      IF(MSTJ(102).GE.2) RSUM=RQQ+SFI*RQV+SFW*RVA 
jetset74.F:      PARJ(141)=RQQ 
jetset74.F:      PARJ(142)=RTOT 
jetset74.F:      PARJ(143)=RTOT*RQCD 
jetset74.F:      PARJ(144)=PARJ(143) 
jetset74.F:      PARJ(145)=PARJ(141)*86.8/ECM**2 
jetset74.F:      PARJ(146)=PARJ(142)*86.8/ECM**2 
jetset74.F:      PARJ(147)=PARJ(143)*86.8/ECM**2 
jetset74.F:      PARJ(148)=PARJ(147) 
jetset74.F:      PARJ(157)=RSUM*RQCD 
jetset74.F:      PARJ(158)=0. 
jetset74.F:      PARJ(159)=0. 
jetset74.F:      XTOT=PARJ(147) 
jetset74.F:      IF(MSTJ(107).LE.0) RETURN 
jetset74.F:      XKL=PARJ(135) 
jetset74.F:      XKU=MIN(PARJ(136),1.-(2.*PARJ(127)/ECM)**2) 
jetset74.F:      ALE=2.*LOG(ECM/ULMASS(11))-1. 
jetset74.F:      SIGV=ALE/3.+2.*LOG(ECM**2/(ULMASS(13)*ULMASS(15)))/3.-4./3.+ 
jetset74.F:     &1.526*LOG(ECM**2/0.932) 
jetset74.F:      IF(MSTJ(102).LE.1) THEN 
jetset74.F:        SIGV=1.5*ALE-0.5+PARU(1)**2/3.+2.*SIGV 
jetset74.F:        SIGS=ALE*(2.*LOG(XKL)-LOG(1.-XKL)-XKL) 
jetset74.F:        SIGH=ALE*(2.*LOG(XKU/XKL)-LOG((1.-XKU)/(1.-XKL))-(XKU-XKL)) 
jetset74.F:        SZM=1.-(PARJ(123)/ECM)**2 
jetset74.F:        SZW=PARJ(123)*PARJ(124)/ECM**2 
jetset74.F:        PARJ(161)=-RQQ/RSUM 
jetset74.F:        PARJ(162)=-(RQQ+RQV+RVA)/RSUM 
jetset74.F:        PARJ(163)=(RQV*(1.-0.5*SZM-SFI)+RVA*(1.5-SZM-SFW))/RSUM 
jetset74.F:        PARJ(164)=(RQV*SZW**2*(1.-2.*SFW)+RVA*(2.*SFI+SZW**2-4.+3.*SZM- 
jetset74.F:        SIGV=1.5*ALE-0.5+PARU(1)**2/3.+((2.*RQQ+SFI*RQV)/RSUM)*SIGV+ 
jetset74.F:     &  (SZW*SFW*RQV/RSUM)*PARU(1)*20./9. 
jetset74.F:        SIGS=ALE*(2.*LOG(XKL)+PARJ(161)*LOG(1.-XKL)+PARJ(162)*XKL+ 
jetset74.F:     &  PARJ(163)*LOG(((XKL-SZM)**2+SZW**2)/(SZM**2+SZW**2))+ 
jetset74.F:     &  PARJ(164)*(ATAN((XKL-SZM)/SZW)-ATAN(-SZM/SZW))) 
jetset74.F:        SIGH=ALE*(2.*LOG(XKU/XKL)+PARJ(161)*LOG((1.-XKU)/(1.-XKL))+ 
jetset74.F:     &  PARJ(162)*(XKU-XKL)+PARJ(163)*LOG(((XKU-SZM)**2+SZW**2)/ 
jetset74.F:     &  ((XKL-SZM)**2+SZW**2))+PARJ(164)*(ATAN((XKU-SZM)/SZW)- 
jetset74.F:      PARJ(160)=SIGH/(PARU(1)/PARU(101)+SIGV+SIGS+SIGH) 
jetset74.F:      PARJ(157)=RSUM*(1.+(PARU(101)/PARU(1))*(SIGV+SIGS+SIGH))*RQCD 
jetset74.F:      PARJ(144)=PARJ(157) 
jetset74.F:      PARJ(148)=PARJ(144)*86.8/ECM**2 
jetset74.F:      XTOT=PARJ(148) 
jetset74.F:      COMMON/LUDAT1/MSTU(200),PARU(200),MSTJ(200),PARJ(200) 
jetset74.F:      SAVE /LUDAT1/ 
jetset74.F:      FXK(XX)=2.*LOG(XX)+PARJ(161)*LOG(1.-XX)+PARJ(162)*XX+ 
jetset74.F:     &PARJ(163)*LOG((XX-SZM)**2+SZW**2)+PARJ(164)*ATAN((XX-SZM)/SZW) 
jetset74.F:      IF(PARJ(160).LT.RLU(0)) RETURN 
jetset74.F:      MK=1 
jetset74.F:      XKL=PARJ(135) 
jetset74.F:      XKU=MIN(PARJ(136),1.-(2.*PARJ(127)/ECM)**2) 
jetset74.F:      IF(MSTJ(102).LE.1) THEN 
jetset74.F:  100   XK=1./(1.+(1./XKL-1.)*((1./XKU-1.)/(1./XKL-1.))**RLU(0)) 
jetset74.F:        IF(1.+(1.-XK)**2.LT.2.*RLU(0)) GOTO 100 
jetset74.F:        SZM=1.-(PARJ(123)/ECM)**2 
jetset74.F:        SZW=PARJ(123)*PARJ(124)/ECM**2 
jetset74.F:        FXKD=1E-4*(FXKU-FXKL) 
jetset74.F:  110   NXK=NXK+1 
jetset74.F:        IF(NXK.LT.15.AND.FXKU-FXKL.GT.FXKD) GOTO 110 
jetset74.F:      PME=2.*(ULMASS(11)/ECM)**2 
jetset74.F:  120 CTHM=PME*(2./PME)**RLU(0) 
jetset74.F:      IF(1.-(XK**2*CTHM*(1.-0.5*CTHM)+2.*(1.-XK)*PME/MAX(PME, 
jetset74.F:     &CTHM*(1.-0.5*CTHM)))/(1.+(1.-XK)**2).LT.RLU(0)) GOTO 120 
jetset74.F:      CTHE=1.-CTHM 
jetset74.F:      SGN=1. 
jetset74.F:      IF(0.5*(2.-XK*(1.-CTHE))**2/((2.-XK)**2+(XK*CTHE)**2).GT. 
jetset74.F:     &RLU(0)) SGN=-1. 
jetset74.F:      ALPK=ASIN(SGN*STHE*(XK-SGN*(2.*SQRT(1.-XK)-2.+XK)*CTHE)/ 
jetset74.F:     &(2.-XK*(1.-SGN*CTHE))) 
jetset74.F:      COMMON/LUDAT1/MSTU(200),PARU(200),MSTJ(200),PARJ(200) 
jetset74.F:      SAVE /LUDAT1/,/LUDAT2/ 
jetset74.F:      IF(MSTJ(102).LE.1) THEN 
jetset74.F:        POLL=1.-PARJ(131)*PARJ(132) 
jetset74.F:        SFF=1./(16.*PARU(102)*(1.-PARU(102))) 
jetset74.F:        SFW=ECMC**4/((ECMC**2-PARJ(123)**2)**2+(PARJ(123)*PARJ(124))**2) 
jetset74.F:        SFI=SFW*(1.-(PARJ(123)/ECMC)**2) 
jetset74.F:        VE=4.*PARU(102)-1. 
jetset74.F:        HF1I=SFI*SFF*(VE*POLL+PARJ(132)-PARJ(131)) 
jetset74.F:        HF1W=SFW*SFF**2*((VE**2+1.)*POLL+2.*VE*(PARJ(132)-PARJ(131))) 
jetset74.F:        RFMAX=MAX(4./9.*POLL-4./3.*(1.-8.*PARU(102)/3.)*HF1I+ 
jetset74.F:     &  ((1.-8.*PARU(102)/3.)**2+1.)*HF1W,1./9.*POLL+2./3.* 
jetset74.F:     &  (-1.+4.*PARU(102)/3.)*HF1I+((-1.+4.*PARU(102)/3.)**2+1.)*HF1W) 
jetset74.F:  100 NTRY=NTRY+1 
jetset74.F:      IF(NTRY.GT.100) THEN 
jetset74.F:        CALL LUERRM(14,'(LUXKFL:) caught in an infinite loop') 
jetset74.F:      IF(KFL.LE.0) KFLC=1+INT(MSTJ(104)*RLU(0)) 
jetset74.F:      MSTJ(93)=1 
jetset74.F:      IF(ECM.LT.2.*PMQ+PARJ(127)) GOTO 100 
jetset74.F:      QF=KCHG(KFLC,1)/3. 
jetset74.F:      VQ=1. 
jetset74.F:      IF(MOD(MSTJ(103),2).EQ.1) VQ=SQRT(MAX(0.,1.-(2.*PMQ/ECMC)**2)) 
jetset74.F:      IF(MSTJ(102).LE.1) THEN 
jetset74.F:        VF=SIGN(1.,QF)-4.*QF*PARU(102) 
jetset74.F:        RF=QF**2*POLL-2.*QF*VF*HF1I+(VF**2+1.)*HF1W 
jetset74.F:        RFV=0.5*VQ*(3.-VQ**2)*(QF**2*POLL-2.*QF*VF*HF1I+VF**2*HF1W)+ 
jetset74.F:     &  VQ**3*HF1W 
jetset74.F:        IF(RFV.GT.0.) PARJ(171)=MIN(1.,VQ**3*HF1W/RFV) 
jetset74.F:      IF(KFL.LE.0.AND.RF.LT.RLU(0)*RFMAX) GOTO 100 
jetset74.F:      PARJ(158)=PARJ(158)+1. 
jetset74.F:      IF(ECMC.LT.2.*PMQ+PARJ(127).OR.RFV.LT.RLU(0)*RF) KFLC=0 
jetset74.F:      IF(MSTJ(107).LE.0.AND.KFLC.EQ.0) GOTO 100 
jetset74.F:      IF(KFLC.NE.0) PARJ(159)=PARJ(159)+1. 
jetset74.F:      PARJ(144)=PARJ(157)*PARJ(159)/PARJ(158) 
jetset74.F:      PARJ(148)=PARJ(144)*86.8/ECM**2 
jetset74.F:      COMMON/LUDAT1/MSTU(200),PARU(200),MSTJ(200),PARJ(200) 
jetset74.F:      SAVE /LUDAT1/ 
jetset74.F:      DATA ZHUT/3.0922, 6.2291, 7.4782, 7.8440, 8.2560/ 
jetset74.F:      IF(MSTJ(101).EQ.0.OR.MSTJ(101).EQ.5) THEN 
jetset74.F:      ELSEIF(MSTJ(109).EQ.0.OR.MSTJ(109).EQ.2) THEN 
jetset74.F:        IF(MSTJ(109).EQ.2) CF=1. 
jetset74.F:        IF(MSTJ(111).EQ.0) THEN 
jetset74.F:        ELSEIF(MSTU(111).EQ.0) THEN 
jetset74.F:          PARJ(169)=MIN(1.,PARJ(129)) 
jetset74.F:          Q2=PARJ(169)*ECM**2 
jetset74.F:          PARJ(168)=MIN(1.,MAX(PARJ(128),EXP(-12.*PARU(1)/ 
jetset74.F:     &    ((33.-2.*MSTU(112))*PARU(111))))) 
jetset74.F:          Q2R=PARJ(168)*ECM**2 
jetset74.F:          PARJ(169)=MIN(1.,MAX(PARJ(129),(2.*PARU(112)/ECM)**2)) 
jetset74.F:          Q2=PARJ(169)*ECM**2 
jetset74.F:          PARJ(168)=MIN(1.,MAX(PARJ(128),PARU(112)/ECM, 
jetset74.F:     &    (2.*PARU(112)/ECM)**2)) 
jetset74.F:          Q2R=PARJ(168)*ECM**2 
jetset74.F:        ALSPI=(3./4.)*CF*ULALPS(Q2R)/PARU(1) 
jetset74.F:        IF(IABS(MSTJ(101)).EQ.1) THEN 
jetset74.F:          RQCD=1.+ALSPI 
jetset74.F:        ELSEIF(MSTJ(109).EQ.0) THEN 
jetset74.F:          RQCD=1.+ALSPI+(1.986-0.115*MSTU(118))*ALSPI**2 
jetset74.F:          IF(MSTJ(111).EQ.1) RQCD=MAX(1.,RQCD+(33.-2.*MSTU(112))/12.* 
jetset74.F:     &    LOG(PARJ(168))*ALSPI**2) 
jetset74.F:          RQCD=1.+ALSPI-(3./32.+0.519*MSTU(118))*(4.*ALSPI/3.)**2 
jetset74.F:        ALSPI=(3./4.)*CF*ULALPS(Q2)/PARU(1) 
jetset74.F:        CUT=MAX(0.001,PARJ(125),(PARJ(126)/ECM)**2) 
jetset74.F:        IF(IABS(MSTJ(101)).LE.1.OR.(MSTJ(109).EQ.0.AND.MSTJ(111).EQ.0)) 
jetset74.F:        IF(MSTJ(110).EQ.2) CUT=MAX(0.01,MIN(0.05,CUT)) 
jetset74.F:  100   IF(MSTJ(101).EQ.0.OR.CUT.GE.0.25) THEN 
jetset74.F:          PARJ(152)=0. 
jetset74.F:          PARJ(152)=(2.*ALSPI/3.)*((3.-6.*CUT+2.*LOG(CUT))* 
jetset74.F:     &    LOG(CUT/(1.-2.*CUT))+(2.5+1.5*CUT-6.571)*(1.-3.*CUT)+ 
jetset74.F:     &    5.833*(1.-3.*CUT)**2-3.894*(1.-3.*CUT)**3+ 
jetset74.F:     &    1.342*(1.-3.*CUT)**4)/RQCD 
jetset74.F:          IF(MSTJ(109).EQ.2.AND.(MSTJ(101).EQ.2.OR.MSTJ(101).LE.-2)) 
jetset74.F:     &    PARJ(152)=0. 
jetset74.F:        IF(IABS(MSTJ(101)).LE.1.OR.MSTJ(101).EQ.3.OR.MSTJ(109).EQ.2.OR. 
jetset74.F:          PARJ(153)=0. 
jetset74.F:        ELSEIF(MSTJ(110).LE.1) THEN 
jetset74.F:          CT=LOG(1./CUT-2.) 
jetset74.F:          PARJ(153)=ALSPI**2*CT**2*(2.419+0.5989*CT+0.6782*CT**2- 
jetset74.F:     &    0.2661*CT**3+0.01159*CT**4)/RQCD 
jetset74.F:        ELSEIF(MSTJ(110).EQ.2) THEN 
jetset74.F:          DO 110 IY=1,5 
jetset74.F:          IF(ABS(CUT-0.01*IY).LT.0.0001) IZA=IY 
jetset74.F:  110     CONTINUE 
jetset74.F:            IZ=100.*CUT 
jetset74.F:            ZHURAT=ZHUT(IZ)+(100.*CUT-IZ)*(ZHUT(IZ+1)-ZHUT(IZ)) 
jetset74.F:          PARJ(153)=ALSPI*PARJ(152)*ZHURAT 
jetset74.F:        IF(MSTJ(111).EQ.1.AND.IABS(MSTJ(101)).GE.2.AND.MSTJ(101).NE.3. 
jetset74.F:     &  AND.CUT.LT.0.25) PARJ(153)=PARJ(153)+(33.-2.*MSTU(112))/12.* 
jetset74.F:     &  LOG(PARJ(169))*ALSPI*PARJ(152) 
jetset74.F:        IF(IABS(MSTJ(101)).LE.1.OR.CUT.GE.0.125) THEN 
jetset74.F:          PARJ(154)=0. 
jetset74.F:          CT=LOG(1./CUT-5.) 
jetset74.F:          IF(CUT.LE.0.018) THEN 
jetset74.F:            IF(MSTJ(109).EQ.2) XQQGG=(4./3.)**2*(3.035-2.091*CT+ 
jetset74.F:            XQQQQ=1.25*(-0.1080+0.01486*CT+0.009364*CT**2) 
jetset74.F:            IF(MSTJ(109).EQ.2) XQQQQ=8.*XQQQQ 
jetset74.F:            IF(MSTJ(109).EQ.2) XQQGG=(4./3.)**2*(-0.04079+0.1340*CT- 
jetset74.F:     &      0.1326*CT**2+0.04365*CT**3) 
jetset74.F:            XQQQQ=1.25*(0.003661-0.004888*CT-0.001081*CT**2+0.002093* 
jetset74.F:            IF(MSTJ(109).EQ.2) XQQQQ=8.*XQQQQ 
jetset74.F:          PARJ(154)=ALSPI**2*CT**2*(XQQGG+XQQQQ)/RQCD 
jetset74.F:          PARJ(155)=XQQQQ/(XQQGG+XQQQQ) 
jetset74.F:        IF(MSTJ(111).EQ.1.AND.PARJ(152)+PARJ(153).LT.0..AND. 
jetset74.F:     &  PARJ(169).LT.0.99) THEN 
jetset74.F:          PARJ(169)=MIN(1.,1.2*PARJ(169)) 
jetset74.F:          Q2=PARJ(169)*ECM**2 
jetset74.F:          ALSPI=(3./4.)*CF*ULALPS(Q2)/PARU(1) 
jetset74.F:          GOTO 100 
jetset74.F:        IF(PARJ(152)+PARJ(153)+PARJ(154).GE.1) THEN 
jetset74.F:          IF(MSTJ(110).EQ.2.AND.CUT.GT.0.0499.AND.MSTJ(111).EQ.1.AND. 
jetset74.F:     &    PARJ(169).LT.0.99) THEN 
jetset74.F:            PARJ(169)=MIN(1.,1.2*PARJ(169)) 
jetset74.F:            Q2=PARJ(169)*ECM**2 
jetset74.F:            ALSPI=(3./4.)*CF*ULALPS(Q2)/PARU(1) 
jetset74.F:            GOTO 100 
jetset74.F:          ELSEIF(MSTJ(110).EQ.2.AND.CUT.GT.0.0499) THEN 
jetset74.F:          CUT=0.26*(4.*CUT)**(PARJ(152)+PARJ(153)+PARJ(154))**(-1./3.) 
jetset74.F:          IF(MSTJ(110).EQ.2) CUT=MAX(0.01,MIN(0.05,CUT)) 
jetset74.F:          GOTO 100 
jetset74.F:        ALSPI=ULALPS(ECM**2)/PARU(1) 
jetset74.F:        CUT=MAX(0.001,PARJ(125),(PARJ(126)/ECM)**2,EXP(-3./ALSPI)) 
jetset74.F:        PARJ(152)=0. 
jetset74.F:        IF(CUT.LT.0.25) PARJ(152)=(ALSPI/3.)*((1.-2.*CUT)* 
jetset74.F:     &  LOG((1.-2.*CUT)/CUT)+0.5*(9.*CUT**2-1.)) 
jetset74.F:        PARJ(153)=0. 
jetset74.F:        PARJ(154)=0. 
jetset74.F:      PARJ(150)=CUT 
jetset74.F:      IF(MSTJ(101).EQ.0.OR.MSTJ(101).EQ.5) THEN 
jetset74.F:      ELSEIF(MSTJ(101).LE.0) THEN 
jetset74.F:        NJET=MIN(4,2-MSTJ(101)) 
jetset74.F:        IF(PARJ(152)+PARJ(153)+PARJ(154).GT.RNJ) NJET=3 
jetset74.F:        IF(PARJ(154).GT.RNJ) NJET=4 
jetset74.F:      SUBROUTINE LUX3JT(NJET,CUT,KFL,ECM,X1,X2) 
jetset74.F:      COMMON/LUDAT1/MSTU(200),PARU(200),MSTJ(200),PARJ(200) 
jetset74.F:      SAVE /LUDAT1/ 
jetset74.F:      DIMENSION ZHUP(5,12) 
jetset74.F:      DATA ((ZHUP(IC1,IC2),IC2=1,12),IC1=1,5)/ 
jetset74.F:     &    18.29,    89.56,    4.541,   -52.09,   -109.8,    24.90, 
jetset74.F:     &    11.63,    3.683,    17.50, 0.002440,   -1.362,  -0.3537, 
jetset74.F:     &    11.42,    6.299,   -22.55,   -8.915,    59.25,   -5.855, 
jetset74.F:     &   -32.85,   -1.054,   -16.90, 0.006489,  -0.8156,  0.01095, 
jetset74.F:     &    7.847,   -3.964,   -35.83,    1.178,    29.39,   0.2806, 
jetset74.F:     &    47.82,   -12.36,   -56.72,  0.04054,  -0.4365,   0.6062, 
jetset74.F:     &    5.441,   -56.89,   -50.27,    15.13,    114.3,   -18.19, 
jetset74.F:     &    97.05,   -1.890,   -139.9,  0.08153,  -0.4984,   0.9439, 
jetset74.F:     &   -17.65,    51.44,   -58.32,    70.95,   -255.7,   -78.99, 
jetset74.F:     &    476.9,    29.65,   -239.3,   0.4745,   -1.174,    6.081/ 
jetset74.F:      DILOG(X)=X+X**2/4.+X**3/9.+X**4/16.+X**5/25.+X**6/36.+X**7/49. 
jetset74.F:      MSTJ(120)=2 
jetset74.F:      MSTJ(121)=0 
jetset74.F:      IF(MSTJ(109).NE.1) THEN 
jetset74.F:        CUTD=LOG(1./CUT-2.) 
jetset74.F:        IF(MSTJ(109).EQ.0) THEN 
jetset74.F:          IF(MSTJ(110).EQ.2) WTMX=2.*(7.5+80.*CUT) 
jetset74.F:          CF=1. 
jetset74.F:          TR=12. 
jetset74.F:        ALS2PI=PARU(118)/PARU(2) 
jetset74.F:        IF(MSTJ(111).EQ.1) WTOPT=(33.-2.*MSTU(112))/6.*LOG(PARJ(169))* 
jetset74.F:        WTMAX=MAX(0.,1.+WTOPT+ALS2PI*WTMX) 
jetset74.F:  100   NJET=3 
jetset74.F:  110   Y13L=CUTL+CUTD*RLU(0) 
jetset74.F:        Y13=EXP(Y13L) 
jetset74.F:        Y12=1.-Y13-Y23 
jetset74.F:        IF(Y12.LE.CUT) GOTO 110 
jetset74.F:        IF(Y13**2+Y23**2+2.*Y12.LE.2.*RLU(0)) GOTO 110 
jetset74.F:        IF(MSTJ(101).EQ.2.AND.MSTJ(110).LE.1) THEN 
jetset74.F:          Y12L=LOG(Y12) 
jetset74.F:          Y13M=LOG(1.-Y13) 
jetset74.F:          Y23M=LOG(1.-Y23) 
jetset74.F:          Y12M=LOG(1.-Y12) 
jetset74.F:          IF(Y13.LE.0.5) Y13I=DILOG(Y13) 
jetset74.F:          IF(Y13.GE.0.5) Y13I=1.644934-Y13L*Y13M-DILOG(1.-Y13) 
jetset74.F:          IF(Y23.GE.0.5) Y23I=1.644934-Y23L*Y23M-DILOG(1.-Y23) 
jetset74.F:          IF(Y12.LE.0.5) Y12I=DILOG(Y12) 
jetset74.F:          IF(Y12.GE.0.5) Y12I=1.644934-Y12L*Y12M-DILOG(1.-Y12) 
jetset74.F:          WT1=(Y13**2+Y23**2+2.*Y12)/(Y13*Y23) 
jetset74.F:          WT2=CF*(-2.*(CUTL-Y12L)**2-3.*CUTL-1.+3.289868+ 
jetset74.F:     &    2.*(2.*CUTL-Y12L)*CUT/Y12)+ 
jetset74.F:     &    CN*((CUTL-Y12L)**2-(CUTL-Y13L)**2-(CUTL-Y23L)**2-11.*CUTL/6.+ 
jetset74.F:     &    67./18.+1.644934-(2.*CUTL-Y12L)*CUT/Y12+(2.*CUTL-Y13L)* 
jetset74.F:     &    CUT/Y13+(2.*CUTL-Y23L)*CUT/Y23)+ 
jetset74.F:     &    TR*(2.*CUTL/3.-10./9.)+ 
jetset74.F:     &    CF*(Y12/(Y12+Y13)+Y12/(Y12+Y23)+(Y12+Y23)/Y13+(Y12+Y13)/Y23+ 
jetset74.F:     &    Y13L*(4.*Y12**2+2.*Y12*Y13+4.*Y12*Y23+Y13*Y23)/(Y12+Y23)**2+ 
jetset74.F:     &    Y23L*(4.*Y12**2+2.*Y12*Y23+4.*Y12*Y13+Y13*Y23)/(Y12+Y13)**2)/ 
jetset74.F:     &    WT1+ 
jetset74.F:     &    CN*(Y13L*Y13/(Y12+Y23)+Y23L*Y23/(Y12+Y13))/WT1+ 
jetset74.F:     &    (CN-2.*CF)*((Y12**2+(Y12+Y13)**2)*(Y12L*Y23L-Y12L*Y12M-Y23L* 
jetset74.F:     &    Y23M+1.644934-Y12I-Y23I)/(Y13*Y23)+(Y12**2+(Y12+Y23)**2)* 
jetset74.F:     &    (Y12L*Y13L-Y12L*Y12M-Y13L*Y13M+1.644934-Y12I-Y13I)/ 
jetset74.F:     &    (Y13*Y23)+(Y13**2+Y23**2)/(Y13*Y23*(Y13+Y23))- 
jetset74.F:     &    2.*Y12L*Y12**2/(Y13+Y23)**2-4.*Y12L*Y12/(Y13+Y23))/WT1- 
jetset74.F:     &    CN*(Y13L*Y23L-Y13L*Y13M-Y23L*Y23M+1.644934-Y13I-Y23I) 
jetset74.F:          IF(1.+WTOPT+ALS2PI*WT2.LE.0.) MSTJ(121)=1 
jetset74.F:          IF(1.+WTOPT+ALS2PI*WT2.LE.WTMAX*RLU(0)) GOTO 110 
jetset74.F:          PARJ(156)=(WTOPT+ALS2PI*WT2)/(1.+WTOPT+ALS2PI*WT2) 
jetset74.F:        ELSEIF(MSTJ(101).EQ.2.AND.MSTJ(110).EQ.2) THEN 
jetset74.F:          ZX=(Y23-Y13)**2 
jetset74.F:          ZY=1.-Y12 
jetset74.F:          DO 120 IY=1,5 
jetset74.F:          IF(ABS(CUT-0.01*IY).LT.0.0001) IZA=IY 
jetset74.F:  120     CONTINUE 
jetset74.F:            WT2=ZHUP(IZ,1)+ZHUP(IZ,2)*ZX+ZHUP(IZ,3)*ZX**2+(ZHUP(IZ,4)+ 
jetset74.F:     &      (ZHUP(IZ,8)+ZHUP(IZ,9)*ZX)*ZY**3+ZHUP(IZ,10)/(ZX-ZY**2)+ 
jetset74.F:     &      ZHUP(IZ,11)/(1.-ZY)+ZHUP(IZ,12)/ZY 
jetset74.F:            IZ=100.*CUT 
jetset74.F:            WTL=ZHUP(IZ,1)+ZHUP(IZ,2)*ZX+ZHUP(IZ,3)*ZX**2+(ZHUP(IZ,4)+ 
jetset74.F:     &      (ZHUP(IZ,8)+ZHUP(IZ,9)*ZX)*ZY**3+ZHUP(IZ,10)/(ZX-ZY**2)+ 
jetset74.F:     &      ZHUP(IZ,11)/(1.-ZY)+ZHUP(IZ,12)/ZY 
jetset74.F:            IZ=IZ+1 
jetset74.F:            WTU=ZHUP(IZ,1)+ZHUP(IZ,2)*ZX+ZHUP(IZ,3)*ZX**2+(ZHUP(IZ,4)+ 
jetset74.F:     &      (ZHUP(IZ,8)+ZHUP(IZ,9)*ZX)*ZY**3+ZHUP(IZ,10)/(ZX-ZY**2)+ 
jetset74.F:     &      ZHUP(IZ,11)/(1.-ZY)+ZHUP(IZ,12)/ZY 
jetset74.F:            WT2=WTL+(WTU-WTL)*(100.*CUT+1.-IZ) 
jetset74.F:          IF(1.+WTOPT+2.*ALS2PI*WT2.LE.0.) MSTJ(121)=1 
jetset74.F:          IF(1.+WTOPT+2.*ALS2PI*WT2.LE.WTMAX*RLU(0)) GOTO 110 
jetset74.F:          PARJ(156)=(WTOPT+2.*ALS2PI*WT2)/(1.+WTOPT+2.*ALS2PI*WT2) 
jetset74.F:        X1=1.-Y23 
jetset74.F:        X2=1.-Y13 
jetset74.F:        X3=1.-Y12 
jetset74.F:        IF(4.*Y23*Y13*Y12/X3**2.LE.QME) NJET=2 
jetset74.F:        IF(MOD(MSTJ(103),4).GE.2.AND.IABS(MSTJ(101)).LE.1.AND.QME*X3+ 
jetset74.F:     &  0.5*QME**2+(0.5*QME+0.25*QME**2)*((1.-X2)/(1.-X1)+ 
jetset74.F:     &  (1.-X1)/(1.-X2)).GT.(X1**2+X2**2)*RLU(0)) NJET=2 
jetset74.F:        IF(MSTJ(101).EQ.-1.AND.NJET.EQ.2) GOTO 100 
jetset74.F:  130   NJET=3 
jetset74.F:  140   X3=SQRT(4.*CUT**2+RLU(0)*((1.-CUT)**2-4.*CUT**2)) 
jetset74.F:        IF(LOG((X3-CUT)/CUT).LE.RLU(0)*LOG((1.-2.*CUT)/CUT)) GOTO 140 
jetset74.F:        X1=1.-0.5*(X3+YD) 
jetset74.F:        X2=1.-0.5*(X3-YD) 
jetset74.F:        IF(4.*(1.-X1)*(1.-X2)*(1.-X3)/X3**2.LE.QME) NJET=2 
jetset74.F:        IF(MSTJ(102).GE.2) THEN 
jetset74.F:          IF(X3**2-2.*(1.+X3)*(1.-X1)*(1.-X2)*PARJ(171).LT. 
jetset74.F:        IF(MSTJ(101).EQ.-1.AND.NJET.EQ.2) GOTO 130 
jetset74.F:      SUBROUTINE LUX4JT(NJET,CUT,KFL,ECM,KFLN,X1,X2,X4,X12,X14) 
jetset74.F:      COMMON/LUDAT1/MSTU(200),PARU(200),MSTJ(200),PARJ(200) 
jetset74.F:      SAVE /LUDAT1/ 
jetset74.F:      CT=LOG(1./CUT-5.) 
jetset74.F:      IF(MSTJ(109).EQ.0) THEN 
jetset74.F:        CF=1. 
jetset74.F:        TR=15. 
jetset74.F:  100 NJET=4 
jetset74.F:      IT=1 
jetset74.F:      IF(PARJ(155).GT.RLU(0)) IT=2 
jetset74.F:      IF(MSTJ(101).LE.-3) IT=-MSTJ(101)-2 
jetset74.F:      IF(IT.EQ.1) WTMX=0.7/CUT**2 
jetset74.F:      IF(IT.EQ.1.AND.MSTJ(109).EQ.2) WTMX=0.6/CUT**2 
jetset74.F:      IF(IT.EQ.2) WTMX=0.1125*CF*TR/CUT**2 
jetset74.F:      ID=1 
jetset74.F:  110 Y134=3.*CUT+(1.-6.*CUT)*RLU(0) 
jetset74.F:      Y234=3.*CUT+(1.-6.*CUT)*RLU(0) 
jetset74.F:      IF(IT.EQ.1) Y34=(1.-5.*CUT)*EXP(-CT*RLU(0)) 
jetset74.F:      IF(IT.EQ.2) Y34=CUT+(1.-6.*CUT)*RLU(0) 
jetset74.F:      IF(Y34.LE.Y134+Y234-1..OR.Y34.GE.Y134*Y234) GOTO 110 
jetset74.F:      CP=COS(PARU(1)*RLU(0)) 
jetset74.F:      Y14=(Y134-Y34)*VT 
jetset74.F:      Y13=Y134-Y14-Y34 
jetset74.F:      VB=Y34*(1.-Y134-Y234+Y34)/((Y134-Y34)*(Y234-Y34)) 
jetset74.F:      Y24=0.5*(Y234-Y34)*(1.-4.*SQRT(MAX(0.,VT*(1.-VT)*VB*(1.-VB)))* 
jetset74.F:     &CP-(1.-2.*VT)*(1.-2.*VB)) 
jetset74.F:      Y12=1.-Y134-Y23-Y24 
jetset74.F:      IF(MIN(Y12,Y13,Y14,Y23,Y24).LE.CUT) GOTO 110 
jetset74.F:      Y123=Y12+Y13+Y23 
jetset74.F:      Y124=Y12+Y14+Y24 
jetset74.F:  120 IC=IC+1 
jetset74.F:      IF(IT.EQ.1) THEN 
jetset74.F:        WTA(IC)=(Y12*Y34**2-Y13*Y24*Y34+Y14*Y23*Y34+3.*Y12*Y23*Y34+ 
jetset74.F:     &  3.*Y12*Y14*Y34+4.*Y12**2*Y34-Y13*Y23*Y24+2.*Y12*Y23*Y24- 
jetset74.F:     &  Y13*Y14*Y24-2.*Y12*Y13*Y24+2.*Y12**2*Y24+Y14*Y23**2+2.*Y12* 
jetset74.F:     &  Y23**2+Y14**2*Y23+4.*Y12*Y14*Y23+4.*Y12**2*Y23+2.*Y12*Y14**2+ 
jetset74.F:     &  2.*Y12*Y13*Y14+4.*Y12**2*Y14+2.*Y12**2*Y13+2.*Y12**3)/(2.*Y13* 
jetset74.F:     &  Y134*Y234*Y24)+(Y24*Y34+Y12*Y34+Y13*Y24-Y14*Y23+Y12*Y13)/(Y13* 
jetset74.F:     &  Y134**2)+2.*Y23*(1.-Y13)/(Y13*Y134*Y24)+Y34/(2.*Y13*Y24) 
jetset74.F:        WTB(IC)=(Y12*Y24*Y34+Y12*Y14*Y34-Y13*Y24**2+Y13*Y14*Y24+2.*Y12* 
jetset74.F:     &  Y14*Y24)/(Y13*Y134*Y23*Y14)+Y12*(1.+Y34)*Y124/(Y134*Y234*Y14* 
jetset74.F:     &  Y24)-(2.*Y13*Y24+Y14**2+Y13*Y23+2.*Y12*Y13)/(Y13*Y134*Y14)+ 
jetset74.F:     &  Y12*Y123*Y124/(2.*Y13*Y14*Y23*Y24) 
jetset74.F:        WTC(IC)=-(5.*Y12*Y34**2+2.*Y12*Y24*Y34+2.*Y12*Y23*Y34+2.*Y12* 
jetset74.F:     &  Y14*Y34+2.*Y12*Y13*Y34+4.*Y12**2*Y34-Y13*Y24**2+Y14*Y23*Y24+ 
jetset74.F:     &  Y13*Y23*Y24+Y13*Y14*Y24-Y12*Y14*Y24-Y13**2*Y24-3.*Y12*Y13*Y24- 
jetset74.F:     &  Y14*Y23**2-Y14**2*Y23+Y13*Y14*Y23-3.*Y12*Y14*Y23-Y12*Y13*Y23)/ 
jetset74.F:     &  (4.*Y134*Y234*Y34**2)+(3.*Y12*Y34**2-3.*Y13*Y24*Y34+3.*Y12*Y24* 
jetset74.F:     &  Y34+3.*Y14*Y23*Y34-Y13*Y24**2-Y12*Y23*Y34+6.*Y12*Y14*Y34+2.*Y12* 
jetset74.F:     &  Y13*Y34-2.*Y12**2*Y34+Y14*Y23*Y24-3.*Y13*Y23*Y24-2.*Y13*Y14* 
jetset74.F:     &  Y24+4.*Y12*Y14*Y24+2.*Y12*Y13*Y24+3.*Y14*Y23**2+2.*Y14**2*Y23+ 
jetset74.F:     &  2.*Y14**2*Y12+2.*Y12**2*Y14+6.*Y12*Y14*Y23-2.*Y12*Y13**2- 
jetset74.F:     &  2.*Y12**2*Y13)/(4.*Y13*Y134*Y234*Y34) 
jetset74.F:        WTC(IC)=WTC(IC)+(2.*Y12*Y34**2-2.*Y13*Y24*Y34+Y12*Y24*Y34+ 
jetset74.F:     &  4.*Y13*Y23*Y34+4.*Y12*Y14*Y34+2.*Y12*Y13*Y34+2.*Y12**2*Y34- 
jetset74.F:     &  Y13*Y24**2+3.*Y14*Y23*Y24+4.*Y13*Y23*Y24-2.*Y13*Y14*Y24+ 
jetset74.F:     &  4.*Y12*Y14*Y24+2.*Y12*Y13*Y24+2.*Y14*Y23**2+4.*Y13*Y23**2+ 
jetset74.F:     &  2.*Y13*Y14*Y23+2.*Y12*Y14*Y23+4.*Y12*Y13*Y23+2.*Y12*Y14**2+4.* 
jetset74.F:     &  Y12**2*Y13+4.*Y12*Y13*Y14+2.*Y12**2*Y14)/(4.*Y13*Y134*Y24*Y34)- 
jetset74.F:     &  (Y12*Y34**2-2.*Y14*Y24*Y34-2.*Y13*Y24*Y34-Y14*Y23*Y34+Y13*Y23* 
jetset74.F:     &  Y34+Y12*Y14*Y34+2.*Y12*Y13*Y34-2.*Y14**2*Y24-4.*Y13*Y14*Y24- 
jetset74.F:     &  4.*Y13**2*Y24-Y14**2*Y23-Y13**2*Y23+Y12*Y13*Y14-Y12*Y13**2)/ 
jetset74.F:     &  (2.*Y13*Y34*Y134**2)+(Y12*Y34**2-4.*Y14*Y24*Y34-2.*Y13*Y24*Y34- 
jetset74.F:     &  2.*Y14*Y23*Y34-4.*Y13*Y23*Y34-4.*Y12*Y14*Y34-4.*Y12*Y13*Y34- 
jetset74.F:     &  2.*Y13*Y14*Y24+2.*Y13**2*Y24+2.*Y14**2*Y23-2.*Y13*Y14*Y23- 
jetset74.F:     &  Y12*Y14**2-6.*Y12*Y13*Y14-Y12*Y13**2)/(4.*Y34**2*Y134**2) 
jetset74.F:        WTD(IC)=(Y13*Y23*Y34+Y12*Y23*Y34-Y12**2*Y34+Y13*Y23*Y24+2.*Y12* 
jetset74.F:     &  Y23*Y24-Y14*Y23**2+Y12*Y13*Y24+Y12*Y14*Y23+Y12*Y13*Y14)/(Y13**2* 
jetset74.F:     &  Y123**2)-(Y12*Y34**2-Y13*Y24*Y34+Y12*Y24*Y34-Y14*Y23*Y34-Y12* 
jetset74.F:     &  Y23*Y34-Y13*Y24**2+Y14*Y23*Y24-Y13*Y23*Y24-Y13**2*Y24+Y14* 
jetset74.F:     &  Y23**2)/(Y13**2*Y123*Y134)+(Y13*Y14*Y12+Y34*Y14*Y12-Y34**2*Y12+ 
jetset74.F:     &  Y13*Y14*Y24+2.*Y34*Y14*Y24-Y23*Y14**2+Y34*Y13*Y24+Y34*Y23*Y14+ 
jetset74.F:     &  Y34*Y13*Y23)/(Y13**2*Y134**2)-(Y34*Y12**2-Y13*Y24*Y12+Y34*Y24* 
jetset74.F:     &  Y12-Y23*Y14*Y12-Y34*Y14*Y12-Y13*Y24**2+Y23*Y14*Y24-Y13*Y14*Y24- 
jetset74.F:     &  Y13**2*Y24+Y23*Y14**2)/(Y13**2*Y134*Y123) 
jetset74.F:        WTE(IC)=(Y12*Y34*(Y23-Y24+Y14+Y13)+Y13*Y24**2-Y14*Y23*Y24+Y13* 
jetset74.F:     &  Y23*Y24+Y13*Y14*Y24+Y13**2*Y24-Y14*Y23*(Y14+Y23+Y13))/(Y13*Y23* 
jetset74.F:     &  Y123*Y134)-Y12*(Y12*Y34-Y23*Y24-Y13*Y24-Y14*Y23-Y14*Y13)/(Y13* 
jetset74.F:     &  Y23*Y123**2)-(Y14+Y13)*(Y24+Y23)*Y34/(Y13*Y23*Y134*Y234)+ 
jetset74.F:     &  (Y12*Y34*(Y14-Y24+Y23+Y13)+Y13*Y24**2-Y23*Y14*Y24+Y13*Y14*Y24+ 
jetset74.F:     &  Y13*Y23*Y24+Y13**2*Y24-Y23*Y14*(Y14+Y23+Y13))/(Y13*Y14*Y134* 
jetset74.F:     &  Y123)-Y34*(Y34*Y12-Y14*Y24-Y13*Y24-Y23*Y14-Y23*Y13)/(Y13*Y14* 
jetset74.F:     &  Y134**2)-(Y23+Y13)*(Y24+Y14)*Y12/(Y13*Y14*Y123*Y124) 
jetset74.F:        WTTOT=WTTOT+CF*(TR*WTD(IC)+(CF-0.5*CN)*WTE(IC))/16. 
jetset74.F:  130 IF(IC.EQ.1.OR.IC.EQ.3.OR.ID.EQ.2.OR.ID.EQ.3) THEN 
jetset74.F:        YSAV=Y13 
jetset74.F:        Y13=Y14 
jetset74.F:        Y14=YSAV 
jetset74.F:        YSAV=Y123 
jetset74.F:        Y123=Y124 
jetset74.F:        Y124=YSAV 
jetset74.F:        YSAV=Y13 
jetset74.F:        Y13=Y23 
jetset74.F:        YSAV=Y14 
jetset74.F:        Y14=Y24 
jetset74.F:        YSAV=Y134 
jetset74.F:        Y134=Y234 
jetset74.F:      IF(IC.LE.3) GOTO 120 
jetset74.F:      IF(ID.EQ.1.AND.WTTOT.LT.RLU(0)*WTMX) GOTO 110 
jetset74.F:      IF(IT.EQ.1) THEN 
jetset74.F:        IF(MSTJ(109).EQ.0.AND.ID.EQ.1) THEN 
jetset74.F:          PARJ(156)=Y34*(2.*(WTA(1)+WTA(2)+WTA(3)+WTA(4))+4.*(WTC(1)+ 
jetset74.F:          IF(WTA(2)+WTA(4)+2.*(WTC(2)+WTC(4)).GT.RLU(0)*(WTA(1)+WTA(2)+ 
jetset74.F:     &    WTA(3)+WTA(4)+2.*(WTC(1)+WTC(2)+WTC(3)+WTC(4)))) ID=2 
jetset74.F:          IF(ID.EQ.2) GOTO 130 
jetset74.F:        ELSEIF(MSTJ(109).EQ.2.AND.ID.EQ.1) THEN 
jetset74.F:          PARJ(156)=Y34*(WTA(1)+WTA(2)+WTA(3)+WTA(4))/(8.*WTTOT) 
jetset74.F:        IF(WTA(2)+WTA(4).GT.RLU(0)*(WTA(1)+WTA(2)+WTA(3)+WTA(4))) ID=2 
jetset74.F:        IF(ID.EQ.2) GOTO 130 
jetset74.F:        MSTJ(120)=3 
jetset74.F:        IF(MSTJ(109).EQ.0.AND.0.5*Y34*(WTC(1)+WTC(2)+WTC(3)+WTC(4)).GT. 
jetset74.F:     &  RLU(0)*WTTOT) MSTJ(120)=4 
jetset74.F:        KFLN=21 
jetset74.F:        IF(Y12.LE.CUT+QME) NJET=2 
jetset74.F:        IF(NJET.EQ.2) GOTO 150 
jetset74.F:        Q12=0.5*(1.-SQRT(1.-QME/Y12)) 
jetset74.F:        X1=1.-(1.-Q12)*Y234-Q12*Y134 
jetset74.F:        X4=1.-(1.-Q12)*Y134-Q12*Y234 
jetset74.F:        X2=1.-Y124 
jetset74.F:        X12=(1.-Q12)*Y13+Q12*Y23 
jetset74.F:        X14=Y12-0.5*QME 
jetset74.F:        IF(Y134*Y234/((1.-X1)*(1.-X4)).LE.RLU(0)) NJET=2 
jetset74.F:        IF(ID.EQ.1) THEN 
jetset74.F:          WTR=RLU(0)*(WTD(1)+WTD(2)+WTD(3)+WTD(4)) 
jetset74.F:          IF(ID.GE.2) GOTO 130 
jetset74.F:        MSTJ(120)=5 
jetset74.F:        PARJ(156)=CF*TR*(WTD(1)+WTD(2)+WTD(3)+WTD(4))/(16.*WTTOT) 
jetset74.F:  140   KFLN=1+INT(5.*RLU(0)) 
jetset74.F:        IF(KFLN.NE.KFL.AND.0.2*PARJ(156).LE.RLU(0)) GOTO 140 
jetset74.F:        IF(KFLN.EQ.KFL.AND.1.-0.8*PARJ(156).LE.RLU(0)) GOTO 140 
jetset74.F:        IF(KFLN.GT.MSTJ(104)) NJET=2 
jetset74.F:        IF(Y24.LE.CUT+QME.OR.Y13.LE.1.1*QMEN) NJET=2 
jetset74.F:        IF(NJET.EQ.2) GOTO 150 
jetset74.F:        Q24=0.5*(1.-SQRT(1.-QME/Y24)) 
jetset74.F:        Q13=0.5*(1.-SQRT(1.-QMEN/Y13)) 
jetset74.F:        X1=1.-(1.-Q24)*Y123-Q24*Y134 
jetset74.F:        X4=1.-(1.-Q24)*Y134-Q24*Y123 
jetset74.F:        X2=1.-(1.-Q13)*Y234-Q13*Y124 
jetset74.F:        X12=(1.-Q24)*((1.-Q13)*Y14+Q13*Y34)+Q24*((1.-Q13)*Y12+Q13*Y23) 
jetset74.F:        X14=Y24-0.5*QME 
jetset74.F:        X34=(1.-Q24)*((1.-Q13)*Y23+Q13*Y12)+Q24*((1.-Q13)*Y34+Q13*Y14) 
jetset74.F:        IF(PMQ**2+PMQN**2+MIN(X12,X34)*ECM**2.LE. 
jetset74.F:     &  (PARJ(127)+PMQ+PMQN)**2) NJET=2 
jetset74.F:        IF(Y123*Y134/((1.-X1)*(1.-X4)).LE.RLU(0)) NJET=2 
jetset74.F:  150 IF(MSTJ(101).LE.-2.AND.NJET.EQ.2) GOTO 100 
jetset74.F:      COMMON/LUDAT1/MSTU(200),PARU(200),MSTJ(200),PARJ(200) 
jetset74.F:      SAVE /LUJETS/,/LUDAT1/,/LUDAT2/ 
jetset74.F:      QF=KCHG(KFL,1)/3. 
jetset74.F:      POLL=1.-PARJ(131)*PARJ(132) 
jetset74.F:      POLD=PARJ(132)-PARJ(131) 
jetset74.F:      IF(MSTJ(102).LE.1.OR.MSTJ(109).EQ.1) THEN 
jetset74.F:        HF1=POLL 
jetset74.F:        HF3=PARJ(133)**2 
jetset74.F:        SFF=1./(16.*PARU(102)*(1.-PARU(102))) 
jetset74.F:        SFW=ECM**4/((ECM**2-PARJ(123)**2)**2+(PARJ(123)*PARJ(124))**2) 
jetset74.F:        SFI=SFW*(1.-(PARJ(123)/ECM)**2) 
jetset74.F:        AE=-1. 
jetset74.F:        VE=4.*PARU(102)-1. 
jetset74.F:        AF=SIGN(1.,QF) 
jetset74.F:        VF=AF-4.*QF*PARU(102) 
jetset74.F:        HF1=QF**2*POLL-2.*QF*VF*SFI*SFF*(VE*POLL-AE*POLD)+ 
jetset74.F:        HF3=PARJ(133)**2*(QF**2-2.*QF*VF*SFI*SFF*VE+(VF**2+AF**2)* 
jetset74.F:        HF4=-PARJ(133)**2*2.*QF*VF*SFW*(PARJ(123)*PARJ(124)/ECM**2)* 
jetset74.F:      IF(MSTJ(103).GE.4.AND.IABS(MSTJ(101)).LE.1.AND.MSTJ(102).LE.1.AND. 
jetset74.F:     &MSTJ(109).NE.1) QME=(2.*ULMASS(KFL)/ECM)**2 
jetset74.F:        SIGU=4.*SQRT(1.-QME) 
jetset74.F:        SIGL=2.*QME*SQRT(1.-QME) 
jetset74.F:          X1=2.*P(NC+1,4)/ECM 
jetset74.F:          ECMR=P(NC+1,4)+P(NC+4,4)+SQRT((P(NC+2,1)+P(NC+3,1))**2+ 
jetset74.F:          X1=2.*P(NC+1,4)/ECMR 
jetset74.F:        XQ=(1.-X1)/(1.-X2) 
jetset74.F:        CT12=(X1*X2-2.*X1-2.*X2+2.+QME)/SQRT((X1**2-QME)*(X2**2-QME)) 
jetset74.F:        ST12=SQRT(1.-CT12**2) 
jetset74.F:        IF(MSTJ(109).NE.1) THEN 
jetset74.F:          SIGU=2.*X1**2+X2**2*(1.+CT12**2)-QME*(3.+CT12**2-X1-X2)- 
jetset74.F:     &    QME*X1/XQ+0.5*QME*((X2**2-QME)*ST12**2-2.*X2)*XQ 
jetset74.F:          SIGL=(X2*ST12)**2-QME*(3.-CT12**2-2.5*(X1+X2)+X1*X2+QME)+ 
jetset74.F:     &    0.5*QME*(X1**2-X1-QME)/XQ+0.5*QME*((X2**2-QME)*CT12**2-X2)*XQ 
jetset74.F:          SIGT=0.5*(X2**2-QME-0.5*QME*(X2**2-QME)/XQ)*ST12**2 
jetset74.F:          SIGI=((1.-0.5*QME*XQ)*(X2**2-QME)*ST12*CT12+QME*(1.-X1-X2+ 
jetset74.F:     &    0.5*X1*X2+0.5*QME)*ST12/CT12)/SQ2 
jetset74.F:          SIGA=X2**2*ST12/SQ2 
jetset74.F:          SIGP=2.*(X1**2-X2**2*CT12) 
jetset74.F:          X3=2.-X1-X2 
jetset74.F:          XT=X2*ST12 
jetset74.F:          CT13=SQRT(MAX(0.,1.-(XT/X3)**2)) 
jetset74.F:          SIGU=(1.-PARJ(171))*(X3**2-0.5*XT**2)+ 
jetset74.F:     &    PARJ(171)*(X3**2-0.5*XT**2-4.*(1.-X1)*(1.-X2)**2/X1) 
jetset74.F:          SIGL=(1.-PARJ(171))*0.5*XT**2+ 
jetset74.F:     &    PARJ(171)*0.5*(1.-X1)**2*XT**2 
jetset74.F:          SIGT=(1.-PARJ(171))*0.25*XT**2+ 
jetset74.F:     &    PARJ(171)*0.25*XT**2*(1.-2.*X1) 
jetset74.F:          SIGI=-(0.5/SQ2)*((1.-PARJ(171))*XT*X3*CT13+ 
jetset74.F:     &    PARJ(171)*XT*((1.-2.*X1)*X3*CT13-X1*(X1-X2))) 
jetset74.F:          SIGA=(0.25/SQ2)*XT*(2.*(1.-X1)-X1*X3) 
jetset74.F:          SIGP=X3**2-2.*(1.-X1)*(1.-X2)/X1 
jetset74.F:      HF1A=ABS(HF1) 
jetset74.F:      SIGMAX=(2.*HF1A+HF3A+HF4A)*ABS(SIGU)+2.*(HF1A+HF3A+HF4A)* 
jetset74.F:     &ABS(SIGL)+2.*(HF1A+2.*HF3A+2.*HF4A)*ABS(SIGT)+2.*SQ2* 
jetset74.F:     &(HF1A+2.*HF3A+2.*HF4A)*ABS(SIGI)+4.*SQ2*HF2A*ABS(SIGA)+ 
jetset74.F:  100 CHI=PARU(2)*RLU(0) 
jetset74.F:      CTHE=2.*RLU(0)-1. 
jetset74.F:      C2PHI=COS(2.*(PHI-PARJ(134))) 
jetset74.F:      S2PHI=SIN(2.*(PHI-PARJ(134))) 
jetset74.F:      SIG=((1.+CTHE**2)*HF1+STHE**2*(C2PHI*HF3-S2PHI*HF4))*SIGU+ 
jetset74.F:     &2.*(STHE**2*HF1-STHE**2*(C2PHI*HF3-S2PHI*HF4))*SIGL+ 
jetset74.F:     &2.*(STHE**2*C2CHI*HF1+((1.+CTHE**2)*C2CHI*C2PHI-2.*CTHE*S2CHI* 
jetset74.F:     &S2PHI)*HF3-((1.+CTHE**2)*C2CHI*S2PHI+2.*CTHE*S2CHI*C2PHI)*HF4)* 
jetset74.F:     &SIGT-2.*SQ2*(2.*STHE*CTHE*CCHI*HF1-2.*STHE*(CTHE*CCHI*C2PHI- 
jetset74.F:      IF(SIG.LT.SIGMAX*RLU(0)) GOTO 100 
jetset74.F:      COMMON/LUDAT1/MSTU(200),PARU(200),MSTJ(200),PARJ(200) 
jetset74.F:      SAVE /LUJETS/,/LUDAT1/,/LUDAT2/ 
jetset74.F:      IF(MSTU(12).GE.1) CALL lulist(0) 
jetset74.F:        CALL LUERRM(16,'(LUONIA:) called with unknown flavour code') 
jetset74.F:        IF(MSTU(21).GE.1) RETURN 
jetset74.F:      IF(ECM.LT.PARJ(127)+2.02*PARF(101)) THEN 
jetset74.F:        CALL LUERRM(16,'(LUONIA:) called with too small CM energy') 
jetset74.F:        IF(MSTU(21).GE.1) RETURN 
jetset74.F:      IF(MSTJ(115).GE.2) THEN 
jetset74.F:        CALL LU1ENT(NC-1,11,0.5*ECM,0.,0.) 
jetset74.F:        K(NC-1,1)=21 
jetset74.F:        CALL LU1ENT(NC,-11,0.5*ECM,PARU(1),0.) 
jetset74.F:        K(NC,1)=21 
jetset74.F:      IF(MSTJ(115).GE.3.AND.KFLC.GE.5) THEN 
jetset74.F:        NC=NC+1 
jetset74.F:        KF=110*KFLC+3 
jetset74.F:        MSTU10=MSTU(10) 
jetset74.F:        MSTU(10)=1 
jetset74.F:        CALL LU1ENT(NC,KF,ECM,0.,0.) 
jetset74.F:        K(NC,1)=21 
jetset74.F:        K(NC,3)=1 
jetset74.F:        MSTU(10)=MSTU10 
jetset74.F:C...Choose x1 and x2 according to matrix element. 
jetset74.F:  100 X1=RLU(0) 
jetset74.F:      X3=2.-X1-X2 
jetset74.F:      IF(X3.GE.1..OR.((1.-X1)/(X2*X3))**2+((1.-X2)/(X1*X3))**2+ 
jetset74.F:     &((1.-X3)/(X1*X2))**2.LE.2.*RLU(0)) GOTO 100 
jetset74.F:      NTRY=NTRY+1 
jetset74.F:      IF(MSTJ(101).LE.4) CALL LU3ENT(NC+1,21,21,21,ECM,X1,X3) 
jetset74.F:      IF(MSTJ(101).GE.5) CALL LU3ENT(-(NC+1),21,21,21,ECM,X1,X3) 
jetset74.F:      MSTU(111)=MSTJ(108) 
jetset74.F:      IF(MSTJ(108).EQ.2.AND.(MSTJ(101).EQ.0.OR.MSTJ(101).EQ.1)) 
jetset74.F:     &MSTU(111)=1 
jetset74.F:      PARU(112)=PARJ(121) 
jetset74.F:      IF(MSTU(111).EQ.2) PARU(112)=PARJ(122) 
jetset74.F:      IF(KFLC.NE.0) QF=KCHG(KFLC,1)/3. 
jetset74.F:      RGAM=7.2*QF**2*PARU(101)/ULALPS(ECM**2) 
jetset74.F:      IF(RLU(0).GT.RGAM/(1.+RGAM)) THEN 
jetset74.F:        IF(1.-MAX(X1,X2,X3).LE.MAX((PARJ(126)/ECM)**2,PARJ(125))) 
jetset74.F:        IF(NJET.EQ.2.AND.MSTJ(101).LE.4) CALL LU2ENT(NC+1,21,21,ECM) 
jetset74.F:        IF(NJET.EQ.2.AND.MSTJ(101).GE.5) CALL LU2ENT(-(NC+1),21,21,ECM) 
jetset74.F:        MK=1 
jetset74.F:        ECMC=SQRT(1.-X1)*ECM 
jetset74.F:        IF(ECMC.LT.2.*PARJ(127)) GOTO 100 
jetset74.F:        K(NC+1,1)=1 
jetset74.F:        K(NC+1,2)=22 
jetset74.F:        K(NC+1,4)=0 
jetset74.F:        K(NC+1,5)=0 
jetset74.F:        IF(MSTJ(101).GE.5) K(NC+2,4)=MSTU(5)*(NC+3) 
jetset74.F:        IF(MSTJ(101).GE.5) K(NC+2,5)=MSTU(5)*(NC+3) 
jetset74.F:        IF(MSTJ(101).GE.5) K(NC+3,4)=MSTU(5)*(NC+2) 
jetset74.F:        IF(MSTJ(101).GE.5) K(NC+3,5)=MSTU(5)*(NC+2) 
jetset74.F:        IF(ECMC.LT.4.*PARJ(127)) THEN 
jetset74.F:          MSTU10=MSTU(10) 
jetset74.F:          MSTU(10)=1 
jetset74.F:          CALL LU1ENT(NC+2,83,0.5*(X2+X3)*ECM,PARU(1),0.) 
jetset74.F:          MSTU(10)=MSTU10 
jetset74.F:      DO 110 IP=NC+1,N 
jetset74.F:      K(IP,3)=K(IP,3)+(MSTJ(115)/2)+(KFLC/5)*(MSTJ(115)/3)*(NC-1) 
jetset74.F:  110 CONTINUE 
jetset74.F:      IF(MSTJ(106).EQ.1) THEN 
jetset74.F:        HF1=1.-PARJ(131)*PARJ(132) 
jetset74.F:        HF3=PARJ(133)**2 
jetset74.F:        CT13=(X1*X3-2.*X1-2.*X3+2.)/(X1*X3) 
jetset74.F:        ST13=SQRT(1.-CT13**2) 
jetset74.F:        SIGL=0.5*X3**2*((1.-X2)**2+(1.-X3)**2)*ST13**2 
jetset74.F:        SIGU=(X1*(1.-X1))**2+(X2*(1.-X2))**2+(X3*(1.-X3))**2-SIGL 
jetset74.F:        SIGI=(SIGL*CT13/ST13+0.5*X1*X3*(1.-X2)**2*ST13)/SQ2 
jetset74.F:        SIGMAX=(2.*HF1+HF3)*ABS(SIGU)+2.*(HF1+HF3)*ABS(SIGL)+2.*(HF1+ 
jetset74.F:     &  2.*HF3)*ABS(SIGT)+2.*SQ2*(HF1+2.*HF3)*ABS(SIGI) 
jetset74.F:  120   CHI=PARU(2)*RLU(0) 
jetset74.F:        CTHE=2.*RLU(0)-1. 
jetset74.F:        C2PHI=COS(2.*(PHI-PARJ(134))) 
jetset74.F:        S2PHI=SIN(2.*(PHI-PARJ(134))) 
jetset74.F:        SIG=((1.+CTHE**2)*HF1+STHE**2*C2PHI*HF3)*SIGU+2.*(STHE**2*HF1- 
jetset74.F:     &  STHE**2*C2PHI*HF3)*SIGL+2.*(STHE**2*C2CHI*HF1+((1.+CTHE**2)* 
jetset74.F:     &  CCHI*HF1-2.*STHE*(CTHE*CCHI*C2PHI-SCHI*S2PHI)*HF3)*SIGI 
jetset74.F:        IF(SIG.LT.SIGMAX*RLU(0)) GOTO 120 
jetset74.F:        CALL LUDBRB(NC+1,N,0.,CHI,0D0,0D0,0D0) 
jetset74.F:        CALL LUDBRB(NC+1,N,THE,PHI,0D0,0D0,0D0) 
jetset74.F:      IF(MSTJ(101).GE.5.AND.NJET.GE.2) THEN 
jetset74.F:        CALL LUSHOW(NC+MK+1,-NJET,ECMC) 
jetset74.F:        MSTJ14=MSTJ(14) 
jetset74.F:        IF(MSTJ(105).EQ.-1) MSTJ(14)=-1 
jetset74.F:        IF(MSTJ(105).GE.0) MSTU(28)=0 
jetset74.F:        MSTJ(14)=MSTJ14 
jetset74.F:        IF(MSTJ(105).GE.0.AND.MSTU(28).NE.0) GOTO 100 
jetset74.F:      IF(MSTJ(105).EQ.1) CALL LUEXEC 
jetset74.F:      MSTU(161)=110*KFLC+3 
jetset74.F:      MSTU(162)=0 
jetset74.F:      COMMON/LUDAT1/MSTU(200),PARU(200),MSTJ(200),PARJ(200) 
jetset74.F:      SAVE /LUJETS/,/LUDAT1/,/LUDAT2/ 
jetset74.F:      IF(MCONV.EQ.1) THEN 
jetset74.F:        DO 140 I=1,NHEP 
jetset74.F:        IF(K(I,1).GE.1.AND.K(I,1).LE.10) ISTHEP(I)=1 
jetset74.F:        IF(K(I,1).GE.11.AND.K(I,1).LE.20) ISTHEP(I)=2 
jetset74.F:        IF(K(I,1).GE.21.AND.K(I,1).LE.30) ISTHEP(I)=3 
jetset74.F:        IF(K(I,1).GE.31.AND.K(I,1).LE.100) ISTHEP(I)=K(I,1) 
jetset74.F:        JMOHEP(1,I)=K(I,3) 
jetset74.F:        IF(K(I,1).NE.3.AND.K(I,1).NE.13.AND.K(I,1).NE.14) THEN 
jetset74.F:          JDAHEP(1,I)=K(I,4) 
jetset74.F:          JDAHEP(1,I)=0 
jetset74.F:        DO 100 J=1,5 
jetset74.F:  100   CONTINUE 
jetset74.F:        DO 110 J=1,4 
jetset74.F:  110   CONTINUE 
jetset74.F:        IF(I.EQ.1) THEN 
jetset74.F:          INEW=1 
jetset74.F:          IF(K(I,1).EQ.21.AND.K(I-1,1).NE.21) INEW=I 
jetset74.F:        IF(I.GE.INEW+2.AND.K(I,1).EQ.21.AND.K(I,3).EQ.0) THEN 
jetset74.F:          IMO1=I-2 
jetset74.F:          IF(I.GE.INEW+3.AND.K(I-1,1).EQ.21.AND.K(I-1,3).EQ.0) 
jetset74.F:     &    IMO1=IMO1-1 
jetset74.F:          JMOHEP(1,I)=IMO1 
jetset74.F:          JMOHEP(2,I)=IMO1+1 
jetset74.F:        ELSEIF(K(I,2).GE.91.AND.K(I,2).LE.93) THEN 
jetset74.F:          I1=K(I,3)-1 
jetset74.F:  120     I1=I1+1 
jetset74.F:          IF(I1.GE.I) CALL LUERRM(8, 
jetset74.F:          IF(I1.LT.I.AND.K(I1,1).NE.1.AND.K(I1,1).NE.11) GOTO 120 
jetset74.F:          KC=LUCOMP(K(I1,2)) 
jetset74.F:          IF(I1.LT.I.AND.KC.EQ.0) GOTO 120 
jetset74.F:          IF(I1.LT.I.AND.KCHG(KC,2).EQ.0) GOTO 120 
jetset74.F:          JMOHEP(2,I)=I1 
jetset74.F:          IF(JMOHEP(2,I).EQ.JMOHEP(1,I)) JMOHEP(2,I)= 
jetset74.F:     &    MOD(K(I+1,4)/MSTU(5),MSTU(5)) 
jetset74.F:        IF(K(I,2).EQ.94.AND.MSTU(16).NE.2) THEN 
jetset74.F:          DO 130 I1=JDAHEP(1,I),JDAHEP(2,I) 
jetset74.F:          I2=MOD(K(I1,4)/MSTU(5),MSTU(5)) 
jetset74.F:          JDAHEP(1,I2)=I 
jetset74.F:  130     CONTINUE 
jetset74.F:        IF(K(I,2).GE.91.AND.K(I,2).LE.94) GOTO 140 
jetset74.F:        I1=JMOHEP(1,I) 
jetset74.F:        IF(I1.LE.0.OR.I1.GT.NHEP) GOTO 140 
jetset74.F:        IF(K(I1,1).NE.13.AND.K(I1,1).NE.14) GOTO 140 
jetset74.F:        IF(JDAHEP(1,I1).EQ.0) THEN 
jetset74.F:          JDAHEP(1,I1)=I 
jetset74.F:          JDAHEP(2,I1)=I 
jetset74.F:  140   CONTINUE 
jetset74.F:        DO 150 I=1,NHEP 
jetset74.F:        IF(K(I,1).NE.13.AND.K(I,1).NE.14) GOTO 150 
jetset74.F:        IF(JDAHEP(2,I).EQ.0) JDAHEP(2,I)=JDAHEP(1,I) 
jetset74.F:  150   CONTINUE 
jetset74.F:        DO 180 I=1,N 
jetset74.F:        K(I,1)=0 
jetset74.F:        IF(ISTHEP(I).EQ.1) K(I,1)=1 
jetset74.F:        IF(ISTHEP(I).EQ.2) K(I,1)=11 
jetset74.F:        IF(ISTHEP(I).EQ.3) K(I,1)=21 
jetset74.F:        K(I,3)=JMOHEP(1,I) 
jetset74.F:        K(I,4)=JDAHEP(1,I) 
jetset74.F:        DO 160 J=1,5 
jetset74.F:  160   CONTINUE 
jetset74.F:        DO 170 J=1,4 
jetset74.F:  170   CONTINUE 
jetset74.F:          I1=JDAHEP(1,I) 
jetset74.F:          IF(I1.GT.0.AND.I1.LE.NHEP) V(I,5)=(VHEP(4,I1)-VHEP(4,I))* 
jetset74.F:        IF(ISTHEP(I).EQ.1) THEN 
jetset74.F:          IF(KC.NE.0) KQ=KCHG(KC,2)*ISIGN(1,K(I,2)) 
jetset74.F:          IF(KQ.NE.0) NKQ=NKQ+1 
jetset74.F:            K(I,1)=2 
jetset74.F:            IF(K(I+1,2).EQ.21) K(I,1)=2 
jetset74.F:  180   CONTINUE 
jetset74.F:        IF(NKQ.EQ.1.OR.KQSUM.NE.0) CALL LUERRM(8, 
jetset74.F:      COMMON/LUDAT1/MSTU(200),PARU(200),MSTJ(200),PARJ(200) 
jetset74.F:      SAVE /LUJETS/,/LUDAT1/ 
jetset74.F:      IF(MTEST.GE.1) CALL LUTABU(20) 
jetset74.F:      DO 180 IEV=1,600 
jetset74.F:      MSTJ(1)=1 
jetset74.F:      MSTJ(11)=1 
jetset74.F:      PARJ(17)=0.1 
jetset74.F:      PARJ(22)=1.5 
jetset74.F:      PARJ(43)=1. 
jetset74.F:      MSTJ(101)=5 
jetset74.F:      MSTJ(104)=5 
jetset74.F:      MSTJ(105)=0 
jetset74.F:      MSTJ(107)=1 
jetset74.F:      IF(IEV.EQ.301.OR.IEV.EQ.351.OR.IEV.EQ.401) MSTJ(116)=3 
jetset74.F:        ITY=(IEV+9)/10 
jetset74.F:        MSTJ(3)=-1 
jetset74.F:        IF(ITY.EQ.3.OR.ITY.EQ.4) MSTJ(11)=2 
jetset74.F:        IF(ITY.EQ.1) CALL LU1ENT(1,1,15.,0.,0.) 
jetset74.F:        IF(ITY.EQ.2) CALL LU1ENT(1,3101,15.,0.,0.) 
jetset74.F:        IF(ITY.EQ.3) CALL LU1ENT(1,-2203,15.,0.,0.) 
jetset74.F:        IF(ITY.EQ.4) CALL LU1ENT(1,-4,30.,0.,0.) 
jetset74.F:        IF(ITY.EQ.5) CALL LU1ENT(1,21,15.,0.,0.) 
jetset74.F:      ELSEIF(IEV.LE.130) THEN 
jetset74.F:        ITY=(IEV-41)/10 
jetset74.F:        IF(ITY.EQ.1) CALL LU2ENT(1,1,-1,40.) 
jetset74.F:        IF(ITY.EQ.2) CALL LU2ENT(1,4,-4,30.) 
jetset74.F:        IF(ITY.EQ.3) CALL LU2ENT(1,2,2103,100.) 
jetset74.F:        IF(ITY.EQ.4) CALL LU2ENT(1,21,21,40.) 
jetset74.F:        IF(ITY.EQ.5) CALL LU3ENT(1,2101,21,-3203,30.,0.6,0.8) 
jetset74.F:        IF(ITY.EQ.6) CALL LU3ENT(1,5,21,-5,40.,0.9,0.8) 
jetset74.F:        IF(ITY.EQ.7) CALL LU3ENT(1,21,21,21,60.,0.7,0.5) 
jetset74.F:        IF(ITY.EQ.8) CALL LU4ENT(1,2,21,21,-2,40.,0.4,0.64,0.6,0.12,0.2) 
jetset74.F:        ITY=1+(IEV-131)/16 
jetset74.F:        MSTJ(2)=1+MOD(IEV-131,4) 
jetset74.F:        MSTJ(3)=1+MOD((IEV-131)/4,4) 
jetset74.F:        IF(ITY.EQ.1) CALL LU2ENT(1,4,-5,40.) 
jetset74.F:        IF(ITY.EQ.2) CALL LU3ENT(1,3,21,-3,40.,0.9,0.4) 
jetset74.F:        IF(ITY.EQ.3) CALL LU4ENT(1,2,21,21,-2,40.,0.4,0.64,0.6,0.12,0.2) 
jetset74.F:        IF(ITY.GE.4) CALL LU4ENT(1,2,-3,3,-2,40.,0.4,0.64,0.6,0.12,0.2) 
jetset74.F:  100   DO 110 J=1,5 
jetset74.F:  110   CONTINUE 
jetset74.F:        DO 130 I=1,NJET 
jetset74.F:        KFL=21 
jetset74.F:        IF(I.EQ.1) KFL=INT(1.+4.*RLU(0)) 
jetset74.F:        IF(I.EQ.NJET) KFL=-INT(1.+4.*RLU(0)) 
jetset74.F:        THETA=ACOS(2.*RLU(0)-1.) 
jetset74.F:        IF(I.LT.NJET) CALL LU1ENT(-I,KFL,EJET,THETA,PHI) 
jetset74.F:        IF(I.EQ.NJET) CALL LU1ENT(I,KFL,EJET,THETA,PHI) 
jetset74.F:        IF(I.EQ.1.OR.I.EQ.NJET) MSTJ(93)=1 
jetset74.F:        IF(I.EQ.1.OR.I.EQ.NJET) PSUM(5)=PSUM(5)+ULMASS(KFL) 
jetset74.F:        DO 120 J=1,4 
jetset74.F:  120   CONTINUE 
jetset74.F:  130   CONTINUE 
jetset74.F:        IF(PSUM(4)**2-PSUM(1)**2-PSUM(2)**2-PSUM(3)**2.LT. 
jetset74.F:     &  (PSUM(5)+PARJ(32))**2) GOTO 100 
jetset74.F:        MSTJ(101)=2 
jetset74.F:        MSTJ(42)=1+MOD(IEV,2) 
jetset74.F:        MSTJ(43)=1+MOD(IEV/2,4) 
jetset74.F:        MSTJ(104)=6 
jetset74.F:        ITY=IEV-501 
jetset74.F:        KFLS=2*(ITY/20)+1 
jetset74.F:        CALL LU1ENT(1,100*KFLB+10*KFLC+KFLS,0.,0.,0.) 
jetset74.F:        ITY=IEV-561 
jetset74.F:        KFLC=MAX(1,KFLB-1) 
jetset74.F:        CALL LU1ENT(1,1000*KFLA+100*KFLB+10*KFLC+KFLS,0.,0.,0.) 
jetset74.F:      DO 140 J=1,4 
jetset74.F:  140 CONTINUE 
jetset74.F:      DO 150 J=1,4 
jetset74.F:  150 CONTINUE 
jetset74.F:        IF((PFIN(1)-PINI(1))**2+(PFIN(2)-PINI(2))**2.GE.4.) MERR=MERR+1 
jetset74.F:        IF(EPZREM.LT.0..OR.EPZREM.GT.2.*PARJ(31)) MERR=MERR+1 
jetset74.F:        IF(ABS(PFIN(6)-PINI(6)).GT.2.1) MERR=MERR+1 
jetset74.F:        DO 160 J=1,4 
jetset74.F:        IF(ABS(PFIN(J)-PINI(J)).GT.0001*PINI(4)) MERR=MERR+1 
jetset74.F:  160   CONTINUE 
jetset74.F:        IF(ABS(PFIN(6)-PINI(6)).GT.0.1) MERR=MERR+1 
jetset74.F:      IF(MERR.NE.0) WRITE(MSTU(11),5000) (PINI(J),J=1,4),PINI(6), 
jetset74.F:     &(PFIN(J),J=1,4),PFIN(6) 
jetset74.F:      DO 170 I=1,N 
jetset74.F:      IF(K(I,1).GT.20) GOTO 170 
jetset74.F:        WRITE(MSTU(11),5100) I 
jetset74.F:        MERR=MERR+1 
jetset74.F:      PD=P(I,4)**2-P(I,1)**2-P(I,2)**2-P(I,3)**2-P(I,5)**2 
jetset74.F:      IF(ABS(PD).GT.MAX(0.1,0.001*P(I,4)**2).OR.P(I,4).LT.0.) THEN 
jetset74.F:        WRITE(MSTU(11),5200) I 
jetset74.F:        MERR=MERR+1 
jetset74.F:  170 CONTINUE 
jetset74.F:      IF(MTEST.GE.1) CALL LUTABU(21) 
jetset74.F:      ELSEIF(MTEST.GE.1.AND.MOD(IEV-5,100).EQ.0) THEN 
jetset74.F:        CALL lulist(1) 
jetset74.F:      IF(MERR.NE.0) NERR=NERR+1 
jetset74.F:      IF(NERR.GE.10) THEN 
jetset74.F:        WRITE(MSTU(11),5300) IEV 
jetset74.F:  180 CONTINUE 
jetset74.F:      IF(MTEST.GE.1) CALL LUTABU(22) 
jetset74.F:      IF(NERR.EQ.0) WRITE(MSTU(11),5400) 
jetset74.F:      IF(NERR.GT.0) WRITE(MSTU(11),5500) NERR 
jetset74.F:      PARJ(17)=0. 
jetset74.F:      PARJ(22)=1. 
jetset74.F:      MSTJ(105)=1 
jetset74.F:      MSTJ(107)=0 
jetset74.F:     &'in following event'/' sum of',9X,'px',11X,'py',11X,'pz',11X, 
jetset74.F:     &'E',8X,'charge'/' before',2X,4(1X,F12.5),1X,F8.2/' after',3X, 
jetset74.F:     &4(1X,F12.5),1X,F8.2) 
jetset74.F: 5100 FORMAT(/5X,'Entry no.',I4,' in following event not known code') 
jetset74.F:      COMMON/LUDAT1/MSTU(200),PARU(200),MSTJ(200),PARJ(200) 
jetset74.F:      COMMON/LUDATR/MRLU(6),RRLU(100) 
jetset74.F:      SAVE /LUDAT1/,/LUDAT2/,/LUDAT3/,/LUDAT4/,/LUDATR/ 
jetset74.F:C...LUDAT1, containing status codes and most parameters. 
jetset74.F:     &    0,    0,    0, 4000,10000,  500, 2000,    0,    0,    2, 
jetset74.F:     1    6,    1,    1,    0,    1,    1,    0,    0,    0,    0, 
jetset74.F:     2    2,   10,    0,    0,    1,   10,    0,    0,    0,    0, 
jetset74.F:     4    2,    2,    1,    4,    2,    1,    1,    0,    0,    0, 
jetset74.F:     5   25,   24,    0,    1,    0,    0,    0,    0,    0,    0, 
jetset74.F:     &    1,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
jetset74.F:     1    1,    5,    3,    5,    0,    0,    0,    0,    0,    0, 
jetset74.F:     8    7,  403, 1994,   07,   15,  700,    0,    0,    0,    0, 
jetset74.F:     & 3.1415927, 6.2831854, 0.1973, 5.068, 0.3894, 2.568,   4*0., 
jetset74.F:     1 0.001, 0.09, 0.01,  0.,   0.,   0.,   0.,   0.,   0.,   0., 
jetset74.F:     4  2.0,  1.0, 0.25,  2.5, 0.05,   0.,   0., 0.0001, 0.,   0., 
jetset74.F:     5  2.5,  1.5,  7.0,  1.0,  0.5,  2.0,  3.2,   0.,   0.,   0., 
jetset74.F:     1 0.20, 0.25,  1.0,  4.0,  10.,   0.,   0.,   0.,   0.,   0., 
jetset74.F:     2 -0.693, -1.0, 0.387, 1.0, -0.08, -1.0, 1.0, 1.0, 1.0,   0., 
jetset74.F:     3  1.0, -1.0,  1.0, -1.0,  1.0,   0.,   0.,   0.,   0.,   0., 
jetset74.F:     4  5.0,  1.0,  1.0,   0.,  1.0,  1.0,   0.,   0.,   0.,   0., 
jetset74.F:     5  1.0,   0.,   0.,   0., 1000., 1.0,  1.0,  1.0,  1.0,   0., 
jetset74.F:     6  1.0,  1.0,  1.0,  1.0,  1.0,   0.,   0.,   0.,   0.,   0., 
jetset74.F:     7  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,   0.,   0.,   0., 
jetset74.F:     8  1.0,  1.0,  1.0,  0.0,  0.0,  1.0,  1.0,  0.0,  0.0,   0., 
jetset74.F:     9   0.,   0.,   0.,   0.,  1.0,   0.,   0.,   0.,   0.,   0./ 
jetset74.F:     &    1,    3,    0,    0,    0,    0,    0,    0,    0,    0, 
jetset74.F:     1    4,    2,    0,    1,    0,    0,    0,    0,    0,    0, 
jetset74.F:     2    2,    1,    1,    2,    1,    2,    2,    0,    0,    0, 
jetset74.F:     &    5,    2,    7,    5,    1,    1,    0,    2,    0,    2, 
jetset74.F:     1    0,    0,    0,    0,    1,    1,    0,    0,    0,    0, 
jetset74.F:     & 0.10, 0.30, 0.40, 0.05, 0.50, 0.50, 0.50,   0.,   0.,   0., 
jetset74.F:     1 0.50, 0.60, 0.75,   0.,   0.,   0.,   0.,  1.0,  1.0,   0., 
jetset74.F:     2 0.36,  1.0, 0.01,  2.0,  1.0,  0.4,   0.,   0.,   0.,   0., 
jetset74.F:     3 0.10,  1.0,  0.8,  1.5,   0.,  2.0,  0.2,  2.5,  0.6,   0., 
jetset74.F:     4  0.3, 0.58,  0.5,  0.9,  0.5,  1.0,  1.0,  1.0,   0.,   0., 
jetset74.F:     5 0.77,0.77,0.77,-0.05,-0.005,-0.00001,-0.00001,-0.00001,1.0,0., 
jetset74.F:     7  10., 1000., 100., 1000., 0.,  0.7,  10.,   0.,   0.,   0., 
jetset74.F:     8 0.29,  1.0,  1.0,   0.,  10.,  10.,   0.,   0.,   0.,   0., 
jetset74.F:     9 0.02,  1.0,  0.2,   0.,   0.,   0.,   0.,   0.,   0.,   0., 
jetset74.F:     1   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0., 
jetset74.F:     2  1.0, 0.25,91.187,2.489, 0.01, 2.0,  1.0, 0.25,0.002,   0., 
jetset74.F:     3   0.,   0.,   0.,   0., 0.01, 0.99,   0.,   0.,  0.2,   0., 
jetset74.F:      DATA (KCHG(I,1),I=   1, 500)/-1,2,-1,2,-1,2,-1,2,2*0,-3,0,-3,0, 
jetset74.F:     &-3,0,-3,6*0,3,9*0,3,2*0,3,0,-1,44*0,2,-1,2,-1,2,3,11*0,3,0,2*3,0, 
jetset74.F:     &3,0,3,0,3,10*0,3,0,2*3,0,3,0,3,0,3,10*0,3,0,2*3,0,3,0,3,0,3,10*0, 
jetset74.F:     &3,0,2*3,0,3,0,3,0,3,10*0,3,0,2*3,0,3,0,3,0,3,10*0,3,0,2*3,0,3,0, 
jetset74.F:     &-3,0,3,-3,0,-3,114*0/ 
jetset74.F:      DATA (KCHG(I,2),I=   1, 500)/8*1,12*0,2,16*0,2,1,50*0,-1,410*0/ 
jetset74.F:      DATA (KCHG(I,3),I=   1, 500)/8*1,2*0,8*1,5*0,1,9*0,1,2*0,1,0,2*1, 
jetset74.F:     &41*0,1,0,7*1,10*0,10*1,10*0,10*1,10*0,10*1,10*0,10*1,10*0,10*1, 
jetset74.F:     &10*0,10*1,70*0,3*1,22*0,1,5*0,1,0,2*1,6*0,1,0,2*1,6*0,2*1,0,5*1, 
jetset74.F:     &0,6*1,4*0,6*1,4*0,16*1,4*0,6*1,114*0/ 
jetset74.F:      DATA (PMAS(I,1),I=   1, 500)/0.0099,0.0056,0.199,1.35,5.,160., 
jetset74.F:     &2*250.,2*0.,0.00051,0.,0.1057,0.,1.777,0.,250.,5*0.,91.187,80.25, 
jetset74.F:     &80.,6*0.,500.,900.,500.,3*300.,350.,200.,5000.,60*0.,0.1396, 
jetset74.F:     &0.4977,0.4936,1.8693,1.8645,1.9688,5.2787,5.2786,5.47972,6.594, 
jetset74.F:     &0.135,0.5475,0.9578,2.9788,9.4,320.,2*500.,2*0.,0.7669,0.8961, 
jetset74.F:     &0.8916,2.0101,2.0071,2.11,2*5.325,5.5068,6.602,0.7683,0.782, 
jetset74.F:     &1.0194,3.0969,9.4603,320.,2*500.,2*0.,1.231,2*1.29,2*2.424,2.536, !pingrg 2.232=>1.231 
jetset74.F:     &2*5.73,5.97,7.3,1.232,1.17,1.4,3.46,9.875,320.,2*500.,2*0.,0.983, 
jetset74.F:     &2*1.429,2*2.272,2.5,2*5.68,5.92,7.25,0.9827,1.,1.4,3.4151,9.8598, 
jetset74.F:     &320.,2*500.,2*0.,1.26,2*1.402,2*2.372,2.56,2*5.78,6.02,7.3,1.26, 
jetset74.F:     &1.282,1.42,3.5106,9.8919,320.,2*500.,2*0.,1.318,1.432,1.425, 
jetset74.F:     &2*2.46,2.61,2*5.83,6.07,7.35,1.318,1.275,1.525,3.5562,9.9132, 
jetset74.F:     &320.,2*500.,2*0.,2*0.4977,8*0.,3.686,3*0.,10.0233,70*0.,1.1156, 
jetset74.F:     &5*0.,2.2849,0.,2.473,2.466,6*0.,5.641,0.,2*5.84,6*0.,0.9396, 
jetset74.F:     &0.9383,0.,1.1974,1.1926,1.1894,1.3213,1.3149,0.,2.4525,2.4529, 
jetset74.F:     &2.4527,2*2.55,2.73,4*0.,3*5.8,2*5.96,6.12,4*0.,1.234,1.233,1.232, 
jetset74.F:     &1.231,1.3872,1.3837,1.3828,1.535,1.5318,1.6724,3*2.5,2*2.63,2.8, 
jetset74.F:     &4*0.,3*5.81,2*5.97,6.13,114*0./ 
jetset74.F:      DATA (PMAS(I,2),I=   1, 500)/22*0.,2.489,2.066,88*0.,0.0002, 
jetset74.F:     &0.001,6*0.,0.149,0.0505,0.0498,7*0.,0.151,0.00843,0.0044,7*0., 
jetset74.F:     &0.142,2*0.09,2*0.02,0.,4*0.05,0.155,0.36,0.08,2*0.01,5*0.,0.057,  !pingrg 0.155=>0.142
jetset74.F:     &2*0.287,7*0.05,0.057,0.,0.25,0.014,6*0.,0.4,2*0.174,7*0.05,0.4, 
jetset74.F:     &0.024,0.06,0.0009,6*0.,0.11,0.109,0.098,2*0.019,5*0.02,0.11, 
jetset74.F:     &0.185,0.076,0.002,146*0.,4*0.12,0.0394,0.036,0.0358,0.0099, 
jetset74.F:     &0.0091,131*0./ 
jetset74.F:      DATA (PMAS(I,3),I=   1, 500)/22*0.,2*20.,88*0.,0.002,0.005,6*0., 
jetset74.F:     &0.4,2*0.2,7*0.,0.4,0.1,0.015,7*0.,0.25,0.005,0.01,2*0.08,0., 
jetset74.F:     &4*0.1,0.25,0.2,0.001,2*0.02,5*0.,0.05,2*0.4,6*0.1,2*0.05,0.,0.35, 
jetset74.F:     &0.05,6*0.,3*0.3,2*0.1,0.03,4*0.1,0.3,0.05,0.02,0.001,6*0.,0.25, 
jetset74.F:     &4*0.12,5*0.05,0.25,0.17,0.2,0.01,146*0.,4*0.14,0.04,2*0.035, 
jetset74.F:     &2*0.05,131*0./ 
jetset74.F:      DATA (PMAS(I,4),I=   1, 500)/12*0.,658650.,0.,0.0914,68*0.,0.1, 
jetset74.F:     &0.387,15*0.,7804.,0.,3709.,0.32,0.1259,0.135,3*0.387,0.15,110*0., 
jetset74.F:     &15500.,26.75,83*0.,78.88,5*0.,0.057,0.,0.025,0.09,6*0.,0.387,0., 
jetset74.F:     &2*0.387,9*0.,44.3,0.,23.95,49.1,86.9,6*0.,0.13,9*0.,0.387,13*0., 
jetset74.F:     &24.60001,130*0./ 
jetset74.F:     &  0.5, 0.25,  0.5, 0.25,   1.,  0.5,   0.,   0.,   0.,   0., 
jetset74.F:     1  0.5,   0.,  0.5,   0.,   1.,   1.,   0.,   0.,   0.,   0., 
jetset74.F:     2  0.5,   0.,  0.5,   0.,   1.,   1.,   0.,   0.,   0.,   0., 
jetset74.F:     3  0.5,   0.,  0.5,   0.,   1.,   1.,   0.,   0.,   0.,   0., 
jetset74.F:     4  0.5,   0.,  0.5,   0.,   1.,   1.,   0.,   0.,   0.,   0., 
jetset74.F:     5  0.5,   0.,  0.5,   0.,   1.,   1.,   0.,   0.,   0.,   0., 
jetset74.F:     6 0.75,  0.5,   0., 0.1667, 0.0833, 0.1667, 0., 0., 0.,   0., 
jetset74.F:     7   0.,   0.,   1., 0.3333, 0.6667, 0.3333, 0., 0., 0.,   0., 
jetset74.F:     & 0.325, 0.325, 0.5, 1.6,  5.0,   0.,   0.,   0.,   0.,   0., 
jetset74.F:     1   0., 0.11, 0.16, 0.048, 0.50, 0.45, 0.55, 0.60,  0.,   0., 
jetset74.F:     2  0.2,  0.1,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0., 
jetset74.F:     3  1870*0./ 
jetset74.F:      DATA ((VCKM(I,J),J=1,4),I=1,4)/ 
jetset74.F:     1  0.95113,  0.04884,  0.00003,  0.00000, 
jetset74.F:     2  0.04884,  0.94940,  0.00176,  0.00000, 
jetset74.F:     3  0.00003,  0.00176,  0.99821,  0.00000, 
jetset74.F:     4  0.00000,  0.00000,  0.00000,  1.00000/ 
jetset74.F:      DATA (MDCY(I,1),I=   1, 500)/5*0,3*1,6*0,1,0,1,5*0,3*1,6*0,1,0,1, 
jetset74.F:     &2*0,4*1,42*0,7*1,12*0,1,0,15*1,2*0,18*1,2*0,18*1,2*0,18*1,2*0, 
jetset74.F:     &18*1,2*0,18*1,3*0,1,8*0,1,3*0,1,70*0,1,5*0,1,0,2*1,6*0,1,0,2*1, 
jetset74.F:     &9*0,5*1,0,6*1,4*0,6*1,4*0,16*1,4*0,6*1,114*0/ 
jetset74.F:      DATA (MDCY(I,2),I=   1, 500)/1,9,17,25,33,41,50,60,2*0,70,74,76, 
jetset74.F:     &81,83,124,126,132,2*0,135,144,156,172,192,6*0,209,0,231,254,274, 
jetset74.F:     &292,301,304,305,42*0,314,315,319,328,331,336,338,11*0,358,359, 
jetset74.F:     &361,367,430,491,524,560,596,635,666,668,675,681,682,683,684,685, 
jetset74.F:     &2*0,686,688,691,694,697,699,700,701,702,703,704,708,713,721,724, 
jetset74.F:     &733,734,735,2*0,736,737,742,747,749,751,753,755,757,759,761,762, 
jetset74.F:     &765,769,770,771,772,773,2*0,774,775,777,779,781,783,785,787,789, 
jetset74.F:     &791,793,794,799,804,806,808,809,810,2*0,811,813,815,817,819,821, 
jetset74.F:     &823,825,827,829,831,833,846,850,852,854,855,856,2*0,857,863,873, 
jetset74.F:     &884,892,900,904,912,920,924,928,936,945,951,953,955,956,957,2*0, 
jetset74.F:     &958,966,8*0,968,3*0,979,70*0,993,5*0,997,0,1073,1074,6*0,1075,0, 
jetset74.F:     &1092,1093,9*0,1094,1096,1097,1100,1101,0,1103,1104,1105,1106, 
jetset74.F:     &1107,1108,4*0,1109,1110,1111,1112,1113,1114,4*0,1115,1116,1119, 
jetset74.F:     &1122,1123,1126,1129,1132,1134,1136,1140,1141,1142,1143,1145,1147, 
jetset74.F:     &4*0,1148,1149,1150,1151,1152,1153,114*0/ 
jetset74.F:      DATA (MDCY(I,3),I=   1, 500)/5*8,9,2*10,2*0,4,2,5,2,41,2,6,3,2*0, 
jetset74.F:     &9,12,16,20,17,6*0,22,0,23,20,18,9,3,1,9,42*0,1,4,9,3,5,2,20,11*0, 
jetset74.F:     &1,2,6,63,61,33,2*36,39,31,2,7,6,5*1,2*0,2,3*3,2,5*1,4,5,8,3,9, 
jetset74.F:     &3*1,2*0,1,2*5,7*2,1,3,4,5*1,2*0,1,9*2,1,2*5,2*2,3*1,2*0,11*2,13, 
jetset74.F:     &4,2*2,3*1,2*0,6,10,11,2*8,4,2*8,2*4,8,9,6,2*2,3*1,2*0,8,2,8*0,11, 
jetset74.F:     &3*0,14,70*0,4,5*0,76,0,2*1,6*0,17,0,2*1,9*0,2,1,3,1,2,0,6*1,4*0, 
jetset74.F:     &6*1,4*0,1,2*3,1,3*3,2*2,4,3*1,2*2,1,4*0,6*1,114*0/ 
jetset74.F:      DATA (MDME(I,1),I=   1,2000)/6*1,-1,7*1,-1,7*1,-1,7*1,-1,7*1,-1, 
jetset74.F:     &7*1,-1,1,-1,8*1,2*-1,8*1,2*-1,61*1,-1,2*1,-1,6*1,2*-1,7*1,2*-1, 
jetset74.F:     &3*1,-1,6*1,2*-1,6*1,2*-1,3*1,-1,3*1,-1,3*1,5*-1,3*1,-1,6*1,2*-1, 
jetset74.F:     &3*1,-1,11*1,2*-1,6*1,8*-1,3*1,-1,3*1,-1,3*1,5*-1,3*1,4*-1,6*1, 
jetset74.F:     &2*-1,3*1,-1,5*1,-1,8*1,2*-1,3*1,-1,9*1,-1,3*1,-1,9*1,2*-1,2*1,-1, 
jetset74.F:     &16*1,-1,2*1,3*-1,1665*1/ 
jetset74.F:      DATA (MDME(I,2),I=   1,2000)/75*102,42,6*102,2*42,2*0,7*41,2*0, 
jetset74.F:     &24*41,6*102,45,29*102,8*32,8*0,16*32,4*0,8*32,4*0,32,4*0,8*32, 
jetset74.F:     &14*0,16*32,7*0,8*32,4*0,32,7*0,8*32,4*0,32,5*0,4*32,5*0,3*32,0, 
jetset74.F:     &6*32,3*0,12,2*42,2*11,9*42,2*45,31,2*45,2*33,31,2*45,20*46,7*0, 
jetset74.F:     &24*42,41*0,16*42,46*0,10*42,20*0,2*13,14*42,16*0,48,3*13,16*42, 
jetset74.F:     &16*0,48,3*13,16*42,19*0,48,3*13,2*42,0,2*11,28*42,0,2,4*0,2,8*0, 
jetset74.F:     &12,32,86,87,88,3,0,2*3,0,2*3,0,2*3,0,3,6*0,3,3*0,1,0,3,2*0,2*3, 
jetset74.F:     &3*0,1,4*0,12,3*0,4*32,2*4,86,87,88,33*0,12,32,86,87,88,31*0,12,0, 
jetset74.F:     &32,86,87,88,40*0,12,0,32,86,87,88,95*0,12,0,32,86,87,88,2*0,4*42, 
jetset74.F:     &6*0,12,11*0,4*32,2*4,9*0,14*42,52*0,10*13,2*84,3*42,8*0,48,3*13, 
jetset74.F:     &2*42,2*85,14*0,84,5*0,85,886*0/ 
jetset74.F:      DATA (BRAT(I)  ,I=   1, 439)/75*0.,1.,6*0.,0.179,0.178,0.116, 
jetset74.F:     &0.235,0.005,0.056,0.018,0.023,0.011,2*0.004,0.0067,0.014,2*0.002, 
jetset74.F:     &2*0.001,0.0022,0.054,0.002,0.016,0.005,0.011,0.0101,5*0.006, 
jetset74.F:     &0.002,2*0.001,5*0.002,6*0.,1.,29*0.,0.15394,0.11936,0.15394, 
jetset74.F:     &0.11926,0.15254,3*0.,0.03368,0.06664,0.03368,0.06664,0.03368, 
jetset74.F:     &0.06664,2*0.,0.3214,0.0165,2*0.,0.0165,0.3207,2*0.,0.00001, 
jetset74.F:     &0.00059,6*0.,3*0.1081,3*0.,0.0003,0.048,0.8705,4*0.,0.0002, 
jetset74.F:     &0.0603,0.,0.0199,0.0008,3*0.,0.143,0.111,0.143,0.111,0.143,0.085, 
jetset74.F:     &2*0.,0.03,0.058,0.03,0.058,0.03,0.058,8*0.,0.25,0.01,2*0.,0.01, 
jetset74.F:     &0.25,4*0.,0.24,5*0.,3*0.08,6*0.,0.01,0.08,0.82,5*0.,0.09,11*0., 
jetset74.F:     &0.01,0.08,0.82,5*0.,0.09,9*0.,1.,6*0.,0.01,0.98,0.01,1.,4*0.215, 
jetset74.F:     &2*0.,2*0.07,0.,1.,2*0.08,0.76,0.08,2*0.105,0.04,0.5,0.08,0.14, 
jetset74.F:     &0.01,0.015,0.005,1.,3*0.,1.,4*0.,1.,0.25,0.01,2*0.,0.01,0.25, 
jetset74.F:     &4*0.,0.24,5*0.,3*0.08,0.,1.,2*0.5,0.635,0.212,0.056,0.017,0.048, 
jetset74.F:     &0.032,0.07,0.065,2*0.005,2*0.011,5*0.001,0.07,0.065,2*0.005, 
jetset74.F:     &2*0.011,5*0.001,0.026,0.019,0.066,0.041,0.045,0.076,0.0073, 
jetset74.F:     &2*0.0047,0.026,0.001,0.0006,0.0066,0.005,2*0.003,2*0.0006, 
jetset74.F:     &2*0.001,0.006,0.005,0.012,0.0057,0.067,0.008,0.0022,0.027,0.004, 
jetset74.F:     &0.019,0.012,0.002,0.009,0.0218,0.001,0.022,0.087,0.001,0.0019, 
jetset74.F:     &0.0015,0.0028,0.034,0.027,2*0.002,2*0.004,2*0.002,0.034,0.027/ 
jetset74.F:     &0.045,0.073,0.062,3*0.021,0.0061,0.015,0.025,0.0088,0.074,0.0109, 
jetset74.F:     &0.0041,0.002,0.0035,0.0011,0.001,0.0027,2*0.0016,0.0018,0.011, 
jetset74.F:     &0.0063,0.0052,0.018,0.016,0.0034,0.0036,0.0009,0.0006,0.015, 
jetset74.F:     &0.0923,0.018,0.022,0.0077,0.009,0.0075,0.024,0.0085,0.067,0.0511, 
jetset74.F:     &0.017,0.0004,0.0028,0.01,2*0.02,0.03,2*0.005,2*0.02,0.03,2*0.005, 
jetset74.F:     &0.015,0.037,0.028,0.079,0.095,0.052,0.0078,4*0.001,0.028,0.033, 
jetset74.F:     &0.026,0.05,0.01,4*0.005,0.25,0.0952,0.02,0.055,2*0.005,0.008, 
jetset74.F:     &0.012,0.02,0.055,2*0.005,0.008,0.012,0.01,0.03,0.0035,0.011, 
jetset74.F:     &0.0055,0.0042,0.009,0.018,0.015,0.0185,0.0135,0.025,0.0004, 
jetset74.F:     &0.0007,0.0008,0.0014,0.0019,0.0025,0.4291,0.08,0.07,0.02,0.015, 
jetset74.F:     &0.005,0.02,0.055,2*0.005,0.008,0.012,0.02,0.055,2*0.005,0.008, 
jetset74.F:     &0.012,0.01,0.03,0.0035,0.011,0.0055,0.0042,0.009,0.018,0.015, 
jetset74.F:     &0.0185,0.0135,0.025,0.0004,0.0007,0.0008,0.0014,0.0019,0.0025, 
jetset74.F:     &0.4291,0.08,0.07,0.02,0.015,0.005,0.02,0.055,2*0.005,0.008,0.012, 
jetset74.F:     &0.02,0.055,2*0.005,0.008,0.012,0.01,0.03,0.0035,0.011,0.0055, 
jetset74.F:     &0.0042,0.009,0.018,0.015,0.0185,0.0135,0.025,2*0.0002,0.0007, 
jetset74.F:     &2*0.0004,0.0014,0.001,0.0009,0.0025,0.4291,0.08,0.07,0.02,0.015, 
jetset74.F:     &0.005,0.047,0.122,0.006,0.012,0.035,0.012,0.035,0.003,0.007,0.15, 
jetset74.F:     &0.037,0.008,0.002,0.05,0.015,0.003,0.001,0.014,0.042,0.014,0.042/ 
jetset74.F:      DATA (BRAT(I)  ,I= 656, 931)/0.24,0.065,0.012,0.003,0.001,0.002, 
jetset74.F:     &0.001,0.002,0.014,0.003,0.988,0.012,0.389,0.319,0.2367,0.049, 
jetset74.F:     &0.005,0.001,0.0003,0.441,0.206,0.3,0.03,0.022,0.001,5*1.,0.99955, 
jetset74.F:     &0.00045,0.665,0.333,0.002,0.666,0.333,0.001,0.65,0.3,0.05,0.56, 
jetset74.F:     &0.44,5*1.,0.99912,0.00079,0.00005,0.00004,0.888,0.085,0.021, 
jetset74.F:     &2*0.003,0.49,0.344,3*0.043,0.023,0.013,0.001,0.0627,0.0597, 
jetset74.F:     &0.8776,3*0.027,0.015,0.045,0.015,0.045,0.77,0.029,4*1.,0.28,0.14, 
jetset74.F:     &0.313,0.157,0.11,0.28,0.14,0.313,0.157,0.11,0.667,0.333,0.667, 
jetset74.F:     &0.333,2*0.5,0.667,0.333,0.667,0.333,4*0.5,1.,0.333,0.334,0.333, 
jetset74.F:     &4*0.25,6*1.,0.667,0.333,0.667,0.333,0.667,0.333,0.667,0.333, 
jetset74.F:     &2*0.5,0.667,0.333,0.667,0.333,4*0.5,1.,0.52,0.26,0.11,2*0.055, 
jetset74.F:     &0.62,0.31,0.035,2*0.0175,0.007,0.993,0.02,0.98,3*1.,2*0.5,0.667, 
jetset74.F:     &0.667,0.333,6*0.5,3*0.12,0.097,0.043,4*0.095,4*0.03,4*0.25,0.273, 
jetset74.F:     &0.727,0.35,0.65,3*1.,2*0.35,0.144,0.105,0.048,0.003,0.333,0.166, 
jetset74.F:     &0.168,0.084,0.087,0.043,0.059,2*0.029,0.002,0.332,0.166,0.168, 
jetset74.F:     &0.084,0.086,0.043,0.059,2*0.029,2*0.002,0.3,0.15,0.16,0.08,0.13, 
jetset74.F:     &0.06,0.08,0.04,0.3,0.15,0.16,0.08,0.13,0.06,0.08,0.04,2*0.3, 
jetset74.F:     &2*0.2,0.3,0.15,0.16,0.08,0.13,0.06,0.08,0.04,0.3,0.15,0.16,0.08, 
jetset74.F:     &0.13,0.06,0.08,0.04,2*0.3,2*0.2,2*0.3,2*0.2,2*0.35,0.144,0.105/ 
jetset74.F:      DATA (BRAT(I)  ,I= 932,2000)/0.024,2*0.012,0.003,0.566,0.283, 
jetset74.F:     &0.069,0.028,0.023,2*0.0115,0.005,0.003,0.356,2*0.178,0.28, 
jetset74.F:     &2*0.004,0.135,0.865,0.22,0.78,3*1.,0.217,0.124,2*0.193,2*0.135, 
jetset74.F:     &0.002,0.001,0.686,0.314,2*0.0083,0.1866,0.324,0.184,0.027,0.001, 
jetset74.F:     &0.093,0.087,0.078,0.0028,3*0.014,0.008,0.024,0.008,0.024,0.425, 
jetset74.F:     &0.02,0.185,0.088,0.043,0.067,0.066,0.641,0.357,2*0.001,0.018, 
jetset74.F:     &2*0.005,0.003,0.002,2*0.006,0.018,2*0.005,0.003,0.002,2*0.006, 
jetset74.F:     &0.0066,0.025,0.016,0.0088,2*0.005,0.0058,0.005,0.0055,4*0.004, 
jetset74.F:     &2*0.002,2*0.004,0.003,0.002,2*0.003,3*0.002,2*0.001,0.002, 
jetset74.F:     &2*0.001,2*0.002,0.0013,0.0018,5*0.001,4*0.003,2*0.005,2*0.002, 
jetset74.F:     &2*0.001,2*0.002,2*0.001,0.2432,0.057,2*0.035,0.15,2*0.075,0.03, 
jetset74.F:     &2*0.015,2*1.,2*0.105,0.04,0.0077,0.02,0.0235,0.0285,0.0435, 
jetset74.F:     &0.0011,0.0022,0.0044,0.4291,0.08,0.07,0.02,0.015,0.005,2*1., 
jetset74.F:     &0.999,0.001,1.,0.516,0.483,0.001,1.,0.995,0.005,13*1.,0.331, 
jetset74.F:     &0.663,0.006,0.663,0.331,0.006,1.,0.88,2*0.06,0.88,2*0.06,0.88, 
jetset74.F:     &2*0.06,0.667,2*0.333,0.667,0.676,0.234,0.085,0.005,3*1.,4*0.5, 
jetset74.F:     &7*1.,847*0./ 
jetset74.F:      DATA (KFDP(I,1),I=   1, 507)/21,22,23,4*-24,25,21,22,23,4*24,25, 
jetset74.F:     &21,22,23,4*-24,25,21,22,23,4*24,25,21,22,23,4*-24,25,21,22,23, 
jetset74.F:     &4*24,25,37,21,22,23,4*-24,25,2*-37,21,22,23,4*24,25,2*37,22,23, 
jetset74.F:     &-24,25,23,24,-12,22,23,-24,25,23,24,-12,-14,35*16,22,23,-24,25, 
jetset74.F:     &23,24,-89,22,23,-24,25,-37,23,24,37,1,2,3,4,5,6,7,8,21,1,2,3,4,5, 
jetset74.F:     &6,7,8,11,13,15,17,1,2,3,4,5,6,7,8,11,12,13,14,15,16,17,18,4*-1, 
jetset74.F:     &4*-3,4*-5,4*-7,-11,-13,-15,-17,1,2,3,4,5,6,7,8,11,13,15,17,21, 
jetset74.F:     &2*22,23,24,1,2,3,4,5,6,7,8,11,12,13,14,15,16,17,18,24,37,2*23,25, 
jetset74.F:     &35,4*-1,4*-3,4*-5,4*-7,-11,-13,-15,-17,3*24,1,2,3,4,5,6,7,8,11, 
jetset74.F:     &13,15,17,21,2*22,23,24,23,25,36,1,2,3,4,5,6,7,8,11,13,15,17,21, 
jetset74.F:     &2*22,23,24,23,-1,-3,-5,-7,-11,-13,-15,-17,24,5,6,21,2,1,2,3,4,5, 
jetset74.F:     &6,11,13,15,82,-11,-13,2*2,-12,-14,-16,2*-2,2*-4,-2,-4,2*89,37, 
jetset74.F:     &2*-89,2*5,-37,2*89,4*-1,4*-3,4*-5,4*-7,-11,-13,-15,-17,-13,130, 
jetset74.F:     &310,-13,3*211,12,14,11*-11,11*-13,-311,-313,-311,-313,-20313, 
jetset74.F:     &2*-311,-313,-311,-313,2*111,2*221,2*331,2*113,2*223,2*333,-311, 
jetset74.F:     &-313,2*-321,211,-311,-321,333,-311,-313,-321,211,2*-321,2*-311, 
jetset74.F:     &-321,211,113,8*-11,8*-13,-321,-323,-321,-323,-311,2*-313,-311, 
jetset74.F:     &-313,2*-311,-321,-10323,-321,-323,-321,-311,2*-313,211,111,333, 
jetset74.F:     &3*-321,-311,-313,-321,-313,310,333,211,2*-321,-311,-313,-311,211, 
jetset74.F:     &-321,3*-311,211,113,321,-15,5*-11,5*-13,221,331,333,221,331,333/ 
jetset74.F:      DATA (KFDP(I,1),I= 508, 924)/10221,211,213,211,213,321,323,321, 
jetset74.F:     &323,2212,221,331,333,221,2*2,6*12,6*14,2*16,3*-411,3*-413,2*-411, 
jetset74.F:     &2*-413,2*441,2*443,2*20443,2*2,2*4,2,4,6*12,6*14,2*16,3*-421, 
jetset74.F:     &3*-423,2*-421,2*-423,2*441,2*443,2*20443,2*2,2*4,2,4,6*12,6*14, 
jetset74.F:     &2*16,3*-431,3*-433,2*-431,2*-433,3*441,3*443,3*20443,2*2,2*4,2,4, 
jetset74.F:     &16,2*4,2*12,2*14,2*16,4*2,4*4,2*-11,2*-13,2*-1,2*-3,2*-11,2*-13, 
jetset74.F:     &2*-1,3*22,111,211,2*22,211,22,211,111,3*22,111,82,21,3*0,2*211, 
jetset74.F:     &321,3*311,2*321,421,2*411,2*421,431,511,521,531,541,211,111,13, 
jetset74.F:     &11,211,22,211,2*111,321,130,-213,113,213,211,22,111,11,13,82,11, 
jetset74.F:     &13,15,1,2,3,4,21,22,3*0,223,321,311,323,313,2*311,321,313,323, 
jetset74.F:     &321,423,2*413,2*423,413,523,2*513,2*523,2*513,523,223,213,113, 
jetset74.F:     &-213,313,-313,323,-323,82,21,3*0,221,321,2*311,321,421,2*411,421, 
jetset74.F:     &411,421,521,2*511,2*521,2*511,521,221,211,111,321,130,310,211, 
jetset74.F:     &111,321,130,310,443,82,553,21,3*0,113,213,323,2*313,323,423, 
jetset74.F:     &2*413,2*423,413,523,2*513,2*523,2*513,523,213,-213,10211,10111, 
jetset74.F:     &-10211,2*221,213,2*113,-213,2*321,2*311,313,-313,323,-323,443,82, 
jetset74.F:     &553,21,3*0,213,113,221,223,321,211,321,311,323,313,323,313,321, 
jetset74.F:     &4*311,321,313,323,313,323,311,4*321,421,411,423,413,423,413,421, 
jetset74.F:     &2*411,421,413,423,413,423,411,2*421,411,423,413,521,511,523,513, 
jetset74.F:     &523,513,521,2*511,521,513,523,513,523,511,2*521,511,523,513,511/ 
jetset74.F:      DATA (KFDP(I,1),I= 925,2000)/521,513,523,213,-213,221,223,321, 
jetset74.F:     &130,310,111,211,111,2*211,321,130,310,221,111,321,130,310,221, 
jetset74.F:     &211,111,443,82,553,21,3*0,111,211,-12,12,-14,14,211,111,211,111, 
jetset74.F:     &11,13,82,4*443,10441,20443,445,441,11,13,15,1,2,3,4,21,22,2*553, 
jetset74.F:     &10551,20553,555,2212,2*2112,-12,7*-11,7*-13,2*2224,2*2212,2*2214, 
jetset74.F:     &2*3122,2*3212,2*3214,5*3222,4*3224,2*3322,3324,2*2224,7*2212, 
jetset74.F:     &5*2214,2*2112,2*2114,2*3122,2*3212,2*3214,2*3222,2*3224,4*2,3, 
jetset74.F:     &2*2,1,2*2,2*0,-12,-14,-16,5*4122,441,443,20443,2*-2,2*-4,-2,-4, 
jetset74.F:     &2*0,2112,-12,3122,2212,2112,2212,3*3122,3*4122,4132,4232,0, 
jetset74.F:     &3*5122,5132,5232,0,2112,2212,2*2112,2212,2112,2*2212,3122,3212, 
jetset74.F:     &3112,3122,3222,3112,3122,3222,3212,3322,3312,3322,3312,3122,3322, 
jetset74.F:     &3312,-12,3*4122,2*4132,2*4232,4332,3*5122,5132,5232,5332,847*0/ 
jetset74.F:      DATA (KFDP(I,2),I=   1, 476)/3*1,2,4,6,8,1,3*2,1,3,5,7,2,3*3,2,4, 
jetset74.F:     &6,8,3,3*4,1,3,5,7,4,3*5,2,4,6,8,5,3*6,1,3,5,7,6,5,3*7,2,4,6,8,7, 
jetset74.F:     &4,6,3*8,1,3,5,7,8,5,7,2*11,12,11,12,2*11,2*13,14,13,14,13,11,13, 
jetset74.F:     &-211,-213,-211,-213,-211,-213,3*-211,-321,-323,-321,-323,3*-321, 
jetset74.F:     &4*-211,-213,-211,-213,-211,-213,-211,-213,-211,-213,6*-211,2*15, 
jetset74.F:     &16,15,16,15,18,2*17,18,17,2*18,2*17,-1,-2,-3,-4,-5,-6,-7,-8,21, 
jetset74.F:     &-1,-2,-3,-4,-5,-6,-7,-8,-11,-13,-15,-17,-1,-2,-3,-4,-5,-6,-7,-8, 
jetset74.F:     &-11,-12,-13,-14,-15,-16,-17,-18,2,4,6,8,2,4,6,8,2,4,6,8,2,4,6,8, 
jetset74.F:     &12,14,16,18,-1,-2,-3,-4,-5,-6,-7,-8,-11,-13,-15,-17,21,22,2*23, 
jetset74.F:     &-24,-1,-2,-3,-4,-5,-6,-7,-8,-11,-12,-13,-14,-15,-16,-17,-18,-24, 
jetset74.F:     &-37,22,25,2*36,2,4,6,8,2,4,6,8,2,4,6,8,2,4,6,8,12,14,16,18,23,22, 
jetset74.F:     &25,-1,-2,-3,-4,-5,-6,-7,-8,-11,-13,-15,-17,21,22,2*23,-24,2*25, 
jetset74.F:     &36,-1,-2,-3,-4,-5,-6,-7,-8,-11,-13,-15,-17,21,22,2*23,-24,25,2,4, 
jetset74.F:     &6,8,12,14,16,18,25,-5,-6,21,11,-3,-4,-5,-6,-7,-8,-13,-15,-17,-82, 
jetset74.F:     &12,14,-1,-3,11,13,15,1,4,3,4,1,3,5,3,5,6,4,21,22,4,7,5,2,4,6,8,2, 
jetset74.F:     &4,6,8,2,4,6,8,2,4,6,8,12,14,16,18,14,2*0,14,111,211,111,-11,-13, 
jetset74.F:     &11*12,11*14,2*211,2*213,211,20213,2*321,2*323,211,213,211,213, 
jetset74.F:     &211,213,211,213,211,213,211,213,3*211,213,211,2*321,8*211,2*113, 
jetset74.F:     &2*211,8*12,8*14,2*211,2*213,2*111,221,2*113,223,333,20213,211, 
jetset74.F:     &2*321,323,2*311,313,-211,111,113,2*211,321,2*211,311,321,310,211/ 
jetset74.F:      DATA (KFDP(I,2),I= 477, 857)/-211,4*211,321,4*211,113,2*211,-321, 
jetset74.F:     &16,5*12,5*14,3*211,3*213,211,2*111,2*113,2*-311,2*-313,-2112, 
jetset74.F:     &3*321,323,2*-1,6*-11,6*-13,2*-15,211,213,20213,211,213,20213,431, 
jetset74.F:     &433,431,433,311,313,311,313,311,313,-1,-4,-3,-4,-1,-3,6*-11, 
jetset74.F:     &6*-13,2*-15,211,213,20213,211,213,20213,431,433,431,433,321,323, 
jetset74.F:     &321,323,321,323,-1,-4,-3,-4,-1,-3,6*-11,6*-13,2*-15,211,213, 
jetset74.F:     &20213,211,213,20213,431,433,431,433,221,331,333,221,331,333,221, 
jetset74.F:     &331,333,-1,-4,-3,-4,-1,-3,-15,-3,-1,2*-11,2*-13,2*-15,-1,-4,-3, 
jetset74.F:     &-4,-3,-4,-1,-4,2*12,2*14,2,3,2,3,2*12,2*14,2,1,22,11,22,111,-211, 
jetset74.F:     &211,11,-211,13,-211,111,113,223,22,111,-82,21,3*0,111,22,-211, 
jetset74.F:     &111,22,211,111,22,211,111,22,111,6*22,-211,22,-13,-11,-211,111, 
jetset74.F:     &-211,2*111,-321,310,211,111,2*-211,221,22,-11,-13,-82,-11,-13, 
jetset74.F:     &-15,-1,-2,-3,-4,2*21,3*0,211,-213,113,-211,111,223,213,113,211, 
jetset74.F:     &111,223,211,111,-211,111,321,311,-211,111,211,111,-321,-311,411, 
jetset74.F:     &421,111,-211,111,211,-311,311,-321,321,-82,21,3*0,211,-211,111, 
jetset74.F:     &211,111,211,111,-211,111,311,321,-211,111,211,111,-321,-311,411, 
jetset74.F:     &421,111,-211,111,-321,130,310,-211,111,-321,130,310,22,-82,22,21, 
jetset74.F:     &3*0,211,111,-211,111,211,111,211,111,-211,111,321,311,-211,111, 
jetset74.F:     &211,111,-321,-311,411,421,-211,211,-211,111,2*211,111,-211,211, 
jetset74.F:     &111,211,-321,2*-311,-321,-311,311,-321,321,22,-82,22,21,3*0,111/ 
jetset74.F:      DATA (KFDP(I,2),I= 858,2000)/3*211,-311,22,-211,111,-211,111, 
jetset74.F:     &-211,211,-213,113,223,221,211,111,211,111,2*211,213,113,223,221, 
jetset74.F:     &22,211,111,211,111,4*211,-211,111,-211,111,-211,211,-211,211,321, 
jetset74.F:     &311,321,311,-211,111,-211,111,-211,211,-211,2*211,111,211,111, 
jetset74.F:     &4*211,-321,-311,-321,-311,411,421,411,421,-211,211,111,211,-321, 
jetset74.F:     &130,310,22,-211,111,2*-211,-321,130,310,221,111,-321,130,310,221, 
jetset74.F:     &-211,111,22,-82,22,21,3*0,111,-211,11,-11,13,-13,-211,111,-211, 
jetset74.F:     &111,-11,-13,-82,211,111,221,111,4*22,-11,-13,-15,-1,-2,-3,-4, 
jetset74.F:     &2*21,211,111,3*22,-211,111,22,11,7*12,7*14,-321,-323,-311,-313, 
jetset74.F:     &-311,-313,211,213,211,213,211,213,111,221,331,113,223,111,221, 
jetset74.F:     &113,223,321,323,321,-211,-213,111,221,331,113,223,333,10221,111, 
jetset74.F:     &221,331,113,223,211,213,211,213,321,323,321,323,321,323,311,313, 
jetset74.F:     &311,313,2*-1,-3,-1,2203,3201,3203,2203,2101,2103,2*0,11,13,15, 
jetset74.F:     &-211,-213,-20213,-431,-433,3*3122,1,4,3,4,1,3,2*0,-211,11,22,111, 
jetset74.F:     &211,22,-211,111,22,-211,111,211,2*22,0,-211,111,211,2*22,0, 
jetset74.F:     &2*-211,111,22,111,211,22,211,2*-211,2*111,-211,2*211,111,211, 
jetset74.F:     &-211,2*111,211,-321,-211,111,11,-211,111,211,111,22,111,2*22, 
jetset74.F:     &-211,111,211,3*22,847*0/ 
jetset74.F:      DATA (KFDP(I,3),I=   1, 944)/75*0,14,6*0,2*16,2*0,5*111,310,130, 
jetset74.F:     &2*0,2*111,310,130,321,113,211,223,221,2*113,2*211,2*223,2*221, 
jetset74.F:     &2*113,221,113,2*213,-213,195*0,4*3,4*4,1,4,3,2*2,10*81,25*0,-211, 
jetset74.F:     &3*111,-311,-313,-311,-321,-313,-323,111,221,331,113,223,-311, 
jetset74.F:     &-313,-311,-321,-313,-323,111,221,331,113,223,22*0,111,113,2*211, 
jetset74.F:     &-211,-311,211,111,3*211,-211,7*211,-321,-323,-311,-321,-313,-323, 
jetset74.F:     &-211,-213,-321,-323,-311,-321,-313,-323,-211,-213,22*0,111,113, 
jetset74.F:     &-311,2*-211,211,-211,310,-211,2*111,211,2*-211,-321,-211,2*211, 
jetset74.F:     &-211,111,-211,2*211,0,221,331,333,321,311,221,331,333,321,311, 
jetset74.F:     &20*0,3,0,-411,-413,-10413,-10411,-20413,-415,-411,-413,-10413, 
jetset74.F:     &-10411,-20413,-415,-411,-413,16*0,-4,-1,-4,-3,2*-2,-421,-423, 
jetset74.F:     &-10423,-10421,-20423,-425,-421,-423,-10423,-10421,-20423,-425, 
jetset74.F:     &-421,-423,16*0,-4,-1,-4,-3,2*-2,-431,-433,-10433,-10431,-20433, 
jetset74.F:     &-435,-431,-433,-10433,-10431,-20433,-435,-431,-433,19*0,-4,-1,-4, 
jetset74.F:     &-3,2*-2,3*0,441,443,441,443,441,443,-4,-1,-4,-3,-4,-3,-4,-1,531, 
jetset74.F:     &533,531,533,3,2,3,2,511,513,511,513,1,2,0,-11,0,2*111,-211,-11, 
jetset74.F:     &11,-13,2*221,3*0,111,27*0,111,2*0,22,111,5*0,111,12*0,2*21,103*0, 
jetset74.F:     &-211,2*111,-211,3*111,-211,111,211,14*0,111,6*0,111,-211,8*0,111, 
jetset74.F:     &-211,9*0,111,-211,111,-211,4*0,111,-211,111,-211,8*0,111,-211, 
jetset74.F:     &111,-211,4*0,111,-211,111,-211,11*0,-211,6*0,111,211,4*0,111/ 
jetset74.F:      DATA (KFDP(I,3),I= 945,2000)/13*0,2*111,211,-211,211,-211,7*0, 
jetset74.F:     &-211,111,13*0,2*21,-211,111,6*0,2212,3122,3212,3214,2112,2114, 
jetset74.F:     &2212,2112,3122,3212,3214,2112,2114,2212,2112,52*0,3*3,1,8*0, 
jetset74.F:     &3*4122,8*0,4,1,4,3,2*2,3*0,2112,43*0,3322,861*0/ 
jetset74.F:      DATA (KFDP(I,4),I=   1,2000)/88*0,3*111,8*0,-211,0,-211,3*0,111, 
jetset74.F:     &2*-211,0,111,0,2*111,113,221,111,-213,-211,211,195*0,13*81,41*0, 
jetset74.F:     &111,211,111,211,7*0,111,211,111,211,35*0,2*-211,2*111,211,111, 
jetset74.F:     &-211,2*211,2*-211,2*0,-211,111,-211,111,4*0,-211,111,-211,111, 
jetset74.F:     &34*0,111,-211,3*111,3*-211,2*111,3*-211,4*0,-321,-311,3*0,-321, 
jetset74.F:     &-311,20*0,-3,31*0,6*1,30*0,6*2,33*0,6*3,9*0,8*4,4*0,4*-5,4*0, 
jetset74.F:     &2*-5,7*0,-11,264*0,111,-211,4*0,111,57*0,-211,111,5*0,-211,111, 
jetset74.F:     &52*0,2101,2103,2*2101,19*0,6*2101,909*0/ 
jetset74.F:      DATA (KFDP(I,5),I=   1,2000)/90*0,111,16*0,111,7*0,111,0,2*111, 
jetset74.F:     &303*0,-211,2*111,-211,111,-211,111,54*0,111,-211,3*111,-211,111, 
jetset74.F:     &1510*0/ 
jetset74.F:      DATA (CHAF(I)  ,I=   1, 281)/'d','u','s','c','b','t','l','h', 
jetset74.F:     &'phi','J/psi','Upsilon','Theta','Theta_l','Theta_h',2*' ','b_1', 
jetset74.F:     &2*'K_1',2*'D_1','D_1s',2*'B_1','B_1s','B_1c','b_1','h_1','h''_1', 
jetset74.F:     &'h_1c','h_1b','h_1t','h_1l','h_1h',2*' ','a_0',2*'K*_0',2*'D*_0', 
jetset74.F:     &'chi_0b','chi_0t','chi_0l','chi_0h',2*' ','a_1',2*'K*_1', 
jetset74.F:     &2*'D*_1','D*_1s',2*'B*_1','B*_1s','B*_1c','a_1','f_1','f''_1', 
jetset74.F:     &'chi_1c','chi_1b','chi_1t','chi_1l','chi_1h',2*' ','a_2', 
jetset74.F:     &'omega_di','phi_diff','J/psi_di',18*' ','Lambda',5*' ', 
jetset74.F:     &4*' ',3*'Sigma*_b',2*'Xi*_b','Omega*_b',114*' '/ 
jetset74.F:      DATA MRLU/19780503,0,0,97,33,0/ 
jetset74.F:C...in positions N+1 through N+NDECAY. For each product I you must 
jetset74.F:C...give the flavour codes K(I,2) and the five-momenta P(I,1), P(I,2), 
jetset74.F:      COMMON/LUDAT1/MSTU(200),PARU(200),MSTJ(200),PARJ(200) 
jetset74.F:      SAVE /LUJETS/,/LUDAT1/ 
jetset74.F:      WRITE(MSTU(11),5000) 
jetset74.F:      IF(RLU(0).LT.10.) STOP 
jetset74.F: 5000 FORMAT(1X,'Error: you did not link your LUTAUD routine ', 
jetset74.F:     &'correctly.'/1X,'Dummy routine in JETSET file called instead.'/ 
jetset74.F:     &1X,'Execution stopped!') 
jetsetcont.F:C      Copyright (C) 1998      Caltech, UCSB
jetsetcont.F:C    DJL/RYD     August 11, 1998         Module created
jetsetcont.F:      integer flavor,kf(100),i,ndaug
jetsetcont.F:      real*8  px(100),py(100),pz(100),e(100)
jetsetcont.F:      do 10,i=4,n
jetsetcont.F:          px(i-3)=p(i,1)
jetsetcont.F:          ndaug=ndaug+1
jetsetcont.F:10    continue
lucomp_beg.F:* added ASLUND backward compatibility Dec 1994
lucomp_beg.F:* added LUCOMP_BEG=410+abs(KF)/100 000 July 1994
lucomp_beg.F:* added UPS 4S,5S  Jan 1994
lucomp_beg.F:* NOTE: ASLUND version maps LUCOMP_BEG = 400 + KFA/1 000 000
lucomp_beg.F:* Doug Wright Oct 1994
lucomp_beg.F:* R.Waldi  Nov 1997
lucomp_beg.F:C  #include "beget.inc"          (Don't need beget.inc)  1/16/98
lucomp_beg.F:      PARAMETER (N_BB = 21)
lucomp_beg.F:*        UPS(3S),UPS(4S),UPS(5S),UPS_1(1D),UPS_2(1D),UPS_3(1D)
lucomp_beg.F:     1 / 60553,  70553,  80553,  120553,   30555,    557,
lucomp_beg.F:*        UPS_1(2D),UPS_2(2D),UPS_3(2D),chi_0b(2P),chi_1b(2P),chi_2b(2P)
lucomp_beg.F:     1   130553,   50555,    10557,    30551,     50553,     10555,
lucomp_beg.F:*        h_b(2P),chi_0b(3P),chi_1b(3P),chi_2b(3P),h_b(3P),eta_b(2S),
lucomp_beg.F:     1   40553,  50551,     110553,    20555,     100553, 20551,
lucomp_beg.F:*        eta_b(3S),eta_2b(1D),eta_2b(2D)
lucomp_beg.F:     1   40551,    40555,     60555/
lucomp_beg.F:*        UPS(3S),UPS(4S),UPS(5S),UPS_1(1D),UPS_2(1D),UPS_3(1D)
lucomp_beg.F:     1 /   403,    404,    405,     416,     417,    418,
lucomp_beg.F:*        UPS_1(2D),UPS_2(2D),UPS_3(2D),chi_0b(2P),chi_1b(2P),chi_2b(2P)
lucomp_beg.F:     1     419,     420,      421,      410,       411,       412,
lucomp_beg.F:*        h_b(2P),chi_0b(3P),chi_1b(3P),chi_2b(3P),h_b(3P),eta_b(2S),
lucomp_beg.F:     1     422,    413,        414,      415,        423,   401,
lucomp_beg.F:*        eta_b(3S),eta_2b(1D),eta_2b(2D)
lucomp_beg.F:     1     402,    424,        425/
lucomp_beg.F:      IF(    KFA.GE.1000000) THEN   ! for ASLUND backward compatibility
lucomp_beg.F:         LUCOMP_BEG = 400 + MOD(KFA/1 000 000,100)
lucomp_beg.F:c      ELSEIF(KFA.GE.100000) THEN
lucomp_beg.F:c         LUCOMP_BEG = 410 + MOD(KFA/100 000, 90)
lucomp_beg.F:         DO 100 I=1,N_BB
lucomp_beg.F:            GOTO 110
lucomp_beg.F: 100     CONTINUE
lucomp_beg.F: 110  CONTINUE
lund_crm1_evtgen.F:C// Module: lund_crm1_evtgen.F
lund_crm1_evtgen.F:C  lund_crm.F 08/21/2001  Chen J.C. 
lund_crm1_evtgen.F:C  EVT_TYPE = 31    (for SIMBES)
lund_crm1_evtgen.F:c      J/psi-->Hadrons       Ecm=3.0969+-0.0002GeV, or Ecm=3.096+-0.0001GeV
lund_crm1_evtgen.F:c (C)  or MPARAM(1) = 1000,
lund_crm1_evtgen.F:c (D)  or MPARAM(1) = 2000,
lund_crm1_evtgen.F:C     (1) make particle ID match between SOBER and jetset74.
lund_crm1_evtgen.F:C    *not use(4) LULIST1, modified from jetset7.4's LULIST for there
lund_crm1_evtgen.F:C              |-->luexec1.f-->ludecy1-->luonia1(rgg/ggg decay)
lund_crm1_evtgen.F:c        MPARAM(1) = +-1, N,part1_ID,part1_Charge,part2_ID,part2_charge,....
lund_crm1_evtgen.F:C            J/psi(psi(2S))--> P1,P2...
lund_crm1_evtgen.F:c            Decay modes MPARAM(1)= +1/-1 = out only/cancel stable
lund_crm1_evtgen.F:C                    for Example: gamma=1,e=2,mu=3,pi=4,K=5,p=6...
lund_crm1_evtgen.F:c        MPARAM(1) = +-2, N,part1_ID,part2_ID,,....
lund_crm1_evtgen.F:C            J/psi(psi(2S))--> P1(resonance),P2(resonance)...
lund_crm1_evtgen.F:c            Decay modes MPARAM(1) = +2 = out only resonance of 1st decay  level
lund_crm1_evtgen.F:c            Decay modes MPARAM(1) = -2 = cancel resonance of 1st decay level
lund_crm1_evtgen.F:c            Decay modes 2=resonance of 1st decay level
lund_crm1_evtgen.F:C                    for Example:gamma=22,e+-=+-11,mu+-=+-133,
lund_crm1_evtgen.F:c                                pi+-=+-211,pi0=111,
lund_crm1_evtgen.F:c                                K+-=321,K0/K0~=311/-311 ...
lund_crm1_evtgen.F:c        MPARAM(1) = +-3, N,part1_ID,part2_ID,,....
lund_crm1_evtgen.F:C            J/psi(psi(2S))--> P1(resonance),P2(resonance)...+X
lund_crm1_evtgen.F:c            Decay modes MPARAM(1) = +3 = out resonance of 1st decay level
lund_crm1_evtgen.F:c            Decay modes MPARAM(1) = -3 = cancel resonance of 1st decay level
lund_crm1_evtgen.F:c        MPARAM(1) = +-4,N
lund_crm1_evtgen.F:c            Decay modes MPARAM(1)= +1/-1 = out only/cancel stable
lund_crm1_evtgen.F:c                          e+e-    mu+mu-  tau+tau- (1/0 = on/off)
lund_crm1_evtgen.F:c         MPARAM(1) = 3000  1       1        1
lund_crm1_evtgen.F:c                          e+e-    mu+mu- (1/0 = on/off)
lund_crm1_evtgen.F:c         MPARAM(1) = 4000  1       1
lund_crm1_evtgen.F:c     (10) Defult MPARAM(1)=0 and decay to all of possible channels
lund_crm1_evtgen.F:C                                       Chen J.C. 99/01/26
lund_crm1_evtgen.F:C   (1)  Random seed input from SOBER card works to JETSET's random seed 
lund_crm1_evtgen.F:C  MRLU(1) too.       
lund_crm1_evtgen.F:C                     Chen J.C. 01/03/08 
lund_crm1_evtgen.F:C   (2)  Add MPARAM(1)=-1,-2,-3 selection to cancel the output modes
lund_crm1_evtgen.F:c   (3) Add mass_width = 0.08GeV to f0,  f0(mass<1GeV)->pipi f0(m>1GeV)->KK
lund_crm1_evtgen.F:c       (luexec1.F->ludecy1,charm_updat)
lund_crm1_evtgen.F:C                              Chen J.C. 07/11/2002
lund_crm1_evtgen.F:c          1+A*cos^2(theta), where A(Def=1.0 is inputed by XPARAM(2).
lund_crm1_evtgen.F:c                                         Chen Jiangchuan 2003.10.10 
lund_crm1_evtgen.F:c        For example: Lambda0/Lambda0~ = LUND(3122,-3122) -> SOBER(7,-7)
lund_crm1_evtgen.F:c        Modify:   idtrk=J -> IDTRK=J*ISIGN(1,K(I,2))
lund_crm1_evtgen.F:C                  P(1)  P(2)  P(3)  P(4)  P(5)
lund_crm1_evtgen.F:      real sigebm/0.001/
lund_crm1_evtgen.F:      parameter (ndmax=100)
lund_crm1_evtgen.F:      integer kp,kid,ipart1,ipart2
lund_crm1_evtgen.F:      COMMON/LUDAT1/MSTU(200),PARU(200),MSTJ(200),PARJ(200) !jetset v7.4
lund_crm1_evtgen.F:        real p,v,paru,parj, Rdchannel(10),Rlund,Rtot,RR,R_d
lund_crm1_evtgen.F:      data Rdchannel/10*0./
lund_crm1_evtgen.F:      common/charm/mdcy_charm(2),mdme_charm(100,2), brat_charm(100),
lund_crm1_evtgen.F:     &  kfdp_charm(100,5)
lund_crm1_evtgen.F:       SAVE /LUJETS/,/LUDAT1/,/LUDAT3/,/ludatr/      
lund_crm1_evtgen.F:       common/ludatr/mrlu(6),rrlu(100) !seed of LUND random number generator
lund_crm1_evtgen.F:       integer nevtlist/10/,mrlu
lund_crm1_evtgen.F:cjc       INTEGER PIDTR, PID1  !PID transform from lundcharm to PDG2006
lund_crm1_evtgen.F:        PARJ(135)=0.01  !(D=0.01)minimum  photon E in initial-state radiation
lund_crm1_evtgen.F:      PARJ(74)=30.    ! Z(mm) for end of CDC in BES, Z(MDC)=1100 mm       ?
lund_crm1_evtgen.F:C...New tuning parameters MSTJ(101)=(5 or 2)::(parton-shower or 2nd-ME)
lund_crm1_evtgen.F:      PARJ(21)=0.5     ! xgm(D=0.36), width in the Px,Py Gaussian dist.
lund_crm1_evtgen.F:      parj(126)=1.     ! (D=2.)GeV Mass_min(gg) (merge g-g to g)
lund_crm1_evtgen.F:      parj(1)=0.09       !(D=0.1)p(qq)/p(q)
lund_crm1_evtgen.F:      parj(2)=0.4        !(D=0.3)p(ss)/p(uu),(uu:dd:ss=1:1:parj(2))
lund_crm1_evtgen.F:c   spin=1,J=1(Vector, rho,omiga,phi,h1..)
lund_crm1_evtgen.F:c      V/p=<3/1 suggested by spin and overlapper of wave function p227
lund_crm1_evtgen.F:C                              ...i=11:u&d,12:s,13:C,
lund_crm1_evtgen.F:c      L=0,S=0,J=0, ratio=(1-parj(i))(1-parj(14))  pseudoscalar meson
lund_crm1_evtgen.F:c      L=0,S=1,J=1, ratio=parj(i)(1-parj(15)-parj(16)-parj(17))  vector
lund_crm1_evtgen.F:c      L=1,S=0,J=1, ratio=(1-parj(i))parj(14)      axial vector meson
lund_crm1_evtgen.F:C      L=1,S=1,J=0, ratio=parj(i)parj(15)          scalar meson
lund_crm1_evtgen.F:c      L=1,S=1,J=1, ratio=parj(i)parj(16)          another axial vector meson
lund_crm1_evtgen.F:c      L=1,S=1,J=2, ratio=parj(i)parj(17)          tensor meson
lund_crm1_evtgen.F:      parj(11)=0.60     !*(D=0.5) V/p ratio of u&d
lund_crm1_evtgen.F:      parj(12)=0.66    !(D=0.6)  V/p ratio of strange(s)
lund_crm1_evtgen.F:c      parj(13)=0.8    !(D=0.75) V/p ratio of Charm
lund_crm1_evtgen.F:      parj(14)=0.60    !*(D=0.)  spin=0,L=1,J=1   axial Vector meson
lund_crm1_evtgen.F:      parj(15)=0.12    !(D=0.)   spin=1,L=1,J=0   scalar meson
lund_crm1_evtgen.F:      parj(16)=0.12    !(D=0.)   spin=1,L=1,J=1   anothe axial Vector meson
lund_crm1_evtgen.F:      parj(17)=0.10    !(D=0.)   spin=1,L=1,J=2   tensor meson
lund_crm1_evtgen.F:      parj(25)=0.5     !(D=1.) extra supression for eta production
lund_crm1_evtgen.F:        mstj(104)=3      ! only produce u,d,s quark
lund_crm1_evtgen.F:        MSTJ(107)=0  !(D=0)initial-state radiatic correction;0:no; 1:do
lund_crm1_evtgen.F:      if(rdchannel(1)+rdchannel(4).gt.0.)
lund_crm1_evtgen.F:     &  ddn=rdchannel(1)/(rdchannel(1)+rdchannel(4))
lund_crm1_evtgen.F:      Rtot=Rdchannel(10)+Rlund
lund_crm1_evtgen.F:      do j=1,9
lund_crm1_evtgen.F:        new_charm=1
lund_crm1_evtgen.F:        if(MSTJ(107).eq.1)then
lund_crm1_evtgen.F:        else if(MSTJ(107).eq.0) then
lund_crm1_evtgen.F:        mrlu(1)=ilundseed !!lundcharm random seed
lund_crm1_evtgen.F:10     continue       ! begain Lund jetset particle generator
lund_crm1_evtgen.F:       nloop=nloop+1
lund_crm1_evtgen.F:       if(nloop.gt.1000000) then
lund_crm1_evtgen.F:     &small(<0.000001)!'
lund_crm1_evtgen.F:cjc      if(numevt.eq.1)  mrlu(1)=IRANDM(1)  ! seed of LUND random from sobcard
lund_crm1_evtgen.F:C....... pingrg 2007/10/7
lund_crm1_evtgen.F:      if(pid.eq.100443.or.pid.eq.443) then
lund_crm1_evtgen.F:      if(pid.eq.100443)  ip=30443
lund_crm1_evtgen.F:c       K(1,1)=11
lund_crm1_evtgen.F:c       K(1,2)=ip
lund_crm1_evtgen.F:c       P(1,5)=SQRTS
lund_crm1_evtgen.F:c       P(1,4)=SQRTS
lund_crm1_evtgen.F:c       P(1,1)=0.0
lund_crm1_evtgen.F:c       P(1,2)=0.0
lund_crm1_evtgen.F:c       P(1,3)=0.0
lund_crm1_evtgen.F:C.......  commented by Ping RG 2007/10/7
lund_crm1_evtgen.F:c         if(abs(SQRTS-3.0969).lt.0.0028) then    !Ebeam smear 2*0.0014GeV
lund_crm1_evtgen.F:c        else if(abs(SQRTS-3.096).lt.0.0028) then !Ebeam smear 2*0.0014GeV
lund_crm1_evtgen.F:c        else if(abs(SQRTS-3.686).lt.0.0028) then !Ebeam smear 2*0.0014GeV
lund_crm1_evtgen.F:            CALL LUEEVT1(0,SQRTS)   ! continuum energy generator
lund_crm1_evtgen.F:          else if((RR.gt.Rlund.and.RR.le.Rdchannel(1)).or.
lund_crm1_evtgen.F:            call luddgen(421,421,SQRTS)    ! D0D0~ 
lund_crm1_evtgen.F:            call luddgen(411,411,SQRTS)    ! D+D- 
lund_crm1_evtgen.F:        else if((RR.gt.Rdchannel(1).and.RR.le.Rdchannel(2)).or.
lund_crm1_evtgen.F:            call luddgen(421,423,SQRTS)    ! D0D*0~ 
lund_crm1_evtgen.F:            call luddgen(411,413,SQRTS)    ! D+-D*+- 
lund_crm1_evtgen.F:            call luddgen(421,421,SQRTS)    ! D*+-D*+- 
lund_crm1_evtgen.F:            call luddgen(431,431,SQRTS)   !DsDs
lund_crm1_evtgen.F:            call luddgen(431,433,SQRTS)   !DsDs*
lund_crm1_evtgen.F:cjc        CALL LULIST(11)        ! LULIST(11) in the jetset7.4
lund_crm1_evtgen.F:      ipart1 = 1
lund_crm1_evtgen.F:      ipart2 = 1
lund_crm1_evtgen.F:      do 1010 i=2,n
lund_crm1_evtgen.F:        if (abs(kid) .ge. 1 .and. abs(kid) .le. 8
lund_crm1_evtgen.F:     1  .or. kid .eq. 21
lund_crm1_evtgen.F:     2  .or. kid .ge. 91 .and. kid .le. 94)  then
lund_crm1_evtgen.F:           if (ipart1 .eq. 1) ipart1 = i
lund_crm1_evtgen.F:           if (kp .ne. 1.or.kp.ne.2)  goto 1010  !! pingrg  if (kp .ne. 1)-> if (kp .ne. 1.or.kp.ne.2)
lund_crm1_evtgen.F:              goto 1010
lund_crm1_evtgen.F:           elseif (kp .ge. ipart1)  then
lund_crm1_evtgen.F:              kp = ipart1-1
lund_crm1_evtgen.F:        if((pid.eq.100443.or.pid.eq.443).and.kp.ge.4) goto 1010
lund_crm1_evtgen.F:        if(k(2,2).eq.443.and.k(3,2).eq.111.and.k(4,2).eq.111.and.
lund_crm1_evtgen.F:     &   i.gt.4) goto 1010  !select psi(2s)->J/psi pi0 pi0
lund_crm1_evtgen.F:        if(k(2,2).eq.443.and.k(3,2).eq.221.and.
lund_crm1_evtgen.F:     &   i.gt.3) goto 1010  !select psi(2s)->J/psi eta
lund_crm1_evtgen.F:        if(kid.eq.30443) kid=100443  !change jetset psi' id to pdg06
lund_crm1_evtgen.F:        ndaug = ndaug + 1
lund_crm1_evtgen.F:        px(ndaug)=p(i,1)
lund_crm1_evtgen.F:c        print '( 2I5,I12,4F12.4 )',ndaug,km(ndaug),kf(ndaug),
lund_crm1_evtgen.F:c     1    px(ndaug),py(ndaug),pz(ndaug),e(ndaug)
lund_crm1_evtgen.F:1010  continue
lund_crm1_evtgen.F:c      CALL LULIST(1)
lund_crm1_evtgen.F:      SUBROUTINE decay1(kfa)
lund_crm1_evtgen.F:C...Purpose: Statistics 1st decay products of unstable particles in the code. 
lund_crm1_evtgen.F:      COMMON/LUDAT1/MSTU(200),PARU(200),MSTJ(200),PARJ(200) 
lund_crm1_evtgen.F:      common/charm/mdcy_charm(2),mdme_charm(100,2), brat_charm(100),
lund_crm1_evtgen.F:     &  kfdp_charm(100,5)
lund_crm1_evtgen.F:      CHARACTER CHAP*16,CHAc(10)*16
lund_crm1_evtgen.F:      KFS=ISIGN(1,kfa)
lund_crm1_evtgen.F:      do i=1,10
lund_crm1_evtgen.F:      WRITE(MSTU(11),*) '     LUDECY1 list'
lund_crm1_evtgen.F:      WRITE(MSTU(11),*) ' Probability          Complete final state'
lund_crm1_evtgen.F:      IF(MOD(KFA/1000,10).EQ.0.AND.(KCA.EQ.85.OR.KCA.EQ.87)) KFS=-KFS
lund_crm1_evtgen.F:        KFSP=1
lund_crm1_evtgen.F:        KFSP=1
lund_crm1_evtgen.F:        KFSN=1
lund_crm1_evtgen.F:      DO 230 IDL=MDCY(KCA,2),MDCY(KCA,2)+MDCY(KCA,3)-1 
lund_crm1_evtgen.F:        IF(MDME(IDL,1).NE.1.AND.KFSP*MDME(IDL,1).NE.2.AND.
lund_crm1_evtgen.F:     &    KFSN*MDME(IDL,1).NE.3) GOTO 230
lund_crm1_evtgen.F:      IF(MDME(IDL,2).GT.100) GOTO 230 
lund_crm1_evtgen.F:      NOPE=NOPE+1 
lund_crm1_evtgen.F:      DO 290 IDC=MDCY(KCA,2),MDCY(KCA,2)+MDCY(KCA,3)-1 
lund_crm1_evtgen.F:        IF(MDME(IDc,1).NE.1) goto 290
lund_crm1_evtgen.F:        IF(MDME(IDc,2).GT.100) GOTO 290 
lund_crm1_evtgen.F:      IF(MDME(IDC+1,2).EQ.101) JTMAX=10 
lund_crm1_evtgen.F:      DO 280 JT=1,JTMAX 
lund_crm1_evtgen.F:      IF(JT.GE.6) KP=KFDP(IDC+1,JT-5) 
lund_crm1_evtgen.F:      IF(KPA.GT.80) MHADDY=1 
lund_crm1_evtgen.F:      IF(KCHG(KCP,3).EQ.0.AND.KPA.NE.81.AND.KPA.NE.82) THEN 
lund_crm1_evtgen.F:      ELSEIF(KPA.NE.81.AND.KPA.NE.82) THEN 
lund_crm1_evtgen.F:      ELSEIF(KPA.EQ.81.AND.MOD(KFA/1000,10).EQ.0) THEN 
lund_crm1_evtgen.F:        KFP=-KFS*MOD(KFA/10,10) 
lund_crm1_evtgen.F:      ELSEIF(KPA.EQ.81.AND.MOD(KFA/100,10).GE.MOD(KFA/10,10)) THEN 
lund_crm1_evtgen.F:        KFP=KFS*(100*MOD(KFA/10,100)+3) 
lund_crm1_evtgen.F:      ELSEIF(KPA.EQ.81) THEN 
lund_crm1_evtgen.F:        KFP=KFS*(1000*MOD(KFA/10,10)+100*MOD(KFA/100,10)+1) 
lund_crm1_evtgen.F:        CALL LUKFDI(-KFS*INT(1.+(2.+PARJ(2))*RLU(0)),0,KFP,KDUMP) 
lund_crm1_evtgen.F:c        MSTJ(93)=1 
lund_crm1_evtgen.F:c        IF(PV(1,5).LT.PARJ(32)+2.*ULMASS(KFP)) GOTO 260 
lund_crm1_evtgen.F:        IF(IABS(KFP).GT.10) KFP=KFP+ISIGN(10000,KFP) 
lund_crm1_evtgen.F:      njt=njt+1
lund_crm1_evtgen.F:      IF(KPA.EQ.81.OR.KPA.EQ.82) KCP=LUCOMP(KFP) 
lund_crm1_evtgen.F:      DO 100 LEM=1,16
lund_crm1_evtgen.F: 100  CONTINUE
lund_crm1_evtgen.F:      chac(njt)=chap(1:len)
lund_crm1_evtgen.F:      WRITE(MSTU(11),1100) bridc,(chac(i),i=1,njt)
lund_crm1_evtgen.F:      WRITE(MSTU(11),*) 'Sum_bratch=',brsu 
lund_crm1_evtgen.F:      WRITE(MSTU(11),*) 'New added channels(include in old qq~brat'
lund_crm1_evtgen.F:      WRITE(MSTU(11),*) 'old qq~brat=',brat(idc_q)
lund_crm1_evtgen.F:        idc_min=1
lund_crm1_evtgen.F:        idc_max=mdcy_charm(1)
lund_crm1_evtgen.F:        idc_min=mdcy_charm(1)+1
lund_crm1_evtgen.F:      DO 1290 IDC=idc_min, idc_max
lund_crm1_evtgen.F:        IF(MDME_charm(IDc,1).NE.1) goto 1290
lund_crm1_evtgen.F:      DO 1280 JT=1,JTMAX 
lund_crm1_evtgen.F:      IF(JT.GE.6) KP=KFDP_charm(IDC+1,JT-5) 
lund_crm1_evtgen.F:      IF(KP.EQ.0) GOTO 1280 
lund_crm1_evtgen.F:      IF(KPA.GT.80) MHADDY=1 
lund_crm1_evtgen.F:      IF(KCHG(KCP,3).EQ.0.AND.KPA.NE.81.AND.KPA.NE.82) THEN 
lund_crm1_evtgen.F:      ELSEIF(KPA.NE.81.AND.KPA.NE.82) THEN 
lund_crm1_evtgen.F:      ELSEIF(KPA.EQ.81.AND.MOD(KFA/1000,10).EQ.0) THEN 
lund_crm1_evtgen.F:        KFP=-KFS*MOD(KFA/10,10) 
lund_crm1_evtgen.F:      ELSEIF(KPA.EQ.81.AND.MOD(KFA/100,10).GE.MOD(KFA/10,10)) THEN 
lund_crm1_evtgen.F:        KFP=KFS*(100*MOD(KFA/10,100)+3) 
lund_crm1_evtgen.F:      ELSEIF(KPA.EQ.81) THEN 
lund_crm1_evtgen.F:        KFP=KFS*(1000*MOD(KFA/10,10)+100*MOD(KFA/100,10)+1) 
lund_crm1_evtgen.F:        CALL LUKFDI(-KFS*INT(1.+(2.+PARJ(2))*RLU(0)),0,KFP,KDUMP) 
lund_crm1_evtgen.F:        IF(KFP.EQ.0) GOTO 1280 
lund_crm1_evtgen.F:        IF(IABS(KFP).GT.10) KFP=KFP+ISIGN(10000,KFP) 
lund_crm1_evtgen.F:      njt=njt+1
lund_crm1_evtgen.F:      IF(KPA.EQ.81.OR.KPA.EQ.82) KCP=LUCOMP(KFP) 
lund_crm1_evtgen.F:      DO 500 LEM=1,16
lund_crm1_evtgen.F:      chac(njt)=chap(1:len)
lund_crm1_evtgen.F:1280   continue
lund_crm1_evtgen.F:      WRITE(MSTU(11),1100) bridc,(chac(i),i=1,njt)
lund_crm1_evtgen.F:1290   CONTINUE 
lund_crm1_evtgen.F:      WRITE(MSTU(11),*) 'Sum of new channel=',bratsum
lund_crm1_evtgen.F:1100   format(1x,f10.5,5x,10a10)
lund_crm1_evtgen.F:C...Purpose: to generate charm-onium decays (call luexec1->ludecy1->luonia1)
lund_crm1_evtgen.F:      COMMON/LUDAT1/MSTU(200),PARU(200),MSTJ(200),PARJ(200) 
lund_crm1_evtgen.F:      SAVE /LUJETS/,/LUDAT1/,/LUDAT2/ , ldeclst
lund_crm1_evtgen.F:cjc      IF(MSTU(12).GE.1) CALL LULIST(0) 
lund_crm1_evtgen.F:      CALL LUERRM(16,'(LUcharm1:) called with not charm(4) flavour')
lund_crm1_evtgen.F:        IF(MSTU(21).GE.1) RETURN
lund_crm1_evtgen.F:      IF(ECM.LT.PARJ(127)+2.02*PARF(101)) THEN
lund_crm1_evtgen.F:        CALL LUERRM(16,'(LUcharm1:) called with too small CM energy')
lund_crm1_evtgen.F:        IF(MSTU(21).GE.1) RETURN
lund_crm1_evtgen.F:      IF(MSTJ(109).EQ.2.AND.MSTJ(110).NE.1) THEN 
lund_crm1_evtgen.F:     &  '(LUEEVT:) MSTJ(109) value requires MSTJ(110) = 1') 
lund_crm1_evtgen.F:        MSTJ(110)=1 
lund_crm1_evtgen.F:      IF(MSTJ(109).EQ.2.AND.MSTJ(111).NE.0) THEN 
lund_crm1_evtgen.F:     &  '(LUEEVT:) MSTJ(109) value requires MSTJ(111) = 0') 
lund_crm1_evtgen.F:        MSTJ(111)=0 
lund_crm1_evtgen.F:      MSTU(111)=MSTJ(108) 
lund_crm1_evtgen.F:      IF(MSTJ(108).EQ.2.AND.(MSTJ(101).EQ.0.OR.MSTJ(101).EQ.1)) 
lund_crm1_evtgen.F:     &MSTU(111)=1 
lund_crm1_evtgen.F:      PARU(112)=PARJ(121) 
lund_crm1_evtgen.F:      IF(MSTU(111).EQ.2) PARU(112)=PARJ(122) 
lund_crm1_evtgen.F:      IF(MSTJ(116).GT.0.AND.(MSTJ(116).GE.2.OR.ABS(ECM-PARJ(151)).GE. 
lund_crm1_evtgen.F:     &PARJ(139).OR.10*MSTJ(102)+KFL.NE.MSTJ(119))) CALL LUXTOT(KFL,ECM, 
lund_crm1_evtgen.F:      IF(MSTJ(116).GE.3) MSTJ(116)=1 
lund_crm1_evtgen.F:      PARJ(171)=0. 
lund_crm1_evtgen.F:  100 NTRY=NTRY+1 
lund_crm1_evtgen.F:      IF(NTRY.GT.100) THEN 
lund_crm1_evtgen.F:        CALL LUERRM(14,'(LUEEVT:) caught in an infinite loop') 
lund_crm1_evtgen.F:      IF(MSTJ(115).GE.2) THEN 
lund_crm1_evtgen.F:        CALL LU1ENT(NC-1,11,0.5*ECM,0.,0.) 
lund_crm1_evtgen.F:        K(NC-1,1)=21 
lund_crm1_evtgen.F:        CALL LU1ENT(NC,-11,0.5*ECM,PARU(1),0.) 
lund_crm1_evtgen.F:        K(NC,1)=21 
lund_crm1_evtgen.F:c......... turn off ISR pingrg /2007/10/7
lund_crm1_evtgen.F:c      IF(MSTJ(107).GE.1.AND.MSTJ(116).GE.1) CALL LURADK1(ECM,MK,PAK, 
lund_crm1_evtgen.F:c      IF(MK.EQ.1) ECMC=SQRT(ECM*(ECM-2.*PAK)) 
lund_crm1_evtgen.F:c      IF(MSTJ(115).GE.1.AND.MK.EQ.1) THEN 
lund_crm1_evtgen.F:c        NC=NC+1 
lund_crm1_evtgen.F:c        CALL LU1ENT(NC,22,PAK,THEK,PHIK) 
lund_crm1_evtgen.F:c        K(NC,3)=MIN(MSTJ(115)/2,1) 
lund_crm1_evtgen.F:      IF(MSTJ(115).GE.3) THEN 
lund_crm1_evtgen.F:        NC=NC+1 
lund_crm1_evtgen.F:        IF(MSTJ(102).EQ.2) KF=23 
lund_crm1_evtgen.F:        MSTU10=MSTU(10) 
lund_crm1_evtgen.F:        MSTU(10)=1 
lund_crm1_evtgen.F:        CALL LU1ENT(NC,KF,ECMC,0.,0.) 
lund_crm1_evtgen.F:        K(NC,1)=21 
lund_crm1_evtgen.F:        K(NC,3)=1 
lund_crm1_evtgen.F:        MSTU(10)=MSTU10 
lund_crm1_evtgen.F:C...Choose x1 and x2 according to matrix element.
lund_crm1_evtgen.F:      KF1=110*KFLC+3      !J/psi
lund_crm1_evtgen.F:      kc1=lucomp(kf1)
lund_crm1_evtgen.F:      KF2=30000+110*KFLC+3   ! psi'
lund_crm1_evtgen.F:      if(abs(Ecmc-pmas(KC1,1)).lt.0.004) then !Ecm smear 0.001GeV
lund_crm1_evtgen.F:        kf=kf1
lund_crm1_evtgen.F:      else if(abs(Ecmc-3.096).lt.0.004) then !Ecm smear 0.001GeV
lund_crm1_evtgen.F:         kf=kf1
lund_crm1_evtgen.F:       else if(abs(Ecmc-pmas(KC2,1)).lt.0.004) then !Ecm smear 0.001GeV
lund_crm1_evtgen.F:        goto 105
lund_crm1_evtgen.F:	call decay1(kf)
lund_crm1_evtgen.F:        ldeclst=1
lund_crm1_evtgen.F:      MSTU10=MSTU(10)
lund_crm1_evtgen.F:      MSTU(10)=1
lund_crm1_evtgen.F:      ip=Nc+1
lund_crm1_evtgen.F:      CALL LU1ENT(ip,KF,ECMC,0.,0.)
lund_crm1_evtgen.F:      K(IP,3)=K(IP,3)+(MSTJ(115)/2)+(KFLC/5)*(MSTJ(115)/3)*(NC-1)
lund_crm1_evtgen.F:      MSTU(10)=MSTU10
lund_crm1_evtgen.F:      IF(MK.EQ.1) THEN 
lund_crm1_evtgen.F:        NMIN=NC+1-MSTJ(115)/3 
lund_crm1_evtgen.F:      IF(MSTJ(105).EQ.1) CALL LUEXEC1
lund_crm1_evtgen.F:      MSTU(161)=110*KFLC+3
lund_crm1_evtgen.F:      MSTU(162)=0
lund_crm1_evtgen.F:105   continue
lund_crm1_evtgen.F:      IF(KFLC.EQ.0) GOTO 100 
lund_crm1_evtgen.F:      KFLN=21 
lund_crm1_evtgen.F:      IF(NJET.EQ.4) CALL LUX4JT(NJET,CUT,KFLC,ECMC,KFLN,X1,X2,X4, 
lund_crm1_evtgen.F:     &X12,X14) 
lund_crm1_evtgen.F:      IF(NJET.EQ.3) CALL LUX3JT(NJET,CUT,KFLC,ECMC,X1,X3) 
lund_crm1_evtgen.F:      IF(NJET.EQ.2) MSTJ(120)=1 
lund_crm1_evtgen.F:      IF(NJET.EQ.2.AND.MSTJ(101).NE.5) CALL LU2ENT(NC+1,KFLC,-KFLC,ECMC) 
lund_crm1_evtgen.F:      IF(NJET.EQ.2.AND.MSTJ(101).EQ.5) CALL LU2ENT(-(NC+1),KFLC,-KFLC, 
lund_crm1_evtgen.F:      IF(NJET.EQ.3) CALL LU3ENT(NC+1,KFLC,21,-KFLC,ECMC,X1,X3) 
lund_crm1_evtgen.F:      IF(NJET.EQ.4.AND.KFLN.EQ.21) CALL LU4ENT(NC+1,KFLC,KFLN,KFLN, 
lund_crm1_evtgen.F:     & -KFLC,ECMC,X1,X2,X4,X12,X14) 
lund_crm1_evtgen.F:      IF(NJET.EQ.4.AND.KFLN.NE.21) CALL LU4ENT(NC+1,KFLC,-KFLN,KFLN, 
lund_crm1_evtgen.F:     & -KFLC,ECMC,X1,X2,X4,X12,X14) 
lund_crm1_evtgen.F:      IF(MSTU(24).NE.0) GOTO 100 
lund_crm1_evtgen.F:      DO 110 IP=NC+1,N 
lund_crm1_evtgen.F:      K(IP,3)=K(IP,3)+MIN(MSTJ(115)/2,1)+(MSTJ(115)/3)*(NC-1) 
lund_crm1_evtgen.F:  110 CONTINUE 
lund_crm1_evtgen.F:      IF(MSTJ(106).EQ.1) THEN 
lund_crm1_evtgen.F:        CALL LUDBRB(NC+1,N,0.,CHI,0D0,0D0,0D0) 
lund_crm1_evtgen.F:        CALL LUDBRB(NC+1,N,THE,PHI,0D0,0D0,0D0) 
lund_crm1_evtgen.F:      IF(MK.EQ.1) THEN 
lund_crm1_evtgen.F:        NMIN=NC+1-MSTJ(115)/3 
lund_crm1_evtgen.F:      IF(MSTJ(101).EQ.5) THEN 
lund_crm1_evtgen.F:        CALL LUSHOW(N-1,N,ECMC) 
lund_crm1_evtgen.F:        MSTJ14=MSTJ(14) 
lund_crm1_evtgen.F:        IF(MSTJ(105).EQ.-1) MSTJ(14)=-1 
lund_crm1_evtgen.F:        IF(MSTJ(105).GE.0) MSTU(28)=0 
lund_crm1_evtgen.F:        MSTJ(14)=MSTJ14 
lund_crm1_evtgen.F:        IF(MSTJ(105).GE.0.AND.MSTU(28).NE.0) GOTO 100 
lund_crm1_evtgen.F:      IF(MSTJ(105).EQ.1) CALL LUEXEC1 
lund_crm1_evtgen.F:      MSTU(161)=KFLC 
lund_crm1_evtgen.F:      MSTU(162)=-KFLC 
lund_crm1_evtgen.F:      SUBROUTINE luddgen(KFL1,KFL2,ECM) 
lund_crm1_evtgen.F:      COMMON/LUDAT1/MSTU(200),PARU(200),MSTJ(200),PARJ(200) 
lund_crm1_evtgen.F:      SAVE /LUJETS/,/LUDAT1/,/LUDAT2/ 
lund_crm1_evtgen.F:      IF(MSTU(12).GE.1) CALL lulist(0) 
lund_crm1_evtgen.F:      IF(KFL1.LT.411.and.KFL1.GT.433) THEN    !DD~,D*D*~,Ds*Ds*~
lund_crm1_evtgen.F:        CALL LUERRM(16,'(LUDDGEN:) called with unknown DD~ code') 
lund_crm1_evtgen.F:        IF(MSTU(21).GE.1) RETURN 
lund_crm1_evtgen.F:      IF(KFL2.LT.411.and.KFL2.GT.433) THEN    !DD~,D*D*~,Ds*Ds*~
lund_crm1_evtgen.F:        CALL LUERRM(16,'(LUDDGEN:) called with unknown DD~ code') 
lund_crm1_evtgen.F:        IF(MSTU(21).GE.1) RETURN 
lund_crm1_evtgen.F:      ECMMIN=PMAS(KFL1,1)+PMAS(KFL2,1) 
lund_crm1_evtgen.F:        CALL LUERRM(16,'(LUDDGEN:) called with too small CM energy') 
lund_crm1_evtgen.F:        IF(MSTU(21).GE.1) RETURN 
lund_crm1_evtgen.F:      IF(MSTJ(109).EQ.2.AND.MSTJ(110).NE.1) THEN 
lund_crm1_evtgen.F:     &  '(LUDDGEN:) MSTJ(109) value requires MSTJ(110) = 1') 
lund_crm1_evtgen.F:        MSTJ(110)=1 
lund_crm1_evtgen.F:      IF(MSTJ(109).EQ.2.AND.MSTJ(111).NE.0) THEN 
lund_crm1_evtgen.F:     &  '(LUDDGEN:) MSTJ(109) value requires MSTJ(111) = 0') 
lund_crm1_evtgen.F:        MSTJ(111)=0 
lund_crm1_evtgen.F:      MSTU(111)=MSTJ(108) 
lund_crm1_evtgen.F:      IF(MSTJ(108).EQ.2.AND.(MSTJ(101).EQ.0.OR.MSTJ(101).EQ.1)) 
lund_crm1_evtgen.F:     &MSTU(111)=1 
lund_crm1_evtgen.F:      PARU(112)=PARJ(121) 
lund_crm1_evtgen.F:      IF(MSTU(111).EQ.2) PARU(112)=PARJ(122) 
lund_crm1_evtgen.F:      IF(MSTJ(116).GT.0.AND.(MSTJ(116).GE.2.OR.ABS(ECM-PARJ(151)).GE. 
lund_crm1_evtgen.F:     &PARJ(139).OR.10*MSTJ(102)+KFL1.NE.MSTJ(119))) 
lund_crm1_evtgen.F:     &CALL LUXTOT(KFL1,ECM,XTOT)
lund_crm1_evtgen.F:      IF(MSTJ(116).GE.3) MSTJ(116)=1 
lund_crm1_evtgen.F:       PARJ(171)=0. 
lund_crm1_evtgen.F:  100 NTRY=NTRY+1 
lund_crm1_evtgen.F:      IF(NTRY.GT.100) THEN 
lund_crm1_evtgen.F:        CALL LUERRM(14,'(LUDDGEN:) caught in an infinite loop') 
lund_crm1_evtgen.F:      IF(MSTJ(115).GE.2) THEN 
lund_crm1_evtgen.F:        CALL LU1ENT(NC-1,11,0.5*ECM,0.,0.) 
lund_crm1_evtgen.F:        K(NC-1,1)=21 
lund_crm1_evtgen.F:        CALL LU1ENT(NC,-11,0.5*ECM,PARU(1),0.) 
lund_crm1_evtgen.F:        K(NC,1)=21 
lund_crm1_evtgen.F:      IF(MSTJ(107).GE.1.AND.MSTJ(116).GE.1) CALL LURADK1(ECM,MK,PAK, 
lund_crm1_evtgen.F:      IF(MK.EQ.1) ECMC=SQRT(ECM*(ECM-2.*PAK)) 
lund_crm1_evtgen.F:      IF(MSTJ(115).GE.1.AND.MK.EQ.1) THEN 
lund_crm1_evtgen.F:        NC=NC+1 
lund_crm1_evtgen.F:        CALL LU1ENT(NC,22,PAK,THEK,PHIK) 
lund_crm1_evtgen.F:        K(NC,3)=MIN(MSTJ(115)/2,1) 
lund_crm1_evtgen.F:        kfl10 = kfl1
lund_crm1_evtgen.F:        kfl10 = -kfl1
lund_crm1_evtgen.F:      CALL LU2ENT(NC+1,KFL10,KFL20,ECMC) 
lund_crm1_evtgen.F:        if(KFL1.eq.411.and.KFL2.eq.411) then          !D+D-
lund_crm1_evtgen.F:C Generate the Psi'' decay angles: sin**2=1-cos**2 for theta and flat for phi.
lund_crm1_evtgen.F:150     COSTHE = 2.0*RLU(0) - 1.0
lund_crm1_evtgen.F:        IF(RLU(0) .GT. (1.0 - cosTHE**2)) GO TO 150
lund_crm1_evtgen.F:        else if(KFL1.eq.421.and.KFL2.eq.421) then     !D0D0~ 
lund_crm1_evtgen.F:152     COSTHE = 2.0*RLU(0) - 1.0
lund_crm1_evtgen.F:        IF(RLU(0) .GT. (1.0 - cosTHE**2)) GO TO 152
lund_crm1_evtgen.F:        else if(KFL1.eq.411.and.KFL2.eq.413) then     !D*D+-
lund_crm1_evtgen.F:154     COSTHE = 2.0*RLU(0) - 1.0
lund_crm1_evtgen.F:        IF(RLU(0) .GT. (1.0 + cosTHE**2)) GO TO 154
lund_crm1_evtgen.F:        else if(KFL1.eq.421.and.KFL2.eq.423) then     !D*D0
lund_crm1_evtgen.F:156     COSTHE = 2.0*RLU(0) - 1.0
lund_crm1_evtgen.F:        IF(RLU(0) .GT. (1.0 + cosTHE**2)) GO TO 156
lund_crm1_evtgen.F:        else if(KFL1.eq.413.and.KFL2.eq.413) then     !D*D*
lund_crm1_evtgen.F:        IF(A.LE.0.) OLIOM= 1.0
lund_crm1_evtgen.F:COB   IF(A.GT.0.) OLIOM= 1.0+A
lund_crm1_evtgen.F:158     COSTHE = 2.0*RLU(0) - 1.0
lund_crm1_evtgen.F:        IF(OLIOM*RLU(0) .GT. (1.0 + A*cosTHE**2)) GO TO 158
lund_crm1_evtgen.F:        else if(KFL1.eq.423.and.KFL2.eq.423) then     !D*0D*0
lund_crm1_evtgen.F:        IF(A.LE.0.) OLIOM= 1.0
lund_crm1_evtgen.F:COB   IF(A.GT.0.) OLIOM= 1.0+A
lund_crm1_evtgen.F:160     COSTHE = 2.0*RLU(0) - 1.0
lund_crm1_evtgen.F:        IF(OLIOM*RLU(0) .GT. (1.0 + A*cosTHE**2)) GO TO 160
lund_crm1_evtgen.F:        else if(KFL1.eq.431.and.KFL2.eq.431) then     !DsDs~
lund_crm1_evtgen.F:162     COSTHE = 2.0*RLU(0) - 1.0
lund_crm1_evtgen.F:        IF(RLU(0) .GT. (1.0 - cosTHE**2)) GO TO 162
lund_crm1_evtgen.F:        else if(KFL1.eq.431.and.KFL2.eq.433) then     !DsDs*
lund_crm1_evtgen.F:164     COSTHE = 2.0*RLU(0) - 1.0
lund_crm1_evtgen.F:        IF(RLU(0) .GT. (1.0 + cosTHE**2)) GO TO 164
lund_crm1_evtgen.F:        else if(KFL1.eq.433.and.KFL2.eq.433) then     !Ds*Ds*
lund_crm1_evtgen.F:cjc        A= -1.0           
lund_crm1_evtgen.F:        IF(A.LE.0.) OLIOM= 1.0
lund_crm1_evtgen.F:166     COSTHE = 2.0*RLU(0) - 1.0
lund_crm1_evtgen.F:        IF(OLIOM*RLU(0) .GT. (1.0 + A*cosTHE**2)) GO TO 166
lund_crm1_evtgen.F:        PHI = RLU(0) * 6.28319
lund_crm1_evtgen.F:        CALL LUDBRB(NC+1,N,THE,PHI,0D0,0D0,0D0) 
lund_crm1_evtgen.F:      IF(MK.EQ.1) THEN 
lund_crm1_evtgen.F:        NMIN=NC+1-MSTJ(115)/3 
lund_crm1_evtgen.F:      IF(MSTJ(105).EQ.1) CALL LUEXEC1
lund_crm1_evtgen.F:      MSTU(161)=KFL10
lund_crm1_evtgen.F:      MSTU(162)=KFL20
lund_crm1_evtgen.F:      SUBROUTINE LUEEVT1(KFL,ECM) 
lund_crm1_evtgen.F:      COMMON/LUDAT1/MSTU(200),PARU(200),MSTJ(200),PARJ(200) 
lund_crm1_evtgen.F:      SAVE /LUJETS/,/LUDAT1/,/LUDAT2/ 
lund_crm1_evtgen.F:      IF(MSTU(12).GE.1) CALL lulist(0) 
lund_crm1_evtgen.F:        CALL LUERRM(16,'(LUEEVT:) called with unknown flavour code') 
lund_crm1_evtgen.F:        IF(MSTU(21).GE.1) RETURN 
lund_crm1_evtgen.F:      IF(KFL.LE.5) ECMMIN=PARJ(127)+2.02*PARF(100+MAX(1,KFL)) 
lund_crm1_evtgen.F:      IF(KFL.GE.6) ECMMIN=PARJ(127)+2.02*PMAS(KFL,1) 
lund_crm1_evtgen.F:        CALL LUERRM(16,'(LUEEVT:) called with too small CM energy') 
lund_crm1_evtgen.F:        IF(MSTU(21).GE.1) RETURN 
lund_crm1_evtgen.F:      IF(MSTJ(109).EQ.2.AND.MSTJ(110).NE.1) THEN 
lund_crm1_evtgen.F:     &  '(LUEEVT:) MSTJ(109) value requires MSTJ(110) = 1') 
lund_crm1_evtgen.F:        MSTJ(110)=1 
lund_crm1_evtgen.F:      IF(MSTJ(109).EQ.2.AND.MSTJ(111).NE.0) THEN 
lund_crm1_evtgen.F:     &  '(LUEEVT:) MSTJ(109) value requires MSTJ(111) = 0') 
lund_crm1_evtgen.F:        MSTJ(111)=0 
lund_crm1_evtgen.F:      MSTU(111)=MSTJ(108) 
lund_crm1_evtgen.F:      IF(MSTJ(108).EQ.2.AND.(MSTJ(101).EQ.0.OR.MSTJ(101).EQ.1)) 
lund_crm1_evtgen.F:     &MSTU(111)=1 
lund_crm1_evtgen.F:      PARU(112)=PARJ(121) 
lund_crm1_evtgen.F:      IF(MSTU(111).EQ.2) PARU(112)=PARJ(122) 
lund_crm1_evtgen.F:      IF(MSTJ(116).GT.0.AND.(MSTJ(116).GE.2.OR.ABS(ECM-PARJ(151)).GE. 
lund_crm1_evtgen.F:     &PARJ(139).OR.10*MSTJ(102)+KFL.NE.MSTJ(119))) CALL LUXTOT(KFL,ECM, 
lund_crm1_evtgen.F:      IF(MSTJ(116).GE.3) MSTJ(116)=1 
lund_crm1_evtgen.F:      PARJ(171)=0. 
lund_crm1_evtgen.F:  100 NTRY=NTRY+1 
lund_crm1_evtgen.F:      IF(NTRY.GT.100) THEN 
lund_crm1_evtgen.F:        CALL LUERRM(14,'(LUEEVT:) caught in an infinite loop') 
lund_crm1_evtgen.F:      IF(MSTJ(115).GE.2) THEN 
lund_crm1_evtgen.F:        CALL LU1ENT(NC-1,11,0.5*ECM,0.,0.) 
lund_crm1_evtgen.F:        K(NC-1,1)=21 
lund_crm1_evtgen.F:        CALL LU1ENT(NC,-11,0.5*ECM,PARU(1),0.) 
lund_crm1_evtgen.F:        K(NC,1)=21 
lund_crm1_evtgen.F:      IF(MSTJ(107).GE.1.AND.MSTJ(116).GE.1) CALL LURADK1(ECM,MK,PAK, 
lund_crm1_evtgen.F:      IF(MK.EQ.1) ECMC=SQRT(ECM*(ECM-2.*PAK)) 
lund_crm1_evtgen.F:      IF(MSTJ(115).GE.1.AND.MK.EQ.1) THEN 
lund_crm1_evtgen.F:        NC=NC+1 
lund_crm1_evtgen.F:        CALL LU1ENT(NC,22,PAK,THEK,PHIK) 
lund_crm1_evtgen.F:        K(NC,3)=MIN(MSTJ(115)/2,1) 
lund_crm1_evtgen.F:      IF(MSTJ(115).GE.3) THEN 
lund_crm1_evtgen.F:        NC=NC+1 
lund_crm1_evtgen.F:        IF(MSTJ(102).EQ.2) KF=23 
lund_crm1_evtgen.F:        MSTU10=MSTU(10) 
lund_crm1_evtgen.F:        MSTU(10)=1 
lund_crm1_evtgen.F:        CALL LU1ENT(NC,KF,ECMC,0.,0.) 
lund_crm1_evtgen.F:        K(NC,1)=21 
lund_crm1_evtgen.F:        K(NC,3)=1 
lund_crm1_evtgen.F:        MSTU(10)=MSTU10 
lund_crm1_evtgen.F:      IF(KFLC.EQ.0) GOTO 100 
lund_crm1_evtgen.F:      KFLN=21 
lund_crm1_evtgen.F:      IF(NJET.EQ.4) CALL LUX4JT(NJET,CUT,KFLC,ECMC,KFLN,X1,X2,X4, 
lund_crm1_evtgen.F:     &X12,X14) 
lund_crm1_evtgen.F:      IF(NJET.EQ.3) CALL LUX3JT(NJET,CUT,KFLC,ECMC,X1,X3) 
lund_crm1_evtgen.F:      IF(NJET.EQ.2) MSTJ(120)=1 
lund_crm1_evtgen.F:      IF(NJET.EQ.2.AND.MSTJ(101).NE.5) CALL LU2ENT(NC+1,KFLC,-KFLC,ECMC) 
lund_crm1_evtgen.F:      IF(NJET.EQ.2.AND.MSTJ(101).EQ.5) CALL LU2ENT(-(NC+1),KFLC,-KFLC, 
lund_crm1_evtgen.F:      IF(NJET.EQ.3) CALL LU3ENT(NC+1,KFLC,21,-KFLC,ECMC,X1,X3) 
lund_crm1_evtgen.F:      IF(NJET.EQ.4.AND.KFLN.EQ.21) CALL LU4ENT(NC+1,KFLC,KFLN,KFLN, 
lund_crm1_evtgen.F:     &-KFLC,ECMC,X1,X2,X4,X12,X14) 
lund_crm1_evtgen.F:      IF(NJET.EQ.4.AND.KFLN.NE.21) CALL LU4ENT(NC+1,KFLC,-KFLN,KFLN, 
lund_crm1_evtgen.F:     &-KFLC,ECMC,X1,X2,X4,X12,X14) 
lund_crm1_evtgen.F:      IF(MSTU(24).NE.0) GOTO 100 
lund_crm1_evtgen.F:      DO 110 IP=NC+1,N 
lund_crm1_evtgen.F:      K(IP,3)=K(IP,3)+MIN(MSTJ(115)/2,1)+(MSTJ(115)/3)*(NC-1) 
lund_crm1_evtgen.F:  110 CONTINUE 
lund_crm1_evtgen.F:      IF(MSTJ(106).EQ.1) THEN 
lund_crm1_evtgen.F:        CALL LUDBRB(NC+1,N,0.,CHI,0D0,0D0,0D0) 
lund_crm1_evtgen.F:        CALL LUDBRB(NC+1,N,THE,PHI,0D0,0D0,0D0) 
lund_crm1_evtgen.F:      IF(MK.EQ.1) THEN 
lund_crm1_evtgen.F:        NMIN=NC+1-MSTJ(115)/3 
lund_crm1_evtgen.F:      IF(MSTJ(101).EQ.5) THEN 
lund_crm1_evtgen.F:        CALL LUSHOW(N-1,N,ECMC) 
lund_crm1_evtgen.F:        MSTJ14=MSTJ(14) 
lund_crm1_evtgen.F:        IF(MSTJ(105).EQ.-1) MSTJ(14)=-1 
lund_crm1_evtgen.F:        IF(MSTJ(105).GE.0) MSTU(28)=0 
lund_crm1_evtgen.F:        MSTJ(14)=MSTJ14 
lund_crm1_evtgen.F:        IF(MSTJ(105).GE.0.AND.MSTU(28).NE.0) GOTO 100 
lund_crm1_evtgen.F:      IF(MSTJ(105).EQ.1) CALL LUEXEC1 
lund_crm1_evtgen.F:      MSTU(161)=KFLC 
lund_crm1_evtgen.F:      MSTU(162)=-KFLC 
lund_crm1_evtgen.F:*   (1) LUEXEC1, (2) LUDECY1 (3) cgparity, (4) psupress             *
lund_crm1_evtgen.F:      SUBROUTINE LUEXEC1 
lund_crm1_evtgen.F:*   (1) J/psi,psi' decay to rgg/ggg, need to check C&G parity       *
lund_crm1_evtgen.F:*   (2) CALL LUDECY1.                                               *
lund_crm1_evtgen.F:*                         Chen Jiangchuan  1998.5.11                *
lund_crm1_evtgen.F:*     *notuse(1)   ULANGL -> ULANGL1   (same to jetset_741.f)              *
lund_crm1_evtgen.F:*     *notuse(2)   LULIST -> LULIST1   
lund_crm1_evtgen.F:*                   Chen Jiangchuan     2001 March 13               *
lund_crm1_evtgen.F:      COMMON/LUDAT1/MSTU(200),PARU(200),MSTJ(200),PARJ(200) 
lund_crm1_evtgen.F:      SAVE /LUJETS/,/LUDAT1/,/LUDAT2/,/LUDAT3/
lund_crm1_evtgen.F:      dimension Kg1(4000,5),Pg1(4000,5),Vg1(4000,5) 
lund_crm1_evtgen.F:      IF(MSTU(12).GE.1) CALL LULIST(0) 
lund_crm1_evtgen.F:      MSTU(31)=MSTU(31)+1 
lund_crm1_evtgen.F:      MSTU(1)=0 
lund_crm1_evtgen.F:      IF(MSTU(17).LE.0) MSTU(90)=0 
lund_crm1_evtgen.F:      MCONS=1 
lund_crm1_evtgen.F:      DO 110 I=1,2 
lund_crm1_evtgen.F:      DO 100 J=1,6 
lund_crm1_evtgen.F:  100 CONTINUE 
lund_crm1_evtgen.F:  110 CONTINUE 
lund_crm1_evtgen.F:      DO 130 I=1,N 
lund_crm1_evtgen.F:      IF(K(I,1).LE.0.OR.K(I,1).GT.10) GOTO 130 
lund_crm1_evtgen.F:      DO 120 J=1,4 
lund_crm1_evtgen.F:      PS(1,J)=PS(1,J)+P(I,J) 
lund_crm1_evtgen.F:  120 CONTINUE 
lund_crm1_evtgen.F:      PS(1,6)=PS(1,6)+LUCHGE(K(I,2)) 
lund_crm1_evtgen.F:  130 CONTINUE 
lund_crm1_evtgen.F:      PARU(21)=PS(1,4) 
lund_crm1_evtgen.F:  140 MBE=MBE+1 
lund_crm1_evtgen.F:  150 IP=IP+1 
lund_crm1_evtgen.F:      IF(K(IP,1).GT.0.AND.K(IP,1).LE.10) KC=LUCOMP(K(IP,2)) 
lund_crm1_evtgen.F:        IF(MSTJ(21).GE.1.AND.MDCY(KC,1).GE.1.AND.(MSTJ(51).LE.0.OR.MBE 
lund_crm1_evtgen.F:     &  .EQ.2.OR.PMAS(KC,2).GE.PARJ(91).OR.IABS(K(IP,2)).EQ.311)) 
lund_crm1_evtgen.F:     &    CALL LUDECY1(IP,ngg,ipg)   
lund_crm1_evtgen.F:          IP1=MSTJ(92) 
lund_crm1_evtgen.F:          QMAX=SQRT(MAX(0.,(P(IP1,4)+P(IP1+1,4))**2-(P(IP1,1)+P(IP1+1, 
lund_crm1_evtgen.F:     &    1))**2-(P(IP1,2)+P(IP1+1,2))**2-(P(IP1,3)+P(IP1+1,3))**2)) 
lund_crm1_evtgen.F:          CALL LUSHOW(IP1,IP1+1,QMAX) 
lund_crm1_evtgen.F:          CALL LUPREP(IP1) 
lund_crm1_evtgen.F:          IP1=-MSTJ(92) 
lund_crm1_evtgen.F:          CALL LUSHOW(IP1,-3,P(IP,5)) 
lund_crm1_evtgen.F:          CALL LUPREP(IP1) 
lund_crm1_evtgen.F:      ELSEIF(K(IP,1).EQ.1.OR.K(IP,1).EQ.2) THEN 
lund_crm1_evtgen.F:        MFRAG=MSTJ(1) 
lund_crm1_evtgen.F:        IF(MFRAG.GE.1.AND.K(IP,1).EQ.1) MFRAG=2 
lund_crm1_evtgen.F:        IF(MSTJ(21).GE.2.AND.K(IP,1).EQ.2.AND.N.GT.IP) THEN 
lund_crm1_evtgen.F:          IF(K(IP+1,1).EQ.1.AND.K(IP+1,3).EQ.K(IP,3).AND. 
lund_crm1_evtgen.F:            IF(KCHG(LUCOMP(K(K(IP,3),2)),2).EQ.0) MFRAG=MIN(1,MFRAG) 
lund_crm1_evtgen.F:       if(ngg.ge.1) then 
lund_crm1_evtgen.F:           do igg=1,n
lund_crm1_evtgen.F:             do jgk=1,5
lund_crm1_evtgen.F:               kg1(igg,jgk)=k(igg,jgk)
lund_crm1_evtgen.F:               pg1(igg,jgk)=p(igg,jgk)
lund_crm1_evtgen.F:               vg1(igg,jgk)=v(igg,jgk)
lund_crm1_evtgen.F:154       ngentry=ngentry+1
lund_crm1_evtgen.F:          if(ngentry.gt.1000) then
lund_crm1_evtgen.F:            write(*,*) '(LUEXEC1):infinit loop for G conservation!'
lund_crm1_evtgen.F:            do igg=1,n
lund_crm1_evtgen.F:             do jgk=1,5
lund_crm1_evtgen.F:               k(igg,jgk)=kg1(igg,jgk)
lund_crm1_evtgen.F:               p(igg,jgk)=pg1(igg,jgk)
lund_crm1_evtgen.F:               v(igg,jgk)=vg1(igg,jgk)
lund_crm1_evtgen.F:          IF(MFRAG.EQ.1) CALL LUSTRF(IP) 
lund_crm1_evtgen.F:          IF(MFRAG.EQ.2.AND.K(IP,1).EQ.1) MCONS=0 
lund_crm1_evtgen.F:        if((k(ntmp+1,2).gt.80).and.(k(ntmp+1,2).lt.100)) then
lund_crm1_evtgen.F:             ip1=ipg
lund_crm1_evtgen.F:	     icg=1
lund_crm1_evtgen.F:             call cgparity(ip1,ip2,ip3,kcok,ngg,icg)
lund_crm1_evtgen.F:             if(kcok.eq.-1) goto 154
lund_crm1_evtgen.F:             call psupress(ip1,ip2,ip3,ksok)
lund_crm1_evtgen.F:             if(ksok.eq.-1) goto 154
lund_crm1_evtgen.F:cjc           if(ngg.eq.1) then      ! G conservation in J/psi->ggg
lund_crm1_evtgen.F:           if(ngg.ge.1) then      ! G conservation in J/psi->ggg/rgg
lund_crm1_evtgen.F:	    call cgparity(ip1,ip2,ip3,kgok,ngg,icg)
lund_crm1_evtgen.F:            if(kgok.eq.-1) goto 154
lund_crm1_evtgen.F:        IF(MFRAG.EQ.1) CALL LUSTRF(IP) 
lund_crm1_evtgen.F:        IF(MFRAG.EQ.2.AND.K(IP,1).EQ.1) MCONS=0 
lund_crm1_evtgen.F:      IF(MSTU(24).NE.0.AND.MSTU(21).GE.2) THEN 
lund_crm1_evtgen.F:        GOTO 150 
lund_crm1_evtgen.F:        CALL LUERRM(11,'(LUEXEC:) no more memory left in LUJETS') 
lund_crm1_evtgen.F:      IF(MBE.EQ.1.AND.MSTJ(51).GE.1) THEN 
lund_crm1_evtgen.F:        GOTO 140 
lund_crm1_evtgen.F:      DO 170 I=1,N 
lund_crm1_evtgen.F:      IF(K(I,1).LE.0.OR.K(I,1).GT.10) GOTO 170 
lund_crm1_evtgen.F:      DO 160 J=1,4 
lund_crm1_evtgen.F:  160 CONTINUE 
lund_crm1_evtgen.F:  170 CONTINUE 
lund_crm1_evtgen.F:      PDEV=(ABS(PS(2,1)-PS(1,1))+ABS(PS(2,2)-PS(1,2))+ABS(PS(2,3)- 
lund_crm1_evtgen.F:     &PS(1,3))+ABS(PS(2,4)-PS(1,4)))/(1.+ABS(PS(2,4))+ABS(PS(1,4))) 
lund_crm1_evtgen.F:      IF(MCONS.EQ.1.AND.PDEV.GT.PARU(11)) CALL LUERRM(15, 
lund_crm1_evtgen.F:      IF(MCONS.EQ.1.AND.ABS(PS(2,6)-PS(1,6)).GT.0.1) CALL LUERRM(15, 
lund_crm1_evtgen.F:      SUBROUTINE LUDECY1(IP,ngg,ipg) 
lund_crm1_evtgen.F:*                                         Chen Jiangchuan 1998.5.31  *
lund_crm1_evtgen.F:*         f0(mass<1GeV))->pipi,f0(mass>1GeV)->KK                     *
lund_crm1_evtgen.F:*                                         Chen Jiangchuan 2002.7.18  *
lund_crm1_evtgen.F:*         1+A*cos^2(theta), where A(Def=1.0) is input by XPARAM(2).  *
lund_crm1_evtgen.F:*                                         Chen Jiangchuan 2003.10.10 *
lund_crm1_evtgen.F:      COMMON/LUDAT1/MSTU(200),PARU(200),MSTJ(200),PARJ(200) 
lund_crm1_evtgen.F:      SAVE /LUJETS/,/LUDAT1/,/LUDAT2/,/LUDAT3/ ,wtcor
lund_crm1_evtgen.F:      common/charm/mdcy_charm(2),mdme_charm(100,2), brat_charm(100),
lund_crm1_evtgen.F:     &  kfdp_charm(100,5)
lund_crm1_evtgen.F:      DIMENSION VDCY(4),KFLO(4),KFL1(4),PV(10,5),RORD(10),UE(3),BE(3), 
lund_crm1_evtgen.F:     &WTCOR(10),PTAU(4),PCMTAU(4) 
lund_crm1_evtgen.F:      DATA WTCOR/2.,5.,15.,60.,250.,1500.,1.2E4,1.2E5,150.,16./ 
lund_crm1_evtgen.F:      FOUR(I,J)=P(I,4)*P(J,4)-P(I,1)*P(J,1)-P(I,2)*P(J,2)-P(I,3)*P(J,3) 
lund_crm1_evtgen.F:      HMEPS(HA)=((1.-HRQ-HA)**2+3.*HA*(1.+HRQ-HA))* 
lund_crm1_evtgen.F:     &SQRT((1.-HRQ-HA)**2-4.*HRQ*HA) 
lund_crm1_evtgen.F:      KFS=ISIGN(1,K(IP,2)) 
lund_crm1_evtgen.F:      IF(K(IP,1).EQ.5) THEN 
lund_crm1_evtgen.F:      ELSEIF(K(IP,1).NE.4) THEN 
lund_crm1_evtgen.F:      DO 100 J=1,4 
lund_crm1_evtgen.F:  100 CONTINUE 
lund_crm1_evtgen.F:        IF(PMAS(KC,4).GT.PARJ(71)) MOUT=1 
lund_crm1_evtgen.F:        IF(VDCY(1)**2+VDCY(2)**2+VDCY(3)**2.GT.PARJ(72)**2) MOUT=1 
lund_crm1_evtgen.F:        IF(VDCY(1)**2+VDCY(2)**2.GT.PARJ(73)**2) MOUT=1 
lund_crm1_evtgen.F:        IF(ABS(VDCY(3)).GT.PARJ(74)) MOUT=1 
lund_crm1_evtgen.F:      IF(MOUT.EQ.1.AND.K(IP,1).NE.5) THEN 
lund_crm1_evtgen.F:        K(IP,1)=4 
lund_crm1_evtgen.F:      IF(KFA.EQ.15.AND.MSTJ(28).GE.1) THEN 
lund_crm1_evtgen.F:        DO 110 J=1,4 
lund_crm1_evtgen.F:  110   CONTINUE 
lund_crm1_evtgen.F:  120   IMTAU=K(IMTAU,3) 
lund_crm1_evtgen.F:            DO 130 J=1,4 
lund_crm1_evtgen.F:  130       CONTINUE 
lund_crm1_evtgen.F:            DO 140 J=1,4 
lund_crm1_evtgen.F:  140       CONTINUE 
lund_crm1_evtgen.F:          GOTO 120 
lund_crm1_evtgen.F:        ELSEIF(IABS(K(IMTAU,2)).GT.100) THEN 
lund_crm1_evtgen.F:          DO 160 II=K(IMTAU,4),K(IMTAU,5) 
lund_crm1_evtgen.F:          IF(K(II,2)*ISIGN(1,K(ITAU,2)).EQ.-16) THEN 
lund_crm1_evtgen.F:            DO 150 J=1,4 
lund_crm1_evtgen.F:  150       CONTINUE 
lund_crm1_evtgen.F:  160     CONTINUE 
lund_crm1_evtgen.F:          DO 170 II=IMTAU+1,IP-1 
lund_crm1_evtgen.F:     &    ABS(P(II,5)-P(IORIG,5)).LT.1E-5*P(IORIG,5)) IORIG=II 
lund_crm1_evtgen.F:  170     CONTINUE 
lund_crm1_evtgen.F:          DO 180 J=1,4 
lund_crm1_evtgen.F:  180     CONTINUE 
lund_crm1_evtgen.F:        DO 190 J=1,3 
lund_crm1_evtgen.F:  190   CONTINUE 
lund_crm1_evtgen.F:        IF(KFORIG.NE.0) CALL LUDBRB(ITAU,ITAU,0.,0.,-DBETAU(1), 
lund_crm1_evtgen.F:        PHITAU=ULANGL(P(ITAU,1),P(ITAU,2)) 
lund_crm1_evtgen.F:        THETAU=ULANGL(P(ITAU,3),P(ITAU,1)) 
lund_crm1_evtgen.F:          DO 200 II=NSAV+1,NSAV+NDECAY 
lund_crm1_evtgen.F:          K(II,1)=1 
lund_crm1_evtgen.F:        DO 210 J=1,4 
lund_crm1_evtgen.F:  210   CONTINUE 
lund_crm1_evtgen.F:          CALL LUDBRB(NSAV+1,N,THETAU,PHITAU,0D0,0D0,0D0) 
lund_crm1_evtgen.F:          IF(KFORIG.NE.0) CALL LUDBRB(NSAV+1,N,0.,0.,DBETAU(1), 
lund_crm1_evtgen.F:      IF((KFA.EQ.511.OR.KFA.EQ.531).AND.MSTJ(26).GE.1) THEN 
lund_crm1_evtgen.F:        IF(KFA.EQ.531) XBBMIX=PARJ(77) 
lund_crm1_evtgen.F:        IF(SIN(0.5*XBBMIX*V(IP,5)/PMAS(KC,4))**2.GT.RLU(0)) MMIX=1 
lund_crm1_evtgen.F:        IF(MMIX.EQ.1) KFS=-KFS 
lund_crm1_evtgen.F:      IF(MOD(KFA/1000,10).EQ.0.AND.(KCA.EQ.85.OR.KCA.EQ.87)) KFS=-KFS 
lund_crm1_evtgen.F:        KFSP=1 
lund_crm1_evtgen.F:        KFSP=1 
lund_crm1_evtgen.F:        KFSN=1 
lund_crm1_evtgen.F:      DO 230 IDL=MDCY(KCA,2),MDCY(KCA,2)+MDCY(KCA,3)-1 
lund_crm1_evtgen.F:      IF(MDME(IDL,1).NE.1.AND.KFSP*MDME(IDL,1).NE.2.AND. 
lund_crm1_evtgen.F:     &KFSN*MDME(IDL,1).NE.3) GOTO 230 
lund_crm1_evtgen.F:      IF(MDME(IDL,2).GT.100) GOTO 230 
lund_crm1_evtgen.F:      NOPE=NOPE+1 
lund_crm1_evtgen.F:      IDL=MDCY(KCA,2)-1 
lund_crm1_evtgen.F:  250 IDL=IDL+1 
lund_crm1_evtgen.F:      IF(MDME(IDL,1).NE.1.AND.KFSP*MDME(IDL,1).NE.2.AND. 
lund_crm1_evtgen.F:     &KFSN*MDME(IDL,1).NE.3) THEN 
lund_crm1_evtgen.F:        IF(IDL.LT.MDCY(KCA,2)+MDCY(KCA,3)-1) GOTO 250 
lund_crm1_evtgen.F:      ELSEIF(MDME(IDL,2).GT.100) THEN 
lund_crm1_evtgen.F:        IF(IDL.LT.MDCY(KCA,2)+MDCY(KCA,3)-1) GOTO 250 
lund_crm1_evtgen.F:        IF(IDL.LT.MDCY(KCA,2)+MDCY(KCA,3)-1.AND.RBR.GT.0.) GOTO 250 
lund_crm1_evtgen.F:cjc+++ f0(mass<1GeV)->pipi, f0(mass>1GeV) -> KK
lund_crm1_evtgen.F:      if(kfa.eq.10221) Then
lund_crm1_evtgen.F:         if(P(ip,5).lt.1.0) then !(f0->pipi)
lund_crm1_evtgen.F:           DO 231 IDL=MDCY(KCA,2),MDCY(KCA,2)+1 
lund_crm1_evtgen.F:             IF(MDME(IDL,1).NE.1.AND.KFSP*MDME(IDL,1).NE.2.AND. 
lund_crm1_evtgen.F:     &         KFSN*MDME(IDL,1).NE.3) GOTO 231 
lund_crm1_evtgen.F:               IF(MDME(IDL,2).GT.100) GOTO 231 
lund_crm1_evtgen.F:               NOPE=NOPE+1 
lund_crm1_evtgen.F: 231       CONTINUE 
lund_crm1_evtgen.F:           IDL=MDCY(KCA,2)-1 
lund_crm1_evtgen.F: 251       IDL=IDL+1 
lund_crm1_evtgen.F:           IF(MDME(IDL,1).NE.1.AND.KFSP*MDME(IDL,1).NE.2.AND. 
lund_crm1_evtgen.F:     &       KFSN*MDME(IDL,1).NE.3) THEN 
lund_crm1_evtgen.F:             IF(IDL.LT.MDCY(KCA,2)+MDCY(KCA,3)-1) GOTO 251 
lund_crm1_evtgen.F:           ELSEIF(MDME(IDL,2).GT.100) THEN 
lund_crm1_evtgen.F:             IF(IDL.LT.MDCY(KCA,2)+MDCY(KCA,3)-1) GOTO 251
lund_crm1_evtgen.F:        IF(IDL.LT.MDCY(KCA,2)+MDCY(KCA,3)-1.AND.RBR.GT.0.) GOTO 251
lund_crm1_evtgen.F:         DO 232 IDL=MDCY(KCA,2)+2,MDCY(KCA,2)+MDCY(KCA,3)-1 
lund_crm1_evtgen.F:            IF(MDME(IDL,1).NE.1.AND.KFSP*MDME(IDL,1).NE.2.AND. 
lund_crm1_evtgen.F:     &         KFSN*MDME(IDL,1).NE.3) GOTO 232 
lund_crm1_evtgen.F:            IF(MDME(IDL,2).GT.100) GOTO 232 
lund_crm1_evtgen.F:            NOPE=NOPE+1 
lund_crm1_evtgen.F:         IDL=MDCY(KCA,2)+1 
lund_crm1_evtgen.F: 252     IDL=IDL+1 
lund_crm1_evtgen.F:         IF(MDME(IDL,1).NE.1.AND.KFSP*MDME(IDL,1).NE.2.AND. 
lund_crm1_evtgen.F:     &     KFSN*MDME(IDL,1).NE.3) THEN 
lund_crm1_evtgen.F:             IF(IDL.LT.MDCY(KCA,2)+MDCY(KCA,3)-1) GOTO 252
lund_crm1_evtgen.F:          ELSEIF(MDME(IDL,2).GT.100) THEN 
lund_crm1_evtgen.F:             IF(IDL.LT.MDCY(KCA,2)+MDCY(KCA,3)-1) GOTO 252 
lund_crm1_evtgen.F:        IF(IDL.LT.MDCY(KCA,2)+MDCY(KCA,3)-1.AND.RBR.GT.0.) GOTO 252 
lund_crm1_evtgen.F:  260 NTRY=NTRY+1 
lund_crm1_evtgen.F:      IF(NTRY.GT.100000) THEN 
lund_crm1_evtgen.F:        CALL LUERRM(14,'(LUDECY1:) caught in infinite loop') 
lund_crm1_evtgen.F:        call lulist(1)
lund_crm1_evtgen.F:        IF(MSTU(21).GE.1) RETURN 
lund_crm1_evtgen.F:      IF(MMAT.GE.11.AND.MMAT.NE.46.AND.P(IP,4).GT.20.*P(IP,5)) MBST=1 
lund_crm1_evtgen.F:      DO 270 J=1,4 
lund_crm1_evtgen.F:      PV(1,J)=0. 
lund_crm1_evtgen.F:      IF(MBST.EQ.0) PV(1,J)=P(IP,J) 
lund_crm1_evtgen.F:      IF(MBST.EQ.1) PV(1,4)=P(IP,5) 
lund_crm1_evtgen.F:      PV(1,5)=P(IP,5) 
lund_crm1_evtgen.F:      IF(KFA.GT.80) MHADDY=1 
lund_crm1_evtgen.F:      IF(MDME(IDC+1,2).EQ.101) JTMAX=10 
lund_crm1_evtgen.F:      DO 280 JT=1,JTMAX 
lund_crm1_evtgen.F:      IF(JT.GE.6) KP=KFDP(IDC+1,JT-5) 
lund_crm1_evtgen.F:      if(((kfa.eq.443).or.(kfa.eq.30443)).and.(lonid.ne.1)) then
lund_crm1_evtgen.F:        if((abs(kp).eq.82).and.(jt.eq.1)) then
lund_crm1_evtgen.F:              IDL_charm0=0                          !J/psi   IDCmin=1 
lund_crm1_evtgen.F:              idl_max=mdcy_charm(1)
lund_crm1_evtgen.F:               IDL_charm0=mdcy_charm(1)             !psi(2S)  IDCmin=51
lund_crm1_evtgen.F:  274     IDL_charm=IDL_charm+1 
lund_crm1_evtgen.F:          IF(MDME_charm(IDL_charm,1).NE.1) THEN 
lund_crm1_evtgen.F:        if(idccharm.eq.(idl_charm0+1))then
lund_crm1_evtgen.F:            lonid=1                                             !qq~ decay
lund_crm1_evtgen.F:            K(IP,1)=11                                !Mark decayed particle
lund_crm1_evtgen.F:            call luonia1(ipp,4,ngg)                   ! rgg/ggg decay
lund_crm1_evtgen.F:            if(ngg.ge.1) ipg=ipp               !decay meson ip(used for G)
lund_crm1_evtgen.F:      IF(KPA.GT.80) MHADDY=1 
lund_crm1_evtgen.F:      IF(KCHG(KCP,3).EQ.0.AND.KPA.NE.81.AND.KPA.NE.82) THEN 
lund_crm1_evtgen.F:      ELSEIF(KPA.NE.81.AND.KPA.NE.82) THEN 
lund_crm1_evtgen.F:      ELSEIF(KPA.EQ.81.AND.MOD(KFA/1000,10).EQ.0) THEN 
lund_crm1_evtgen.F:        KFP=-KFS*MOD(KFA/10,10) 
lund_crm1_evtgen.F:      ELSEIF(KPA.EQ.81.AND.MOD(KFA/100,10).GE.MOD(KFA/10,10)) THEN 
lund_crm1_evtgen.F:        KFP=KFS*(100*MOD(KFA/10,100)+3) 
lund_crm1_evtgen.F:      ELSEIF(KPA.EQ.81) THEN 
lund_crm1_evtgen.F:        KFP=KFS*(1000*MOD(KFA/10,10)+100*MOD(KFA/100,10)+1) 
lund_crm1_evtgen.F:        CALL LUKFDI(-KFS*INT(1.+(2.+PARJ(2))*RLU(0)),0,KFP,KDUMP) 
lund_crm1_evtgen.F:        MSTJ(93)=1 
lund_crm1_evtgen.F:        IF(PV(1,5).LT.PARJ(32)+2.*ULMASS(KFP)) GOTO 260 
lund_crm1_evtgen.F:        IF(IABS(KFP).GT.10) KFP=KFP+ISIGN(10000,KFP) 
lund_crm1_evtgen.F:      IF(KPA.EQ.81.OR.KPA.EQ.82) KCP=LUCOMP(KFP) 
lund_crm1_evtgen.F:      IF(MMAT.GE.11.AND.MMAT.LE.30.AND.KQP.NE.0) THEN 
lund_crm1_evtgen.F:        NQ=NQ+1 
lund_crm1_evtgen.F:     &MOD(NQ,2).EQ.1) THEN 
lund_crm1_evtgen.F:        NQ=NQ-1 
lund_crm1_evtgen.F:        K(I,1)=1 
lund_crm1_evtgen.F:        MSTJ(93)=1 
lund_crm1_evtgen.F:        I=I+1 
lund_crm1_evtgen.F:        NP=NP+1 
lund_crm1_evtgen.F:        IF(MMAT.NE.33.AND.KQP.NE.0) NQ=NQ+1 
lund_crm1_evtgen.F:        IF(MMAT.EQ.33.AND.KQP.NE.0.AND.KQP.NE.2) NQ=NQ+1 
lund_crm1_evtgen.F:        K(I,1)=1+MOD(NQ,2) 
lund_crm1_evtgen.F:        IF(MMAT.EQ.4.AND.JT.LE.2.AND.KFP.EQ.21) K(I,1)=2 
lund_crm1_evtgen.F:        IF(MMAT.EQ.4.AND.JT.EQ.3) K(I,1)=1 
lund_crm1_evtgen.F:        IF(PS+PARJ(64).GT.PV(1,5)) GOTO 240 
lund_crm1_evtgen.F:  290 IF(MMAT.GE.11.AND.MMAT.LE.30) THEN          
lund_crm1_evtgen.F:        CNDE=PARJ(61)*LOG(MAX((PV(1,5)-PS-PSQ)/PARJ(62),1.1)) 
lund_crm1_evtgen.F:        IF(MMAT.EQ.12) CNDE=CNDE+PARJ(63) 
lund_crm1_evtgen.F:  300   NTRY=NTRY+1 
lund_crm1_evtgen.F:        IF(NTRY.GT.1000) THEN 
lund_crm1_evtgen.F:          CALL LUERRM(14,'(LUDECY2:) caught in infinite loop') 
lund_crm1_evtgen.F:        call lulist(1)
lund_crm1_evtgen.F:          IF(MSTU(21).GE.1) RETURN 
lund_crm1_evtgen.F:          GAUSS=SQRT(-2.*CNDE*LOG(MAX(1E-10,RLU(0))))* 
lund_crm1_evtgen.F:          IF(ND.LT.NP+NQ/2.OR.ND.LT.2.OR.ND.GT.10) GOTO 300 
lund_crm1_evtgen.F:          IF(MMAT.EQ.13.AND.ND.EQ.2) GOTO 300 
lund_crm1_evtgen.F:          IF(MMAT.EQ.14.AND.ND.LE.3) GOTO 300 
lund_crm1_evtgen.F:          IF(MMAT.EQ.15.AND.ND.LE.4) GOTO 300 
lund_crm1_evtgen.F:          DO 310 JT=1,4 
lund_crm1_evtgen.F:        KFL1(JT)=KFLO(JT) 
lund_crm1_evtgen.F:  310   CONTINUE 
lund_crm1_evtgen.F:        DO 320 I=N+NP+1,N+ND-NQ/2 
lund_crm1_evtgen.F:        JT=1+INT((NQ-1)*RLU(0)) 
lund_crm1_evtgen.F:        CALL LUKFDI(KFL1(JT),0,KFL2,K(I,2)) 
lund_crm1_evtgen.F:        KFL1(JT)=-KFL2 
lund_crm1_evtgen.F:        IF(JT.EQ.4.AND.ISIGN(1,KFL1(1)*(10-IABS(KFL1(1))))* 
lund_crm1_evtgen.F:     &  ISIGN(1,KFL1(JT)*(10-IABS(KFL1(JT)))).GT.0) JT=3 
lund_crm1_evtgen.F:        CALL LUKFDI(KFL1(1),KFL1(JT),KFLDMP,K(N+ND-NQ/2+1,2)) 
lund_crm1_evtgen.F:        IF(K(N+ND-NQ/2+1,2).EQ.0) GOTO 300 
lund_crm1_evtgen.F:        IF(NQ.EQ.4) CALL LUKFDI(KFL1(JT2),KFL1(JT3),KFLDMP,K(N+ND,2)) 
lund_crm1_evtgen.F:        DO 340 I=N+NP+1,N+ND 
lund_crm1_evtgen.F:        K(I,1)=1 
lund_crm1_evtgen.F:        IF(PS+PARJ(64).GT.PV(1,5)) GOTO 300 
lund_crm1_evtgen.F:        ip1=ip
lund_crm1_evtgen.F:        ip2=n+1     ! np=0 usually when mmat=11-30,except g,q in products
lund_crm1_evtgen.F:	icg=1
lund_crm1_evtgen.F:        call cgparity(ip1,ip2,ip3,kcok,0,icg)
lund_crm1_evtgen.F:        if(kcok.eq.-1) goto 300
lund_crm1_evtgen.F:        call psupress(ip1,ip2,ip3,ksok)
lund_crm1_evtgen.F:        if(ksok.eq.-1) goto 300
lund_crm1_evtgen.F:      ELSEIF((MMAT.EQ.31.OR.MMAT.EQ.33.OR.MMAT.EQ.44.OR.MMAT.EQ.45) 
lund_crm1_evtgen.F:        PQT=(P(N+NP,5)+PARJ(65))/PV(1,5) 
lund_crm1_evtgen.F:        DO 350 J=1,5 
lund_crm1_evtgen.F:        P(N+NP,J)=PQT*PV(1,J) 
lund_crm1_evtgen.F:        PV(1,J)=(1.-PQT)*PV(1,J) 
lund_crm1_evtgen.F:        IF(PS+PARJ(64).GT.PV(1,5)) GOTO 260 
lund_crm1_evtgen.F:        ND=NP-1 
lund_crm1_evtgen.F:        MREM=1 
lund_crm1_evtgen.F:        MSTJ(93)=1 
lund_crm1_evtgen.F:        PSMC=ULMASS(K(N+1,2)) 
lund_crm1_evtgen.F:        MSTJ(93)=1 
lund_crm1_evtgen.F:        IF(MAX(PS,PSMC)+PARJ(32).GT.PV(1,5)) GOTO 240 
lund_crm1_evtgen.F:        HR1=(P(N+1,5)/PV(1,5))**2 
lund_crm1_evtgen.F:        HR2=(P(N+2,5)/PV(1,5))**2 
lund_crm1_evtgen.F:        IF((1.-HR1-HR2)*(2.+HR1+HR2)*SQRT((1.-HR1-HR2)**2-4.*HR1*HR2) 
lund_crm1_evtgen.F:        IF(NP.GE.2.AND.PS+PARJ(64).GT.PV(1,5)) GOTO 260 
lund_crm1_evtgen.F:        HLQ=(PARJ(32)/PV(1,5))**2 
lund_crm1_evtgen.F:        HUQ=(1.-(P(N+2,5)+PARJ(64))/PV(1,5))**2 
lund_crm1_evtgen.F:        HRQ=(P(N+2,5)/PV(1,5))**2 
lund_crm1_evtgen.F:        P(N+1,5)=PV(1,5)*SQRT(HW) 
lund_crm1_evtgen.F:        HQW=(PV(1,5)/PMAS(24,1))**2 
lund_crm1_evtgen.F:        HLW=(PARJ(32)/PMAS(24,1))**2 
lund_crm1_evtgen.F:        HUW=((PV(1,5)-P(N+2,5)-PARJ(64))/PMAS(24,1))**2 
lund_crm1_evtgen.F:        HRQ=(P(N+2,5)/PV(1,5))**2 
lund_crm1_evtgen.F:        HG=PMAS(24,2)/PMAS(24,1) 
lund_crm1_evtgen.F:        HATL=ATAN((HLW-1.)/HG) 
lund_crm1_evtgen.F:        HM=MIN(1.,HUW-0.001) 
lund_crm1_evtgen.F:        HMV1=HMEPS(HM/HQW)/((HM-1.)**2+HG**2) 
lund_crm1_evtgen.F:        HMV2=HMEPS(HM/HQW)/((HM-1.)**2+HG**2) 
lund_crm1_evtgen.F:        IF(HMV2.GT.HMV1.AND.HM-HG.GT.HLW) THEN 
lund_crm1_evtgen.F:          HMV1=HMV2 
lund_crm1_evtgen.F:        HMV=MIN(2.*HMV1,HMEPS(HM/HQW)/HG**2) 
lund_crm1_evtgen.F:        HM1=1.-SQRT(1./HMV-HG**2) 
lund_crm1_evtgen.F:        IF(HM1.GT.HLW.AND.HM1.LT.HM) THEN 
lund_crm1_evtgen.F:          HM=HM1 
lund_crm1_evtgen.F:        ELSEIF(HMV2.LE.HMV1) THEN 
lund_crm1_evtgen.F:          HM=MAX(HLW,HM-MIN(0.1,1.-HM)) 
lund_crm1_evtgen.F:        HATM=ATAN((HM-1.)/HG) 
lund_crm1_evtgen.F:        HWT1=(HATM-HATL)/HG 
lund_crm1_evtgen.F:        HWT2=HMV*(MIN(1.,HUW)-HM) 
lund_crm1_evtgen.F:        IF(HUW.GT.1.) THEN 
lund_crm1_evtgen.F:          HATU=ATAN((HUW-1.)/HG) 
lund_crm1_evtgen.F:          HMP1=HMEPS(1./HQW) 
lund_crm1_evtgen.F:          HWT3=HMP1*HATU/HG 
lund_crm1_evtgen.F:  380   HREG=RLU(0)*(HWT1+HWT2+HWT3) 
lund_crm1_evtgen.F:        IF(HREG.LE.HWT1) THEN 
lund_crm1_evtgen.F:          HW=1.+HG*TAN(HATL+RLU(0)*(HATM-HATL)) 
lund_crm1_evtgen.F:        ELSEIF(HREG.LE.HWT1+HWT2) THEN 
lund_crm1_evtgen.F:          HW=HM+RLU(0)*(MIN(1.,HUW)-HM) 
lund_crm1_evtgen.F:          HACC=HMEPS(HW/HQW)/((HW-1.)**2+HG**2)/HMV 
lund_crm1_evtgen.F:          HW=1.+HG*TAN(RLU(0)*HATU) 
lund_crm1_evtgen.F:          HACC=HMEPS(HW/HQW)/HMP1 
lund_crm1_evtgen.F:        P(N+1,5)=PMAS(24,1)*SQRT(HW) 
lund_crm1_evtgen.F:        IF(MMAT.EQ.46.AND.MSTJ(27).EQ.1) THEN 
lund_crm1_evtgen.F:          DO 390 IL=MAX(IP-2,IM+1),MIN(IP+2,N) 
lund_crm1_evtgen.F:          IF(K(IL,3).EQ.IM) NM=NM+1 
lund_crm1_evtgen.F:          IF(NM.NE.2.OR.KFAM.LE.100.OR.MOD(KFAM,10).NE.1.OR. 
lund_crm1_evtgen.F:     &    MOD(KFAM/1000,10).NE.0) NM=0 
lund_crm1_evtgen.F:            IF((KFAS.LE.100.OR.MOD(KFAS,10).NE.1.OR. 
lund_crm1_evtgen.F:     &      MOD(KFAS/1000,10).NE.0).AND.KFAS.NE.22) NM=0 
lund_crm1_evtgen.F:          MSGN=ISIGN(1,K(IM,2)*K(IP,2)) 
lund_crm1_evtgen.F:          IF(KFAM.GT.100.AND.MOD(KFAM/1000,10).EQ.0) MSGN= 
lund_crm1_evtgen.F:     &    MSGN*(-1)**MOD(KFAM/100,10) 
lund_crm1_evtgen.F:      IF(ND.EQ.1) THEN 
lund_crm1_evtgen.F:        DO 400 J=1,4 
lund_crm1_evtgen.F:        P(N+1,J)=P(IP,J) 
lund_crm1_evtgen.F:        WTMAX=1./WTCOR(ND-2) 
lund_crm1_evtgen.F:        PMAX=PV(1,5)-PS+P(N+ND,5) 
lund_crm1_evtgen.F:        DO 410 IL=ND-1,1,-1 
lund_crm1_evtgen.F:        PMIN=PMIN+P(N+IL+1,5) 
lund_crm1_evtgen.F:  410   CONTINUE 
lund_crm1_evtgen.F:        PMES=4.*PMAS(11,1)**2 
lund_crm1_evtgen.F:        PMRHO2=PMAS(131,1)**2 
lund_crm1_evtgen.F:        PGRHO2=PMAS(131,2)**2 
lund_crm1_evtgen.F:        WT=(1+0.5*PMES/PMST)*SQRT(MAX(0.,1.-PMES/PMST))* 
lund_crm1_evtgen.F:     &  (1.-PMST/P(IP,5)**2)**3*(1.+PGRHO2/PMRHO2)/ 
lund_crm1_evtgen.F:     &  ((1.-PMST/PMRHO2)**2+PGRHO2/PMRHO2) 
lund_crm1_evtgen.F:        PV(2,5)=MAX(2.00001*PMAS(11,1),SQRT(PMST)) 
lund_crm1_evtgen.F:  440   RORD(1)=1. 
lund_crm1_evtgen.F:        DO 470 IL1=2,ND-1 
lund_crm1_evtgen.F:        DO 450 IL2=IL1-1,1,-1 
lund_crm1_evtgen.F:        RORD(IL2+1)=RORD(IL2) 
lund_crm1_evtgen.F:  460   RORD(IL2+1)=RSAV 
lund_crm1_evtgen.F:        WT=1. 
lund_crm1_evtgen.F:        DO 480 IL=ND-1,1,-1 
lund_crm1_evtgen.F:        PV(IL,5)=PV(IL+1,5)+P(N+IL,5)+(RORD(IL)-RORD(IL+1))*(PV(1,5)-PS) 
lund_crm1_evtgen.F:        WT=WT*PAWT(PV(IL,5),PV(IL+1,5),P(N+IL,5)) 
lund_crm1_evtgen.F:  490 DO 510 IL=1,ND-1 
lund_crm1_evtgen.F:      PA=PAWT(PV(IL,5),PV(IL+1,5),P(N+IL,5)) 
lund_crm1_evtgen.F:      UE(3)=2.*RLU(0)-1. 
lund_crm1_evtgen.F:      UE(1)=SQRT(1.-UE(3)**2)*COS(PHI) 
lund_crm1_evtgen.F:      UE(2)=SQRT(1.-UE(3)**2)*SIN(PHI) 
lund_crm1_evtgen.F:      DO 500 J=1,3 
lund_crm1_evtgen.F:      PV(IL+1,J)=-PA*UE(J) 
lund_crm1_evtgen.F:      PV(IL+1,4)=SQRT(PA**2+PV(IL+1,5)**2) 
lund_crm1_evtgen.F:  510 CONTINUE 
lund_crm1_evtgen.F:C...Angular distribution for J/psi -> e+e- or mu+mu- (1+1.0*cos^2(theta)) 
lund_crm1_evtgen.F:      IF(MMAT.EQ.3.AND.(idl.eq.721.or.idl.eq.722)) THEN 
lund_crm1_evtgen.F:      pn1=sqrt(p(n+1,1)*p(n+1,1)+p(n+1,2)*p(n+1,2)+p(n+1,3)*p(n+1,3))
lund_crm1_evtgen.F:         if(pn1.gt.0.) then
lund_crm1_evtgen.F:           costh=p(n+1,3)/pn1
lund_crm1_evtgen.F:           costh=10.
lund_crm1_evtgen.F:           ANGDIS=(1.0+A_angl*costh*costh)/(1.0+A_angl)
lund_crm1_evtgen.F:           ANGDIS=(1.0+A_angl*costh*costh)
lund_crm1_evtgen.F:      DO 520 J=1,4 
lund_crm1_evtgen.F:      DO 560 IL=ND-1,1,-1 
lund_crm1_evtgen.F:      DO 530 J=1,3 
lund_crm1_evtgen.F:      BEP=BE(1)*P(I,1)+BE(2)*P(I,2)+BE(3)*P(I,3) 
lund_crm1_evtgen.F:      DO 540 J=1,3 
lund_crm1_evtgen.F:      P(I,J)=P(I,J)+GA*(GA*BEP/(1.+GA)+P(I,4))*BE(J) 
lund_crm1_evtgen.F:      NTRY=NTRY+1 
lund_crm1_evtgen.F:      IF(MMAT.EQ.1) THEN 
lund_crm1_evtgen.F:        WT=(P(N+1,5)*P(N+2,5)*P(N+3,5))**2-(P(N+1,5)*FOUR(N+2,N+3))**2 
lund_crm1_evtgen.F:     &  -(P(N+2,5)*FOUR(N+1,N+3))**2-(P(N+3,5)*FOUR(N+1,N+2))**2 
lund_crm1_evtgen.F:     &  +2.*FOUR(N+1,N+2)*FOUR(N+1,N+3)*FOUR(N+2,N+3) 
lund_crm1_evtgen.F:        IF(MAX(WT*WTCOR(9)/P(IP,5)**6,0.001).LT.RLU(0)) GOTO 420 
lund_crm1_evtgen.F:        FOUR12=FOUR(N+1,N+2) 
lund_crm1_evtgen.F:        FOUR13=FOUR(N+1,N+3) 
lund_crm1_evtgen.F:        WT=(PMST-0.5*PMES)*(FOUR12**2+FOUR13**2)+ 
lund_crm1_evtgen.F:     &  PMES*(FOUR12*FOUR13+FOUR12**2+FOUR13**2) 
lund_crm1_evtgen.F:C...Matrix element for S0 -> S1 + V1 -> S1 + S2 + S3 (S scalar, 
lund_crm1_evtgen.F:C...V vector), of form cos**2(theta02) in V1 rest frame, and for 
lund_crm1_evtgen.F:C...S0 -> gamma + V1 -> gamma + S2 + S3, of form sin**2(theta02). 
lund_crm1_evtgen.F:        FOUR10=FOUR(IP,IM) 
lund_crm1_evtgen.F:        FOUR12=FOUR(IP,N+1) 
lund_crm1_evtgen.F:        FOUR02=FOUR(IM,N+1) 
lund_crm1_evtgen.F:        PMS1=P(IP,5)**2 
lund_crm1_evtgen.F:        PMS2=P(N+1,5)**2 
lund_crm1_evtgen.F:        IF(KFAS.NE.22) HNUM=(FOUR10*FOUR12-PMS1*FOUR02)**2 
lund_crm1_evtgen.F:        IF(KFAS.EQ.22) HNUM=PMS1*(2.*FOUR10*FOUR12*FOUR02- 
lund_crm1_evtgen.F:     &  PMS1*FOUR02**2-PMS0*FOUR12**2-PMS2*FOUR10**2+PMS1*PMS0*PMS2) 
lund_crm1_evtgen.F:        HNUM=MAX(1E-6*PMS1**2*PMS0*PMS2,HNUM) 
lund_crm1_evtgen.F:        HDEN=(FOUR10**2-PMS1*PMS0)*(FOUR12**2-PMS1*PMS2) 
lund_crm1_evtgen.F:        HX1=2.*FOUR(IP,N+1)/P(IP,5)**2 
lund_crm1_evtgen.F:        WT=((1.-HX1)/(HX2*HX3))**2+((1.-HX2)/(HX1*HX3))**2+ 
lund_crm1_evtgen.F:     &  ((1.-HX3)/(HX1*HX2))**2 
lund_crm1_evtgen.F:        IF(K(IP+1,2).EQ.22.AND.(1.-HX1)*P(IP,5)**2.LT.4.*PARJ(32)**2) 
lund_crm1_evtgen.F:      ELSEIF(MMAT.EQ.41) THEN 
lund_crm1_evtgen.F:        HX1=2.*FOUR(IP,N+1)/P(IP,5)**2 
lund_crm1_evtgen.F:        HXM=MIN(0.75,2.*(1.-PS/P(IP,5))) 
lund_crm1_evtgen.F:        IF(HX1*(3.-2.*HX1).LT.RLU(0)*HXM*(3.-2.*HXM)) GOTO 420 
lund_crm1_evtgen.F:        IF(MBST.EQ.0) WT=FOUR(IP,N+1)*FOUR(N+2,N+3) 
lund_crm1_evtgen.F:        IF(MBST.EQ.1) WT=P(IP,5)*P(N+1,4)*FOUR(N+2,N+3) 
lund_crm1_evtgen.F:        IF(WT.LT.RLU(0)*P(IP,5)*PV(1,5)**3/WTCOR(10)) GOTO 420 
lund_crm1_evtgen.F:        DO 580 J=1,4 
lund_crm1_evtgen.F:        P(N+NP+1,J)=0. 
lund_crm1_evtgen.F:        P(N+NP+1,J)=P(N+NP+1,J)+P(IS,J) 
lund_crm1_evtgen.F:        IF(MBST.EQ.0) WT=FOUR(IP,N+1)*FOUR(N+2,N+NP+1) 
lund_crm1_evtgen.F:        IF(MBST.EQ.1) WT=P(IP,5)*P(N+1,4)*FOUR(N+2,N+NP+1) 
lund_crm1_evtgen.F:        IF(WT.LT.RLU(0)*P(IP,5)*PV(1,5)**3/WTCOR(10)) GOTO 420 
lund_crm1_evtgen.F:        IF(MSGN.GT.0) WT=FOUR(IM,N+1)*FOUR(N+2,IP+1) 
lund_crm1_evtgen.F:        IF(MSGN.LT.0) WT=FOUR(IM,N+2)*FOUR(N+1,IP+1) 
lund_crm1_evtgen.F:        IF(WT.LT.RLU(0)*P(IM,5)**4/WTCOR(10)) GOTO 490 
lund_crm1_evtgen.F:  590 IF(MREM.EQ.1) THEN 
lund_crm1_evtgen.F:        DO 600 J=1,5 
lund_crm1_evtgen.F:        PV(1,J)=PV(1,J)/(1.-PQT) 
lund_crm1_evtgen.F:        ND=ND+1 
lund_crm1_evtgen.F:      IF((MMAT.EQ.31.OR.MMAT.EQ.45).AND.ND.EQ.3) THEN 
lund_crm1_evtgen.F:        MSTJ(93)=1 
lund_crm1_evtgen.F:        MSTJ(93)=1 
lund_crm1_evtgen.F:        K(N+2,1)=1 
lund_crm1_evtgen.F:        PS=P(N+1,5)+P(N+2,5) 
lund_crm1_evtgen.F:        MSTJ(93)=1 
lund_crm1_evtgen.F:        MSTJ(93)=1 
lund_crm1_evtgen.F:        K(N+3,1)=1 
lund_crm1_evtgen.F:        DO 610 J=1,3 
lund_crm1_evtgen.F:  610   CONTINUE 
lund_crm1_evtgen.F:        P(N+3,4)=SQRT(P(N+3,1)**2+P(N+3,2)**2+P(N+3,3)**2+P(N+3,5)**2) 
lund_crm1_evtgen.F:        HA=P(N+1,4)**2-P(N+2,4)**2 
lund_crm1_evtgen.F:        HB=HA-(P(N+1,5)**2-P(N+2,5)**2) 
lund_crm1_evtgen.F:        HC=(P(N+1,1)-P(N+2,1))**2+(P(N+1,2)-P(N+2,2))**2+ 
lund_crm1_evtgen.F:     &  (P(N+1,3)-P(N+2,3))**2 
lund_crm1_evtgen.F:        HD=(PV(1,4)-P(N+3,4))**2 
lund_crm1_evtgen.F:        HE=HA**2-2.*HD*(P(N+1,4)**2+P(N+2,4)**2)+HD**2 
lund_crm1_evtgen.F:        DO 620 J=1,3 
lund_crm1_evtgen.F:        PCOR=HH*(P(N+1,J)-P(N+2,J)) 
lund_crm1_evtgen.F:        P(N+1,J)=P(N+1,J)+PCOR 
lund_crm1_evtgen.F:        P(N+1,4)=SQRT(P(N+1,1)**2+P(N+1,2)**2+P(N+1,3)**2+P(N+1,5)**2) 
lund_crm1_evtgen.F:        P(N+2,4)=SQRT(P(N+2,1)**2+P(N+2,2)**2+P(N+2,3)**2+P(N+2,5)**2) 
lund_crm1_evtgen.F:        ND=ND-1 
lund_crm1_evtgen.F:     &.AND.IABS(K(N+1,2)).LT.10) THEN 
lund_crm1_evtgen.F:        PMR=SQRT(MAX(0.,P(N+1,5)**2+P(N+2,5)**2+2.*FOUR(N+1,N+2))) 
lund_crm1_evtgen.F:        MSTJ(93)=1 
lund_crm1_evtgen.F:        PM1=ULMASS(K(N+1,2)) 
lund_crm1_evtgen.F:        MSTJ(93)=1 
lund_crm1_evtgen.F:        IF(PMR.GT.PARJ(32)+PM1+PM2) GOTO 640 
lund_crm1_evtgen.F:        KFLDUM=INT(1.5+RLU(0)) 
lund_crm1_evtgen.F:        CALL LUKFDI(K(N+1,2),-ISIGN(KFLDUM,K(N+1,2)),KFLDMP,KF1) 
lund_crm1_evtgen.F:        IF(KF1.EQ.0.OR.KF2.EQ.0) GOTO 260 
lund_crm1_evtgen.F:        PSM=ULMASS(KF1)+ULMASS(KF2) 
lund_crm1_evtgen.F:        IF(ND.EQ.4.OR.KFA.EQ.15) GOTO 260 
lund_crm1_evtgen.F:        K(N+1,1)=1 
lund_crm1_evtgen.F:        KFTEMP=K(N+1,2) 
lund_crm1_evtgen.F:        CALL LUKFDI(KFTEMP,K(N+2,2),KFLDMP,K(N+1,2)) 
lund_crm1_evtgen.F:        IF(K(N+1,2).EQ.0) GOTO 260 
lund_crm1_evtgen.F:        P(N+1,5)=ULMASS(K(N+1,2)) 
lund_crm1_evtgen.F:        PS=P(N+1,5)+P(N+2,5) 
lund_crm1_evtgen.F:        IF(PS+PARJ(64).GT.PV(1,5)) GOTO 260 
lund_crm1_evtgen.F:  640 IF((MMAT.EQ.42.OR.MMAT.EQ.48).AND.IABS(K(N+1,2)).LT.10) THEN 
lund_crm1_evtgen.F:        KFLO(1)=K(N+1,2) 
lund_crm1_evtgen.F:        K(N+1,1)=K(N+3,1) 
lund_crm1_evtgen.F:        K(N+1,2)=K(N+3,2) 
lund_crm1_evtgen.F:        DO 650 J=1,5 
lund_crm1_evtgen.F:        PV(1,J)=P(N+1,J)+P(N+2,J) 
lund_crm1_evtgen.F:        P(N+1,J)=P(N+3,J) 
lund_crm1_evtgen.F:        PV(1,5)=PMR 
lund_crm1_evtgen.F:        N=N+1 
lund_crm1_evtgen.F:        PSQ=ULMASS(KFLO(1)) 
lund_crm1_evtgen.F:        MMAT=11 
lund_crm1_evtgen.F:      IF(MBST.EQ.1) THEN 
lund_crm1_evtgen.F:        DO 670 J=1,3 
lund_crm1_evtgen.F:        DO 690 I=NSAV+1,N 
lund_crm1_evtgen.F:        BEP=BE(1)*P(I,1)+BE(2)*P(I,2)+BE(3)*P(I,3) 
lund_crm1_evtgen.F:        DO 680 J=1,3 
lund_crm1_evtgen.F:        P(I,J)=P(I,J)+GA*(GA*BEP/(1.+GA)+P(I,4))*BE(J) 
lund_crm1_evtgen.F:      DO 710 I=NSAV+1,N 
lund_crm1_evtgen.F:      DO 700 J=1,4 
lund_crm1_evtgen.F:  710 CONTINUE 
lund_crm1_evtgen.F:      IF(MSTJ(23).GE.1.AND.MMAT.EQ.4.AND.K(NSAV+1,2).EQ.21) THEN 
lund_crm1_evtgen.F:        K(NSAV+1,1)=3 
lund_crm1_evtgen.F:        K(NSAV+2,1)=3 
lund_crm1_evtgen.F:        K(NSAV+3,1)=3 
lund_crm1_evtgen.F:        K(NSAV+1,4)=MSTU(5)*(NSAV+2) 
lund_crm1_evtgen.F:        K(NSAV+1,5)=MSTU(5)*(NSAV+3) 
lund_crm1_evtgen.F:        K(NSAV+2,5)=MSTU(5)*(NSAV+1) 
lund_crm1_evtgen.F:        K(NSAV+3,4)=MSTU(5)*(NSAV+1) 
lund_crm1_evtgen.F:        MSTJ(92)=-(NSAV+1) 
lund_crm1_evtgen.F:      ELSEIF(MSTJ(23).GE.1.AND.MMAT.EQ.4) THEN 
lund_crm1_evtgen.F:        K(NSAV+2,1)=3 
lund_crm1_evtgen.F:        K(NSAV+3,1)=3 
lund_crm1_evtgen.F:      ELSEIF(MSTJ(23).GE.1.AND.(MMAT.EQ.32.OR.MMAT.EQ.44.OR.MMAT.EQ.46) 
lund_crm1_evtgen.F:     &.AND.IABS(K(NSAV+1,2)).LE.10.AND.IABS(K(NSAV+2,2)).LE.10) THEN 
lund_crm1_evtgen.F:        K(NSAV+1,1)=3 
lund_crm1_evtgen.F:        K(NSAV+2,1)=3 
lund_crm1_evtgen.F:        K(NSAV+1,4)=MSTU(5)*(NSAV+2) 
lund_crm1_evtgen.F:        K(NSAV+1,5)=MSTU(5)*(NSAV+2) 
lund_crm1_evtgen.F:        K(NSAV+2,4)=MSTU(5)*(NSAV+1) 
lund_crm1_evtgen.F:        K(NSAV+2,5)=MSTU(5)*(NSAV+1) 
lund_crm1_evtgen.F:        MSTJ(92)=NSAV+1 
lund_crm1_evtgen.F:      ELSEIF(MSTJ(23).GE.1.AND.(MMAT.EQ.32.OR.MMAT.EQ.44.OR.MMAT.EQ.46) 
lund_crm1_evtgen.F:     &.AND.IABS(K(NSAV+1,2)).LE.20.AND.IABS(K(NSAV+2,2)).LE.20) THEN 
lund_crm1_evtgen.F:        MSTJ(92)=NSAV+1 
lund_crm1_evtgen.F:      ELSEIF(MSTJ(23).GE.1.AND.MMAT.EQ.33.AND.IABS(K(NSAV+2,2)).EQ.21) 
lund_crm1_evtgen.F:        K(NSAV+1,1)=3 
lund_crm1_evtgen.F:        K(NSAV+2,1)=3 
lund_crm1_evtgen.F:        K(NSAV+3,1)=3 
lund_crm1_evtgen.F:        KCP=LUCOMP(K(NSAV+1,2)) 
lund_crm1_evtgen.F:        KQP=KCHG(KCP,2)*ISIGN(1,K(NSAV+1,2)) 
lund_crm1_evtgen.F:        K(NSAV+1,JCON)=MSTU(5)*(NSAV+2) 
lund_crm1_evtgen.F:        K(NSAV+2,9-JCON)=MSTU(5)*(NSAV+1) 
lund_crm1_evtgen.F:        MSTJ(92)=NSAV+1 
lund_crm1_evtgen.F:      ELSEIF(MSTJ(23).GE.1.AND.MMAT.EQ.33) THEN 
lund_crm1_evtgen.F:        K(NSAV+1,1)=3 
lund_crm1_evtgen.F:        K(NSAV+3,1)=3 
lund_crm1_evtgen.F:        K(NSAV+1,4)=MSTU(5)*(NSAV+3) 
lund_crm1_evtgen.F:        K(NSAV+1,5)=MSTU(5)*(NSAV+3) 
lund_crm1_evtgen.F:        K(NSAV+3,4)=MSTU(5)*(NSAV+1) 
lund_crm1_evtgen.F:        K(NSAV+3,5)=MSTU(5)*(NSAV+1) 
lund_crm1_evtgen.F:        MSTJ(92)=NSAV+1 
lund_crm1_evtgen.F:      ELSEIF(MSTJ(27).GE.1.AND.MMAT.EQ.45.AND.ND.EQ.3) THEN 
lund_crm1_evtgen.F:        K(NSAV+2,1)=3 
lund_crm1_evtgen.F:        K(NSAV+3,1)=3 
lund_crm1_evtgen.F:        MSTJ(92)=NSAV+1 
lund_crm1_evtgen.F:      IF(K(IP,1).EQ.5) K(IP,1)=15 
lund_crm1_evtgen.F:      IF(K(IP,1).LE.10) K(IP,1)=11 
lund_crm1_evtgen.F:      IF(MMIX.EQ.1.AND.MSTJ(26).EQ.2.AND.K(IP,1).EQ.11) K(IP,1)=12 
lund_crm1_evtgen.F:      K(IP,4)=NSAV+1 
lund_crm1_evtgen.F:       SUBROUTINE cgparity(ip1,ip2,ip3,kgok,ngg,icg) 
lund_crm1_evtgen.F:*   Purpose:(1) Initial C&G parities of mesons(PDG98).                      *
lund_crm1_evtgen.F:*                   C=(-1)^J, G=(-1)^I*C                                    *
lund_crm1_evtgen.F:*    called:  luexec1.f, ludecy1.f                                          *
lund_crm1_evtgen.F:*   used in:  luexec1.f, ludecy1.f                                          *
lund_crm1_evtgen.F:*   lgp1(i):  KF of meson ith meson, 1<i<ndim number of mesons.             *
lund_crm1_evtgen.F:*    pgp(i):  The ith meson takes I+J or I+J+1.                             *
lund_crm1_evtgen.F:*     input:  ip1, decay meson position in the /LUJETS/;                    *
lund_crm1_evtgen.F:*             ngg, 1/2 ggg/gamma*gg                                         *
lund_crm1_evtgen.F:*             icg 1=Cparity/2=Gparity                                       *
lund_crm1_evtgen.F:*    output:  kgok,1:C/Gparity ok; -1:bad;                                  *
lund_crm1_evtgen.F:*                                      Chen Jiangchuan  1999.11.28          *
lund_crm1_evtgen.F:      parameter (ndim=100,npart=62)
lund_crm1_evtgen.F:      integer kgok,ip,ip1,ip2,ip3,initg,lastg,istatus,i,ndecy,orbitj
lund_crm1_evtgen.F:      integer lgp1(ndim),lgp2c(ndim),lgp3(20),lgp2g(ndim),lgpJ(ndim),
lund_crm1_evtgen.F:      save lgp1,lgp2c,lgp2g,lgpJ,lgpI,pgj,pgi
lund_crm1_evtgen.F:c               pi+ pi0 eta  eta'  f0    f0'    f1   f1'   f2 f2'  rho+
lund_crm1_evtgen.F:      data lgp1/211,111,221, 331, 10221,10331,20223,20333,225,335,213,
lund_crm1_evtgen.F:c     rho0 omega a0+  a00  a1+  a10   a2+ a20 phi   h1    h1'  h1c
lund_crm1_evtgen.F:     &113,223,10211,10111,20213,20113,215,115,333,10223,10333,10443,
lund_crm1_evtgen.F:c     b1+   b10  etac J/psi xc0  xc1  xc2 psi(2s) upslon upsilon' etab
lund_crm1_evtgen.F:     &10213,10113,441, 443,10441,20443,445,30443,  553,  30553, 551,
lund_crm1_evtgen.F:     & 22,  3122,3112,3222,3212,3214,3114, 3224,3312,3322,
lund_crm1_evtgen.F:c      Delta+ Delta- Delta0 Delta++ K+ K0 K*+ K*0  K1+  K10   K0*+ 
lund_crm1_evtgen.F:     & 2214,  1114,  2114,  2224, 321,311,323,313,10323,10313,10321,
lund_crm1_evtgen.F:c      K0*0  K1*+  K1*0   K2*+ K2*0 n0  p+ 
lund_crm1_evtgen.F:     &10311,20323,20313, 325, 315,2112,2212,38*0/
lund_crm1_evtgen.F:c               pi+pi0 eta eta' f0   f0'   f1   f1'  f2  f2' rho+
lund_crm1_evtgen.F:      data lgp2c/0, +1, +1, +1, +1,  +1,   +1,  +1,  +1, +1, 0,
lund_crm1_evtgen.F:c      rho0 omega a0+  a00  a1+  a10  a2+ a20 phi   h1    h1' h1c
lund_crm1_evtgen.F:     &  -1,  -1,  0,   +1,   0,   +1,  0, +1,  -1,  -1,   -1,  -1,
lund_crm1_evtgen.F:c      b1+ b10  etac J/psi xc0  xc1  xc2 psi(2s) upslon upsilon'etab
lund_crm1_evtgen.F:     &  0,  -1,   +1,   -1, +1,  +1,  +1,   -1,     -1,    -1,  +1,
lund_crm1_evtgen.F:     &  -1, 65*0/
lund_crm1_evtgen.F:c               pi+-pi0 eta  eta' f0   f0'   f1   f1'   f2 f2' rho+-
lund_crm1_evtgen.F:      data lgp2g/-1, -1, +1, +1,  +1,  +1,   +1,  +1,  +1, +1,  +1,
lund_crm1_evtgen.F:c      rho0 omega a0+  a00  a1+   a10   a2+ a20 phi   h1    h1'  h1c
lund_crm1_evtgen.F:     &  +1,  -1, -1,   -1,  -1,   -1,   -1, -1, -1,  -1,   -1,   -1,
lund_crm1_evtgen.F:c      b1+   b10  etac J/psi xc0  xc1  xc2 psi(2s) upslon upsilon' etab
lund_crm1_evtgen.F:     &  +1,  +1,   +1,   -1, +1,  +1,  +1,   -1,     -1,     -1,   +1,
lund_crm1_evtgen.F:c               pi+pi0 eta eta' f0   f0' f1   f1'  f2  f2' rho+
lund_crm1_evtgen.F:c      rho0 omega a0+  a00  a1+   a10  a2+ a20 phi h1   h1' h1c
lund_crm1_evtgen.F:c      b1+ b10  etac J/psi xc0  xc1  xc2 psi(2s) upslon upsilon'etab
lund_crm1_evtgen.F:     &  2,   1,   1,    1,  1,   3,   3,     3,   1,   1,
lund_crm1_evtgen.F:c      Delta+ Delta- Delta0 Delta++ K+ K0 K*+ K*0  K1+  K10   K0*+ 
lund_crm1_evtgen.F:c      K0*0  K1*+  K1*0  K2*+ K2*0 n0   p+ 
lund_crm1_evtgen.F:     &  0,    2,    2,    4, 4,   1,   1,38*0/
lund_crm1_evtgen.F:c               pi+pi0 eta eta' f0   f0' f1   f1'  f2  f2' rho+
lund_crm1_evtgen.F:c      rho0 omega a0+  a00  a1+   a10  a2+ a20 phi h1   h1' h1c
lund_crm1_evtgen.F:c      b1+ b10  etac J/psi xc0  xc1  xc2 psi(2s) upslon upsilon'etab
lund_crm1_evtgen.F:     &  0,   0,   2,   2,  2,   2,     2,    2,   1,   1,
lund_crm1_evtgen.F:c      Delta+ Delta- Delta0 Delta++ K+ K0 K*+ K*0  K1+  K10  K0*+ 
lund_crm1_evtgen.F:     &  3,      3,     3,     3,    1, 1, 1,   1,  1,   1,   1,
lund_crm1_evtgen.F:c      K0*0  K1*+  K1*0   K2*+ K2*0 n0   p+ 
lund_crm1_evtgen.F:     &  1,    1,    1,    1,   1,   1,   1,38*0/
lund_crm1_evtgen.F:c               pi+pi0 eta eta' f0   f0' f1   f1'  f2  f2' rho+
lund_crm1_evtgen.F:      data pgj/.0 , 1., 1., 1. , 1.,  1., 0.,  0.,  1., 1., 1.,
lund_crm1_evtgen.F:c      rho0 omega a0+  a00  a1+   a10  a2+ a20 phi h1   h1' h1c
lund_crm1_evtgen.F:     &  1.,  1.,  1.,  1.,  1.,   0.,  .0, 1.,1., 1.,  1., 1.,
lund_crm1_evtgen.F:c      b1+ b10  etac J/psi xc0  xc1  xc2 psi(2s) upslon upsilon'etab
lund_crm1_evtgen.F:     & 1., 1.,   1.,   1.,  1.,  0.,  1.,  1.,     1.,  1., 1.,
lund_crm1_evtgen.F:     &1. , .07,  .15, .15, .15,  .2 ,  .2 , .2 ,   .7, .7,
lund_crm1_evtgen.F:c      Delta+ Delta- Delta0 Delta++ K+ k0 K*+ K*0  K1+  K10  K0*+ 
lund_crm1_evtgen.F:c      K0*0  K1*+  K1*0   K2*+ K2*0 n0   p+ 
lund_crm1_evtgen.F:c               pi+pi0 eta eta' f0   f0' f1   f1'  f2  f2' rho+
lund_crm1_evtgen.F:      data pgi/1. , 1., 1., 1. , 1.,  1., 1.,  1.,  1., 1., 1.,
lund_crm1_evtgen.F:c      rho0 omega a0+  a00  a1+   a10  a2+ a20 phi h1   h1' h1c
lund_crm1_evtgen.F:     &  1.,  1.,  1.,  1.,  1.,   1.,  1., 1.,1., 1.,  1., 1.,
lund_crm1_evtgen.F:c      b1+ b10  etac J/psi xc0  xc1  xc2 psi(2s) upslon upsilon'etab
lund_crm1_evtgen.F:     & 1., 1.,   1.,   1.,  1.,  1.,  1.,  1.,     1.,  1., 1.,
lund_crm1_evtgen.F:     &.5 ,  1.,  1.,  1. , 1. ,  1.,   1.,   1.,  1. ,1. ,
lund_crm1_evtgen.F:c      Delta+ Delta- Delta0 Delta++ K+ K0 K*+ K*0  K1+  K10  K0*+ 
lund_crm1_evtgen.F:     &  1.,    1.,    1.,    1.,  1. ,1. ,1., 1.,  1.,  1.,  1.,
lund_crm1_evtgen.F:c      K0*0  K1*+  K1*0   K2*+ K2*0 n0   p+ 
lund_crm1_evtgen.F:     & 1.,   1.,   1.,    1.,  1., .02, .02, 38*0/
lund_crm1_evtgen.F:      kgok=-1
lund_crm1_evtgen.F:      do 10 i=1,npart
lund_crm1_evtgen.F:        if(abs(k(ip1,2)).eq.lgp1(i)) then
lund_crm1_evtgen.F:          if(icg.eq.1) initG=lgp2c(i)
lund_crm1_evtgen.F:10    continue 
lund_crm1_evtgen.F:        kgok=1
lund_crm1_evtgen.F:        ndecy=ndecy+1
lund_crm1_evtgen.F:          kgok=1
lund_crm1_evtgen.F:	do 30 i=1,npart
lund_crm1_evtgen.F:          if(abs(k(ip,2)).eq.lgp1(i)) then
lund_crm1_evtgen.F:c..C=C'(for normal neutral meson) or 1*(-1)**J(for charge,strang and baryon)
lund_crm1_evtgen.F:	      if(icg.eq.1) then
lund_crm1_evtgen.F:                  lgp3(ndecy)=1
lund_crm1_evtgen.F:                  if(RLU(0).gt.pgj(i)) orbitj=orbitj+1
lund_crm1_evtgen.F:c..G=G'(for normal neutral meson) of C'(-1)**I (for strang meson and baryon)
lund_crm1_evtgen.F:		  lgp3(ndecy)=1
lund_crm1_evtgen.F:	          if(RLU(0).gt.pgj(i)) orbitj=orbitj+1
lund_crm1_evtgen.F:                if(RLU(0).gt.pgi(i)) orbiti=orbiti+1
lund_crm1_evtgen.F:                kgok=1
lund_crm1_evtgen.F:      lastG=1
lund_crm1_evtgen.F:      do 50 i=1,ndecy
lund_crm1_evtgen.F:      if(orbitj.ge.2) lastg=lastg*(-1)**(orbitj/2) 
lund_crm1_evtgen.F:      if(orbiti.ge.2) lastg=lastg*(-1)**(orbiti/2)
lund_crm1_evtgen.F:        kgok=1
lund_crm1_evtgen.F:        kgok=-1
lund_crm1_evtgen.F:      SUBROUTINE psupress(ip1,ip2,ip3,ksok) 
lund_crm1_evtgen.F:*   Purpose:(1) Supression particle production(for rho pi puzzle).          *
lund_crm1_evtgen.F:*    called:  luexec1.f, ludecy1.f                                          *
lund_crm1_evtgen.F:*   used in:  luexec1.f, ludecy1.f                                          *
lund_crm1_evtgen.F:*   lgp1(i):  KF of meson which be supressed.                               *
lund_crm1_evtgen.F:*     input:  ip1, decay meson position in the /LUJETS/;                    *
lund_crm1_evtgen.F:*    output:  ksok,1: no supress; -1:upress                                 *
lund_crm1_evtgen.F:*                                      Chen Jiangchuan  1998.5.31           *
lund_crm1_evtgen.F:      integer lgp1(ndim),lgp2(ndim)
lund_crm1_evtgen.F:      integer ksok,ip,ip1,ip2,ip3,i,istatus
lund_crm1_evtgen.F:      save lgp1,pgp
lund_crm1_evtgen.F:c               pi+ pi0 eta  eta'  f0    f0'    f1   f1'   f2 f2'  rho+
lund_crm1_evtgen.F:c     data lgp1/211,111,221, 331, 10221,10331,20223,20333,225,335,213,
lund_crm1_evtgen.F:c     rho0 omega a0+  a00  a1+   a10   a2+ a20 phi   h1    h1'  h1c
lund_crm1_evtgen.F:c    &113,223,10211,10111,20213,20113,215,115,333,10223,10333,10443,
lund_crm1_evtgen.F:c     b1+   b10  etac J/psi xc0  xc1  xc2 psi(2s) upslon upsilon' etab
lund_crm1_evtgen.F:c    &10213,10113,441, 443,10441,20443,445,30443,  553,  30553, 551,
lund_crm1_evtgen.F:c    & 22,  3122,3112,3222,3212,3214,3114, 3224,3312,3322,
lund_crm1_evtgen.F:c      Delta+ Delta- Delta0 Delta++ K+ K0 K*+ K*0  K1+  K10   K0*+ 
lund_crm1_evtgen.F:c    & 2214,  1114,  2114,  2224, 321,311,323,313,10323,10313,10321,
lund_crm1_evtgen.F:c      K0*0  K1*+  K1*0   K2*+ K2*0 n0    p+ 
lund_crm1_evtgen.F:c    &10311,20323,20313, 325, 315,2112,2212,88*0/
lund_crm1_evtgen.F:       data lgp1/211, 213, 111, 113, 16*0/ 
lund_crm1_evtgen.F:       data lgp2/1,  9,   1,   9, 16*0/ 
lund_crm1_evtgen.F:      data  pgp/1., .9, 1.,  .9, 16*0/
lund_crm1_evtgen.F:      ksok=1
lund_crm1_evtgen.F:      if(k(ip1,2).ne.443.and.k(ip1,2).ne.30443) return
lund_crm1_evtgen.F:      if(ip3-ip2.eq.1) then
lund_crm1_evtgen.F:        do 30 i=1,npart
lund_crm1_evtgen.F:          if(abs(k(ip,2)).eq.lgp1(i)) then
lund_crm1_evtgen.F:      if(istatus.eq.10) then 
lund_crm1_evtgen.F:       ksok=-1
lund_crm1_evtgen.F:*   Purpose:(1) update some parameters in the jetset7.4                     *
lund_crm1_evtgen.F:*    called:  lund1.f                                                       *
lund_crm1_evtgen.F:*   used in:  ludecy1.f                                                     *
lund_crm1_evtgen.F:*    (1) IDC region of new data: J/psi(1-50), psi(2s)(51-100):              *
lund_crm1_evtgen.F:*     (mdcy_charm(1)=50 for IDCmax of J/psi, mdcy_charm(2)=100 for psi(2s). *
lund_crm1_evtgen.F:*    (2)mdme_charm(IDC,1)=1/0 on/off decay channel;                         *
lund_crm1_evtgen.F:*                                      Chen Jiangchuan  1998.5.11           *
lund_crm1_evtgen.F:c     (1) update eta_c mass and width;                                      *
lund_crm1_evtgen.F:c                                      Chen J.C. 2002.07.11                 *
lund_crm1_evtgen.F:      COMMON/LUDAT1/MSTU(200),PARU(200),MSTJ(200),PARJ(200) 
lund_crm1_evtgen.F:      common/charm/mdcy_charm(2),mdme_charm(100,2), brat_charm(100),
lund_crm1_evtgen.F:     &  kfdp_charm(100,5)
lund_crm1_evtgen.F:      data mdcy_charm,mdme_charm,brat_charm,kfdp_charm/50,100,800*0/
lund_crm1_evtgen.F:c      parj(127)=0.7              ! (D=1.)GeV Mass_min(g)(safe margin)
lund_crm1_evtgen.F:c      parj(126)=1.               ! (D=2.)GeV Mass_min(gg) in 3-4 Jet
lund_crm1_evtgen.F:c      parj(32)=parj(127)         ! GeV Mass_min(q)
lund_crm1_evtgen.F:c       parj(126)=1.               ! (D=2.)GeV Mass_min(gg) (merge g-g to g)
lund_crm1_evtgen.F:        pmas(lucomp(441),1)=2.9798           !eta_c mass(GeV)
lund_crm1_evtgen.F:        pmas(lucomp(441),2)=0.0132            !width of mass(GeV)
lund_crm1_evtgen.F:        pmas(lucomp(441),3)=0.0500            !maximum deviation(GeV)
lund_crm1_evtgen.F:         IDC_f0 = lucomp(10221)
lund_crm1_evtgen.F:        pmas(IDC_f0,1)=0.980
lund_crm1_evtgen.F:c       do idc_f0i = mdcy(IDC_f0,2)+2,mdcy(IDC_f0,2)+mdcy(IDC_f0,3)-1
lund_crm1_evtgen.F:c                 mdme(idc_f0i,1) = 0          ! switch off f0 -> KK
lund_crm1_evtgen.F:        brat(721)=0.0602       !J/psi-->e+e-
lund_crm1_evtgen.F:        mdme(721,2)=3          ! for 1+A*cos^2(theta) angular distribution
lund_crm1_evtgen.F:        brat(722)=0.0601       !J/psi-->mu+mu-
lund_crm1_evtgen.F:        mdme(722,2)=3          ! for 1+A*cos^2(theta) angular distribution
lund_crm1_evtgen.F:c...hadron(bran(qq~))-->qq~(0.17)+rgg/ggg+retac(0.013)+other_news
lund_crm1_evtgen.F:        brat(723)=0.8797       !J/psi-->hadron     !ran(qq~)=1-(e+e-)-(mu+mu-)
lund_crm1_evtgen.F:c...adding decay channels(included in brat(J/psi-->hadron)),used in ludecy1.f:
lund_crm1_evtgen.F:        brat_charm(1)=0.17           !J/psi-->qq~
lund_crm1_evtgen.F:        mdme_charm(1,1)=mdme(723,1)
lund_crm1_evtgen.F:        mdme_charm(1,2)=mdme(723,2)
lund_crm1_evtgen.F:        kfdp_charm(1,1)=kfdp(723,1)
lund_crm1_evtgen.F:        kfdp_charm(1,2)=kfdp(723,2)
lund_crm1_evtgen.F:cjc        brat_charm(2)=0.64163 !J/psi-->rgg/ggg=brat(723)-qq~-charmonia-news
lund_crm1_evtgen.F:        mdme_charm(2,1)=1
lund_crm1_evtgen.F:        Kfdp_charm(2,1)=21
lund_crm1_evtgen.F:        kfdp_charm(2,2)=21
lund_crm1_evtgen.F:        kfdp_charm(2,3)=21
lund_crm1_evtgen.F:        brat_charm(3)=0.013          !(charmonia) J/psi-->gamma etac
lund_crm1_evtgen.F:        mdme_charm(3,1)=1
lund_crm1_evtgen.F:        kfdp_charm(3,1)=441
lund_crm1_evtgen.F:        mdme_charm(4,1)=1
lund_crm1_evtgen.F:        kfdp_charm(4,1)=213
lund_crm1_evtgen.F:        kfdp_charm(4,2)=-211
lund_crm1_evtgen.F:        mdme_charm(5,1)=1
lund_crm1_evtgen.F:        kfdp_charm(5,1)=-213
lund_crm1_evtgen.F:        kfdp_charm(5,2)=211
lund_crm1_evtgen.F:        mdme_charm(6,1)=1
lund_crm1_evtgen.F:        kfdp_charm(6,1)=113
lund_crm1_evtgen.F:        kfdp_charm(6,2)=111
lund_crm1_evtgen.F:        brat_charm(7)=0.0019          !other more J/psi-->a_2- pi+
lund_crm1_evtgen.F:        mdme_charm(7,1)=1
lund_crm1_evtgen.F:        kfdp_charm(7,1)=-215
lund_crm1_evtgen.F:        kfdp_charm(7,2)=211
lund_crm1_evtgen.F:        brat_charm(8)=0.0019          !other more J/psi-->a_2+ pi-
lund_crm1_evtgen.F:        mdme_charm(8,1)=1
lund_crm1_evtgen.F:        kfdp_charm(8,1)=215
lund_crm1_evtgen.F:        kfdp_charm(8,2)=-211
lund_crm1_evtgen.F:        brat_charm(9)=0.0019          !other more J/psi-->a_20 pi0 
lund_crm1_evtgen.F:        mdme_charm(9,1)=1
lund_crm1_evtgen.F:        kfdp_charm(9,1)=115
lund_crm1_evtgen.F:        kfdp_charm(9,2)=111
lund_crm1_evtgen.F:        brat_charm(10)=0.0031          !other more J/psi-->a_2- rho+
lund_crm1_evtgen.F:        mdme_charm(10,1)=1
lund_crm1_evtgen.F:        mdme_charm(10,2)=0
lund_crm1_evtgen.F:        kfdp_charm(10,1)=-215
lund_crm1_evtgen.F:        kfdp_charm(10,2)=213
lund_crm1_evtgen.F:        brat_charm(11)=0.0031          !other more J/psi-->a_2+ rho-
lund_crm1_evtgen.F:        mdme_charm(11,1)=1
lund_crm1_evtgen.F:        mdme_charm(11,2)=0
lund_crm1_evtgen.F:        kfdp_charm(11,1)=215
lund_crm1_evtgen.F:        kfdp_charm(11,2)=-213
lund_crm1_evtgen.F:        brat_charm(12)=0.0032          !other more J/psi-->a_20 rho0 
lund_crm1_evtgen.F:        mdme_charm(12,1)=1
lund_crm1_evtgen.F:        mdme_charm(12,2)=0
lund_crm1_evtgen.F:        kfdp_charm(12,1)=115
lund_crm1_evtgen.F:        kfdp_charm(12,2)=113
lund_crm1_evtgen.F:        brat_charm(13)=0.0013          !other more J/psi-->omega eta 
lund_crm1_evtgen.F:        mdme_charm(13,1)=1
lund_crm1_evtgen.F:        mdme_charm(13,2)=0
lund_crm1_evtgen.F:        kfdp_charm(13,1)=223
lund_crm1_evtgen.F:        kfdp_charm(13,2)=221
lund_crm1_evtgen.F:        brat_charm(14)=0.0032          !other more J/psi-->omega f_2 
lund_crm1_evtgen.F:        mdme_charm(14,1)=1
lund_crm1_evtgen.F:        mdme_charm(14,2)=0
lund_crm1_evtgen.F:        kfdp_charm(14,1)=223
lund_crm1_evtgen.F:        kfdp_charm(14,2)=225
lund_crm1_evtgen.F:        brat_charm(15)=0.0009          !other more J/psi-->pp~ omega 
lund_crm1_evtgen.F:        mdme_charm(15,1)=1
lund_crm1_evtgen.F:        mdme_charm(15,2)=0
lund_crm1_evtgen.F:        kfdp_charm(15,1)=223
lund_crm1_evtgen.F:        kfdp_charm(15,2)=2212
lund_crm1_evtgen.F:        kfdp_charm(15,3)=-2212
lund_crm1_evtgen.F:        brat_charm(16)=0.0005          !other more J/psi-->b_1- pi+
lund_crm1_evtgen.F:        mdme_charm(16,1)=1
lund_crm1_evtgen.F:        mdme_charm(16,2)=0
lund_crm1_evtgen.F:        kfdp_charm(16,1)=-10213
lund_crm1_evtgen.F:        kfdp_charm(16,2)=211
lund_crm1_evtgen.F:        brat_charm(17)=0.0005          !other more J/psi-->b_1+ pi-
lund_crm1_evtgen.F:        mdme_charm(17,1)=1
lund_crm1_evtgen.F:        mdme_charm(17,2)=0
lund_crm1_evtgen.F:        kfdp_charm(17,1)=10213
lund_crm1_evtgen.F:        kfdp_charm(17,2)=-211
lund_crm1_evtgen.F:         brat_charm(18)=0.0008          !other more J/psi-->b_10 pi0 
lund_crm1_evtgen.F:         mdme_charm(18,1)=1
lund_crm1_evtgen.F:         mdme_charm(18,2)=0
lund_crm1_evtgen.F:         kfdp_charm(18,1)=10113
lund_crm1_evtgen.F:         kfdp_charm(18,2)=111
lund_crm1_evtgen.F:        brat_charm(19)=0.0024          !other more J/psi-->K+K*-~ 
lund_crm1_evtgen.F:        mdme_charm(19,1)=1
lund_crm1_evtgen.F:        mdme_charm(19,2)=0
lund_crm1_evtgen.F:        kfdp_charm(19,1)=321
lund_crm1_evtgen.F:        kfdp_charm(19,2)=-323
lund_crm1_evtgen.F:        mdme_charm(20,1)=1
lund_crm1_evtgen.F:        kfdp_charm(20,1)=-321
lund_crm1_evtgen.F:        brat_charm(21)=0.0018          !other more J/psi-->K0K*0 
lund_crm1_evtgen.F:        mdme_charm(21,1)=1
lund_crm1_evtgen.F:        mdme_charm(21,2)=0
lund_crm1_evtgen.F:        kfdp_charm(21,1)=311
lund_crm1_evtgen.F:        kfdp_charm(21,2)=-313
lund_crm1_evtgen.F:        brat_charm(22)=0.0018          !other more J/psi-->K0K*0 
lund_crm1_evtgen.F:        mdme_charm(22,1)=1
lund_crm1_evtgen.F:        kfdp_charm(22,1)=-311
lund_crm1_evtgen.F:        kfdp_charm(22,2)=313
lund_crm1_evtgen.F:        mdme_charm(23,1)=1
lund_crm1_evtgen.F:        kfdp_charm(23,1)=323
lund_crm1_evtgen.F:        mdme_charm(24,1)=1
lund_crm1_evtgen.F:        kfdp_charm(24,1)=-323
lund_crm1_evtgen.F:        mdme_charm(25,1)=1
lund_crm1_evtgen.F:        kfdp_charm(25,1)=313
lund_crm1_evtgen.F:        kfdp_charm(25,2)=-315
lund_crm1_evtgen.F:        mdme_charm(26,1)=1
lund_crm1_evtgen.F:        kfdp_charm(26,1)=-313
lund_crm1_evtgen.F:        kfdp_charm(26,2)=315
lund_crm1_evtgen.F:        mdme_charm(27,1)=1
lund_crm1_evtgen.F:        kfdp_charm(27,1)=333
lund_crm1_evtgen.F:        brat_charm(28)=0.00114          !other more J/psi-->phi K+K- 
lund_crm1_evtgen.F:        mdme_charm(28,1)=1
lund_crm1_evtgen.F:        kfdp_charm(28,1)=333
lund_crm1_evtgen.F:        kfdp_charm(28,2)=321
lund_crm1_evtgen.F:        kfdp_charm(28,3)=-321
lund_crm1_evtgen.F:        brat_charm(29)=0.00431          !gamma eta' 
lund_crm1_evtgen.F:        mdme_charm(29,1)=1
lund_crm1_evtgen.F:        kfdp_charm(29,1)=331
lund_crm1_evtgen.F:c        brat(970)=0.21403      !psi(2s)-->ran(qq~) !1-e-mu-(J/psi)-(rad)
lund_crm1_evtgen.F:c        brat(971)=0.302        !psi(2s)-->J/pi pi+pi-
lund_crm1_evtgen.F:c        brat(972)=0.179        !psi(2s)-->J/pi pi0pi0
lund_crm1_evtgen.F:c        brat(976)=0.087        !psi(2s)-->xc1 gamma
lund_crm1_evtgen.F:cCJC/98... on/off(1/0) for Charm-onia decay channel
lund_crm1_evtgen.F:cc        MDME(971,1)=0            !psi(2s)-->J/pi pi+pi-
lund_crm1_evtgen.F:cC        MDME(972,1)=0            !psi(2s)-->J/pi pi0pi0
lund_crm1_evtgen.F:cc        MDME(973,1)=0            !psi(2s)-->J/pi eta
lund_crm1_evtgen.F:cc        MDME(974,1)=0            !psi(2s)-->J/pi pi0
lund_crm1_evtgen.F:cc        MDME(975,1)=0            !psi(2s)-->xc0 gamma
lund_crm1_evtgen.F:cc        MDME(976,1)=0            !psi(2s)-->xc1 gamma
lund_crm1_evtgen.F:cc        MDME(977,1)=0            !psi(2s)-->xc2 gamma
lund_crm1_evtgen.F:cc        MDME(978,1)=0            !psi(2s)-->etac gamma
lund_crm1_evtgen.F:cc... adding decay channels(included in brat(psi-->rad(qq~)), used in ludecy1.f:
lund_crm1_evtgen.F:c        brat_charm(51)=0.029           !psi(2s)-->qq~
lund_crm1_evtgen.F:c        mdme_charm(51,1)=mdme(970,1)
lund_crm1_evtgen.F:c        mdme_charm(51,2)=mdme(970,2)
lund_crm1_evtgen.F:c        kfdp_charm(51,1)=kfdp(970,1)
lund_crm1_evtgen.F:c        kfdp_charm(51,2)=kfdp(970,2)
lund_crm1_evtgen.F:c        brat_charm(52)=0.17188 !psi(2s)-->rgg/ggg=brat(970)-brat(51)-53-54
lund_crm1_evtgen.F:c        mdme_charm(52,1)=1
lund_crm1_evtgen.F:c        kfdp_charm(52,1)=21
lund_crm1_evtgen.F:c        kfdp_charm(52,2)=21
lund_crm1_evtgen.F:c        kfdp_charm(52,3)=21
lund_crm1_evtgen.F:c        brat_charm(53)=0.00315 !psi(2s)-->tau+tau-=0.3885*(Bee+Buu)/2
lund_crm1_evtgen.F:c        mdme_charm(53,1)=1
lund_crm1_evtgen.F:c        kfdp_charm(53,1)=15
lund_crm1_evtgen.F:c        kfdp_charm(53,2)=-15
lund_crm1_evtgen.F:c        brat_charm(54)=0.01    !psi(2s)-->J/psi+mu+mu-
lund_crm1_evtgen.F:c        mdme_charm(54,1)=1
lund_crm1_evtgen.F:c        kfdp_charm(54,1)=443
lund_crm1_evtgen.F:c        kfdp_charm(54,2)=13
lund_crm1_evtgen.F:c        kfdp_charm(54,3)=-13
lund_crm1_evtgen.F:        brat(970)=0.18703      !psi(2s)-->ran(qq~)   ! 1-(e)-(mu)-(J/psi)-(rad)
lund_crm1_evtgen.F:        brat(971)=0.324        !psi(2s)-->J/pi pi+pi-   (PDG(96))
lund_crm1_evtgen.F:        brat(972)=0.184        !psi(2s)-->J/pi pi0pi0   (PDG(96))
lund_crm1_evtgen.F:        brat(976)=0.087        !psi(2s)-->xc1 gamma
lund_crm1_evtgen.F:c... adding decay channels(included in brat(psi-->rad(qq~)), used in ludecy1.f:
lund_crm1_evtgen.F:        brat_charm(51)=0.029           !psi(2s)-->qq~
lund_crm1_evtgen.F:        mdme_charm(51,1)=mdme(970,1)
lund_crm1_evtgen.F:        mdme_charm(51,2)=mdme(970,2)
lund_crm1_evtgen.F:        kfdp_charm(51,1)=kfdp(970,1)
lund_crm1_evtgen.F:        kfdp_charm(51,2)=kfdp(970,2)
lund_crm1_evtgen.F:c        brat_charm(52)=0.14488 !psi(2s)-->rgg/ggg=brat(970)-brat(51)-53-54
lund_crm1_evtgen.F:        brat_charm(52)=0.15488 !psi(2s)-->rgg/ggg=brat(970)-brat(51)-53-54
lund_crm1_evtgen.F:        mdme_charm(52,1)=1
lund_crm1_evtgen.F:        kfdp_charm(52,1)=21
lund_crm1_evtgen.F:        kfdp_charm(52,2)=21
lund_crm1_evtgen.F:        kfdp_charm(52,3)=21
lund_crm1_evtgen.F:        brat_charm(53)=0.00315  !psi(2s)-->tau+tau-=0.3885*(Bee+Buu)/2 (PDG(98))
lund_crm1_evtgen.F:        mdme_charm(53,1)=1
lund_crm1_evtgen.F:        kfdp_charm(53,1)=15
lund_crm1_evtgen.F:        kfdp_charm(53,2)=-15
lund_crm1_evtgen.F:c        brat_charm(54)=0.01    !psi(2s)-->J/psi+mu+mu- (PDG(98))
lund_crm1_evtgen.F:c        mdme_charm(54,1)=1 
lund_crm1_evtgen.F:c        kfdp_charm(54,1)=443
lund_crm1_evtgen.F:c        kfdp_charm(54,2)=13
lund_crm1_evtgen.F:c        kfdp_charm(54,3)=-13
lund_crm1_evtgen.F:              pmas(lucomp(11),1)=0.000510999
lund_crm1_evtgen.F:              pmas(lucomp(13),1)=0.1056584
lund_crm1_evtgen.F:              pmas(lucomp(15),1)=1.7770
lund_crm1_evtgen.F:              pmas(lucomp(111),1)=0.134976
lund_crm1_evtgen.F:              pmas(lucomp(211),1)=0.139570
lund_crm1_evtgen.F:              pmas(lucomp(221),1)=0.54784
lund_crm1_evtgen.F:              pmas(lucomp(310),1)=0.49767
lund_crm1_evtgen.F:              pmas(lucomp(130),1)=0.49767
lund_crm1_evtgen.F:              pmas(lucomp(311),1)=0.49767
lund_crm1_evtgen.F:              pmas(lucomp(321),1)=0.49368
lund_crm1_evtgen.F:              pmas(lucomp(2112),1)=0.9395656
lund_crm1_evtgen.F:              pmas(lucomp(2212),1)=0.9382723
lund_crm1_evtgen.F:      SUBROUTINE LUONIA1(ipp,KFL,ngg) 
lund_crm1_evtgen.F:*      ngg: 1-decay to ggg, 2-decay to rgg                                  *
lund_crm1_evtgen.F:*                                 Chen Jiangchuan 1998.5.31                 *
lund_crm1_evtgen.F:      COMMON/LUDAT1/MSTU(200),PARU(200),MSTJ(200),PARJ(200) 
lund_crm1_evtgen.F:      SAVE /LUJETS/,/LUDAT1/,/LUDAT2/ 
lund_crm1_evtgen.F:      do i=1,5
lund_crm1_evtgen.F:cjc      IF(MSTU(12).GE.1) CALL lulist(1) 
lund_crm1_evtgen.F:        CALL LUERRM(16,'(LUONIA:) called with unknown flavour code') 
lund_crm1_evtgen.F:        IF(MSTU(21).GE.1) RETURN 
lund_crm1_evtgen.F:      IF(ECM.LT.PARJ(127)+2.02*PARF(101)) THEN 
lund_crm1_evtgen.F:        CALL LUERRM(16,'(LUONIA:) called with too small CM energy') 
lund_crm1_evtgen.F:        IF(MSTU(21).GE.1) RETURN 
lund_crm1_evtgen.F:C...Choose x1 and x2 according to matrix element. 
lund_crm1_evtgen.F:  100 X1=RLU(0) 
lund_crm1_evtgen.F:      X3=2.-X1-X2 
lund_crm1_evtgen.F:      IF(X3.GE.1..OR.((1.-X1)/(X2*X3))**2+((1.-X2)/(X1*X3))**2+ 
lund_crm1_evtgen.F:     &((1.-X3)/(X1*X2))**2.LE.2.*RLU(0)) GOTO 100 
lund_crm1_evtgen.F:      NTRY=NTRY+1 
lund_crm1_evtgen.F:      IF(MSTJ(101).LE.4) CALL LU3ENT(NC+1,21,21,21,ECM,X1,X3) 
lund_crm1_evtgen.F:      IF(MSTJ(101).GE.5) CALL LU3ENT(-(NC+1),21,21,21,ECM,X1,X3) 
lund_crm1_evtgen.F:      MSTU(111)=MSTJ(108) 
lund_crm1_evtgen.F:      IF(MSTJ(108).EQ.2.AND.(MSTJ(101).EQ.0.OR.MSTJ(101).EQ.1)) 
lund_crm1_evtgen.F:     &MSTU(111)=1 
lund_crm1_evtgen.F:      PARU(112)=PARJ(121) 
lund_crm1_evtgen.F:      IF(MSTU(111).EQ.2) PARU(112)=PARJ(122) 
lund_crm1_evtgen.F:      IF(KFLC.NE.0) QF=KCHG(KFLC,1)/3. 
lund_crm1_evtgen.F:      RGAM=7.2*QF**2*PARU(101)/ULALPS(ECM**2) 
lund_crm1_evtgen.F:cjc... correction for b(rgg)/b(ggg)=36/5*eq**2*aem/as(Q)*(1+2.2*as(q)/pi)
lund_crm1_evtgen.F:      rgam=rgam*(1.+2.2*ULALPS(ECM**2)/3.14159265)   
lund_crm1_evtgen.F:      IF((RLU(0).GT.RGAM/(1.+RGAM)).and.(irgg.eq.0)) THEN  !parj(126)=mass_min(gg) (d=2GeV)
lund_crm1_evtgen.F:cjc      IF(RLU(0).GT.RGAM/(1.+RGAM)) THEN  !parj(126)=mass_min(gg) (d=2GeV)
lund_crm1_evtgen.F:        IF((1.-MAX(X1,X2,X3)).LE.MAX((PARJ(126)/ECM)**2,PARJ(125))) 
lund_crm1_evtgen.F:        IF(NJET.EQ.2.AND.MSTJ(101).LE.4) CALL LU2ENT(NC+1,21,21,ECM) 
lund_crm1_evtgen.F:        IF(NJET.EQ.2.AND.MSTJ(101).GE.5) CALL LU2ENT(-(NC+1),21,21,ECM) 
lund_crm1_evtgen.F:        ngg=1       ! decay to ggg
lund_crm1_evtgen.F:        MK=1 
lund_crm1_evtgen.F:        ECMC=SQRT(1.-X1)*ECM 
lund_crm1_evtgen.F:cjc       IF(ECMC.LT.2.*PARJ(127))  GOTO 100       !2mg>2*parj(127)
lund_crm1_evtgen.F:       IF(ECMC.LT.2.*PARJ(127)) then
lund_crm1_evtgen.F:         irgg=1
lund_crm1_evtgen.F:         GOTO 100       !2mg>2*parj(127)
lund_crm1_evtgen.F:        K(NC+1,1)=1 
lund_crm1_evtgen.F:        K(NC+1,2)=22 
lund_crm1_evtgen.F:        K(NC+1,4)=0 
lund_crm1_evtgen.F:        K(NC+1,5)=0 
lund_crm1_evtgen.F:        IF(MSTJ(101).GE.5) K(NC+2,4)=MSTU(5)*(NC+3) 
lund_crm1_evtgen.F:        IF(MSTJ(101).GE.5) K(NC+2,5)=MSTU(5)*(NC+3) 
lund_crm1_evtgen.F:        IF(MSTJ(101).GE.5) K(NC+3,4)=MSTU(5)*(NC+2) 
lund_crm1_evtgen.F:        IF(MSTJ(101).GE.5) K(NC+3,5)=MSTU(5)*(NC+2) 
lund_crm1_evtgen.F:c        IF(ECMC.LT.4.*PARJ(127)) THEN   !parj(127)=mass_min(g)(d=1.0 GeV)
lund_crm1_evtgen.F:c          MSTU10=MSTU(10)                !phase_space (decay to qq~)
lund_crm1_evtgen.F:c          MSTU(10)=1 
lund_crm1_evtgen.F:c          CALL LU1ENT(NC+2,83,0.5*(X2+X3)*ECM,PARU(1),0.) 
lund_crm1_evtgen.F:c          MSTU(10)=MSTU10 
lund_crm1_evtgen.F:      DO 110 IP=NC+1,N 
lund_crm1_evtgen.F:      K(IP,3)=IPP+(MSTJ(115)/2)+(KFLC/5)*(MSTJ(115)/3)*(NC-1) 
lund_crm1_evtgen.F:  110 CONTINUE 
lund_crm1_evtgen.F:      IF(MSTJ(106).EQ.1) THEN 
lund_crm1_evtgen.F:        HF1=1.-PARJ(131)*PARJ(132) 
lund_crm1_evtgen.F:        HF3=PARJ(133)**2 
lund_crm1_evtgen.F:        CT13=(X1*X3-2.*X1-2.*X3+2.)/(X1*X3) 
lund_crm1_evtgen.F:cjc...keep st13=/=0.
lund_crm1_evtgen.F:        if(abs(ct13).ge.1.) goto 100
lund_crm1_evtgen.F:        ST13=SQRT(1.-CT13**2) 
lund_crm1_evtgen.F:        SIGL=0.5*X3**2*((1.-X2)**2+(1.-X3)**2)*ST13**2 
lund_crm1_evtgen.F:        SIGU=(X1*(1.-X1))**2+(X2*(1.-X2))**2+(X3*(1.-X3))**2-SIGL 
lund_crm1_evtgen.F:cjc...keep st13=/=0.
lund_crm1_evtgen.F:	if(abs(st13).lt.0.000001) goto 100
lund_crm1_evtgen.F:        SIGI=(SIGL*CT13/ST13+0.5*X1*X3*(1.-X2)**2*ST13)/SQ2 
lund_crm1_evtgen.F:        SIGMAX=(2.*HF1+HF3)*ABS(SIGU)+2.*(HF1+HF3)*ABS(SIGL)+2.*(HF1+ 
lund_crm1_evtgen.F:     &  2.*HF3)*ABS(SIGT)+2.*SQ2*(HF1+2.*HF3)*ABS(SIGI) 
lund_crm1_evtgen.F:  120   CHI=PARU(2)*RLU(0) 
lund_crm1_evtgen.F:        CTHE=2.*RLU(0)-1. 
lund_crm1_evtgen.F:        C2PHI=COS(2.*(PHI-PARJ(134))) 
lund_crm1_evtgen.F:        S2PHI=SIN(2.*(PHI-PARJ(134))) 
lund_crm1_evtgen.F:        SIG=((1.+CTHE**2)*HF1+STHE**2*C2PHI*HF3)*SIGU+2.*(STHE**2*HF1- 
lund_crm1_evtgen.F:     &  STHE**2*C2PHI*HF3)*SIGL+2.*(STHE**2*C2CHI*HF1+((1.+CTHE**2)* 
lund_crm1_evtgen.F:     &  CCHI*HF1-2.*STHE*(CTHE*CCHI*C2PHI-SCHI*S2PHI)*HF3)*SIGI 
lund_crm1_evtgen.F:        IF(SIG.LT.SIGMAX*RLU(0)) GOTO 120 
lund_crm1_evtgen.F:        CALL LUDBRB(NC+1,N,0.,CHI,0D0,0D0,0D0) 
lund_crm1_evtgen.F:        CALL LUDBRB(NC+1,N,THE,PHI,0D0,0D0,0D0) 
lund_crm1_evtgen.F:      dtmp=0.0000001
lund_crm1_evtgen.F:      if((abs(pv(1)).gt.dtmp).and.(abs(pv(2)).gt.dtmp).and.
lund_crm1_evtgen.F:      DO 130 J=1,5
lund_crm1_evtgen.F: 130  CONTINUE
lund_crm1_evtgen.F:      DPS(4)=SQRT(DBLE(Pv(1))**2+DBLE(pv(2))**2+
lund_crm1_evtgen.F:      CALL LUDBRB(NC+1,N,0.,0.,DPS(1)/DPS(4),
lund_crm1_evtgen.F:      do 150 i=nc+1,n
lund_crm1_evtgen.F:        do 140 j=1,5
lund_crm1_evtgen.F:140    continue          
lund_crm1_evtgen.F:150    continue          
lund_crm1_evtgen.F:      IF(MSTJ(101).GE.5.AND.NJET.GE.2) THEN 
lund_crm1_evtgen.F:        CALL LUSHOW(NC+MK+1,-NJET,ECMC) 
lund_crm1_evtgen.F:       MSTJ14=MSTJ(14) 
lund_crm1_evtgen.F:        IF(MSTJ(105).EQ.-1) MSTJ(14)=-1 
lund_crm1_evtgen.F:        IF(MSTJ(105).GE.0) MSTU(28)=0 
lund_crm1_evtgen.F:       MSTJ(14)=MSTJ14 
lund_crm1_evtgen.F:        IF(MSTJ(105).GE.0.AND.MSTU(28).NE.0) GOTO 100 
lund_crm1_evtgen.F:      SUBROUTINE LURADK1(ECM,MK,PAK,THEK,PHIK,ALPK) 
lund_crm1_evtgen.F:      COMMON/LUDAT1/MSTU(200),PARU(200),MSTJ(200),PARJ(200) 
lund_crm1_evtgen.F:      SAVE /LUDAT1/ 
lund_crm1_evtgen.F:      FXK(XX)=2.*LOG(XX)+PARJ(161)*LOG(1.-XX)+PARJ(162)*XX+ 
lund_crm1_evtgen.F:     &PARJ(163)*LOG((XX-SZM)**2+SZW**2)+PARJ(164)*ATAN((XX-SZM)/SZW) 
lund_crm1_evtgen.F:      IF(PARJ(160).LT.RLU(0)) RETURN 
lund_crm1_evtgen.F:      MK=1 
lund_crm1_evtgen.F:      XKL=PARJ(135) 
lund_crm1_evtgen.F:      XKU=MIN(PARJ(136),1.-(2.*PARJ(127)/ECM)**2) 
lund_crm1_evtgen.F:      IF(MSTJ(102).LE.1) THEN 
lund_crm1_evtgen.F:  100   XK=1./(1.+(1./XKL-1.)*((1./XKU-1.)/(1./XKL-1.))**RLU(0)) 
lund_crm1_evtgen.F:        IF(1.+(1.-XK)**2.LT.2.*RLU(0)) GOTO 100 
lund_crm1_evtgen.F:        SZM=1.-(PARJ(123)/ECM)**2 
lund_crm1_evtgen.F:        SZW=PARJ(123)*PARJ(124)/ECM**2 
lund_crm1_evtgen.F:        FXKD=1E-4*(FXKU-FXKL) 
lund_crm1_evtgen.F:  110   NXK=NXK+1 
lund_crm1_evtgen.F:C === Chenjc 07/23/2001 for protection the case of '(FXKU-FXKL)=0'
lund_crm1_evtgen.F:        if(abs(FXKU-FXKL).le.1.e-6) then
lund_crm1_evtgen.F:        IF(NXK.LT.15.AND.FXKU-FXKL.GT.FXKD) GOTO 110 
lund_crm1_evtgen.F:      PME=2.*(ULMASS(11)/ECM)**2 
lund_crm1_evtgen.F:  120 CTHM=PME*(2./PME)**RLU(0) 
lund_crm1_evtgen.F:      IF(1.-(XK**2*CTHM*(1.-0.5*CTHM)+2.*(1.-XK)*PME/MAX(PME, 
lund_crm1_evtgen.F:     &CTHM*(1.-0.5*CTHM)))/(1.+(1.-XK)**2).LT.RLU(0)) GOTO 120 
lund_crm1_evtgen.F:      CTHE=1.-CTHM 
lund_crm1_evtgen.F:      SGN=1. 
lund_crm1_evtgen.F:      IF(0.5*(2.-XK*(1.-CTHE))**2/((2.-XK)**2+(XK*CTHE)**2).GT. 
lund_crm1_evtgen.F:     &RLU(0)) SGN=-1. 
lund_crm1_evtgen.F:      ALPK=ASIN(SGN*STHE*(XK-SGN*(2.*SQRT(1.-XK)-2.+XK)*CTHE)/ 
lund_crm1_evtgen.F:     &(2.-XK*(1.-SGN*CTHE))) 
lund_crm1_evtgen.F:      SUBROUTINE LUTAB1(MTABU) 
lund_crm1_evtgen.F:      COMMON/LUDAT1/MSTU(200),PARU(200),MSTJ(200),PARJ(200) 
lund_crm1_evtgen.F:      SAVE /LUJETS/,/LUDAT1/,/LUDAT2/,/LUDAT3/ 
lund_crm1_evtgen.F:      CHARACTER CHAU*16,CHDC(8)*12 
lund_crm1_evtgen.F:      ELSEIF(MTABU.EQ.51.or.MTABU.EQ.61) THEN 
lund_crm1_evtgen.F:        NEVDC=NEVDC+1 
lund_crm1_evtgen.F:        makeline(1)=1
lund_crm1_evtgen.F:        makeline(2)=1
lund_crm1_evtgen.F:        DO 645 I=1,N 
lund_crm1_evtgen.F:          IF((K(I,2).EQ.92).or.(K(I,2).EQ.91)) THEN 
lund_crm1_evtgen.F:            mli=mli+1
lund_crm1_evtgen.F:        DO 670 I=1,N 
lund_crm1_evtgen.F:      IF(MTABU.EQ.51) THEN 
lund_crm1_evtgen.F:        if(k(i,2).eq.111) then
lund_crm1_evtgen.F:           if(K(K(I,3),2).eq.111) goto 670
lund_crm1_evtgen.F:          IF(K(I,1).LE.0.OR.K(I,1).GE.6) GOTO 670    ! final undecyed particles
lund_crm1_evtgen.F:      elseif(MTABU.EQ.61) THEN
lund_crm1_evtgen.F:c        IF(K(I,3).ne.1) goto 670  !1st partile decay
lund_crm1_evtgen.F:        if(k(i,2).eq.21.or.k(i,3).le.0) goto 670
lund_crm1_evtgen.F:       IF(K(I,3).ne.1.and.K(I,3).NE.makeline(1).and.
lund_crm1_evtgen.F:     &K(I,3).NE.makeline(2))goto 670 !1st partile decay
lund_crm1_evtgen.F:        NDS=NDS+1 
lund_crm1_evtgen.F:          NREDC=NREDC+1 
lund_crm1_evtgen.F:        IF(K(I,2).LT.0) KFM=KFM-1 
lund_crm1_evtgen.F:        DO 650 IDS=NDS-1,1,-1 
lund_crm1_evtgen.F:        IIN=IDS+1 
lund_crm1_evtgen.F:        KFDM(IDS+1)=KFDM(IDS) 
lund_crm1_evtgen.F:        IIN=1 
lund_crm1_evtgen.F:c          do itemp=1,nds
lund_crm1_evtgen.F:cc            if(abs(kftemp(itemp)).eq.213.and.abs(kftemp(itemp)).ne.213.) isi=1
lund_crm1_evtgen.F:c           if(abs(kftemp(1)).eq.213.and.abs(kftemp(2)).eq.215) isi=1
lund_crm1_evtgen.F:c           if(abs(kftemp(1)).eq.215.and.abs(kftemp(2)).eq.213) isi=1
lund_crm1_evtgen.F:c          if(isi.eq.1) then
lund_crm1_evtgen.F:c            call lulist(1)
lund_crm1_evtgen.F:        DO 690 IDC=1,NKFDC 
lund_crm1_evtgen.F:          DO 680 I=1,NDS 
lund_crm1_evtgen.F:        IKFDC=NKFDC+1 
lund_crm1_evtgen.F:          NREDC=NREDC+1 
lund_crm1_evtgen.F:          DO 720 IDC=NKFDC,IKFDC,-1 
lund_crm1_evtgen.F:          NPDC(IDC+1)=NPDC(IDC) 
lund_crm1_evtgen.F:          DO 710 I=0,8 
lund_crm1_evtgen.F:          KFDC(IDC+1,I)=KFDC(IDC,I) 
lund_crm1_evtgen.F:  710     CONTINUE 
lund_crm1_evtgen.F:          NKFDC=NKFDC+1 
lund_crm1_evtgen.F:          DO 730 I=1,NDS 
lund_crm1_evtgen.F:        NPDC(IKFDC)=NPDC(IKFDC)+1 
lund_crm1_evtgen.F:        FAC=1./MAX(1,NEVDC) 
lund_crm1_evtgen.F:        WRITE(MSTU(11),5900) NEVDC 
lund_crm1_evtgen.F:        DO 750 IDC=1,NKFDC 
lund_crm1_evtgen.F:        DO 740 I=1,KFDC(IDC,0) 
lund_crm1_evtgen.F:        KF=(KFM+1)/2 
lund_crm1_evtgen.F:        CHDC(I)=CHAU(1:12) 
lund_crm1_evtgen.F:        IF(CHAU(13:13).NE.' ') CHDC(I)(12:12)='?' 
lund_crm1_evtgen.F:        WRITE(MSTU(11),6000) FAC*NPDC(IDC),(CHDC(I),I=1,KFDC(IDC,0)) 
lund_crm1_evtgen.F:cjc        WRITE(3,6000) FAC*NPDC(IDC),(CHDC(I),I=1,KFDC(IDC,0)) 
lund_crm1_evtgen.F:        IF(NREDC.NE.0) WRITE(MSTU(11),6100) FAC*NREDC 
lund_crm1_evtgen.F:cjc        IF(NREDC.NE.0) WRITE(3,6100) FAC*NREDC 
lund_crm1_evtgen.F:C...Format statements for output on unit MSTU(11) (default 6). 
lund_crm1_evtgen.F:     &  20X,'based on an analysis of ',I10,' events'// 
lund_crm1_evtgen.F:     &2X,'Probability',10X,'Complete final state'/) 
lund_crm1_evtgen.F:cjc 6000 FORMAT(2X,F9.5,5X,8(A12,1X)) 
lund_crm1_evtgen.F: 6000 FORMAT(1X,F7.5,1X,8(A9,1X)) 
lund_crm1_evtgen.F: 6100 FORMAT(2X,F9.5,5X,'into other channels (more than 8 particles ', 
lund_crm1_evtgen.F:C                   Alan Weinstein on SLACVM, June 15, 1995.
lund_crm1_evtgen.F:C          1)  Explicit PROGRAM statement included
lund_crm1_evtgen.F:C  950721  Major structural revisions
lund_crm1_evtgen.F:C          1)  All subroutines and functions extracted to separate files
lund_crm1_evtgen.F:C  990518  Modified for BES by Chen Jiangchuan
lund_crm1_evtgen.F:C          1) Make it as a subroutine
lund_crm1_evtgen.F:C              Rdchannel(J) J=1-9 
lund_crm1_evtgen.F:C        1     2      3     4     5     6     7       8        9      10 
lund_crm1_evtgen.F:      PARAMETER (PI = 3.1415926535)
lund_crm1_evtgen.F:      PARAMETER (ALPHA2 = 1D0/137.0359895**2)
lund_crm1_evtgen.F:      real Rdchannel(10)
lund_crm1_evtgen.F:        CALL GETARG(1,CMDARG)
lund_crm1_evtgen.F:          WRITE(6,100)'0 D-D','D-D*','D*-D*','+ D-D','D-D*','D*-D*'
lund_crm1_evtgen.F:     1               ,'F-F','F-F*','F*-F*','RTOT'
lund_crm1_evtgen.F:          WRITE(6,110) E, (RCHANNEL(E,REAL(J)),J=1,9), RCHARM(E)
lund_crm1_evtgen.F:          WRITE(6,120) (SIGFAC*RCHANNEL(E,REAL(J)),J=1,9),
lund_crm1_evtgen.F:     1                 SIGFAC*RCHARM(E)
lund_crm1_evtgen.F:          WRITE(6,130) E, SIGFAC
lund_crm1_evtgen.F: 100      FORMAT('ENERGY  ',9A7,1X,A7)
lund_crm1_evtgen.F: 110      FORMAT(F6.3,2X,9F7.4,1X,F7.4)
lund_crm1_evtgen.F: 120      FORMAT('Sig(nb)=',9F7.4,1X,F7.4)
lund_crm1_evtgen.F: 130      FORMAT('Sigma(mu mu) at',F6.3,' =',F6.3)
lund_crm1_evtgen.F:          do j=1,9
lund_crm1_evtgen.F:          rdchannel(10)=RCHARM(E)
lund_crm1_evtgen.F:        EMIN=2.*MASS(1,1)
lund_crm1_evtgen.F:        ESHIFT=0.0              !*** ESHIFT=1.80D-1
lund_crm1_evtgen.F:      DOUBLE PRECISION EGY(16,5),EI(5),EGY0(16),EO
lund_crm1_evtgen.F:      EGY(1,1)=1.39787713D+0
lund_crm1_evtgen.F:      EGY(2,1)=3.47508762D+0
lund_crm1_evtgen.F:      EGY(3,1)=5.03291532D+0
lund_crm1_evtgen.F:      EGY(4,1)=6.37015002D+0
lund_crm1_evtgen.F:      EGY(5,1)=7.57493350D+0
lund_crm1_evtgen.F:      EGY(6,1)=8.68791542D+0
lund_crm1_evtgen.F:      EGY(7,1)=9.73197481D+0
lund_crm1_evtgen.F:      EGY(8,1)=1.07215739D+1
lund_crm1_evtgen.F:      EGY(9,1)=1.16666312D+1
lund_crm1_evtgen.F:      EGY(10,1)=2.82564665D+0
lund_crm1_evtgen.F:      EGY(11,1)=4.46186360D+0
lund_crm1_evtgen.F:      EGY(12,1)=5.84763424D+0
lund_crm1_evtgen.F:      EGY(13,1)=3.85058001D+0
lund_crm1_evtgen.F:      EGY(14,1)=5.29298414D+0
lund_crm1_evtgen.F:      EGY(15,1)=6.57158774D+0
lund_crm1_evtgen.F:      EGY(16,1)=7.74061620D+0
lund_crm1_evtgen.F:      EGY(1,2)=1.94848983D-1
lund_crm1_evtgen.F:      EGY(3,2)=4.51799895D+0
lund_crm1_evtgen.F:      EGY(4,2)=5.93770192D+0
lund_crm1_evtgen.F:      EGY(5,2)=7.19524067D+0
lund_crm1_evtgen.F:      EGY(7,2)=9.41816042D+0
lund_crm1_evtgen.F:      EGY(8,2)=1.04302456D+1
lund_crm1_evtgen.F:      EGY(9,2)=1.13936551D+1
lund_crm1_evtgen.F:      EGY(10,2)=2.23815690D+0
lund_crm1_evtgen.F:      EGY(11,2)=4.01510843D+0
lund_crm1_evtgen.F:      EGY(12,2)=5.47323073D+0
lund_crm1_evtgen.F:      EGY(13,2)=3.43174049D+0
lund_crm1_evtgen.F:      EGY(14,2)=4.94366366D+0
lund_crm1_evtgen.F:      EGY(15,2)=6.26579194D+0
lund_crm1_evtgen.F:      EGY(16,2)=7.46532890D+0
lund_crm1_evtgen.F:      EGY(1,3)=-1.34685458D+0
lund_crm1_evtgen.F:      EGY(2,3)=2.07327154D+0
lund_crm1_evtgen.F:      EGY(5,3)=6.80848165D+0
lund_crm1_evtgen.F:      EGY(6,3)=7.99882071D+0
lund_crm1_evtgen.F:      EGY(7,3)=9.10109086D+0
lund_crm1_evtgen.F:      EGY(8,3)=1.01365569D+1
lund_crm1_evtgen.F:      EGY(9,3)=1.11189323D+1
lund_crm1_evtgen.F:      EGY(10,3)=1.59060768D+0
lund_crm1_evtgen.F:      EGY(11,3)=3.54276033D+0
lund_crm1_evtgen.F:      EGY(12,3)=5.08423240D+0
lund_crm1_evtgen.F:      EGY(13,3)=2.98962775D+0
lund_crm1_evtgen.F:      EGY(14,3)=4.58105720D+0
lund_crm1_evtgen.F:      EGY(15,3)=5.95123186D+0
lund_crm1_evtgen.F:      EGY(16,3)=7.18374555D+0
lund_crm1_evtgen.F:      EGY(1,4)=-3.28750348D+0
lund_crm1_evtgen.F:      EGY(2,4)=1.28629940D+0
lund_crm1_evtgen.F:      EGY(4,4)=5.04067177D+0
lund_crm1_evtgen.F:      EGY(5,4)=6.41707487D+0
lund_crm1_evtgen.F:      EGY(9,4)=1.08438005D+1
lund_crm1_evtgen.F:      EGY(10,4)=8.74448694D-1
lund_crm1_evtgen.F:      EGY(11,4)=3.04350596D+0
lund_crm1_evtgen.F:      EGY(12,4)=4.68055623D+0
lund_crm1_evtgen.F:      EGY(13,4)=2.52208893D+0
lund_crm1_evtgen.F:      EGY(14,4)=4.20447739D+0
lund_crm1_evtgen.F:      EGY(15,4)=5.62766179D+0
lund_crm1_evtgen.F:      EGY(16,4)=6.89578767D+0
lund_crm1_evtgen.F:      EGY(1,5)=-5.66676708D+0
lund_crm1_evtgen.F:      EGY(2,5)=4.35051763D-1
lund_crm1_evtgen.F:      EGY(3,5)=2.84881318D+0
lund_crm1_evtgen.F:      EGY(5,5)=6.02214651D+0
lund_crm1_evtgen.F:      EGY(7,5)=8.46345121D+0
lund_crm1_evtgen.F:      EGY(9,5)=1.05690809D+1
lund_crm1_evtgen.F:      EGY(10,5)=8.11854009D-2
lund_crm1_evtgen.F:      EGY(11,5)=2.51605798D+0
lund_crm1_evtgen.F:      EGY(12,5)=4.26214687D+0
lund_crm1_evtgen.F:      EGY(13,5)=2.02688445D+0
lund_crm1_evtgen.F:      EGY(14,5)=3.81324108D+0
lund_crm1_evtgen.F:      EGY(15,5)=5.29485147D+0
lund_crm1_evtgen.F:      EGY(16,5)=6.60139089D+0
lund_crm1_evtgen.F:      IF(X.LT.1.D-3) GO TO 12
lund_crm1_evtgen.F:      DO 11 J=1,5
lund_crm1_evtgen.F:   11 CONTINUE
lund_crm1_evtgen.F:      CALL INTPL(1.0D+0,EI,X,EO,1.0D+0,0)
lund_crm1_evtgen.F:   12 EGY0(1)=2.33810741D+0
lund_crm1_evtgen.F:      EGY0(5)=7.94413359D+0
lund_crm1_evtgen.F:      EGY0(7)=1.00401743D+1
lund_crm1_evtgen.F:      EGY0(8)=1.10085243D+1
lund_crm1_evtgen.F:      EGY0(9)=1.19360155D+1
lund_crm1_evtgen.F:      EGY0(10)=3.36125453D+0
lund_crm1_evtgen.F:      EGY0(11)=4.88445185D+0
lund_crm1_evtgen.F:      EGY0(12)=6.20762330D+0
lund_crm1_evtgen.F:      EGY0(13)=4.24818226D+0
lund_crm1_evtgen.F:      EGY0(14)=5.62970838D+0
lund_crm1_evtgen.F:      EGY0(15)=6.86888269D+0
lund_crm1_evtgen.F:      EGY0(16)=8.00970292D+0
lund_crm1_evtgen.F:C  and ANS (production rates for up to 16 meson species).
lund_crm1_evtgen.F:C                            moved to FMATRIX.F (OMEGA, HEX, DPW1,2)
lund_crm1_evtgen.F:      PARAMETER (PI = 3.14159265358979D+00)
lund_crm1_evtgen.F:      COMPLEX DET,HAW,PSA1,PSA2,PSB,QED1,QED2
lund_crm1_evtgen.F:      COMPLEX QCD1(FIST_MIX),QCD2(FIST_MIX)
lund_crm1_evtgen.F:     1             ,'F-F','F-F*','F*-F*','D-DP1S','D-DP1T','D-DP2'
lund_crm1_evtgen.F:     2             ,'D*DP0','D*DPS1','D*DPT1','RTOT'
lund_crm1_evtgen.F: 56     FORMAT('ENERGY',2X,15A6,2X,A7)
lund_crm1_evtgen.F:     1             ,'F-F','F-F*','F*-F*','RTOT'
lund_crm1_evtgen.F:        DO 47 K=1,NSTEPS
lund_crm1_evtgen.F:          W = EMIN + ESTEP*(K-1)
lund_crm1_evtgen.F:          CALL RCALC(W,R(K),ANS(1,K),DET,HAW)
lund_crm1_evtgen.F:           WRITE(3,558) W,(ANS(J,K),J=1,9),R(K)
lund_crm1_evtgen.F:           WRITE(6,58) W,(ANS(J,K),J=1,15),R(K)
lund_crm1_evtgen.F: 58        FORMAT(F6.3,2X,15F6.3,2X,F7.4)
lund_crm1_evtgen.F:          IF (K.EQ.1) AIR(1) = 0D0
lund_crm1_evtgen.F:          IF (K.GT.1) AIR(K)= ESTEP*(R(K-1)+R(K))/2D0 + AIR(K-1)
lund_crm1_evtgen.F:          CALL MINV(OMEGA,FIST_MIX,DPW1,QCD1,PSA1,XYZ,PSB)
lund_crm1_evtgen.F:          QED1=(0.0,0.0)
lund_crm1_evtgen.F:          DO I=1,FIST_MIX
lund_crm1_evtgen.F:             QED1=QED1+DPW1(I)*QCD1(I)
lund_crm1_evtgen.F:             QED2=QED2+DPW1(I)*QCD2(I)
lund_crm1_evtgen.F:          PS(1,1,K)=REAL(QED1)
lund_crm1_evtgen.F:          PS(1,2,K)=AIMAG(QED1)
lund_crm1_evtgen.F:          PS(2,1,K)=REAL(QED2)
lund_crm1_evtgen.F:        CALL PHASE1(WE,PS,NSTEPS,1,IPHFL)
lund_crm1_evtgen.F:     1       'AREA IN NO COUPLING LIMIT')
lund_crm1_evtgen.F:        DO J=1,6
lund_crm1_evtgen.F:           WRITE(55,51) J,AREA
lund_crm1_evtgen.F: 51        FORMAT(T25,I3,T55,F10.7)
lund_crm1_evtgen.F: 53     FORMAT(/,T10,'ENERGY',T20,'RATIO',T43,'AREA',T60,
lund_crm1_evtgen.F:     1       'ABSOLUTE VALUE OF DETERMINANT')
lund_crm1_evtgen.F:        DO K=1,NSTEPS
lund_crm1_evtgen.F: 55        FORMAT(T7,F10.7,T18,F10.7,T35,F14.7,T63,F14.7)
lund_crm1_evtgen.F:      PARAMETER (PI = 3.14159265358979D+00)
lund_crm1_evtgen.F:      DOUBLE PRECISION OMEGA1,OMEGA2,OMEGAR,OMEGAI
lund_crm1_evtgen.F:      DOUBLE PRECISION CONST,DW,EGY,ES1,ES2,PMAX,PW,RHOW
lund_crm1_evtgen.F:      REAL SMEGA1
lund_crm1_evtgen.F:      DOUBLE PRECISION FUN,X,M1,M2,E0,E1
lund_crm1_evtgen.F:      FUN(X,M1,M2,E0,E1)=(1./4.)*DLOG((E1-X)/(X-E0))*((M2**2-M1**2
lund_crm1_evtgen.F:     1   )**2/X**3-X)-(1./(4.*X**3))*DLOG(E1/E0)*(M2**2-M1**2)**2+
lund_crm1_evtgen.F:     2   ((E0-E1)/4.)*(1+((M2**2-M1**2)**2/(X*E0*E1))*((1./X)+(E0+
lund_crm1_evtgen.F:     3   E1)/(2.*E0*E1)))
lund_crm1_evtgen.F:        CONST=1./(2.*PI**2)
lund_crm1_evtgen.F:        PMAX=H*(FIST_NP-1)
lund_crm1_evtgen.F:        DO IFS=1,FIST_NFS
lund_crm1_evtgen.F:          IF(IFS.EQ.1) DPW1(N)=CMPLX(REAL(DW),0.0)
lund_crm1_evtgen.F:          IF(IPHFL.NE.1) DPW2(N)=CMPLX(0.0,0.0)
lund_crm1_evtgen.F:          IF(IFS.EQ.4.AND.IPHFL.EQ.1) DPW2(N)=CMPLX(REAL(DW),0.0)
lund_crm1_evtgen.F:          M1=MFS(1)
lund_crm1_evtgen.F:          E0=M1+M2
lund_crm1_evtgen.F:          E1=DSQRT(PMAX**2+M1**2)+DSQRT(PMAX**2+M2**2)
lund_crm1_evtgen.F:          OMEGA1=0.D+0
lund_crm1_evtgen.F:          DO I=1,FIST_NP
lund_crm1_evtgen.F:            CALL FORM(W,I,IFS,ACORN,JMIX,JFLAG,MFS,PW,RHOW,DW,OMEGA1)
lund_crm1_evtgen.F:          IF(W.LE.E0+1.D-5) THEN
lund_crm1_evtgen.F:            OMEGA1=CONST*OMEGA1
lund_crm1_evtgen.F:            OMEGA1=CONST*(OMEGA1+RHOW*FUN(W,M1,M2,E0,E1))
lund_crm1_evtgen.F:          OMEGA2 = OMEGA2-PI*CONST*RHOW*(W**4-(M1**2-M2**2)**2)
lund_crm1_evtgen.F:          HEX(N,M,IFS)=(-1.)*CMPLX(0.0,REAL(OMEGA2))
lund_crm1_evtgen.F:          OMEGAR=OMEGAR+OMEGA1
lund_crm1_evtgen.F:        SMEGA1=REAL(OMEGAR+MSD(N,M))
lund_crm1_evtgen.F:        IF(M.EQ.N) SMEGA1=REAL(OMEGAR+MSD(N,M)-W)
lund_crm1_evtgen.F:        OMEGA(N,M)=CMPLX(SMEGA1,REAL(OMEGAI))
lund_crm1_evtgen.F:      SUBROUTINE FORM(W,I,IFS,ACORN,JMIX,JFLAG,MFS,PW,RHOW,DW,OMEGA1)
lund_crm1_evtgen.F:      DOUBLE PRECISION OMEGA1          !INPUT and OUTPUT
lund_crm1_evtgen.F:C  Computes contribution to the OMEGA1 matrix element for a single step
lund_crm1_evtgen.F:C  in momentum (I) for a specified final state (IFS).  OMEGA1 is both
lund_crm1_evtgen.F:      DOUBLE PRECISION EGY,ES1,ES2,E0,RHOX,RHOXD,X
lund_crm1_evtgen.F:      INTEGER IF1,IF1MAX,IF2,IF2MAX,LI
lund_crm1_evtgen.F:        X=H*(I-1)
lund_crm1_evtgen.F:        ES1=DSQRT(X**2+MFS(1)**2)
lund_crm1_evtgen.F:        EGY=ES1+ES2
lund_crm1_evtgen.F:        E0 =MFS(1)+MFS(2)
lund_crm1_evtgen.F:        IF1MAX=JFLAG(5)
lund_crm1_evtgen.F:        IF (IF1MAX.LE.0) IF1MAX=0
lund_crm1_evtgen.F:        DO IF1=1,IF1MAX
lund_crm1_evtgen.F:           DO IF2=1,IF2MAX
lund_crm1_evtgen.F:              IF (JFLAG(1).EQ.2) THEN
lund_crm1_evtgen.F:                 RHOX=X*ACORN(IF1,IF2)*F(JMIX(IF1,1),I) 
lund_crm1_evtgen.F:     1                *F(JMIX(IF2,2),I)+RHOX
lund_crm1_evtgen.F:                 IF (I.EQ.1) THEN
lund_crm1_evtgen.F:                    RHOXD=ACORN(IF1,IF2)*(X+H)*F(JMIX(IF1,1),2)
lund_crm1_evtgen.F:     1                   *F(JMIX(IF2,2),2)+RHOXD
lund_crm1_evtgen.F:                    RHOXD=ACORN(IF1,IF2)*((X+H)*F(JMIX(IF1,1),I+1)
lund_crm1_evtgen.F:     1                   *F(JMIX(IF2,2),I+1)-(X-H)*F(JMIX(IF1,1),I-1)
lund_crm1_evtgen.F:     2                   *F(JMIX(IF2,2),I-1))+RHOXD
lund_crm1_evtgen.F:                 RHOX=X*ACORN(IF1,IF2)*D(JMIX(IF1,1),I) 
lund_crm1_evtgen.F:     1                *D(JMIX(IF2,2),I)+RHOX
lund_crm1_evtgen.F:                 IF (I.EQ.1) THEN
lund_crm1_evtgen.F:                    RHOXD=ACORN(IF1,IF2)*(X+H)*D(JMIX(IF1,1),2)
lund_crm1_evtgen.F:     1                   *D(JMIX(IF2,2),2)+RHOXD
lund_crm1_evtgen.F:                    RHOXD=ACORN(IF1,IF2)*((X+H)*D(JMIX(IF1,1),I+1)
lund_crm1_evtgen.F:     1                   *D(JMIX(IF2,2),I+1)-(X-H)*D(JMIX(IF1,1),I-1)
lund_crm1_evtgen.F:     2                   *D(JMIX(IF2,2),I-1))+RHOXD
lund_crm1_evtgen.F:        ENDDO                   !IF1
lund_crm1_evtgen.F:        IF (DABS(X-PW).LT.1.D-5.AND.W.GT.E0-1.D-5) THEN
lund_crm1_evtgen.F:           IF (I.EQ.1) THEN
lund_crm1_evtgen.F:              OMEGA1=OMEGA1-1./6.*RHOXD*ES1*ES2/EGY
lund_crm1_evtgen.F:              OMEGA1=OMEGA1-(2-LI)/3.*RHOXD*ES1*ES2/EGY
lund_crm1_evtgen.F:           IF (I.EQ.1.OR.I.EQ.FIST_NP) THEN
lund_crm1_evtgen.F:              OMEGA1=OMEGA1+(1./3.)*(RHOX-RHOW)*X*H/(W-EGY)
lund_crm1_evtgen.F:              OMEGA1=OMEGA1+2*(2-LI)*(X/3.)*(RHOX-RHOW)*H/(W-EGY)
lund_crm1_evtgen.F:C  Return values of OMEGA1
lund_crm1_evtgen.F:      INTEGER J2,L1,L2,S1,S2,K1AMAX,K2AMAX,K1C,ILZ,IY,ILY,IZ,K2C
lund_crm1_evtgen.F:      INTEGER JDY,KMFS,JINDEX,IX,K2AC,JFL1,JFL2,K1AC
lund_crm1_evtgen.F:        DO IJ=1,3
lund_crm1_evtgen.F:           DO IK=1,3
lund_crm1_evtgen.F:        DO IJ=1,3
lund_crm1_evtgen.F:           DO IK=1,2
lund_crm1_evtgen.F:        FEM(1)=5.0D-3
lund_crm1_evtgen.F:        IF(FIST_NFS.GT.13) JFLAG(4)=1
lund_crm1_evtgen.F:        IDY=NDY-NS1
lund_crm1_evtgen.F:        JDY=MDY-NS1
lund_crm1_evtgen.F:        JFLAG(1)=1
lund_crm1_evtgen.F:        IF(KFS.GT.3.AND.KFS.LT.7) JFLAG(1)=2
lund_crm1_evtgen.F:        IF(KFS.LT.7) JFLAG(2)=1
lund_crm1_evtgen.F:        IF(NDY.LE.NS1) THEN
lund_crm1_evtgen.F:        IF(MDY.LE.NS1) THEN
lund_crm1_evtgen.F:           JFLAG(3)=1
lund_crm1_evtgen.F:        IF(JFLAG(3).EQ.3) JFLAG(5)=JFLAG(5)+1
lund_crm1_evtgen.F:        J2=1
lund_crm1_evtgen.F:        IF(KFS.EQ.10) J2=0
lund_crm1_evtgen.F:        IF(KFS.EQ.9.OR.KFS.EQ.13) J2=2
lund_crm1_evtgen.F:        S1=1
lund_crm1_evtgen.F:        S2=1
lund_crm1_evtgen.F:        IF(KFS.GE.7.AND.KFS.LE.9) S1=0
lund_crm1_evtgen.F:        IF(KFS.EQ.7.OR.KFS.EQ.11) S2=0
lund_crm1_evtgen.F:        JFL1=1
lund_crm1_evtgen.F:        IF(KFS.EQ.3.OR.KFS.GT.9) JFL1=2
lund_crm1_evtgen.F:        IF(KFS.GT.3.AND.KFS.LT.6) JFL1=3
lund_crm1_evtgen.F:        IF(KFS.EQ.6) JFL1=4
lund_crm1_evtgen.F:        MFS(1)=MASS(JFL1,1)
lund_crm1_evtgen.F:           IF(IFS.EQ.4.OR.IFS.EQ.5) MFS(1)=MFS(1)+FEM(1)
lund_crm1_evtgen.F:           IF(IFS.EQ.6) MFS(1)=MFS(1)+FEM(2)
lund_crm1_evtgen.F:        IF(KFS.EQ.1) JFL2=1
lund_crm1_evtgen.F:           IF(IFS.EQ.4) MFS(2)=MFS(2)+FEM(1)
lund_crm1_evtgen.F:        DO K1AC=1,3
lund_crm1_evtgen.F:           DO K2AC=1,3
lund_crm1_evtgen.F:              ACORN(K1AC,K2AC)=0.D+0
lund_crm1_evtgen.F:        KMFS=MOD(KFS-1,3)
lund_crm1_evtgen.F:        GO TO (10,20,30), JINDEX
lund_crm1_evtgen.F:C  JINDEX = 1
lund_crm1_evtgen.F: 10   CONTINUE
lund_crm1_evtgen.F:        IF(JFLAG(2).EQ.1) THEN
lund_crm1_evtgen.F:           JMIX(1,1)=IDY
lund_crm1_evtgen.F:           JMIX(2,1)=0
lund_crm1_evtgen.F:           JMIX(3,1)=0
lund_crm1_evtgen.F:           JMIX(1,2)=JDY
lund_crm1_evtgen.F:           ACORN(1,1)=1./3.*(1.+3.*KMFS)
lund_crm1_evtgen.F:           JMIX(1,1)=2*IDY+7
lund_crm1_evtgen.F:           JMIX(2,1)=2*IDY+8
lund_crm1_evtgen.F:           JMIX(3,1)=0
lund_crm1_evtgen.F:           JMIX(1,2)=2*JDY+7
lund_crm1_evtgen.F:           L1=0
lund_crm1_evtgen.F:              ACORN(1,1)=ACORN(1,1)
lund_crm1_evtgen.F:     1             +SIXJ(J2,S1,S2,L1,0,0,ILX)*SIXJ(J2,S1,S2,L2,0,0,ILX)
lund_crm1_evtgen.F:     1             +SIXJ(J2,S1,S2,L1,2,2,ILX)*SIXJ(J2,S1,S2,L2,2,2,ILX)
lund_crm1_evtgen.F:        IF(JFLAG(2).EQ.1) THEN
lund_crm1_evtgen.F:           JMIX(1,1)=IDY
lund_crm1_evtgen.F:           JMIX(2,1)=0
lund_crm1_evtgen.F:           JMIX(3,1)=0
lund_crm1_evtgen.F:           JMIX(1,2)=2*JDY+3
lund_crm1_evtgen.F:           ACORN(1,1)=DSQRT(2.D+0)/3.*(2.-3.*(KMFS-1.)**2)
lund_crm1_evtgen.F: 25        JMIX(1,1)=2*IDY+7
lund_crm1_evtgen.F:           JMIX(2,1)=2*IDY+8
lund_crm1_evtgen.F:           JMIX(3,1)=0
lund_crm1_evtgen.F:           JMIX(1,2)=3*JDY+14
lund_crm1_evtgen.F:           JMIX(2,2)=3*JDY+15
lund_crm1_evtgen.F:           JMIX(3,2)=3*JDY+16
lund_crm1_evtgen.F:           L1=0
lund_crm1_evtgen.F:              ACORN(1,1)=ACORN(1,1)
lund_crm1_evtgen.F:     1             +SIXJ(J2,S1,S2,L1,0,0,ILY)*SIXJ(J2,S1,S2,L2,0,2,ILY)
lund_crm1_evtgen.F:     1             +SIXJ(J2,S1,S2,L1,2,2,ILY)*SIXJ(J2,S1,S2,L2,2,0,ILY)
lund_crm1_evtgen.F:     1             +SIXJ(J2,S1,S2,L1,2,2,ILY)*SIXJ(J2,S1,S2,L2,2,2,ILY)
lund_crm1_evtgen.F:        IF(JFLAG(2).EQ.1) THEN
lund_crm1_evtgen.F:           JMIX(1,1)=2*IDY+3
lund_crm1_evtgen.F:           JMIX(2,1)=2*IDY+4
lund_crm1_evtgen.F:           JMIX(3,1)=0
lund_crm1_evtgen.F:           JMIX(1,2)=2*JDY+3
lund_crm1_evtgen.F:           ACORN(1,1)=2./3.
lund_crm1_evtgen.F:           IF(KMFS.EQ.2) ACORN(1,1)=ACORN(1,1)-6./15.
lund_crm1_evtgen.F:           IF(KMFS.EQ.2) ACORN(2,2)=12./5.
lund_crm1_evtgen.F:           JMIX(1,1)=3*IDY+14
lund_crm1_evtgen.F:           JMIX(2,1)=3*IDY+15
lund_crm1_evtgen.F:           JMIX(3,1)=3*IDY+16
lund_crm1_evtgen.F:           JMIX(1,2)=3*IDY+14
lund_crm1_evtgen.F:           JMIX(2,2)=3*IDY+15
lund_crm1_evtgen.F:           JMIX(3,2)=3*IDY+16
lund_crm1_evtgen.F:           L1=2
lund_crm1_evtgen.F:              ACORN(1,1)=ACORN(1,1)
lund_crm1_evtgen.F:     1             +SIXJ(J2,S1,S2,L1,0,2,ILZ)*SIXJ(J2,S1,S2,L2,0,2,ILZ)
lund_crm1_evtgen.F:     1             +SIXJ(J2,S1,S2,L1,2,0,ILZ)*SIXJ(J2,S1,S2,L2,2,0,ILZ)
lund_crm1_evtgen.F:     1             +SIXJ(J2,S1,S2,L1,2,0,ILZ)*SIXJ(J2,S1,S2,L2,2,2,ILZ)
lund_crm1_evtgen.F:     1             +SIXJ(J2,S1,S2,L1,2,2,ILZ)*SIXJ(J2,S1,S2,L2,2,2,ILZ)
lund_crm1_evtgen.F:        IF(JFLAG(1).EQ.1) THEN
lund_crm1_evtgen.F:          IF(JFLAG(2).NE.1.OR.JFLAG(4).EQ.0) THEN
lund_crm1_evtgen.F:             DO K1AC=1,JFLAG(5)
lund_crm1_evtgen.F:                DO K2AC=1,JFLAG(6)
lund_crm1_evtgen.F:                   ACORN(K1AC,K2AC)=2.*ACORN(K1AC,K2AC)
lund_crm1_evtgen.F:        IF(JFLAG(2).NE.1) THEN
lund_crm1_evtgen.F:           DO K1C=1,3
lund_crm1_evtgen.F:              DO K2C=1,3
lund_crm1_evtgen.F:                 ACORN(K1C,K2C)=0.D+0
lund_crm1_evtgen.F:        E0=MFS(1)+MFS(2)
lund_crm1_evtgen.F:        IF(W.LE.E0+1.D-5) RETURN
lund_crm1_evtgen.F:        PW=DSQRT(W**2-2.*(MFS(1)**2+MFS(2)**2) +W**(-2)*(MFS(1)**2-
lund_crm1_evtgen.F:     1       MFS(2)**2)**2)/2.
lund_crm1_evtgen.F:        K=IDINT((PW+.5*H)/H)+1
lund_crm1_evtgen.F:        DO JJ=1,5
lund_crm1_evtgen.F:           DPH(JJ)=D(JMIX(1,1),KK-3+JJ)
lund_crm1_evtgen.F:           DO JA=1,JFLAG(5)
lund_crm1_evtgen.F:              DO JB=1,JFLAG(6)
lund_crm1_evtgen.F:                 IF(JFLAG(1).EQ.1) THEN
lund_crm1_evtgen.F:     1                   +ACORN(JA,JB)*D(JMIX(JA,1),KK-3+JJ)
lund_crm1_evtgen.F:     1                   +ACORN(JA,JB)*F(JMIX(JA,1),KK-3+JJ)
lund_crm1_evtgen.F:        IF(MDY.GT.NS1) DW=-DSQRT(2.D+0)*DWP
lund_crm1_evtgen.F:C  950718  Michael Kelsey -- Extracted from FCALC.FORTRAN
lund_crm1_evtgen.F:        DO I=1,NS1
lund_crm1_evtgen.F:           DARG=((-1.D+0)**(I+1))*WFLAM(ALAM,I)
lund_crm1_evtgen.F:        DO I=NS1+1,FIST_MIX
lund_crm1_evtgen.F:        DO I=1,FIST_MIX
lund_crm1_evtgen.F:           DO J=1,FIST_MIX
lund_crm1_evtgen.F:              IF(I.EQ.J) U(I,J)=(1.0,0.0)
lund_crm1_evtgen.F:        DO I=1,FIST_MIX
lund_crm1_evtgen.F:           CALL MINV(OMEGA,FIST_MIX,U(1,I),GRN(1,I),DET,ZIP,HAT)
lund_crm1_evtgen.F:        DO I=1,FIST_MIX
lund_crm1_evtgen.F:           DO J=1,FIST_MIX
lund_crm1_evtgen.F:        DO K=1,FIST_NFS
lund_crm1_evtgen.F:           SYMM=1.
lund_crm1_evtgen.F:           IF(FIST_NFS.EQ.13.AND.K.LE.6) SYMM=1./2.
lund_crm1_evtgen.F:           DO I=1,FIST_MIX
lund_crm1_evtgen.F:              DO J=1,FIST_MIX
lund_crm1_evtgen.F:     1                +AIMAG(CONJG(WGRN(I))*SYMM*HEX(I,J,K)
lund_crm1_evtgen.F:      DOUBLE PRECISION A,B,DT,HA,HB,HN,TEST,WA,Y0,Y1,YNEAR,YT0,YT1
lund_crm1_evtgen.F:      INTEGER I,INT1,ISG1,ISG2,ISGR,ITEST
lund_crm1_evtgen.F:      G(Y)=(Y**2-1.)*Y*(Y-2.)*FI(1)/24.-(Y-1.)*Y*(Y**2-4.)*FI(2)/6.
lund_crm1_evtgen.F:     1  +(Y**2-1.)*(Y**2-4.)*FI(3)/4.-(Y+1.)*Y*(Y**2-4.)*FI(4)/6.
lund_crm1_evtgen.F:     2  +(Y**2-1.)*Y*(Y+2.)*FI(5)/24.
lund_crm1_evtgen.F:      IF(J.EQ.1.OR.J.EQ.3) GO TO 10
lund_crm1_evtgen.F:   10 ISG1=FI(1)/DABS(FI(1))
lund_crm1_evtgen.F:      ISGR=ISG1*ISG2
lund_crm1_evtgen.F:      IF(ISGR.GT.0) WRITE(6,11)
lund_crm1_evtgen.F:   11 FORMAT(20X,'INTERPOLATION FINDS TWO ZEROS IN REGION'
lund_crm1_evtgen.F:     1   ,' - RETURNING ZERO AT LOWEST VALUE OF ARGUMENT')
lund_crm1_evtgen.F:      DO 15 I=1,5
lund_crm1_evtgen.F:      TEST=ISG1*HX(WA)
lund_crm1_evtgen.F:      IF(TEST.LT.0.D+0) GO TO 12
lund_crm1_evtgen.F:      GO TO 13
lund_crm1_evtgen.F:   12 INT1=I
lund_crm1_evtgen.F:      GO TO 16
lund_crm1_evtgen.F:   13 IF(TEST.GT.0.D+0.AND.I.EQ.5) WRITE(6,14)
lund_crm1_evtgen.F:   14 FORMAT(20X,'NO ZERO FOUND IN THIS REGION-EXTRAPOLATING')
lund_crm1_evtgen.F:   15 INT1=137
lund_crm1_evtgen.F:   16 YNEAR=0.D+0
lund_crm1_evtgen.F:      IF(INT1.EQ.137) GO TO 20
lund_crm1_evtgen.F:      YT1=INT1-3
lund_crm1_evtgen.F:      YT0=YT1-1.D+0
lund_crm1_evtgen.F:      IF(ISGR.GT.0) YT1=YT1-.5
lund_crm1_evtgen.F:      HA=HX(YT1)
lund_crm1_evtgen.F:      YNEAR=(HA*YT0-HB*YT1)/(HA-HB)
lund_crm1_evtgen.F:      Y1=Y0+.2D+0
lund_crm1_evtgen.F:      DO 35 ITEST=1,50
lund_crm1_evtgen.F:      A=HX(Y1)
lund_crm1_evtgen.F:      Y=(A*Y0-B*Y1)/(A-B)
lund_crm1_evtgen.F:      IF(DABS(HN).LT.1.D-5) GO TO 40
lund_crm1_evtgen.F:      Y0=Y1
lund_crm1_evtgen.F:      Y1=Y
lund_crm1_evtgen.F:        data cm/.31430839D+01,  .38020409D+01,  .42802358D+01
lund_crm1_evtgen.F:     &,  .46867534D+01,  .50513225D+01,  .53872132D+01
lund_crm1_evtgen.F:     &,  .57017567D+01,  .59995308D+01,  .62836449D+01/
lund_crm1_evtgen.F:        data mass/.18646000D+01,  .20067000D+01,  .19685000D+01
lund_crm1_evtgen.F:     &,  .21124000D+01,  .24228000D+01,  .24577000D+01
lund_crm1_evtgen.F:     &,  .25353500D+01,  .25732000D+01/
lund_crm1_evtgen.F:     &   .45000000D+00,  .18418364D+01
lund_crm1_evtgen.F:     &,  .21228942D+01,  .38812000D+00/
lund_crm1_evtgen.F:     &, .000D+00,-.800D-01, .000D+00, .000D+00, .000D+00
lund_crm1_evtgen.F:     &,-.230D+00, .000D+00, .000D+00, .500D-01, .000D+00
lund_crm1_evtgen.F:     &,-.750D-01/
lund_crm1_evtgen.F:         data p/.0000000D+00,   .3000000D-01,   .6000000D-01
lund_crm1_evtgen.F:     &,   .9000000D-01,   .1200000D+00,   .1500000D+00
lund_crm1_evtgen.F:     &,   .1800000D+00,   .2100000D+00,   .2400000D+00
lund_crm1_evtgen.F:     &,   .4500000D+00,   .4800000D+00,   .5100000D+00
lund_crm1_evtgen.F:     &,   .8100000D+00,   .8400000D+00,   .8700000D+00
lund_crm1_evtgen.F:     &,   .9900000D+00,   .1020000D+01,   .1050000D+01
lund_crm1_evtgen.F:     &,   .1080000D+01,   .1110000D+01,   .1140000D+01
lund_crm1_evtgen.F:     &,   .1170000D+01,   .1200000D+01,   .1230000D+01
lund_crm1_evtgen.F:     &,   .1260000D+01,   .1290000D+01,   .1320000D+01
lund_crm1_evtgen.F:     &,   .1350000D+01,   .1380000D+01,   .1410000D+01
lund_crm1_evtgen.F:     &,   .1440000D+01,   .1470000D+01,   .1500000D+01
lund_crm1_evtgen.F:     &,   .1530000D+01,   .1560000D+01,   .1590000D+01
lund_crm1_evtgen.F:     &,   .1620000D+01,   .1650000D+01,   .1680000D+01
lund_crm1_evtgen.F:     &,   .1710000D+01,   .1740000D+01,   .1770000D+01
lund_crm1_evtgen.F:     &,   .1800000D+01,   .1830000D+01,   .1860000D+01
lund_crm1_evtgen.F:     &,   .1890000D+01,   .1920000D+01,   .1950000D+01
lund_crm1_evtgen.F:     &,   .1980000D+01,   .2010000D+01,   .2040000D+01
lund_crm1_evtgen.F:     &,   .2070000D+01,   .2100000D+01,   .2130000D+01
lund_crm1_evtgen.F:     &,   .2160000D+01,   .2190000D+01,   .2220000D+01
lund_crm1_evtgen.F:     &,   .2250000D+01,   .2280000D+01,   .2310000D+01
lund_crm1_evtgen.F:     &,   .2340000D+01,   .2370000D+01,   .2400000D+01
lund_crm1_evtgen.F:     &,   .2430000D+01,   .2460000D+01,   .2490000D+01
lund_crm1_evtgen.F:     &,   .2520000D+01,   .2550000D+01,   .2580000D+01
lund_crm1_evtgen.F:     &,   .2610000D+01,   .2640000D+01,   .2670000D+01
lund_crm1_evtgen.F:     &,   .2700000D+01,   .2730000D+01,   .2760000D+01
lund_crm1_evtgen.F:     &,   .2790000D+01,   .2820000D+01,   .2850000D+01
lund_crm1_evtgen.F:     &,   .2880000D+01,   .2910000D+01,   .2940000D+01
lund_crm1_evtgen.F:     &,   .2970000D+01,   .3000000D+01,   .3030000D+01
lund_crm1_evtgen.F:     &,   .3060000D+01/
lund_crm1_evtgen.F:         data (D1(i),i=1,290)/
lund_crm1_evtgen.F:     &,   .0000000D+00,   .0000000D+00,  -.1523062D+01
lund_crm1_evtgen.F:     &,   .0000000D+00,  -.3453789D+01,   .0000000D+00
lund_crm1_evtgen.F:     &,  -.3119340D+01,   .0000000D+00,  -.1717514D+01
lund_crm1_evtgen.F:     &,  -.6824309D+01,   .0000000D+00,   .0000000D+00
lund_crm1_evtgen.F:     &,   .1007511D+02,   .3320476D-01,   .7906410D-01
lund_crm1_evtgen.F:     &,   .7797458D-01,   .4893969D-01,   .8094530D-01
lund_crm1_evtgen.F:     &,   .3702797D-04,  -.8148525D-01,  -.7315925D-04
lund_crm1_evtgen.F:     &,  -.1521046D+01,  -.8431857D-03,  -.3445473D+01
lund_crm1_evtgen.F:     &,  -.3436765D-02,  -.3105588D+01,  -.5659704D-02
lund_crm1_evtgen.F:     &,  -.1704828D+01,  -.5197049D-02,  -.5622559D-02
lund_crm1_evtgen.F:     &,  -.5834206D-02,  -.6809740D+01,   .1493540D-01
lund_crm1_evtgen.F:     &,   .1545466D-01,   .1003648D+02,   .6626733D-01
lund_crm1_evtgen.F:     &,   .1572700D+00,   .1543996D+00,   .9629200D-01
lund_crm1_evtgen.F:     &,   .1611155D+00,   .2951858D-03,  -.1614462D+00
lund_crm1_evtgen.F:     &,  -.5822560D-03,  -.1514963D+01,  -.3364659D-02
lund_crm1_evtgen.F:     &,  -.3420614D+01,  -.1371837D-01,  -.3064555D+01
lund_crm1_evtgen.F:     &,  -.2249594D-01,  -.1667079D+01,  -.2063975D-01
lund_crm1_evtgen.F:     &,  -.2242018D-01,  -.2326425D-01,  -.6766139D+01
lund_crm1_evtgen.F:     &,   .5941852D-01,   .6148465D-01,   .9921189D+01
lund_crm1_evtgen.F:     &,   .9885595D-01,   .2337718D+00,   .2278147D+00
lund_crm1_evtgen.F:     &,   .1406037D+00,   .2396996D+00,   .9902876D-03
lund_crm1_evtgen.F:     &,  -.2383554D+00,  -.1947356D-02,  -.1504872D+01
lund_crm1_evtgen.F:     &,  -.7542638D-02,  -.3379475D+01,  -.3067046D-01
lund_crm1_evtgen.F:     &,  -.2996901D+01,  -.5019439D-01,  -.1605190D+01
lund_crm1_evtgen.F:     &,  -.4570479D-01,  -.5011913D-01,  -.5200648D-01
lund_crm1_evtgen.F:     &,  -.6693965D+01,   .1325305D+00,   .1371400D+00
lund_crm1_evtgen.F:     &,   .9730976D+01,   .1308254D+00,   .3076298D+00
lund_crm1_evtgen.F:     &,   .2968670D+00,   .1805029D+00,   .3159661D+00
lund_crm1_evtgen.F:     &,   .2327772D-02,  -.3108328D+00,  -.4556778D-02
lund_crm1_evtgen.F:     &,  -.1490843D+01,  -.1332775D-01,  -.3322491D+01
lund_crm1_evtgen.F:     &,  -.5404519D-01,  -.2903713D+01,  -.8799332D-01
lund_crm1_evtgen.F:     &,  -.1520667D+01,  -.7955634D-01,  -.8827869D-01
lund_crm1_evtgen.F:     &,  -.9160419D-01,  -.6593951D+01,   .2326260D+00
lund_crm1_evtgen.F:     &,   .2407204D+00,   .9468719D+01,   .1620553D+00
lund_crm1_evtgen.F:     &,   .3782806D+00,   .3602136D+00,   .2146951D+00
lund_crm1_evtgen.F:     &,  -.8756013D-02,  -.1472975D+01,  -.2066908D-01
lund_crm1_evtgen.F:     &,  -.3250261D+01,  -.8349039D-01,  -.2786479D+01
lund_crm1_evtgen.F:     &,  -.1350874D+00,  -.1415559D+01,  -.1209878D+00
lund_crm1_evtgen.F:     &,  -.1364287D+00,  -.1416386D+00,  -.6467108D+01
lund_crm1_evtgen.F:     &,   .3570704D+00,   .3695041D+00,   .9138356D+01
lund_crm1_evtgen.F:     &,   .1923235D+00,   .4449060D+00,   .4166237D+00
lund_crm1_evtgen.F:     &,   .2421751D+00,   .4589217D+00,   .7672888D-02
lund_crm1_evtgen.F:     &,  -.4372755D+00,  -.1483140D-01,  -.1451389D+01
lund_crm1_evtgen.F:     &,  -.2948748D-01,  -.3163630D+01,  -.1185650D+00
lund_crm1_evtgen.F:     &,  -.2647059D+01,  -.1904190D+00,  -.1292463D+01
lund_crm1_evtgen.F:     &,  -.1685855D+00,  -.1939240D+00,  -.2012364D+00
lund_crm1_evtgen.F:     &,  -.6314625D+01,   .5039584D+00,   .5215186D+00
lund_crm1_evtgen.F:     &,   .8744813D+01,   .2214131D+00,   .5067775D+00
lund_crm1_evtgen.F:     &,   .4651284D+00,   .2621172D+00,   .5242846D+00
lund_crm1_evtgen.F:     &,   .1199864D-01,  -.4890183D+00,  -.2300173D-01
lund_crm1_evtgen.F:     &,  -.1426236D+01,  -.3970385D-01,  -.3063309D+01
lund_crm1_evtgen.F:     &,  -.1587460D+00,  -.2487643D+01,  -.2526525D+00
lund_crm1_evtgen.F:     &,  -.1154176D+01,  -.2206323D+00,  -.2597740D+00
lund_crm1_evtgen.F:     &,  -.2695757D+00,  -.6138195D+01,   .6697851D+00
lund_crm1_evtgen.F:     &,   .6931422D+00,   .8293901D+01,   .2491957D+00
lund_crm1_evtgen.F:     &,   .5633645D+00,   .5049026D+00,   .2741013D+00
lund_crm1_evtgen.F:     &,   .5848951D+00,   .1759751D-01,  -.5319382D+00
lund_crm1_evtgen.F:     &,  -.3341018D-01,  -.1397731D+01,  -.5121502D-01
lund_crm1_evtgen.F:     &,  -.2950423D+01,  -.2034045D+00,  -.2310749D+01
lund_crm1_evtgen.F:     &,  -.3204620D+00,  -.1004032D+01,  -.2752908D+00
lund_crm1_evtgen.F:     &,  -.3331113D+00,  -.3456893D+00,  -.5939464D+01
lund_crm1_evtgen.F:     &,   .8510679D+00,   .8807738D+00,   .7792195D+01
lund_crm1_evtgen.F:     &,   .2755942D+00,   .6142151D+00,   .5353218D+00
lund_crm1_evtgen.F:     &,   .2777687D+00,   .6402276D+00,   .2456041D-01
lund_crm1_evtgen.F:     &,  -.5653239D+00,  -.4611644D-01,  -.1365974D+01
lund_crm1_evtgen.F:     &,  -.6390924D-01,  -.2826116D+01,  -.2519425D+00
lund_crm1_evtgen.F:     &,  -.2119005D+01,  -.3922700D+00,  -.8455331D+00
lund_crm1_evtgen.F:     &,  -.3306996D+00,  -.4129238D+00,  -.4285287D+00
lund_crm1_evtgen.F:     &,  -.5720285D+01,   .1043939D+01,   .1080415D+01
lund_crm1_evtgen.F:     &,   .7246909D+01,   .3004263D+00,   .6588513D+00
lund_crm1_evtgen.F:     &,   .5559732D+00,   .2731350D+00,   .6898802D+00
lund_crm1_evtgen.F:     &,   .3294732D-01,  -.5887492D+00,  -.6109693D-01
lund_crm1_evtgen.F:     &,  -.1331225D+01,  -.7761880D-01,  -.2691630D+01
lund_crm1_evtgen.F:     &,  -.3036249D+00,  -.1915408D+01,  -.4664558D+00
lund_crm1_evtgen.F:     &,  -.5169143D+00,  -.5483017D+01,   .1244340D+01
lund_crm1_evtgen.F:     &,   .1287869D+01,   .6665778D+01,   .3235761D+00
lund_crm1_evtgen.F:     &,   .7334631D+00,   .4278295D-01,  -.6019869D+00
lund_crm1_evtgen.F:     &,  -.7825501D-01,  -.1293711D+01,  -.9229452D-01
lund_crm1_evtgen.F:     &,  -.2548289D+01,  -.3570935D+00,  -.1702887D+01
lund_crm1_evtgen.F:     &,  -.5412550D+00,  -.5180027D+00,  -.4357658D+00
lund_crm1_evtgen.F:     &,  -.5873799D+00,  -.6096220D+00,  -.5229549D+01
lund_crm1_evtgen.F:     &,   .1448140D+01,   .1498863D+01,   .6056789D+01
lund_crm1_evtgen.F:     &,   .3449443D+00,   .7281808D+00,   .5675227D+00
lund_crm1_evtgen.F:     &,   .2405844D+00,   .7708654D+00,   .5406594D-01
lund_crm1_evtgen.F:     &,  -.6049848D+00,  -.9737704D-01,  -.1253674D+01
lund_crm1_evtgen.F:     &,  -.1077607D+00,  -.2397477D+01,  -.4126847D+00
lund_crm1_evtgen.F:     &,  -.1484526D+01,  -.6151800D+00,  -.3562339D+00
lund_crm1_evtgen.F:     &,  -.4815646D+00,  -.6796193D+00,  -.7053837D+00
lund_crm1_evtgen.F:     &,  -.4962550D+01,   .1651039D+01,   .1708951D+01
lund_crm1_evtgen.F:     &,   .5428223D+01,   .3644482D+00,   .7525564D+00
lund_crm1_evtgen.F:     &,   .5585601D+00,   .2139598D+00/
lund_crm1_evtgen.F:         data (D1(i),i=291,580)/
lund_crm1_evtgen.F:     &   .8018670D+00,   .6675570D-01,  -.5979423D+00
lund_crm1_evtgen.F:     &,  -.1182062D+00,  -.1211372D+01,  -.1238733D+00
lund_crm1_evtgen.F:     &,  -.2240654D+01,  -.4691039D+00,  -.1263500D+01
lund_crm1_evtgen.F:     &,  -.6865044D+00,  -.2003855D+00,  -.5206041D+00
lund_crm1_evtgen.F:     &,  -.7735466D+00,  -.8029085D+00,  -.4684102D+01
lund_crm1_evtgen.F:     &,   .1848935D+01,   .1913889D+01,   .4788370D+01
lund_crm1_evtgen.F:     &,   .3820225D+00,   .7699597D+00,   .5403189D+00
lund_crm1_evtgen.F:     &,   .1817673D+00,   .8263933D+00,   .8078191D-01
lund_crm1_evtgen.F:     &,  -.5812407D+00,  -.1404063D+00,  -.1167066D+01
lund_crm1_evtgen.F:     &,  -.1404839D+00,  -.2079193D+01,  -.5255635D+00
lund_crm1_evtgen.F:     &,  -.1042748D+01,  -.7536563D+00,  -.5370544D-01
lund_crm1_evtgen.F:     &,  -.5514320D+00,  -.8679144D+00,  -.9009028D+00
lund_crm1_evtgen.F:     &,  -.4396998D+01,   .2037839D+01,   .2109551D+01
lund_crm1_evtgen.F:     &,   .4145361D+01,   .3976193D+00,   .7804371D+00
lund_crm1_evtgen.F:     &,   .5134143D+00,   .1451325D+00,   .8443900D+00
lund_crm1_evtgen.F:     &,   .9603995D-01,  -.5554445D+00,  -.1635829D+00
lund_crm1_evtgen.F:     &,  -.1121031D+01,  -.1574423D+00,  -.1914588D+01
lund_crm1_evtgen.F:     &,  -.5812877D+00,  -.8253058D+00,  -.8151663D+00
lund_crm1_evtgen.F:     &,   .8093102D-01,  -.5727602D+00,  -.9614928D+00
lund_crm1_evtgen.F:     &,  -.9980910D+00,  -.4103408D+01,   .2214003D+01
lund_crm1_evtgen.F:     &,   .2292056D+01,   .3507207D+01,   .4112082D+00
lund_crm1_evtgen.F:     &,   .7841239D+00,   .4786240D+00,   .1053403D+00
lund_crm1_evtgen.F:     &,   .8560614D+00,   .1124098D+00,  -.5212821D+00
lund_crm1_evtgen.F:     &,  -.1872943D+00,  -.1073540D+01,  -.1745710D+00
lund_crm1_evtgen.F:     &,  -.1748278D+01,  -.6355244D+00,  -.6138958D+00
lund_crm1_evtgen.F:     &,  -.8696987D+00,   .2011757D+00,  -.5836482D+00
lund_crm1_evtgen.F:     &,  -.1053088D+01,  -.1093235D+01,  -.3806047D+01
lund_crm1_evtgen.F:     &,   .2373990D+01,   .2457874D+01,   .2881330D+01
lund_crm1_evtgen.F:     &,   .4227760D+00,   .7811776D+00,   .4368650D+00
lund_crm1_evtgen.F:     &,   .6378531D-01,   .8615075D+00,   .1297354D+00
lund_crm1_evtgen.F:     &,  -.4796239D+00,  -.2110651D+00,  -.1024872D+01
lund_crm1_evtgen.F:     &,  -.1917701D+00,  -.1581665D+01,  -.6875565D+00
lund_crm1_evtgen.F:     &,  -.4110686D+00,  -.9160791D+00,   .3049757D+00
lund_crm1_evtgen.F:     &,  -.5834308D+00,  -.1141559D+01,  -.1185111D+01
lund_crm1_evtgen.F:     &,  -.3507011D+01,   .2514776D+01,   .2603795D+01
lund_crm1_evtgen.F:     &,   .2274810D+01,   .4323262D+00,   .7720159D+00
lund_crm1_evtgen.F:     &,   .3891662D+00,   .2181802D-01,   .8609552D+00
lund_crm1_evtgen.F:     &,   .1478433D+00,  -.4314568D+00,  -.2344000D+00
lund_crm1_evtgen.F:     &,  -.9753015D+00,  -.2088688D+00,  -.1416096D+01
lund_crm1_evtgen.F:     &,  -.7367123D+00,  -.2191326D+00,  -.9533165D+00
lund_crm1_evtgen.F:     &,   .3907883D+00,  -.5718222D+00,  -.1225794D+01
lund_crm1_evtgen.F:     &,  -.1272685D+01,  -.3208809D+01,   .2633694D+01
lund_crm1_evtgen.F:     &,   .2727133D+01,   .1694037D+01,   .4398781D+00
lund_crm1_evtgen.F:     &,   .7569440D+00,   .3366411D+00,  -.1919947D-01
lund_crm1_evtgen.F:     &,   .8546937D+00,   .1665426D+00,  -.3778575D+00
lund_crm1_evtgen.F:     &,  -.2567980D+00,  -.9251065D+00,  -.2257242D+00
lund_crm1_evtgen.F:     &,  -.1252891D+01,  -.7823748D+00,  -.4023286D-01
lund_crm1_evtgen.F:     &,  -.9806215D+00,   .4575276D+00,  -.5488579D+00
lund_crm1_evtgen.F:     &,  -.1304887D+01,  -.1354710D+01,  -.2913522D+01
lund_crm1_evtgen.F:     &,   .2728632D+01,   .2825673D+01,   .1144825D+01
lund_crm1_evtgen.F:     &,  -.5798336D-01,   .8430669D+00,   .1856294D+00
lund_crm1_evtgen.F:     &,  -.3199646D+00,  -.2777669D+00,  -.8745506D+00
lund_crm1_evtgen.F:     &,  -.2421991D+00,  -.1093231D+01,  -.8239896D+00
lund_crm1_evtgen.F:     &,   .1238950D+00,  -.9974183D+00,   .5046641D+00
lund_crm1_evtgen.F:     &,  -.5149057D+00,  -.1377720D+01,  -.1430624D+01
lund_crm1_evtgen.F:     &,  -.2623280D+01,   .2797968D+01,   .2897733D+01
lund_crm1_evtgen.F:     &,   .6320722D+00,   .4490793D+00,   .7108225D+00
lund_crm1_evtgen.F:     &,   .2218089D+00,  -.9340257D-01,   .8264660D+00
lund_crm1_evtgen.F:     &,  -.8238950D+00,  -.2581635D+00,  -.9382096D+00
lund_crm1_evtgen.F:     &,  -.8610715D+00,   .2719087D+00,  -.1003352D+01
lund_crm1_evtgen.F:     &,   .5322689D+00,  -.4706497D+00,  -.1443879D+01
lund_crm1_evtgen.F:     &,  -.1499439D+01,  -.2340015D+01,   .2840612D+01
lund_crm1_evtgen.F:     &,   .2942175D+01,   .1599061D+00,   .4509004D+00
lund_crm1_evtgen.F:     &,   .6807674D+00,   .1618855D+00,  -.1243485D+00
lund_crm1_evtgen.F:     &,   .8053210D+00,   .2241090D+00,  -.1959939D+00
lund_crm1_evtgen.F:     &,  -.3135722D+00,  -.7733903D+00,  -.2734953D+00
lund_crm1_evtgen.F:     &,  -.7888630D+00,  -.8932101D+00,   .4026223D+00
lund_crm1_evtgen.F:     &,  -.9982898D+00,   .5408491D+00,  -.4170642D+00
lund_crm1_evtgen.F:     &,  -.1502523D+01,  -.1560466D+01,  -.2065435D+01
lund_crm1_evtgen.F:     &,   .2856005D+01,   .2958419D+01,  -.2683976D+00
lund_crm1_evtgen.F:     &,   .4509428D+00,   .6467711D+00,   .1018472D+00
lund_crm1_evtgen.F:     &,  -.1500140D+00,   .7800926D+00,   .2430665D+00
lund_crm1_evtgen.F:     &,  -.1322531D+00,  -.3275850D+00,  -.7232750D+00
lund_crm1_evtgen.F:     &,  -.2880818D+00,  -.6460933D+00,  -.9200732D+00
lund_crm1_evtgen.F:     &,   .5153808D+00,  -.9823182D+00,   .5313129D+00
lund_crm1_evtgen.F:     &,  -.3553793D+00,  -.1553105D+01,  -.1613135D+01
lund_crm1_evtgen.F:     &,  -.1801122D+01,   .2844134D+01,   .2946441D+01
lund_crm1_evtgen.F:     &,   .4279876D-01,  -.1697369D+00,   .7512634D+00
lund_crm1_evtgen.F:     &,   .2615493D+00,  -.6884220D-01,  -.3385426D+00
lund_crm1_evtgen.F:     &,  -.6737749D+00,  -.3017950D+00,  -.5106866D+00
lund_crm1_evtgen.F:     &,  -.9414094D+00,   .6097253D+00,  -.9557333D+00
lund_crm1_evtgen.F:     &,   .5049608D+00,  -.2870392D+00,  -.1595137D+01
lund_crm1_evtgen.F:     &,  -.1656941D+01,  -.1548466D+01,   .2805443D+01
lund_crm1_evtgen.F:     &,   .2906694D+01,  -.9847060D+00,   .4460960D+00
lund_crm1_evtgen.F:     &,   .5692463D+00,  -.1423239D-01,  -.1830703D+00
lund_crm1_evtgen.F:     &,   .7193300D+00,   .2793511D+00,  -.6808776D-02
lund_crm1_evtgen.F:     &,  -.3461767D+00,  -.6251007D+00,  -.3145924D+00
lund_crm1_evtgen.F:     &,  -.9190673D+00,   .4636215D+00,  -.2136555D+00
lund_crm1_evtgen.F:     &,  -.1628445D+01,  -.1691697D+01,  -.1308584D+01
lund_crm1_evtgen.F:     &,   .2740915D+01,   .2840190D+01,  -.1270382D+01
lund_crm1_evtgen.F:     &,   .4413419D+00,   .5268819D+00,  -.6831512D-01
lund_crm1_evtgen.F:     &,  -.1898846D+00,   .6847943D+00,   .2962772D+00
lund_crm1_evtgen.F:     &,   .5288483D-01,  -.3502886D+00/
lund_crm1_evtgen.F:         data (D1(i),i=581,870)/
lund_crm1_evtgen.F:     &,  -.9669022D+00,   .7431204D+00,  -.8729085D+00
lund_crm1_evtgen.F:     &,   .4092374D+00,  -.1370108D+00,  -.1652761D+01
lund_crm1_evtgen.F:     &,  -.1717127D+01,  -.1082603D+01,   .2651948D+01
lund_crm1_evtgen.F:     &,   .2748368D+01,  -.1507595D+01,   .4351951D+00
lund_crm1_evtgen.F:     &,   .4829441D+00,  -.1186300D+00,  -.1900521D+00
lund_crm1_evtgen.F:     &,   .6481565D+00,   .3121471D+00,   .1093773D+00
lund_crm1_evtgen.F:     &,  -.1546808D+00,  -.9709596D+00,   .7828956D+00
lund_crm1_evtgen.F:     &,  -.8181805D+00,   .3440286D+00,  -.5881883D-01
lund_crm1_evtgen.F:     &,  -.1668065D+01,  -.1733204D+01,  -.8711428D+00
lund_crm1_evtgen.F:     &,   .2540336D+01,   .2633076D+01,  -.1697175D+01
lund_crm1_evtgen.F:     &,   .4277680D+00,   .4378749D+00,  -.1644809D+00
lund_crm1_evtgen.F:     &,  -.1838095D+00,   .6099074D+00,   .3267979D+00
lund_crm1_evtgen.F:     &,   .1619208D+00,  -.3475209D+00,  -.4859021D+00
lund_crm1_evtgen.F:     &,  -.3466046D+00,  -.5414896D-01,  -.9692865D+00
lund_crm1_evtgen.F:     &,   .8057069D+00,  -.7557509D+00,   .2704182D+00
lund_crm1_evtgen.F:     &,   .1914141D-01,  -.1674343D+01,  -.1739984D+01
lund_crm1_evtgen.F:     &,  -.6748484D+00,   .2408205D+01,   .2496511D+01
lund_crm1_evtgen.F:     &,  -.1840631D+01,   .4191763D+00,   .3922709D+00
lund_crm1_evtgen.F:     &,  -.2053030D+00,  -.1715379D+00,   .5705784D+00
lund_crm1_evtgen.F:     &,   .3401079D+00,   .2098893D+00,  -.3406159D+00
lund_crm1_evtgen.F:     &,  -.4423133D+00,  -.3549612D+00,   .3691594D-01
lund_crm1_evtgen.F:     &,  -.9620203D+00,   .8124507D+00,  -.6867531D+00
lund_crm1_evtgen.F:     &,   .1907444D+00,   .9501323D-01,  -.1671911D+01
lund_crm1_evtgen.F:     &,  -.1737582D+01,  -.4940909D+00,   .2257971D+01
lund_crm1_evtgen.F:     &,   .2341165D+01,  -.1940076D+01,   .4095379D+00
lund_crm1_evtgen.F:     &,   .3466396D+00,  -.2406667D+00,  -.1538255D+00
lund_crm1_evtgen.F:     &,   .5305084D+00,   .3519132D+00,   .2527840D+00
lund_crm1_evtgen.F:     &,  -.3301345D+00,  -.4003530D+00,  -.3621019D+00
lund_crm1_evtgen.F:     &,   .1184471D+00,  -.9494582D+00,   .8044471D+00
lund_crm1_evtgen.F:     &,  -.6123827D+00,   .1075232D+00,   .1672375D+00
lund_crm1_evtgen.F:     &,  -.1660973D+01,  -.1726416D+01,  -.3289963D+00
lund_crm1_evtgen.F:     &,   .2091911D+01,   .2169392D+01,  -.1998226D+01
lund_crm1_evtgen.F:     &,   .3989712D+00,   .3014530D+00,  -.2702784D+00
lund_crm1_evtgen.F:     &,  -.1312720D+00,   .4901838D+00,   .3621347D+00
lund_crm1_evtgen.F:     &,   .2902351D+00,  -.3162407D+00,  -.3601276D+00
lund_crm1_evtgen.F:     &,  -.3680195D+00,   .1904843D+00,  -.9316126D+00
lund_crm1_evtgen.F:     &,   .7828969D+00,  -.5337787D+00,   .2314353D-01
lund_crm1_evtgen.F:     &,   .2342325D+00,  -.1641818D+01,  -.1706797D+01
lund_crm1_evtgen.F:     &,  -.1797194D+00,   .1913258D+01,   .1984535D+01
lund_crm1_evtgen.F:     &,  -.2018066D+01,   .3875946D+00,   .2572024D+00
lund_crm1_evtgen.F:     &,  -.2939771D+00,  -.1047172D+00,   .4500014D+00
lund_crm1_evtgen.F:     &,   .3706965D+00,   .3220002D+00,  -.2991600D+00
lund_crm1_evtgen.F:     &,  -.3217254D+00,  -.3726396D+00,   .2531915D+00
lund_crm1_evtgen.F:     &,  -.4331962D-01,   .2945554D+00,  -.1615147D+01
lund_crm1_evtgen.F:     &,  -.1679114D+01,  -.4597598D-01,   .1725566D+01
lund_crm1_evtgen.F:     &,   .1790264D+01,  -.2003075D+01,   .3755245D+00
lund_crm1_evtgen.F:     &,   .2141552D+00,  -.3118200D+00,  -.7503592D-01
lund_crm1_evtgen.F:     &,   .4103811D+00,   .3775836D+00,   .3479600D+00
lund_crm1_evtgen.F:     &,  -.2791720D+00,  -.2851517D+00,  -.3760373D+00
lund_crm1_evtgen.F:     &,   .3067392D+00,  -.8819564D+00,   .7054568D+00
lund_crm1_evtgen.F:     &,  -.3690253D+00,  -.1400702D+00,   .3471249D+00
lund_crm1_evtgen.F:     &,  -.1581146D+01,  -.1644089D+01,   .7238365D-01
lund_crm1_evtgen.F:     &,   .1530350D+01,   .1588152D+01,  -.1956946D+01
lund_crm1_evtgen.F:     &,   .3628749D+00,   .1727175D+00,  -.3237028D+00
lund_crm1_evtgen.F:     &,  -.4316283D-01,   .3715326D+00,   .3826948D+00
lund_crm1_evtgen.F:     &,   .3681113D+00,  -.2566024D+00,  -.2506802D+00
lund_crm1_evtgen.F:     &,  -.3782048D+00,   .3514714D+00,  -.8508589D+00
lund_crm1_evtgen.F:     &,   .6527165D+00,  -.2853359D+00,  -.2148703D+00
lund_crm1_evtgen.F:     &,   .3909537D+00,  -.1540648D+01,  -.1602114D+01
lund_crm1_evtgen.F:     &,   .1758895D+00,   .1331056D+01,   .1381763D+01
lund_crm1_evtgen.F:     &,  -.1883582D+01,   .3497563D+00,   .1331855D+00
lund_crm1_evtgen.F:     &,  -.3299153D+00,  -.1003650D-01,   .3338059D+00
lund_crm1_evtgen.F:     &,   .3860596D+00,   .3825578D+00,  -.2318138D+00
lund_crm1_evtgen.F:     &,  -.2181148D+00,  -.3791600D+00,   .3877748D+00
lund_crm1_evtgen.F:     &,  -.8161467D+00,   .5928396D+00,  -.2024144D+00
lund_crm1_evtgen.F:     &,  -.2828542D+00,   .4253406D+00,  -.1494104D+01
lund_crm1_evtgen.F:     &,  -.1554056D+01,   .2650287D+00,   .1130449D+01
lund_crm1_evtgen.F:     &,   .1173958D+01,  -.1786950D+01,   .3362748D+00
lund_crm1_evtgen.F:     &,   .9586030D-01,  -.3307447D+00,   .2343686D-01
lund_crm1_evtgen.F:     &,   .2974516D+00,   .3876941D+00,   .3914992D+00
lund_crm1_evtgen.F:     &,  -.2051961D+00,  -.1875382D+00,  -.3789365D+00
lund_crm1_evtgen.F:     &,   .4160769D+00,  -.7782736D+00,   .5274595D+00
lund_crm1_evtgen.F:     &,  -.1213480D+00,  -.3427281D+00,   .4498398D+00
lund_crm1_evtgen.F:     &,  -.1442345D+01,  -.1500350D+01,   .3405487D+00
lund_crm1_evtgen.F:     &,   .9312224D+00,   .9675302D+00,  -.1671004D+01
lund_crm1_evtgen.F:     &,   .3226171D+00,   .6088829D-01,  -.3265596D+00
lund_crm1_evtgen.F:     &,   .5645258D-01,   .2626814D+00,   .3876345D+00
lund_crm1_evtgen.F:     &,   .3952192D+00,  -.1771568D+00,  -.1589667D+00
lund_crm1_evtgen.F:     &,   .4581897D+00,  -.4311370D-01,  -.3933069D+00
lund_crm1_evtgen.F:     &,   .4641943D+00,  -.1385940D+01,  -.1441982D+01
lund_crm1_evtgen.F:     &,  -.1539706D+01,   .3086960D+00,   .2836123D-01
lund_crm1_evtgen.F:     &,  -.3177952D+00,   .8800871D-01,   .2296685D+00
lund_crm1_evtgen.F:     &,   .3859361D+00,   .3940676D+00,  -.1480828D+00
lund_crm1_evtgen.F:     &,  -.1323961D+00,  -.3751210D+00,   .4507326D+00
lund_crm1_evtgen.F:     &,  -.6949612D+00,   .3865006D+00,   .3131818D-01
lund_crm1_evtgen.F:     &,  -.4338998D+00,   .4685565D+00,  -.1325684D+01
lund_crm1_evtgen.F:     &,  -.1379460D+01,   .4534559D+00,   .5465352D+00
lund_crm1_evtgen.F:     &,   .5687731D+00,  -.1396795D+01,   .2946974D+00
lund_crm1_evtgen.F:     &,  -.1546769D-02,  -.3049387D+00,   .1175145D+00
lund_crm1_evtgen.F:     &,   .1985492D+00,   .3826707D+00,   .3884604D+00
lund_crm1_evtgen.F:     &,  -.1184463D+00,  -.1078347D+00,  -.3715912D+00
lund_crm1_evtgen.F:     &,   .4581784D+00,  -.6504403D+00/
lund_crm1_evtgen.F:         data (D1(i),i=871,1160)/
lund_crm1_evtgen.F:     &   .3139053D+00,   .1011281D+00,  -.4640151D+00
lund_crm1_evtgen.F:     &,   .4631572D+00,  -.1262107D+01,  -.1313569D+01
lund_crm1_evtgen.F:     &,  -.1245890D+01,   .2807041D+00,  -.2876795D-01
lund_crm1_evtgen.F:     &,  -.2885521D+00,   .1442913D+00,   .1694240D+00
lund_crm1_evtgen.F:     &,   .3779250D+00,   .3788518D+00,  -.8862457D-01
lund_crm1_evtgen.F:     &,  -.8518281D-01,  -.3671225D+00,   .4598380D+00
lund_crm1_evtgen.F:     &,  -.6046463D+00,   .2416355D+00,   .1656176D+00
lund_crm1_evtgen.F:     &,  -.4834270D+00,   .4484892D+00,  -.1196064D+01
lund_crm1_evtgen.F:     &,  -.1245049D+01,   .5211974D+00,   .1940830D+00
lund_crm1_evtgen.F:     &,   .2032149D+00,  -.1090334D+01,   .2667921D+00
lund_crm1_evtgen.F:     &,  -.5323204D-01,  -.2690978D+00,   .1677915D+00
lund_crm1_evtgen.F:     &,   .1423599D+00,   .3717981D+00,   .3657269D+00
lund_crm1_evtgen.F:     &,  -.5900583D-01,  -.6443027D-01,  -.3617408D+00
lund_crm1_evtgen.F:     &,   .4562501D+00,  -.5580355D+00,   .1711969D+00
lund_crm1_evtgen.F:     &,   .2242150D+00,  -.4923388D+00,   .4252349D+00
lund_crm1_evtgen.F:     &,  -.1128184D+01,  -.1174623D+01,   .5404318D+00
lund_crm1_evtgen.F:     &,   .3417950D-01,   .3728283D-01,  -.9332928D+00
lund_crm1_evtgen.F:     &,   .2530932D+00,  -.7500566D-01,  -.2471991D+00
lund_crm1_evtgen.F:     &,   .1876652D+00,   .1173928D+00,   .3643995D+00
lund_crm1_evtgen.F:     &,   .3495875D+00,  -.2995438D-01,  -.4552317D-01
lund_crm1_evtgen.F:     &,  -.3555142D+00,   .4480377D+00,  -.5110462D+00
lund_crm1_evtgen.F:     &,   .1027836D+00,   .2764778D+00,  -.4910615D+00
lund_crm1_evtgen.F:     &,   .3942399D+00,  -.1059136D+01,  -.1102913D+01
lund_crm1_evtgen.F:     &,   .5510824D+00,  -.1131391D+00,  -.1156461D+00
lund_crm1_evtgen.F:     &,  -.7774844D+00,   .2395233D+00,  -.9415825D-01
lund_crm1_evtgen.F:     &,  -.2233572D+00,   .2035717D+00,   .9453045D-01
lund_crm1_evtgen.F:     &,   .3558465D+00,   .3309413D+00,  -.1804763D-02
lund_crm1_evtgen.F:     &,  -.2839927D-01,  -.3485134D+00,   .4357782D+00
lund_crm1_evtgen.F:     &,  -.4640936D+00,   .3819922D-01,   .3220931D+00
lund_crm1_evtgen.F:     &,  -.4801759D+00,   .3564821D+00,  -.9894684D+00
lund_crm1_evtgen.F:     &,  -.1030654D+01,   .5541154D+00,  -.2469497D+00
lund_crm1_evtgen.F:     &,  -.2546091D+00,  -.6254175D+00,   .2262218D+00
lund_crm1_evtgen.F:     &,  -.1106906D+00,  -.1981389D+00,   .2154212D+00
lund_crm1_evtgen.F:     &,   .7375480D-01,   .3462621D+00,   .3102758D+00
lund_crm1_evtgen.F:     &,   .2517283D-01,  -.1298928D-01,  -.3408114D+00
lund_crm1_evtgen.F:     &,   .4200874D+00,  -.4175661D+00,  -.2203901D-01
lund_crm1_evtgen.F:     &,   .3608739D+00,  -.4604552D+00,   .3130398D+00
lund_crm1_evtgen.F:     &,  -.9199005D+00,  -.9583060D+00,   .5504188D+00
lund_crm1_evtgen.F:     &,  -.3666073D+00,  -.3789318D+00,  -.4792144D+00
lund_crm1_evtgen.F:     &,   .2132446D+00,  -.1247536D+00,  -.1720633D+00
lund_crm1_evtgen.F:     &,   .2231235D+00,   .5502546D-01,   .3357729D+00
lund_crm1_evtgen.F:     &,   .2881108D+00,   .5064944D-01,   .7483371D-03
lund_crm1_evtgen.F:     &,  -.3324821D+00,   .4014973D+00,  -.3718215D+00
lund_crm1_evtgen.F:     &,  -.7741879D-01,   .3927542D+00,  -.4328302D+00
lund_crm1_evtgen.F:     &,   .2650593D+00,  -.8507796D+00,  -.8866318D+00
lund_crm1_evtgen.F:     &,   .5408407D+00,  -.4717354D+00,  -.4882168D+00
lund_crm1_evtgen.F:     &,  -.3405863D+00,   .2005989D+00,  -.1364731D+00
lund_crm1_evtgen.F:     &,  -.1455840D+00,   .2267198D+00,   .3828254D-01
lund_crm1_evtgen.F:     &,   .3245068D+00,   .2648924D+00,   .7443963D-01
lund_crm1_evtgen.F:     &,   .1296575D-01,  -.3235996D+00,   .3805501D+00
lund_crm1_evtgen.F:     &,  -.3271847D+00,  -.1274205D+00,   .4177815D+00
lund_crm1_evtgen.F:     &,  -.3983532D+00,   .2137226D+00,  -.7828501D+00
lund_crm1_evtgen.F:     &,  -.8158994D+00,   .5263170D+00,  -.5622242D+00
lund_crm1_evtgen.F:     &,  -.5823441D+00,  -.2111710D+00,   .1883482D+00
lund_crm1_evtgen.F:     &,  -.1450000D+00,  -.1191637D+00,   .2262867D+00
lund_crm1_evtgen.F:     &,   .2344972D-01,   .3125915D+00,   .2410542D+00
lund_crm1_evtgen.F:     &,   .9636281D-01,   .2370800D-01,  -.3142330D+00
lund_crm1_evtgen.F:     &,   .3577525D+00,  -.2839252D+00,  -.1717153D+00
lund_crm1_evtgen.F:     &,   .4361073D+00,  -.3581611D+00,   .1602495D+00
lund_crm1_evtgen.F:     &,  -.7162621D+00,  -.7468604D+00,   .5075998D+00
lund_crm1_evtgen.F:     &,  -.6381399D+00,  -.6613747D+00,  -.9198617D-01
lund_crm1_evtgen.F:     &,   .1765711D+00,  -.1530800D+00,  -.9319937D-01
lund_crm1_evtgen.F:     &,   .2221978D+00,   .1043720D-01,   .3001524D+00
lund_crm1_evtgen.F:     &,   .2169945D+00,   .1162799D+00,   .3306135D-01
lund_crm1_evtgen.F:     &,  -.3044132D+00,   .3335550D+00,  -.2423439D+00
lund_crm1_evtgen.F:     &,  -.2101333D+00,   .4479766D+00,  -.3134811D+00
lund_crm1_evtgen.F:     &,   .1057296D+00,  -.6517330D+00,  -.6795972D+00
lund_crm1_evtgen.F:     &,   .1615068D-01,   .1652452D+00,  -.1583935D+00
lund_crm1_evtgen.F:     &,  -.6808888D-01,   .2147000D+00,  -.8554870D-03
lund_crm1_evtgen.F:     &,   .2873110D+00,   .1930724D+00,   .1340928D+00
lund_crm1_evtgen.F:     &,   .4110919D-01,  -.2943470D+00,   .3084477D+00
lund_crm1_evtgen.F:     &,  -.2026324D+00,  -.2425831D+00,   .4537351D+00
lund_crm1_evtgen.F:     &,  -.2654720D+00,   .5131145D-01,  -.5893007D+00
lund_crm1_evtgen.F:     &,  -.6148493D+00,   .4606760D+00,  -.7478393D+00
lund_crm1_evtgen.F:     &,  -.7757666D+00,   .1127123D+00,   .1543556D+00
lund_crm1_evtgen.F:     &,  -.1619054D+00,  -.4404691D-01,   .2041547D+00
lund_crm1_evtgen.F:     &,  -.1053676D-01,   .2741842D+00,   .1695966D+00
lund_crm1_evtgen.F:     &,   .1497423D+00,   .4789313D-01,  -.2839954D+00
lund_crm1_evtgen.F:     &,   .2827887D+00,  -.1649439D+00,  -.2690502D+00
lund_crm1_evtgen.F:     &,   .4537825D+00,  -.2152566D+00,  -.1949486D-02
lund_crm1_evtgen.F:     &,  -.5294213D+00,  -.5524905D+00,   .4337870D+00
lund_crm1_evtgen.F:     &,  -.7827858D+00,  -.8123206D+00,   .1974379D+00
lund_crm1_evtgen.F:     &,   .1439428D+00,  -.1637313D+00,  -.2135886D-01
lund_crm1_evtgen.F:     &,   .1909156D+00,  -.1872056D-01,   .2608822D+00
lund_crm1_evtgen.F:     &,   .1468565D+00,   .1632079D+00,   .5365556D-01
lund_crm1_evtgen.F:     &,  -.2734266D+00,   .2569792D+00,  -.1294761D+00
lund_crm1_evtgen.F:     &,  -.2897218D+00,   .4484658D+00,  -.1640762D+00
lund_crm1_evtgen.F:     &,  -.5316491D-01,  -.4723117D+00,  -.4930750D+00
lund_crm1_evtgen.F:     &,   .4054531D+00,  -.8054899D+00,  -.8361698D+00
lund_crm1_evtgen.F:     &,   .2703068D+00,   .1340656D+00,  -.1640703D+00
lund_crm1_evtgen.F:     &,  -.2635014D-03,   .1755033D+00,  -.2552402D-01
lund_crm1_evtgen.F:     &,   .2475084D+00,   .1250772D+00,   .1744986D+00
lund_crm1_evtgen.F:     &,   .5834073D-01,  -.2627206D+00,   .2313102D+00
lund_crm1_evtgen.F:     &,  -.9631451D-01,  -.3048404D+00,   .4383995D+00
lund_crm1_evtgen.F:     &,  -.1129359D+00,  -.1013846D+00/
lund_crm1_evtgen.F:         data (D1(i),i=1161,1450)/
lund_crm1_evtgen.F:     &  -.4182599D+00,  -.4367749D+00,   .3761469D+00
lund_crm1_evtgen.F:     &,  -.8168620D+00,  -.8482532D+00,   .3315103D+00
lund_crm1_evtgen.F:     &,   .1246318D+00,  -.1631535D+00,   .1916152D-01
lund_crm1_evtgen.F:     &,   .1582829D+00,  -.3106548D-01,   .2341582D+00
lund_crm1_evtgen.F:     &,   .1044468D+00,   .1836570D+00,   .6208532D-01
lund_crm1_evtgen.F:     &,  -.2519346D+00,   .2060708D+00,  -.6553622D-01
lund_crm1_evtgen.F:     &,  -.3146510D+00,   .4240716D+00,  -.6282182D-01
lund_crm1_evtgen.F:     &,  -.1460023D+00,  -.3672354D+00,  -.3837111D+00
lund_crm1_evtgen.F:     &,   .3465254D+00,  -.8178938D+00,  -.8495945D+00
lund_crm1_evtgen.F:     &,   .3814025D+00,   .1156863D+00,  -.1610894D+00
lund_crm1_evtgen.F:     &,   .3677516D-01,   .1397521D+00,  -.3549918D-01
lund_crm1_evtgen.F:     &,   .2209705D+00,   .8512172D-01,   .1907532D+00
lund_crm1_evtgen.F:     &,   .6496041D-01,  -.2411282D+00,   .1815049D+00
lund_crm1_evtgen.F:     &,  -.3718715D-01,  -.3195907D+00,   .4060368D+00
lund_crm1_evtgen.F:     &,  -.1469127D-01,  -.1863226D+00,  -.3194129D+00
lund_crm1_evtgen.F:     &,  -.3339161D+00,   .3168028D+00,  -.8096322D+00
lund_crm1_evtgen.F:     &,  -.8412754D+00,   .4205304D+00,   .1072255D+00
lund_crm1_evtgen.F:     &,  -.1580325D+00,   .5246696D-01,   .1203164D+00
lund_crm1_evtgen.F:     &,  -.3886976D-01,   .2079179D+00,   .6718865D-01
lund_crm1_evtgen.F:     &,   .1958819D+00,   .6704836D-01,  -.2303523D+00
lund_crm1_evtgen.F:     &,   .1578190D+00,  -.1128415D-01,  -.3200199D+00
lund_crm1_evtgen.F:     &,   .3848508D+00,   .3073882D-01,  -.2219821D+00
lund_crm1_evtgen.F:     &,  -.2748497D+00,  -.2875012D+00,   .2875084D+00
lund_crm1_evtgen.F:     &,  -.7931558D+00,  -.8244115D+00,   .4495488D+00
lund_crm1_evtgen.F:     &,   .9924295D-01,  -.1541299D+00,   .6630221D-01
lund_crm1_evtgen.F:     &,   .1004014D+00,  -.4137014D-01,   .1951792D+00
lund_crm1_evtgen.F:     &,   .5073095D-01,   .1991539D+00,   .6843160D-01
lund_crm1_evtgen.F:     &,  -.2196546D+00,   .1351836D+00,   .1218261D-01
lund_crm1_evtgen.F:     &,  -.3163893D+00,   .3611122D+00,   .7275578D-01
lund_crm1_evtgen.F:     &,  -.2526078D+00,  -.2335651D+00,  -.2444877D+00
lund_crm1_evtgen.F:     &,   .2588219D+00,  -.7695532D+00,  -.8001290D+00
lund_crm1_evtgen.F:     &,   .4692089D+00,   .9172961D-01,  -.1495209D+00
lund_crm1_evtgen.F:     &,   .7824603D-01,   .8046612D-01,  -.4301553D-01
lund_crm1_evtgen.F:     &,   .1827008D+00,   .3578836D-01,   .2006963D+00
lund_crm1_evtgen.F:     &,   .6915205D-01,  -.2090790D+00,   .1137350D+00
lund_crm1_evtgen.F:     &,   .3324698D-01,  -.3091844D+00,   .3353006D+00
lund_crm1_evtgen.F:     &,   .1109422D+00,  -.2779945D+00,  -.1955433D+00
lund_crm1_evtgen.F:     &,  -.2048611D+00,   .2311376D+00,  -.7399024D+00
lund_crm1_evtgen.F:     &,  -.7695443D+00,   .4803315D+00,   .8467409D-01
lund_crm1_evtgen.F:     &,  -.1443356D+00,   .8833733D-01,   .6072381D-01
lund_crm1_evtgen.F:     &,  -.4395290D-01,   .1705933D+00,   .2237150D-01
lund_crm1_evtgen.F:     &,   .2006481D+00,   .6933811D-01,  -.1986649D+00
lund_crm1_evtgen.F:     &,   .9357801D-01,   .5196418D-01,  -.2988765D+00
lund_crm1_evtgen.F:     &,   .3079261D+00,   .1448247D+00,  -.2980577D+00
lund_crm1_evtgen.F:     &,  -.1607379D+00,  -.1685743D+00,   .2045429D+00
lund_crm1_evtgen.F:     &,  -.7052543D+00,  -.7337461D+00,   .4837823D+00
lund_crm1_evtgen.F:     &,   .7806310D-01,  -.1386942D+00,   .9664057D-01
lund_crm1_evtgen.F:     &,   .4154327D-01,  -.4427822D-01,   .1589000D+00
lund_crm1_evtgen.F:     &,   .1046550D-01,   .1991561D+00,   .6903214D-01
lund_crm1_evtgen.F:     &,  -.1884478D+00,   .7478797D-01,   .6843499D-01
lund_crm1_evtgen.F:     &,  -.2858749D+00,   .2795122D+00,   .1742167D+00
lund_crm1_evtgen.F:     &,  -.3128248D+00,  -.1290753D+00,  -.1355521D+00
lund_crm1_evtgen.F:     &,   .1793268D+00,  -.6666169D+00,  -.6937796D+00
lund_crm1_evtgen.F:     &,   .4804497D+00,   .7188180D-01,  -.1327071D+00
lund_crm1_evtgen.F:     &,   .1032413D+00,   .2319265D-01,  -.4408088D-01
lund_crm1_evtgen.F:     &,   .1476563D+00,   .5042134D-04,   .1963499D+00
lund_crm1_evtgen.F:     &,   .6827238D-01,  -.1784589D+00,   .5741350D-01
lund_crm1_evtgen.F:     &,   .8269495D-01,  -.2706826D+00,   .2505210D+00
lund_crm1_evtgen.F:     &,   .1989330D+00,  -.3224252D+00,  -.1004583D+00
lund_crm1_evtgen.F:     &,  -.1056950D+00,   .1555608D+00,  -.6249434D+00
lund_crm1_evtgen.F:     &,  -.6506333D+00,   .4712249D+00,   .6611407D-01
lund_crm1_evtgen.F:     &,  -.1264742D+00,   .1082419D+00,   .5896038D-02
lund_crm1_evtgen.F:     &,  -.4344344D-01,   .1368900D+00,  -.8956916D-02
lund_crm1_evtgen.F:     &,   .1924234D+00,   .6716562D-01,  -.1687253D+00
lund_crm1_evtgen.F:     &,   .4147920D-01,   .9484763D-01,  -.2537270D+00
lund_crm1_evtgen.F:     &,   .2213776D+00,   .2189339D+00,  -.3270773D+00
lund_crm1_evtgen.F:     &,  -.7477028D-01,  -.7888262D-01,   .1332740D+00
lund_crm1_evtgen.F:     &,  -.5811395D+00,  -.6052476D+00,   .4569916D+00
lund_crm1_evtgen.F:     &,   .6074285D-01,  -.1200853D+00,   .1117576D+00
lund_crm1_evtgen.F:     &,  -.1016667D-01,  -.4244142D-01,   .1266214D+00
lund_crm1_evtgen.F:     &,  -.1661487D-01,   .1875106D+00,   .6574446D-01
lund_crm1_evtgen.F:     &,  -.1592703D+00,   .2698827D-01,   .1050597D+00
lund_crm1_evtgen.F:     &,  -.2354818D+00,   .1924414D+00,   .2342787D+00
lund_crm1_evtgen.F:     &,  -.3270765D+00,  -.5189745D-01,  -.5496185D-01
lund_crm1_evtgen.F:     &,   .1126360D+00,  -.5360645D+00,  -.5585145D+00
lund_crm1_evtgen.F:     &,   .4385524D+00,   .5575034D-01,  -.1136201D+00
lund_crm1_evtgen.F:     &,   .1139124D+00,  -.2485890D-01,  -.4114337D-01
lund_crm1_evtgen.F:     &,   .1168645D+00,  -.2300461D-01,   .1817604D+00
lund_crm1_evtgen.F:     &,   .6405964D-01,  -.1501134D+00,   .1392529D-01
lund_crm1_evtgen.F:     &,   .1134261D+00,  -.2163218D+00,   .1640998D+00
lund_crm1_evtgen.F:     &,   .2451139D+00,  -.3227810D+00,  -.3171324D-01
lund_crm1_evtgen.F:     &,  -.3386458D-01,   .9356963D-01,  -.4903914D+00
lund_crm1_evtgen.F:     &,  -.5111342D+00,   .4168148D+00,   .5111830D-01
lund_crm1_evtgen.F:     &,  -.1071483D+00,   .1148358D+00,  -.3807015D-01
lund_crm1_evtgen.F:     &,  -.3961090D-01,   .1076271D+00,  -.2821563D-01
lund_crm1_evtgen.F:     &,   .1753162D+00,   .6215771D-01,  -.1412749D+00
lund_crm1_evtgen.F:     &,   .2258783D-02,   .1200740D+00,  -.1966146D+00
lund_crm1_evtgen.F:     &,   .1365927D+00,   .2516846D+00,  -.3145982D+00
lund_crm1_evtgen.F:     &,  -.1394406D-01,  -.1533611D-01,   .7619538D-01
lund_crm1_evtgen.F:     &,  -.4448539D+00,  -.4638681D+00,   .3924922D+00
lund_crm1_evtgen.F:     &,   .4682823D-01,  -.1007305D+00,   .1146601D+00
lund_crm1_evtgen.F:     &,  -.4975050D-01,  -.3789891D-01,   .9891155D-01
lund_crm1_evtgen.F:     &,  -.3234305D-01,   .1683144D+00,   .6008563D-01
lund_crm1_evtgen.F:     &,  -.1328095D+00,  -.8056240D-02,   .1251345D+00
lund_crm1_evtgen.F:     &,  -.1766936D+00,   .1102537D+00,   .2542029D+00
lund_crm1_evtgen.F:     &,  -.3029715D+00,   .1492248D-02,   .7067298D-03
lund_crm1_evtgen.F:     &,   .6040623D-01,  -.3998974D+00/
lund_crm1_evtgen.F:         data (D1(i),i=1451,1740)/
lund_crm1_evtgen.F:     &  -.4171827D+00,   .3661661D+00,   .4286154D-01
lund_crm1_evtgen.F:     &,  -.9441807D-01,   .1135169D+00,  -.5989064D-01
lund_crm1_evtgen.F:     &,  -.3605590D-01,   .9071555D-01,  -.3548514D-01
lund_crm1_evtgen.F:     &,   .1608831D+00,   .5793121D-01,  -.1245972D+00
lund_crm1_evtgen.F:     &,  -.1701419D-01,   .1287403D+00,  -.1568255D+00
lund_crm1_evtgen.F:     &,   .8525071D-01,   .2530478D+00,  -.2884054D+00
lund_crm1_evtgen.F:     &,   .1469256D-01,   .1462546D-01,   .4619275D-01
lund_crm1_evtgen.F:     &,  -.3555678D+00,  -.3711306D+00,   .3385839D+00
lund_crm1_evtgen.F:     &,   .3919977D-01,  -.8825443D-01,   .1115764D+00
lund_crm1_evtgen.F:     &,  -.6846833D-01,  -.3412422D-01,   .8303244D-01
lund_crm1_evtgen.F:     &,  -.3774119D-01,   .1531411D+00,   .5558588D-01
lund_crm1_evtgen.F:     &,  -.1167269D+00,  -.2380800D-01,   .1310239D+00
lund_crm1_evtgen.F:     &,  -.1373391D+00,   .6175196D-01,   .2486117D+00
lund_crm1_evtgen.F:     &,  -.2712861D+00,   .2591306D-01,   .2641324D-01
lund_crm1_evtgen.F:     &,   .3342426D-01,  -.3132193D+00,  -.3270889D+00
lund_crm1_evtgen.F:     &,   .3102775D+00,   .3582469D-01,  -.8227509D-01
lund_crm1_evtgen.F:     &,   .1088784D+00,  -.7567230D-01,  -.3214056D-01
lund_crm1_evtgen.F:     &,   .7585199D-01,  -.3920968D-01,   .1451976D+00
lund_crm1_evtgen.F:     &,   .5316943D-01,  -.1092453D+00,  -.3149546D-01
lund_crm1_evtgen.F:     &,   .1321161D+00,  -.1183650D+00,   .3988565D-01
lund_crm1_evtgen.F:     &,   .2413236D+00,  -.2521746D+00,   .3533754D-01
lund_crm1_evtgen.F:     &,   .3626063D-01,   .2214227D-01,  -.2727273D+00
lund_crm1_evtgen.F:     &,  -.2850063D+00,   .2817522D+00,   .3271843D-01
lund_crm1_evtgen.F:     &,  -.7650855D-01,   .1055854D+00,  -.8136569D-01
lund_crm1_evtgen.F:     &,  -.3013626D-01,   .6916091D-01,  -.3998678D-01
lund_crm1_evtgen.F:     &,   .1371511D+00,   .5074388D-01,  -.1021002D+00
lund_crm1_evtgen.F:     &,  -.3704372D-01,   .1321448D+00,  -.1001697D+00
lund_crm1_evtgen.F:     &,   .1974723D-01,   .2314514D+00,  -.2314587D+00
lund_crm1_evtgen.F:     &,   .4314331D-01,   .4445404D-01,   .1221151D-01
lund_crm1_evtgen.F:     &,  -.2343854D+00,  -.2451172D+00,   .2534518D+00
lund_crm1_evtgen.F:     &,   .2982082D-01,  -.7102498D-01,   .1018390D+00
lund_crm1_evtgen.F:     &,  -.8569968D-01,  -.2813783D-01,   .6294339D-01
lund_crm1_evtgen.F:     &,  -.4019122D-01,   .1291013D+00,   .4829703D-01
lund_crm1_evtgen.F:     &,  -.9530150D-01,  -.4158953D-01,   .1312110D+00
lund_crm1_evtgen.F:     &,  -.8292280D-01,   .1402290D-02,   .2194821D+00
lund_crm1_evtgen.F:     &,  -.2096519D+00,   .4937831D-01,   .5100880D-01
lund_crm1_evtgen.F:     &,   .3620280D-02,  -.1983934D+00,  -.2076559D+00
lund_crm1_evtgen.F:     &,   .2257588D+00,   .2720566D-01,  -.6577623D-01
lund_crm1_evtgen.F:     &,   .9767847D-01,  -.8876692D-01,  -.2625029D-01
lund_crm1_evtgen.F:     &,   .5717177D-01,  -.3985397D-01,   .1210977D+00
lund_crm1_evtgen.F:     &,   .4585276D-01,  -.8884821D-01,  -.4521421D-01
lund_crm1_evtgen.F:     &,   .1294808D+00,  -.6670238D-01,  -.1518224D-01
lund_crm1_evtgen.F:     &,   .2057899D+00,  -.1871518D+00,   .5425646D-01
lund_crm1_evtgen.F:     &,   .5614730D-01,  -.3836053D-02,  -.1648904D+00
lund_crm1_evtgen.F:     &,  -.1727692D+00,   .1989621D+00,   .2480905D-01
lund_crm1_evtgen.F:     &,  -.6074660D-01,   .9323244D-01,  -.9067058D-01
lund_crm1_evtgen.F:     &,  -.2431386D-01,   .5183424D-01,  -.3908808D-01
lund_crm1_evtgen.F:     &,   .1132250D+00,   .4343082D-01,  -.8273280D-01
lund_crm1_evtgen.F:     &,  -.4799940D-01,   .1270417D+00,  -.5156204D-01
lund_crm1_evtgen.F:     &,  -.2994255D-01,   .1908520D+00,  -.1644013D+00
lund_crm1_evtgen.F:     &,   .5790670D-01,   .6002258D-01,  -.1010507D-01
lund_crm1_evtgen.F:     &,  -.1339607D+00,  -.1405470D+00,   .1733085D+00
lund_crm1_evtgen.F:     &,   .2258963D-01,  -.5598594D-01,   .8858667D-01
lund_crm1_evtgen.F:     &,  -.9151119D-01,  -.2243756D-01,   .4691301D-01
lund_crm1_evtgen.F:     &,  -.3797067D-01,   .1055412D+00,   .4104481D-01
lund_crm1_evtgen.F:     &,  -.7694991D-01,  -.5002581D-01,   .1239998D+00
lund_crm1_evtgen.F:     &,  -.3761431D-01,  -.4293077D-01,   .1749644D+00
lund_crm1_evtgen.F:     &,  -.1416882D+00,   .6051788D-01,   .6277391D-01
lund_crm1_evtgen.F:     &,  -.1540998D-01,  -.1056401D+00,  -.1110286D+00
lund_crm1_evtgen.F:     &,   .1489907D+00,   .2058998D-01,  -.5149724D-01
lund_crm1_evtgen.F:     &,   .8381773D-01,  -.9144686D-01,  -.2063284D-01
lund_crm1_evtgen.F:     &,   .4238685D-01,  -.3657269D-01,   .9809533D-01
lund_crm1_evtgen.F:     &,   .3870846D-01,  -.7149191D-01,  -.5137234D-01
lund_crm1_evtgen.F:     &,   .1204541D+00,  -.2487733D-01,  -.5419608D-01
lund_crm1_evtgen.F:     &,   .1585081D+00,  -.1193379D+00,   .6216076D-01
lund_crm1_evtgen.F:     &,   .6453257D-01,  -.1973095D-01,  -.7992221D-01
lund_crm1_evtgen.F:     &,  -.8420957D-01,   .1261518D+00,   .1876419D-01
lund_crm1_evtgen.F:     &,  -.4731273D-01,   .7899317D-01,  -.9055568D-01
lund_crm1_evtgen.F:     &,  -.1890838D-01,   .3823409D-01,  -.3490527D-01
lund_crm1_evtgen.F:     &,   .9083043D-01,   .3643274D-01,  -.6638607D-01
lund_crm1_evtgen.F:     &,  -.5211520D-01,   .1164965D+00,  -.1336326D-01
lund_crm1_evtgen.F:     &,  -.6380538D-01,   .1417380D+00,  -.9764620D-01
lund_crm1_evtgen.F:     &,   .6303651D-01,   .6548755D-01,  -.2329635D-01
lund_crm1_evtgen.F:     &,  -.5676491D-01,  -.6004801D-01,   .1049036D+00
lund_crm1_evtgen.F:     &,   .1709876D-01,  -.4336871D-01,   .7418978D-01
lund_crm1_evtgen.F:     &,  -.8894810D-01,  -.1727046D-01,   .3443294D-01
lund_crm1_evtgen.F:     &,  -.3319355D-01,   .8408995D-01,   .3422653D-01
lund_crm1_evtgen.F:     &,  -.6154914D-01,  -.5232728D-01,   .1122115D+00
lund_crm1_evtgen.F:     &,  -.3064412D-02,  -.7183995D-01,   .1249735D+00
lund_crm1_evtgen.F:     &,  -.7684926D-01,   .6318044D-01,   .6567642D-01
lund_crm1_evtgen.F:     &,  -.2604723D-01,  -.3610404D-01,  -.3848008D-01
lund_crm1_evtgen.F:     &,   .8527625D-01,   .1556902D-01,  -.3965887D-01
lund_crm1_evtgen.F:     &,   .6941254D-01,  -.8673124D-01,  -.1572329D-01
lund_crm1_evtgen.F:     &,   .3096172D-01,  -.3132020D-01,   .7756950D-01
lund_crm1_evtgen.F:     &,   .3209691D-01,  -.5700808D-01,  -.5207766D-01
lund_crm1_evtgen.F:     &,   .1076760D+00,   .6043820D-02,  -.7839241D-01
lund_crm1_evtgen.F:     &,   .1084631D+00,  -.5714216D-01,   .6274472D-01
lund_crm1_evtgen.F:     &,   .6525777D-01,  -.2824049D-01,  -.1781922D-01
lund_crm1_evtgen.F:     &,  -.1937925D-01,   .6731197D-01,   .1419877D-01
lund_crm1_evtgen.F:     &,  -.3620489D-01,   .6473093D-01,  -.8400742D-01
lund_crm1_evtgen.F:     &,  -.1426936D-01,   .2779904D-01,  -.2938526D-01
lund_crm1_evtgen.F:     &,   .7139961D-01,   .3004928D-01,  -.5275180D-01
lund_crm1_evtgen.F:     &,  -.5143123D-01,   .1029597D+00,   .1400023D-01
lund_crm1_evtgen.F:     &,  -.8356372D-01,   .9242092D-01,  -.3868022D-01
lund_crm1_evtgen.F:     &,   .6180547D-01,   .6431096D-01,  -.2973883D-01
lund_crm1_evtgen.F:     &,  -.1810780D-02,  -.2646437D-02,   .5100378D-01
lund_crm1_evtgen.F:     &,   .1295262D-01,  -.3297473D-01/
lund_crm1_evtgen.F:         data (D1(i),i=1741,2030)/
lund_crm1_evtgen.F:     &   .6017975D-01,  -.8079325D-01,  -.1290965D-01
lund_crm1_evtgen.F:     &,   .2492403D-01,  -.2742793D-01,   .6559135D-01
lund_crm1_evtgen.F:     &,   .2808759D-01,  -.4876874D-01,  -.5044838D-01
lund_crm1_evtgen.F:     &,   .9812516D-01,   .2085515D-01,  -.8746058D-01
lund_crm1_evtgen.F:     &,   .7702658D-01,  -.2158080D-01,   .6038817D-01
lund_crm1_evtgen.F:     &,   .6286361D-01,  -.3078330D-01,   .1220080D-01
lund_crm1_evtgen.F:     &,   .1200736D-01,   .3627446D-01,   .1181996D-01
lund_crm1_evtgen.F:     &,  -.3001542D-01,   .5580370D-01,  -.7734707D-01
lund_crm1_evtgen.F:     &,  -.1165938D-01,   .2236439D-01,  -.2548164D-01
lund_crm1_evtgen.F:     &,   .6015019D-01,   .2621448D-01,  -.4504274D-01
lund_crm1_evtgen.F:     &,  -.4918495D-01,   .9322789D-01,   .2666798D-01
lund_crm1_evtgen.F:     &,  -.9017106D-01,   .6242643D-01,  -.5925731D-02
lund_crm1_evtgen.F:     &,   .5868004D-01,   .6110919D-01,  -.3131228D-01
lund_crm1_evtgen.F:     &,   .2413427D-01,   .2449853D-01,   .2308862D-01
lund_crm1_evtgen.F:     &,   .1079090D-01,  -.2733249D-01,   .5159892D-01
lund_crm1_evtgen.F:     &,  -.7366971D-01,  -.1049173D-01,   .2000737D-01
lund_crm1_evtgen.F:     &,  -.2357441D-01,   .5507674D-01,   .2442734D-01
lund_crm1_evtgen.F:     &,  -.4157071D-01,  -.4769204D-01,   .8831675D-01
lund_crm1_evtgen.F:     &,   .3150489D-01,  -.9146771D-01,   .4873488D-01
lund_crm1_evtgen.F:     &,   .8213944D-02,   .5670476D-01,   .5907323D-01
lund_crm1_evtgen.F:     &,  -.3155966D-01,   .3419281D-01,   .3503692D-01
lund_crm1_evtgen.F:     &,   .1143543D-01,   .9812541D-02,  -.2481709D-01
lund_crm1_evtgen.F:     &,   .4758982D-01,  -.6983460D-01,  -.9414491D-02
lund_crm1_evtgen.F:     &,   .1787913D-01,  -.2170723D-01,   .5034079D-01
lund_crm1_evtgen.F:     &,   .2273531D-01,  -.3829396D-01,  -.4601615D-01
lund_crm1_evtgen.F:     &,   .8343425D-01,   .3543678D-01,  -.9258926D-01
lund_crm1_evtgen.F:     &,   .3603643D-01,   .2086389D-01,   .5452404D-01
lund_crm1_evtgen.F:     &,   .5682021D-01,  -.3150489D-01,   .4249758D-01
lund_crm1_evtgen.F:     &,   .4374775D-01,   .1576681D-02,   .8954256D-02
lund_crm1_evtgen.F:     &,  -.2255810D-01,   .4378746D-01,  -.6591610D-01
lund_crm1_evtgen.F:     &,  -.8453066D-02,   .1601818D-01,  -.1994318D-01
lund_crm1_evtgen.F:     &,   .4599026D-01,   .2109251D-01,  -.3531342D-01
lund_crm1_evtgen.F:     &,  -.4419916D-01,   .7861698D-01,   .3853741D-01
lund_crm1_evtgen.F:     &,  -.9249251D-01,   .2438805D-01,   .3200739D-01
lund_crm1_evtgen.F:     &,   .5222414D-01,   .5444010D-01,  -.3101534D-01
lund_crm1_evtgen.F:     &,   .4923950D-01,   .5037078D-01,  -.7167567D-02
lund_crm1_evtgen.F:     &,   .8174681D-02,  -.2044591D-01,   .4019855D-01
lund_crm1_evtgen.F:     &,  -.6192694D-01,  -.7552908D-02,   .1429679D-01
lund_crm1_evtgen.F:     &,  -.1827422D-01,   .4198644D-01,   .1960896D-01
lund_crm1_evtgen.F:     &,  -.3254614D-01,  -.4227854D-01,   .7393027D-01
lund_crm1_evtgen.F:     &,   .4085844D-01,  -.9166591D-01,   .1378376D-01
lund_crm1_evtgen.F:     &,   .4170182D-01,   .4981517D-01,   .5194358D-01
lund_crm1_evtgen.F:     &,  -.3046741D-01,   .5454048D-01,   .5591868D-01
lund_crm1_evtgen.F:     &,  -.1463188D-01,   .7429408D-02,  -.1851264D-01
lund_crm1_evtgen.F:     &,   .3682609D-01,  -.5798850D-01,  -.6733292D-02
lund_crm1_evtgen.F:     &,   .1275306D-01,  -.1671028D-01,   .3831603D-01
lund_crm1_evtgen.F:     &,   .1821331D-01,  -.2993395D-01,  -.4028746D-01
lund_crm1_evtgen.F:     &,   .6929708D-01,   .4252217D-01,  -.9020947D-01
lund_crm1_evtgen.F:     &,   .4319648D-02,   .4992849D-01,   .4728633D-01
lund_crm1_evtgen.F:     &,   .4932019D-01,  -.2960553D-01,   .5854029D-01
lund_crm1_evtgen.F:     &,   .6012740D-01,  -.2090704D-01,   .6782993D-02
lund_crm1_evtgen.F:     &,  -.1674655D-01,   .3366994D-01,  -.5407663D-01
lund_crm1_evtgen.F:     &,  -.5990340D-02,   .1137197D-01,  -.1525779D-01
lund_crm1_evtgen.F:     &,   .3496357D-01,   .1685752D-01,  -.2755089D-01
lund_crm1_evtgen.F:     &,  -.3825509D-01,   .6484151D-01,   .4357807D-01
lund_crm1_evtgen.F:     &,  -.8820870D-01,  -.4067526D-02,   .5681687D-01
lund_crm1_evtgen.F:     &,   .4472887D-01,   .4666479D-01,  -.2873908D-01
lund_crm1_evtgen.F:     &,   .6137359D-01,   .6313677D-01,  -.2608483D-01
lund_crm1_evtgen.F:     &,   .6195799D-02,  -.1513616D-01,   .3072737D-01
lund_crm1_evtgen.F:     &,  -.5025995D-01,  -.5319989D-02,   .1013942D-01
lund_crm1_evtgen.F:     &,  -.1392004D-01,   .3191197D-01,   .1560122D-01
lund_crm1_evtgen.F:     &,  -.2532070D-01,  -.3620673D-01,   .6054612D-01
lund_crm1_evtgen.F:     &,   .4409735D-01,  -.8578574D-01,  -.1141927D-01
lund_crm1_evtgen.F:     &,   .6238970D-01,   .4226604D-01,   .4410542D-01
lund_crm1_evtgen.F:     &,  -.2771547D-01,   .6316882D-01,   .6507959D-01
lund_crm1_evtgen.F:     &,  -.3025641D-01,   .5662254D-02,  -.1367034D-01
lund_crm1_evtgen.F:     &,   .2799350D-01,  -.4652351D-01,  -.4718064D-02
lund_crm1_evtgen.F:     &,   .9042191D-02,  -.1266093D-01,   .2916274D-01
lund_crm1_evtgen.F:     &,   .1442489D-01,  -.2325685D-01,  -.3416416D-01
lund_crm1_evtgen.F:     &,   .5642393D-01,   .4415358D-01,  -.8298568D-01
lund_crm1_evtgen.F:     &,  -.1770920D-01,   .6678606D-01,   .3974753D-01
lund_crm1_evtgen.F:     &,   .4148698D-01,  -.2655520D-01,   .6404752D-01
lund_crm1_evtgen.F:     &,   .6608089D-01,  -.3351100D-01,   .5177261D-02
lund_crm1_evtgen.F:     &,  -.1238466D-01,   .2546183D-01,  -.4305873D-01
lund_crm1_evtgen.F:     &,  -.4180334D-02,   .8067965D-02,  -.1155240D-01
lund_crm1_evtgen.F:     &,   .2665687D-01,   .1332465D-01,  -.2134969D-01
lund_crm1_evtgen.F:     &,  -.3214585D-01,   .5248444D-01,   .4381516D-01
lund_crm1_evtgen.F:     &,  -.7987853D-01,  -.2306778D-01,   .7006362D-01
lund_crm1_evtgen.F:     &,   .3727316D-01,   .3891298D-01,  -.2533441D-01
lund_crm1_evtgen.F:     &,   .6423658D-01,   .6637398D-01,  -.3589783D-01
lund_crm1_evtgen.F:     &,   .4736168D-02,  -.1117766D-01,   .2312456D-01
lund_crm1_evtgen.F:     &,  -.3967034D-01,  -.3702552D-02,   .7205248D-02
lund_crm1_evtgen.F:     &,  -.1055368D-01,   .2439470D-01,   .1229800D-01
lund_crm1_evtgen.F:     &,  -.1958893D-01,  -.3016725D-01,   .4873411D-01
lund_crm1_evtgen.F:     &,   .4307861D-01,  -.7657094D-01,  -.2750799D-01
lund_crm1_evtgen.F:     &,   .7233199D-01,   .3485993D-01,   .3640128D-01
lund_crm1_evtgen.F:     &,  -.2407534D-01,   .6350392D-01,   .6571785D-01
lund_crm1_evtgen.F:     &,  -.3761099D-01,   .4334737D-02,  -.1008407D-01
lund_crm1_evtgen.F:     &,   .2097294D-01,  -.3645273D-01,  -.3280496D-02
lund_crm1_evtgen.F:     &,   .6443348D-02,  -.9659540D-02,   .2235648D-01
lund_crm1_evtgen.F:     &,   .1134148D-01,  -.1796483D-01,  -.2824103D-01
lund_crm1_evtgen.F:     &,   .4517666D-01,   .4210135D-01,  -.7310204D-01
lund_crm1_evtgen.F:     &,  -.3110411D-01,   .7373436D-01,   .3252127D-01
lund_crm1_evtgen.F:     &,   .3396606D-01,  -.2273541D-01,   .6231154D-01
lund_crm1_evtgen.F:     &,   .6456209D-01,  -.3861791D-01,   .3922874D-02
lund_crm1_evtgen.F:     &,  -.9094691D-02,   .1899760D-01,  -.3338037D-01
lund_crm1_evtgen.F:         data (D1(i),i=2031,22*fist_np)/
lund_crm1_evtgen.F:     &  -.8863459D-02,   .2052264D-01,   .1045159D-01
lund_crm1_evtgen.F:     &,  -.1648820D-01,  -.2637741D-01,   .4181346D-01
lund_crm1_evtgen.F:     &,   .4088701D-01,  -.6952635D-01,  -.3392491D-01
lund_crm1_evtgen.F:     &,   .7428930D-01,   .3026744D-01,   .3161816D-01
lund_crm1_evtgen.F:     &,  -.2146068D-01,   .6056565D-01,   .6288227D-01
lund_crm1_evtgen.F:     &,  -.3903023D-01,   .3589473D-02,  -.8200843D-02
lund_crm1_evtgen.F:     &,   .1718876D-01,  -.3055117D-01,  -.2586945D-02
lund_crm1_evtgen.F:     &,   .5182991D-02,  -.8216367D-02,   .1892776D-01
lund_crm1_evtgen.F:     &,   .9624840D-02,  -.1510545D-01,  -.2458433D-01
lund_crm1_evtgen.F:     &,   .3864384D-01,   .3948218D-01,  -.6589199D-01
lund_crm1_evtgen.F:     &,  -.3608902D-01,   .7413019D-01,   .2817494D-01
lund_crm1_evtgen.F:     &,   .2943629D-01,  -.2026167D-01,   .5842191D-01
lund_crm1_evtgen.F:     &,   .6076695D-01,  -.3888230D-01,   .3285664D-02
lund_crm1_evtgen.F:     &,  -.7394402D-02,   .1553644D-01,  -.2790879D-01
lund_crm1_evtgen.F:     &,   .1739194D-01,   .8879796D-02,  -.1383281D-01
lund_crm1_evtgen.F:     &,  -.2286776D-01,   .3566537D-01,   .3792895D-01
lund_crm1_evtgen.F:     &,  -.6221232D-01,  -.3757697D-01,   .7335141D-01
lund_crm1_evtgen.F:     &,   .2611542D-01,   .2728905D-01,  -.1902302D-01
lund_crm1_evtgen.F:     &,   .5593361D-01,   .5824357D-01,  -.3831375D-01
lund_crm1_evtgen.F:     &,   .3008574D-02,  -.6667775D-02,   .1403064D-01
lund_crm1_evtgen.F:     &,  -.2544962D-01,  -.2067297D-02,   .4215829D-02
lund_crm1_evtgen.F:     &,  -.6986146D-02,   .1605874D-01,   .8166863D-02
lund_crm1_evtgen.F:     &,  -.1266232D-01,  -.2123193D-01,   .3287421D-01
lund_crm1_evtgen.F:     &,   .3626491D-01,  -.5857775D-01,  -.3850081D-01
lund_crm1_evtgen.F:     &,   .7204299D-01,   .2415165D-01,   .2524099D-01
lund_crm1_evtgen.F:     &,  -.1780760D-01,   .5328666D-01,   .5550566D-01
lund_crm1_evtgen.F:     &,  -.3728658D-01,   .2799620D-02,  -.6013893D-02
lund_crm1_evtgen.F:     &,   .1266143D-01,  -.2316788D-01,  -.1863016D-02
lund_crm1_evtgen.F:     &,   .3822823D-02,  -.6541060D-02,   .1484254D-01
lund_crm1_evtgen.F:     &,   .7506699D-02,  -.1158651D-01,  -.1967951D-01
lund_crm1_evtgen.F:     &,   .3026529D-01,   .3452339D-01,  -.5499462D-01
lund_crm1_evtgen.F:     &,  -.3892906D-01,   .7028974D-01,   .2228473D-01
lund_crm1_evtgen.F:     &,   .2329339D-01,  -.1662143D-01,   .5038667D-01
lund_crm1_evtgen.F:     &,   .5250241D-01,  -.3603674D-01,   .2566850D-02
lund_crm1_evtgen.F:     &,  -.5382609D-02,   .1141909D-01,  -.2105623D-01
lund_crm1_evtgen.F:     &,  -.1638112D-02,   .3442072D-02,  -.6115171D-02
lund_crm1_evtgen.F:     &,   .1375868D-01,   .6899662D-02,  -.1060199D-01
lund_crm1_evtgen.F:     &,  -.1821186D-01,   .2783257D-01,   .3273365D-01
lund_crm1_evtgen.F:     &,  -.5148875D-01,  -.3892729D-01,   .6817057D-01
lund_crm1_evtgen.F:     &,   .2051450D-01,   .2144618D-01,  -.1546906D-01
lund_crm1_evtgen.F:     &,   .4732540D-01,   .4932892D-01,  -.3444659D-01
lund_crm1_evtgen.F:     &,   .2353384D-02,  -.4857294D-02,   .1022822D-01
lund_crm1_evtgen.F:     &,  -.1910633D-01,  -.1453138D-02,   .3121810D-02
lund_crm1_evtgen.F:     &,  -.5737913D-02,   .1277664D-01,   .6335178D-02
lund_crm1_evtgen.F:     &,  -.9749754D-02,  -.1682920D-01,   .2556927D-01
lund_crm1_evtgen.F:     &,   .3092112D-01,  -.4815032D-01,  -.3855749D-01
lund_crm1_evtgen.F:     &,   .6575806D-01,   .1883981D-01,   .1969826D-01
lund_crm1_evtgen.F:     &,  -.1435381D-01,   .4415352D-01,   .4603821D-01
lund_crm1_evtgen.F:     &,  -.3262340D-01,   .2157355D-02,  -.4386838D-02
lund_crm1_evtgen.F:     &,   .9215069D-02,  -.1730934D-01,  -.1340227D-02
lund_crm1_evtgen.F:     &,   .2873130D-02,  -.5401385D-02,   .1188314D-01
lund_crm1_evtgen.F:     &,   .5863385D-02,  -.8889877D-02,  -.1553079D-01
lund_crm1_evtgen.F:     &,   .2346800D-01,   .2910764D-01,  -.4478949D-01
lund_crm1_evtgen.F:     &,  -.3787749D-01,   .6311820D-01,   .1722472D-01
lund_crm1_evtgen.F:     &,   .1801288D-01,  -.1327802D-01,   .4091712D-01
lund_crm1_evtgen.F:     &,   .4267849D-01,  -.3061491D-01,   .1977090D-02
lund_crm1_evtgen.F:     &,  -.3966050D-02,   .8360176D-02,  -.1558422D-01
lund_crm1_evtgen.F:     &,  -.1250131D-02,   .2658936D-02,  -.5098242D-02
lund_crm1_evtgen.F:     &,   .1106617D-01,   .5355382D-02,  -.8098092D-02
lund_crm1_evtgen.F:     &,  -.1431509D-01,   .2152101D-01,   .2731181D-01
lund_crm1_evtgen.F:     &,  -.4162652D-01,  -.3694063D-01,   .6031031D-01
lund_crm1_evtgen.F:     &,   .1575168D-01,   .1647452D-01,  -.1221709D-01
lund_crm1_evtgen.F:     &,   .3765811D-01,   .3929361D-01,  -.2846590D-01
lund_crm1_evtgen.F:     &,   .1843710D-02,  -.3590151D-02,   .7534000D-02
lund_crm1_evtgen.F:     &,  -.1408261D-01,  -.1179731D-02,   .2474389D-02
lund_crm1_evtgen.F:     &,  -.4821809D-02,   .1031507D-01,   .4901349D-02
lund_crm1_evtgen.F:     &,  -.7370029D-02,  -.1317993D-01,   .1972024D-01
lund_crm1_evtgen.F:     &,   .2554918D-01,  -.3860246D-01,  -.3576012D-01
lund_crm1_evtgen.F:     &,   .5735781D-01,   .1436777D-01,   .1502898D-01
lund_crm1_evtgen.F:     &,  -.1124224D-01,   .3441455D-01,   .3592337D-01
lund_crm1_evtgen.F:     &,  -.2621832D-01,   .1687094D-02,  -.3254754D-02
lund_crm1_evtgen.F:     &,   .6790922D-02,  -.1274764D-01,  -.1126072D-02
lund_crm1_evtgen.F:     &,   .2315081D-02,  -.4566168D-02,   .9620525D-02
lund_crm1_evtgen.F:     &,   .4461206D-02,  -.6756165D-02,  -.1212258D-01
lund_crm1_evtgen.F:     &,   .1805752D-01,   .2383257D-01,  -.3574865D-01
lund_crm1_evtgen.F:     &,  -.3445863D-01,   .5436802D-01,   .1306879D-01
lund_crm1_evtgen.F:     &,   .1367194D-01,  -.1031009D-01,   .3101173D-01
lund_crm1_evtgen.F:     &,   .3238866D-01,  -.2394499D-01/
lund_crm1_evtgen.F:         data (f1(i),i=1,290)/.0D+00,.000D+00,.000D+00
lund_crm1_evtgen.F:     &,   .0000000D+00,   .0000000D+00,   .2299047D-01
lund_crm1_evtgen.F:     &,   .5052282D-01,   .4310491D-01,   .2202982D-01
lund_crm1_evtgen.F:     &,   .5287433D-01,   .2074739D-04,  -.4557281D-01
lund_crm1_evtgen.F:     &,  -.3674058D-04,   .4590143D-01,   .1006349D+00
lund_crm1_evtgen.F:     &,   .8541701D-01,   .4340650D-01,   .1053154D+00
lund_crm1_evtgen.F:     &,   .1654922D-03,  -.9033733D-01,  -.2924430D-03
lund_crm1_evtgen.F:     &,   .6855378D-01,   .1497193D+00,   .1262548D+00
lund_crm1_evtgen.F:     &,   .6350092D-01,   .1568919D+00,   .5557260D-03
lund_crm1_evtgen.F:     &,  -.1335999D+00,  -.9792640D-03,   .9080988D-01
lund_crm1_evtgen.F:     &,   .1973755D+00,   .1649307D+00,   .8166517D-01
lund_crm1_evtgen.F:     &,   .2071864D+00,   .1308009D-02,  -.1746183D+00
lund_crm1_evtgen.F:     &,  -.2295782D-02,   .1125813D+00,   .2432378D+00
lund_crm1_evtgen.F:     &,   .2007143D+00,   .9743601D-01,   .2557323D+00
lund_crm1_evtgen.F:     &,   .2531039D-02,  -.2127147D+00,  -.4420805D-02
lund_crm1_evtgen.F:     &,   .1338140D+00,   .2868489D+00,   .2330866D+00
lund_crm1_evtgen.F:     &,   .1103303D+00,   .3022168D+00,   .4324992D-02
lund_crm1_evtgen.F:     &,  -.2473089D+00,  -.7507988D-02,   .1543657D+00
lund_crm1_evtgen.F:     &,   .3277195D+00,   .2614176D+00,   .1199830D+00
lund_crm1_evtgen.F:     &,  -.1167992D-01,   .1741384D+00,   .3657032D+00
lund_crm1_evtgen.F:     &,   .2853031D+00,   .1261317D+00,   .3876996D+00
lund_crm1_evtgen.F:     &,   .9966612D-02,  -.3036899D+00,  -.1702542D-01
lund_crm1_evtgen.F:     &,   .1930410D+00,   .4003996D+00,   .3043839D+00
lund_crm1_evtgen.F:     &,   .1286239D+00,   .4260502D+00,   .1395267D-01
lund_crm1_evtgen.F:     &,  -.3246597D+00,  -.2359580D-01,   .2109898D+00
lund_crm1_evtgen.F:     &,   .4315441D+00,   .3183970D+00,   .1274207D+00
lund_crm1_evtgen.F:     &,   .4611104D+00,   .1877682D-01,  -.3404030D+00
lund_crm1_evtgen.F:     &,  -.3140312D-01,   .2278610D+00,   .4589177D+00
lund_crm1_evtgen.F:     &,   .3271789D+00,   .1225972D+00,   .4926767D+00
lund_crm1_evtgen.F:     &,   .2446937D-01,  -.3507325D+00,  -.4041942D-01
lund_crm1_evtgen.F:     &,   .2436247D+00,   .4823491D+00,   .3307172D+00
lund_crm1_evtgen.F:     &,   .1143384D+00,   .5205783D+00,   .3104151D-01
lund_crm1_evtgen.F:     &,  -.3555614D+00,  -.5057716D-01,   .2582879D+00
lund_crm1_evtgen.F:     &,   .5017160D+00,   .3290119D+00,   .1029040D+00
lund_crm1_evtgen.F:     &,   .5446327D+00,   .3848511D-01,  -.3549029D+00
lund_crm1_evtgen.F:     &,  -.6177066D-01,   .2717495D+00,   .5169454D+00
lund_crm1_evtgen.F:     &,   .3221341D+00,   .8875223D-01,   .5648609D+00
lund_crm1_evtgen.F:     &,   .4678095D-01,  -.3488675D+00,  -.7385878D-01
lund_crm1_evtgen.F:     &,   .2839708D+00,   .5279506D+00,   .3103727D+00
lund_crm1_evtgen.F:     &,   .7232102D-01,   .5811698D+00,   .5588789D-01
lund_crm1_evtgen.F:     &,  -.3377883D+00,  -.8668169D-01,   .2949227D+00
lund_crm1_evtgen.F:     &,   .5348236D+00,   .2940154D+00,   .5402303D-01
lund_crm1_evtgen.F:     &,   .5935596D+00,   .6575090D-01,  -.3216972D+00
lund_crm1_evtgen.F:     &,  -.1000141D+00,   .3045859D+00,   .5376817D+00
lund_crm1_evtgen.F:     &,   .2734716D+00,   .3450682D-01,   .6020716D+00
lund_crm1_evtgen.F:     &,   .7630046D-01,  -.3010875D+00,  -.1136443D+00
lund_crm1_evtgen.F:     &,   .3129504D+00,   .5365858D+00,   .2491973D+00
lund_crm1_evtgen.F:     &,   .1437229D-01,   .6067857D+00,   .8745400D-01
lund_crm1_evtgen.F:     &,  -.2763943D+00,  -.1273325D+00,   .3200157D+00
lund_crm1_evtgen.F:     &,   .5316900D+00,   .2217308D+00,  -.5765121D-02
lund_crm1_evtgen.F:     &,   .6078182D+00,   .9911748D-01,  -.2480667D+00
lund_crm1_evtgen.F:     &,  -.1408375D+00,   .3257903D+00,   .5231850D+00
lund_crm1_evtgen.F:     &,   .1915717D+00,  -.2532722D-01,   .6053188D+00
lund_crm1_evtgen.F:     &,   .1111872D+00,  -.2167249D+00,  -.1538854D+00
lund_crm1_evtgen.F:     &,   .3302912D+00,   .5112946D+00,   .1593240D+00
lund_crm1_evtgen.F:     &,  -.4374750D-01,   .5994674D+00,   .1235517D+00
lund_crm1_evtgen.F:     &,  -.1829399D+00,  -.1662375D+00,   .3335435D+00
lund_crm1_evtgen.F:     &,   .4962711D+00,   .1255866D+00,  -.6050352D-01
lund_crm1_evtgen.F:     &,   .5904700D+00,   .1360938D+00,  -.1472274D+00
lund_crm1_evtgen.F:     &,  -.1776397D+00,   .3355800D+00,   .4783905D+00
lund_crm1_evtgen.F:     &,   .9096207D-01,  -.7513136D-01,   .5785558D+00
lund_crm1_evtgen.F:     &,   .1486927D+00,  -.1102267D+00,  -.1878653D+00
lund_crm1_evtgen.F:     &,   .3364403D+00,   .4579482D+00,   .5604519D-01
lund_crm1_evtgen.F:     &,  -.8723779D-01,   .5639721D+00,   .1612261D+00
lund_crm1_evtgen.F:     &,  -.7253604D-01,  -.1967023D+00,   .3361705D+00
lund_crm1_evtgen.F:     &,   .4352539D+00,   .2139605D-01,  -.9650973D-01
lund_crm1_evtgen.F:     &,   .5469812D+00,   .1735720D+00,  -.3472519D-01
lund_crm1_evtgen.F:     &,  -.2039587D+00,   .3348222D+00,   .4106266D+00
lund_crm1_evtgen.F:     &,  -.1240307D-01,  -.1027713D+00,   .5278556D+00
lund_crm1_evtgen.F:     &,   .1856111D+00,   .2612390D-02,  -.2094772D+00
lund_crm1_evtgen.F:     &,   .3324520D+00,   .3843904D+00,  -.4486886D-01
lund_crm1_evtgen.F:     &,  -.1057778D+00,   .5068745D+00,   .1972281D+00
lund_crm1_evtgen.F:     &,   .3897255D-01,  -.2131319D+00,   .3291207D+00
lund_crm1_evtgen.F:     &,   .3568694D+00,  -.7554371D-01,  -.1055142D+00
lund_crm1_evtgen.F:     &,   .4843197D+00,   .2083141D+00,   .7387338D-01
lund_crm1_evtgen.F:     &,  -.2148283D+00,   .3248925D+00,   .3283840D+00
lund_crm1_evtgen.F:     &,  -.1040239D+00,  -.1021096D+00,   .4604719D+00
lund_crm1_evtgen.F:     &,   .2187673D+00,   .1069171D+00,  -.2144960D+00
lund_crm1_evtgen.F:     &,   .3198344D+00,   .2992463D+00,  -.1299645D+00
lund_crm1_evtgen.F:     &,  -.9560323D-01,   .4356073D+00,   .2284952D+00
lund_crm1_evtgen.F:     &,   .1376537D+00,  -.2121323D+00,   .3140151D+00
lund_crm1_evtgen.F:     &,   .2697571D+00,  -.1530830D+00,  -.8625987D-01
lund_crm1_evtgen.F:     &,   .4099947D+00,   .2374151D+00,   .1657990D+00
lund_crm1_evtgen.F:     &,  -.1731607D+00,  -.7433615D-01,   .3838921D+00
lund_crm1_evtgen.F:     &,   .2454553D+00,   .1910932D+00,  -.2013624D+00
lund_crm1_evtgen.F:     &,   .3003747D+00,   .2108505D+00,  -.1900437D+00
lund_crm1_evtgen.F:     &,  -.6016732D-01,   .3575448D+00,   .2525557D+00
lund_crm1_evtgen.F:     &,   .2133380D+00,  -.1930815D+00,   .2926951D+00
lund_crm1_evtgen.F:     &,   .1820002D+00,  -.2036414D+00,  -.4413531D-01
lund_crm1_evtgen.F:     &,   .3311829D+00,   .2586684D+00,   .2323966D+00
lund_crm1_evtgen.F:     &,  -.1830053D+00,   .2845363D+00,   .1538332D+00
lund_crm1_evtgen.F:     &,  -.2139246D+00,  -.2665615D-01,   .3051091D+00
lund_crm1_evtgen.F:     &,   .2637619D+00,   .2481916D+00,  -.1712702D+00
lund_crm1_evtgen.F:     &,   .2759673D+00,   .1264873D+00/
lund_crm1_evtgen.F:         data (f1(i),i=291,580)/-.2209218D+00,
lund_crm1_evtgen.F:     &    -.8167226D-02,   .2793370D+00
lund_crm1_evtgen.F:     &,   .2678083D+00,   .2607028D+00,  -.1580361D+00
lund_crm1_evtgen.F:     &,   .2670553D+00,   .1002025D+00,  -.2247673D+00
lund_crm1_evtgen.F:     &,   .1090766D-01,   .2541827D+00,   .2708252D+00
lund_crm1_evtgen.F:     &,   .2699633D+00,  -.1434825D+00,   .2579166D+00
lund_crm1_evtgen.F:     &,   .7513354D-01,  -.2255275D+00,   .3011961D-01
lund_crm1_evtgen.F:     &,  -.1278046D+00,   .2485509D+00,   .5141066D-01
lund_crm1_evtgen.F:     &,  -.2233390D+00,   .4898190D-01,   .2060788D+00
lund_crm1_evtgen.F:     &,   .2736435D+00,   .2791036D+00,  -.1112090D+00
lund_crm1_evtgen.F:     &,   .2389828D+00,   .2913940D-01,  -.2184579D+00
lund_crm1_evtgen.F:     &,   .6708283D-01,   .1834328D+00,   .2735056D+00
lund_crm1_evtgen.F:     &,   .2792732D+00,  -.9390930D-01,   .2293152D+00
lund_crm1_evtgen.F:     &,   .8401435D-02,  -.2111225D+00,   .8420881D-01
lund_crm1_evtgen.F:     &,   .1618581D+00,   .2723755D+00,   .2767600D+00
lund_crm1_evtgen.F:     &,  -.7612193D-01,   .2196012D+00,  -.1074458D-01
lund_crm1_evtgen.F:     &,  -.2015943D+00,   .9986749D-01,   .1414312D+00
lund_crm1_evtgen.F:     &,   .2702934D+00,   .2717864D+00,  -.5806228D-01
lund_crm1_evtgen.F:     &,   .2098903D+00,  -.2821551D-01,  -.1901512D+00
lund_crm1_evtgen.F:     &,   .1138670D+00,   .1222098D+00,   .2673076D+00
lund_crm1_evtgen.F:     &,   .2645952D+00,  -.3994081D-01,   .2002282D+00
lund_crm1_evtgen.F:     &,  -.4404858D-01,  -.1770812D+00,   .1259585D+00
lund_crm1_evtgen.F:     &,   .1042341D+00,   .2634728D+00,   .2554431D+00
lund_crm1_evtgen.F:     &,  -.2195966D-01,   .1906567D+00,  -.5829010D-01
lund_crm1_evtgen.F:     &,  -.1626763D+00,   .1359686D+00,   .8752799D-01
lund_crm1_evtgen.F:     &,   .1812138D+00,  -.7090880D-01,  -.1472643D+00
lund_crm1_evtgen.F:     &,   .1437788D+00,   .7210000D-01,   .2535021D+00
lund_crm1_evtgen.F:     &,   .2323210D+00,   .1283268D-01,   .1719654D+00
lund_crm1_evtgen.F:     &,  -.8193973D-01,  -.1310776D+00,   .1493242D+00
lund_crm1_evtgen.F:     &,   .5794499D-01,   .2474992D+00,   .2188861D+00
lund_crm1_evtgen.F:     &,   .2930654D-01,   .1628954D+00,  -.9143147D-01
lund_crm1_evtgen.F:     &,  -.1143660D+00,   .1525595D+00,   .4504543D-01
lund_crm1_evtgen.F:     &,   .2409109D+00,   .2045512D+00,   .4496932D-01
lund_crm1_evtgen.F:     &,   .1540139D+00,  -.9941677D-01,  -.9742457D-01
lund_crm1_evtgen.F:     &,   .1535830D+00,   .3337289D-01,   .2338092D+00
lund_crm1_evtgen.F:     &,   .1895668D+00,   .5969743D-01,   .1454010D+00
lund_crm1_evtgen.F:     &,  -.1060163D+00,  -.8049289D-01,   .1524467D+00
lund_crm1_evtgen.F:     &,   .2288952D-01,   .2262660D+00,   .1741752D+00
lund_crm1_evtgen.F:     &,   .7344308D-01,   .1370108D+00,  -.1113105D+00
lund_crm1_evtgen.F:     &,  -.6380066D-01,   .1493018D+00,   .1354948D-01
lund_crm1_evtgen.F:     &,   .2183528D+00,   .1585796D+00,   .8601275D-01
lund_crm1_evtgen.F:     &,   .1288998D+00,  -.1153614D+00,  -.4750870D-01
lund_crm1_evtgen.F:     &,   .1442774D+00,   .5300375D-02,   .2101397D+00
lund_crm1_evtgen.F:     &,   .1429945D+00,   .9739683D-01,   .1210469D+00
lund_crm1_evtgen.F:     &,  -.1182695D+00,  -.3181397D-01,   .1374539D+00
lund_crm1_evtgen.F:     &,  -.1915430D-02,   .2016947D+00,   .1276024D+00
lund_crm1_evtgen.F:     &,   .1075517D+00,   .1135514D+00,  -.1200649D+00
lund_crm1_evtgen.F:     &,  -.1686400D-01,   .1291655D+00,  -.8159504D-02
lund_crm1_evtgen.F:     &,   .1930830D+00,   .1125649D+00,   .1164525D+00
lund_crm1_evtgen.F:     &,   .1064145D+00,  -.1208740D+00,  -.2781550D-02
lund_crm1_evtgen.F:     &,   .1195846D+00,  -.1349618D-01,   .1843666D+00
lund_crm1_evtgen.F:     &,   .9802212D-01,   .1240925D+00,   .9953720D-01
lund_crm1_evtgen.F:     &,  -.1208299D+00,   .1028491D-01,   .1089368D+00
lund_crm1_evtgen.F:     &,  -.1799143D-01,   .1756038D+00,   .8409260D-01
lund_crm1_evtgen.F:     &,   .1304813D+00,   .9297554D-01,  -.1199978D+00
lund_crm1_evtgen.F:     &,   .2235070D-01,   .9745104D-01,  -.2171195D-01
lund_crm1_evtgen.F:     &,   .1668487D+00,   .7087382D-01,   .1356435D+00
lund_crm1_evtgen.F:     &,   .8672964D-01,  -.1184152D+00,   .3328826D-01
lund_crm1_evtgen.F:     &,   .8535449D-01,  -.2472417D-01,   .1581512D+00
lund_crm1_evtgen.F:     &,   .5844283D-01,   .1396173D+00,   .8079769D-01
lund_crm1_evtgen.F:     &,  -.1162692D+00,   .4313461D-01,   .7286786D-01
lund_crm1_evtgen.F:     &,  -.2709358D-01,   .1495566D+00,   .4685723D-01
lund_crm1_evtgen.F:     &,   .1424522D+00,   .7517616D-01,  -.1135979D+00
lund_crm1_evtgen.F:     &,   .5184603D-01,   .6020134D-01,  -.2888402D-01
lund_crm1_evtgen.F:     &,   .1411056D+00,   .3615655D-01,   .1442080D+00
lund_crm1_evtgen.F:     &,   .6985998D-01,  -.1104814D+00,   .5942786D-01
lund_crm1_evtgen.F:     &,   .4758412D-01,  -.3015710D-01,   .1328343D+00
lund_crm1_evtgen.F:     &,   .2636362D-01,   .1449520D+00,   .6489065D-01
lund_crm1_evtgen.F:     &,  -.1069948D+00,   .6590083D-01,   .3511471D-01
lund_crm1_evtgen.F:     &,  -.3097179D-01,   .1247743D+00,   .1748621D-01
lund_crm1_evtgen.F:     &,   .1447583D+00,   .6016732D-01,  -.1032084D+00
lund_crm1_evtgen.F:     &,   .7125063D-01,   .2297515D-01,  -.3138403D-01
lund_crm1_evtgen.F:     &,   .1169524D+00,   .9518720D-02,   .1437053D+00
lund_crm1_evtgen.F:     &,   .5572651D-01,  -.9918732D-01,   .7561713D-01
lund_crm1_evtgen.F:     &,   .1133498D-01,  -.3144644D-01,   .1093914D+00
lund_crm1_evtgen.F:     &,   .2443864D-02,   .1418745D+00,   .5155896D-01
lund_crm1_evtgen.F:     &,  -.9499117D-01,   .7900871D-01,   .4140516D-03
lund_crm1_evtgen.F:     &,  -.3120817D-01,   .1021096D+00,  -.3765583D-02
lund_crm1_evtgen.F:     &,   .1393489D+00,   .4765476D-01,  -.9067421D-01
lund_crm1_evtgen.F:     &,   .8148696D-01,  -.9835322D-02,  -.3071473D-01
lund_crm1_evtgen.F:     &,   .9512173D-01,  -.9145121D-02,   .1362116D+00
lund_crm1_evtgen.F:     &,   .4400351D-01,  -.8628528D-01,   .8311879D-01
lund_crm1_evtgen.F:     &,  -.1933267D-01,  -.3000801D-01,   .8843851D-01
lund_crm1_evtgen.F:     &,  -.1373692D-01,   .1325447D+00,   .4059444D-01
lund_crm1_evtgen.F:     &,  -.8186797D-01,   .8397476D-01,  -.2796122D-01
lund_crm1_evtgen.F:     &,  -.2917858D-01,   .8211638D-01,  -.1758831D-01
lund_crm1_evtgen.F:     &,   .1284282D+00,   .3741658D-01,  -.7746072D-01
lund_crm1_evtgen.F:     &,   .8412751D-01,  -.3570340D-01,  -.2815731D-01
lund_crm1_evtgen.F:     &,   .7605919D-01,  -.2075038D-01,   .1239392D+00
lund_crm1_evtgen.F:     &,   .3445879D-01,  -.7309706D-01,   .8365034D-01
lund_crm1_evtgen.F:     &,  -.4253957D-01,  -.2697225D-01,   .7027605D-01
lund_crm1_evtgen.F:     &,  -.2327671D-01,   .1191510D+00,   .3170994D-01
lund_crm1_evtgen.F:     &,  -.6880588D-01,   .8261603D-01,  -.4848927D-01
lund_crm1_evtgen.F:     &,  -.2575894D-01,   .6485618D-01,  -.2522224D-01
lund_crm1_evtgen.F:     &,   .1141326D+00,   .2915893D-01,  -.6461166D-01
lund_crm1_evtgen.F:     &,   .8109576D-01,  -.5352471D-01/
lund_crm1_evtgen.F:         data (f1(i),i=581,8*fist_np)/
lund_crm1_evtgen.F:     &  -.2448850D-01,   .5974985D-01,  -.2664227D-01
lund_crm1_evtgen.F:     &,   .1089483D+00,   .2679478D-01,  -.6053480D-01
lund_crm1_evtgen.F:     &,   .7915824D-01,  -.5768419D-01,  -.2318240D-01
lund_crm1_evtgen.F:     &,   .5495180D-01,  -.2759161D-01,   .1036573D+00
lund_crm1_evtgen.F:     &,   .2460673D-01,  -.5659192D-01,   .7686903D-01
lund_crm1_evtgen.F:     &,  -.6095833D-01,  -.2195654D-01,   .5050781D-01
lund_crm1_evtgen.F:     &,  -.2812385D-01,   .9831373D-01,   .2258424D-01
lund_crm1_evtgen.F:     &,  -.5279619D-01,   .7428995D-01,  -.6343969D-01
lund_crm1_evtgen.F:     &,  -.2062894D-01,   .4629660D-01,  -.2829075D-01
lund_crm1_evtgen.F:     &,   .9296628D-01,   .2067161D-01,  -.4915765D-01
lund_crm1_evtgen.F:     &,   .7147872D-01,  -.6525973D-01,  -.1931326D-01
lund_crm1_evtgen.F:     &,   .4236861D-01,  -.2814738D-01,   .8766953D-01
lund_crm1_evtgen.F:     &,   .1895263D-01,  -.4568349D-01,   .6852959D-01
lund_crm1_evtgen.F:     &,  -.6637575D-01,  -.1802088D-01,   .3871336D-01
lund_crm1_evtgen.F:     &,  -.2772731D-01,   .8243681D-01,   .1736978D-01
lund_crm1_evtgen.F:     &,  -.4237843D-01,   .6540655D-01,  -.6680263D-01
lund_crm1_evtgen.F:     &,  -.1676120D-01,   .3531966D-01,  -.2708192D-01
lund_crm1_evtgen.F:     &,   .7731515D-01,   .1591388D-01,  -.3924495D-01
lund_crm1_evtgen.F:     &,   .6219728D-01,  -.6669229D-01,  -.1554181D-01
lund_crm1_evtgen.F:     &,   .3217576D-01,  -.2625197D-01,   .7233293D-01
lund_crm1_evtgen.F:     &,   .1457614D-01,  -.3628362D-01,   .5897326D-01
lund_crm1_evtgen.F:     &,  -.6607740D-01,  -.1436869D-01,   .2926955D-01
lund_crm1_evtgen.F:     &,  -.2527496D-01,   .6751397D-01,   .1334820D-01
lund_crm1_evtgen.F:     &,  -.3349332D-01,   .5570191D-01,  -.6502025D-01
lund_crm1_evtgen.F:     &,  -.1324640D-01,   .2658875D-01,  -.2418508D-01
lund_crm1_evtgen.F:     &,   .6287773D-01,   .1222210D-01,  -.3091220D-01
lund_crm1_evtgen.F:     &,   .5244936D-01,  -.6356595D-01,  -.1217826D-01
lund_crm1_evtgen.F:     &,   .2412097D-01,  -.2301320D-01,   .5843967D-01
lund_crm1_evtgen.F:     &,   .1115911D-01,  -.2848411D-01,   .4924209D-01
lund_crm1_evtgen.F:     &,  -.6179544D-01,  -.1116650D-01,   .2185389D-01
lund_crm1_evtgen.F:     &,  -.2178693D-01,   .5421151D-01,   .1022051D-01
lund_crm1_evtgen.F:     &,  -.2617483D-01,   .4610260D-01,  -.5975946D-01
lund_crm1_evtgen.F:     &,  -.1021243D-01,   .1977536D-01,  -.2053065D-01
lund_crm1_evtgen.F:     &,   .5020155D-01,   .9362427D-02,  -.2402019D-01
lund_crm1_evtgen.F:     &,   .4304971D-01,  -.5754062D-01,  -.9351218D-02
lund_crm1_evtgen.F:     &,   .1784774D-01,  -.1926564D-01,   .4641494D-01
lund_crm1_evtgen.F:     &,   .8578503D-02,  -.2201424D-01,   .4009876D-01
lund_crm1_evtgen.F:     &,  -.5516851D-01,  -.8504841D-02,   .1610334D-01
lund_crm1_evtgen.F:     &,  -.1801019D-01,   .4285404D-01,   .7845753D-02
lund_crm1_evtgen.F:     &,  -.2015062D-01,   .3726192D-01,  -.5267193D-01
lund_crm1_evtgen.F:     &,  -.7698128D-02,   .1455342D-01,  -.1677974D-01
lund_crm1_evtgen.F:     &,   .3951863D-01,   .7200963D-02,  -.1842263D-01
lund_crm1_evtgen.F:     &,   .3455696D-01,  -.4999529D-01,  -.6973690D-02
lund_crm1_evtgen.F:     &,   .1311326D-01,  -.1558706D-01,   .3640628D-01
lund_crm1_evtgen.F:     &,   .6613481D-02,  -.1682408D-01,   .3196569D-01
lund_crm1_evtgen.F:     &,  -.4730232D-01,  -.6303820D-02,   .1180569D-01
lund_crm1_evtgen.F:     &,  -.1444237D-01,   .3351256D-01,   .6078406D-02
lund_crm1_evtgen.F:     &,  -.1533433D-01,   .2950894D-01,  -.4466195D-01
lund_crm1_evtgen.F:     &,  -.5686675D-02,   .1062084D-01,  -.1335358D-01
lund_crm1_evtgen.F:     &,   .3083133D-01,   .5591180D-02,  -.1395978D-01
lund_crm1_evtgen.F:     &,   .2718901D-01,  -.4198579D-01,  -.5120184D-02
lund_crm1_evtgen.F:     &,   .9549284D-02,  -.1232644D-01,   .2835500D-01
lund_crm1_evtgen.F:     &,   .5147569D-02,  -.1262362D-01,   .2500636D-01
lund_crm1_evtgen.F:     &,  -.3937630D-01,  -.4602107D-02,   .8582124D-02
lund_crm1_evtgen.F:     &,  -.1136476D-01,   .2607477D-01,   .4743653D-02
lund_crm1_evtgen.F:     &,  -.1154885D-01,   .2295990D-01,  -.3669787D-01
lund_crm1_evtgen.F:     &,  -.4130082D-02,   .7710945D-02,  -.1047058D-01
lund_crm1_evtgen.F:     &,   .2398089D-01,   .4345231D-02,  -.1053975D-01
lund_crm1_evtgen.F:     &,   .2108250D-01,  -.3431184D-01,  -.3701668D-02
lund_crm1_evtgen.F:     &,   .6927822D-02,  -.9644411D-02,   .2206284D-01
lund_crm1_evtgen.F:     &,   .3962829D-02,  -.9572567D-02,   .1930621D-01
lund_crm1_evtgen.F:     &,  -.3193210D-01,  -.3314374D-02,   .6225307D-02
lund_crm1_evtgen.F:     &,  -.8885444D-02,   .2030960D-01,   .3647444D-02
lund_crm1_evtgen.F:     &,  -.8687316D-02,   .1765538D-01,  -.2961155D-01
lund_crm1_evtgen.F:     &,  -.2965692D-02,   .5596419D-02,  -.8191732D-02
lund_crm1_evtgen.F:     &,   .1870982D-01,   .3359717D-02,  -.7878155D-02
lund_crm1_evtgen.F:     &,   .1612491D-01,  -.2736579D-01,  -.2653116D-02
lund_crm1_evtgen.F:     &,   .5034623D-02,  -.7560413D-02,   .1725202D-01
lund_crm1_evtgen.F:     &,   .3097097D-02,  -.7139522D-02,   .1470923D-01
lund_crm1_evtgen.F:     &,  -.2523063D-01,  -.2374160D-02,   .4533814D-02
lund_crm1_evtgen.F:     &,  -.6987904D-02,   .1592477D-01,   .2857248D-02
lund_crm1_evtgen.F:     &,  -.6466150D-02,   .1340245D-01,  -.2321208D-01
lund_crm1_evtgen.F:     &,  -.2126374D-02,   .4088299D-02,  -.6470093D-02
lund_crm1_evtgen.F:     &,   .1471686D-01,   .2638029D-02,  -.5902287D-02
lund_crm1_evtgen.F:     &,   .1219850D-01,  -.2141665D-01,  -.1907356D-02
lund_crm1_evtgen.F:     &,   .3692773D-02,  -.6002512D-02,   .1361740D-01
lund_crm1_evtgen.F:     &,   .2437488D-02,  -.5347077D-02,   .1109128D-01
lund_crm1_evtgen.F:     &,  -.1969395D-01,  -.1714762D-02,   .3342305D-02
lund_crm1_evtgen.F:     &,  -.5580504D-02,   .1261602D-01,   .2253841D-02
lund_crm1_evtgen.F:     &,  -.4842652D-02,   .1011019D-01,  -.1801384D-01
lund_crm1_evtgen.F:     &,  -.1546312D-02,   .3032315D-02,  -.5199370D-02
lund_crm1_evtgen.F:     &,   .1170286D-01/
lund_crm1_evtgen.F: 23     FORMAT((5D15.7))
lund_crm1_evtgen.F: 25     FORMAT((15X,4D15.7))
lund_crm1_evtgen.F: 27     FORMAT(2(3X,2(D15.7)))
lund_crm1_evtgen.F: 28     FORMAT((3X,3D15.11))
lund_crm1_evtgen.F: 233    FORMAT(5x,'&,',D15.7,',',D15.7,',',D15.7)
lund_crm1_evtgen.F:        H=.3D-1
lund_crm1_evtgen.F:        IF(DEM.GT.0.0) IPHFL=1
lund_crm1_evtgen.F:cjc        READ(23,23) (P(I),D(1,I),D(2,I),D(3,I),D(4,I),I=1,FIST_NP)
lund_crm1_evtgen.F:cjc        READ(24,23) (P(I),F(1,I),F(2,I),F(3,I),F(4,I),I=1,FIST_NP)
lund_crm1_evtgen.F:cjc        READ(25,25) (D(5,I),D(6,I),D(7,I),D(8,I),I=1,FIST_NP)
lund_crm1_evtgen.F:cjc        READ(26,25) (F(5,I),F(6,I),F(7,I),F(8,I),I=1,FIST_NP)
lund_crm1_evtgen.F:cjc        READ(27,27) (D(9,I), D(10,I),D(11,I),D(12,I)
lund_crm1_evtgen.F:cjc     1              ,D(13,I),D(14,I),D(15,I),D(16,I),I=1,FIST_NP)
lund_crm1_evtgen.F:cjc        READ(28,28) (D(17,I),D(18,I),D(19,I),D(20,I),D(21,I),D(22,I)
lund_crm1_evtgen.F:cjc     1              ,I=1,FIST_NP)
lund_crm1_evtgen.F:c        write(101,*) '************loadfist*****'
lund_crm1_evtgen.F:c        write(101,*) '        data p/'
lund_crm1_evtgen.F:c        write(101,233) p
lund_crm1_evtgen.F:cjc        write(101,*) '        data (D1(i),i=1,290)/'
lund_crm1_evtgen.F:cjc        write(101,233) (D1(i), i=1,290)
lund_crm1_evtgen.F:cjc        write(101,*) '        data (D1(i),i=291,580)/'
lund_crm1_evtgen.F:cjc        write(101,233) (D1(i), i=291,580)
lund_crm1_evtgen.F:cjc        write(101,*) '        data (D1(i),i=581,870)/'
lund_crm1_evtgen.F:cjc        write(101,233) (D1(i), i=581,870)
lund_crm1_evtgen.F:cjc        write(101,*) '        data (D1(i),i=871,1160)/'
lund_crm1_evtgen.F:cjc        write(101,233) (D1(i), i=871,1160)
lund_crm1_evtgen.F:cjc        write(101,*) '        data (D1(i),i=1161,1450)/'
lund_crm1_evtgen.F:cjc        write(101,233) (D1(i), i=1161,1450)
lund_crm1_evtgen.F:cjc        write(101,*) '        data (D1(i),i=1451,1740)/'
lund_crm1_evtgen.F:cjc        write(101,233) (D1(i), i=1451,1740)
lund_crm1_evtgen.F:cjc        write(101,*) '        data (D1(i),i=1741,2030)/'
lund_crm1_evtgen.F:cjc        write(101,233) (D1(i), i=1741,2030)
lund_crm1_evtgen.F:cjc        write(101,*) '        data (D1(i),i=2031,22*fist_np)/'
lund_crm1_evtgen.F:cjc        write(101,233) (D1(i), i=2031,22*fist_np)
lund_crm1_evtgen.F:cjc        write(101,*) '        data (f1(i),i=1,290)/'
lund_crm1_evtgen.F:cjc        write(101,233) (f1(i), i=1,290)
lund_crm1_evtgen.F:cjc        write(101,*) '        data (f1(i),i=291,580)/'
lund_crm1_evtgen.F:cjc        write(101,233) (f1(i), i=291,580)
lund_crm1_evtgen.F:cjc        write(101,*) '        data (f1(i),i=581,8*fist_np)/'
lund_crm1_evtgen.F:cjc        write(101,233) (f1(i), i=581,8*fist_np)
lund_crm1_evtgen.F: 10   FORMAT(5D15.8)
lund_crm1_evtgen.F:cjc        OPEN(21,FILE='masses.eichten',STATUS='OLD')
lund_crm1_evtgen.F:cjc        READ(21,10,END=888,ERR=888) 
lund_crm1_evtgen.F:cjc     1       (CM(I),I=1,GEN_NCM),MASS,MP,MS,MC,A,ALPS
lund_crm1_evtgen.F:cjc        WRITE(6,*) 'READ ERROR ON UNIT 21'
lund_crm1_evtgen.F:cjc        CLOSE(21)
lund_crm1_evtgen.F:cjc        write(101,*) '********loadgen ******'
lund_crm1_evtgen.F:cjc        write(101,*) '       data cm/'
lund_crm1_evtgen.F:cjc        write(101,667) cm
lund_crm1_evtgen.F:cjc        write(101,*) '       data mass/'
lund_crm1_evtgen.F:cjc        write(101,667) mass
lund_crm1_evtgen.F:cjc        write(101,*) '       data mp,ms,mc,a,alps/'
lund_crm1_evtgen.F:cjc        write(101,667) MP,MS,MC,A,ALPS
lund_crm1_evtgen.F:cjc667     format(5x,'&,',D15.8,',',D15.8,',',D15.8)
lund_crm1_evtgen.F:        EP0=EIGEN(ALAM,1)/(A*(MC*A)**(1.D+0/3.D+0))
lund_crm1_evtgen.F:        DO J=1,GEN_ND
lund_crm1_evtgen.F:           JI=J+12
lund_crm1_evtgen.F:           REP=EIGEN(ALAM,JI)/(A*(MC*A)**(1.D+0/3.D+0))
lund_crm1_evtgen.F:           DCM(J)=REP+CM(1)-EP0
lund_crm1_evtgen.F:cjc      PARAMETER (N_SDM = FIST_MIX*(FIST_MIX+1)/2)
lund_crm1_evtgen.F:        DO I=1, FIST_MIX
lund_crm1_evtgen.F:          DO J=1, FIST_MIX
lund_crm1_evtgen.F:cjc        READ(22,14) (SDM(J),J=1,N_SDM)
lund_crm1_evtgen.F:cjc 14     FORMAT(17X,D8.1)
lund_crm1_evtgen.F:cjc        write(101,*) '********loadmix*****'
lund_crm1_evtgen.F:cjc        write(101,*) '       data SDM/'
lund_crm1_evtgen.F:cjc        write(101,667) sdm
lund_crm1_evtgen.F:        NS1 = FIST_MIX - GEN_ND
lund_crm1_evtgen.F:        DO I = 1,FIST_MIX
lund_crm1_evtgen.F:           IF (I.GT.NS1) MSD(I,I)=DCM(I-NS1)
lund_crm1_evtgen.F:        DO I = 1,FIST_MIX
lund_crm1_evtgen.F:           IF (I.GT.1) NEWS = NEWS+(FIST_MIX+2-I)
lund_crm1_evtgen.F:              K = (J+1-I)+NEWS
lund_crm1_evtgen.F:C  960109  Change arithmetic-IF to get around Linux f2c bug w/CABS
lund_crm1_evtgen.F:      DO 5 IR=1,N
lund_crm1_evtgen.F:      DO 5 IC=1,N
lund_crm1_evtgen.F:      D=CMPLX(1.0,0.0)
lund_crm1_evtgen.F:      DO 10 I=1,N
lund_crm1_evtgen.F:   10 C(I)=B(I)
lund_crm1_evtgen.F:      TOL=1.E-6
lund_crm1_evtgen.F:      DO 65 J=1,N
lund_crm1_evtgen.F:      IXMIN=J+1
lund_crm1_evtgen.F:      JXMIN=J+1
lund_crm1_evtgen.F:      IF(N.EQ.1) GO TO 85
lund_crm1_evtgen.F:      JMAX=N-1
lund_crm1_evtgen.F:      DO 80 J=1,JMAX
lund_crm1_evtgen.F:      DO 80 K=1,J
lund_crm1_evtgen.F:      IC=N+1-K
lund_crm1_evtgen.F:      DO 90 I=1,N
lund_crm1_evtgen.F:      SUBROUTINE PHASE1(WE,PS,IMAX,J,IFLG)
lund_crm1_evtgen.F:      PARAMETER (PI = 3.1415926535)
lund_crm1_evtgen.F:      INTEGER I,L1,L2
lund_crm1_evtgen.F:      REAL MD,A1,A2,ANG,CONST,DEM1,DLTI,DLTR,EW,PANG,PMOD
lund_crm1_evtgen.F:      REAL PW,PW1,PW2,SAVE
lund_crm1_evtgen.F: 10     FORMAT(/,T30,'S-WAVE PHASE SHIFT FOR THE D-D SCATTERING AMPLITUD
lund_crm1_evtgen.F:     1E',/)
lund_crm1_evtgen.F:     1E',/)
lund_crm1_evtgen.F:     1E',/)
lund_crm1_evtgen.F:        IF(J.EQ.0) WRITE(55,10)
lund_crm1_evtgen.F:        IF(J.EQ.1) WRITE(55,20)
lund_crm1_evtgen.F: 40     FORMAT(T10,'ENERGY',T23,'MOMENTUM',T45,'PHASE',T70,'MODULUS'
lund_crm1_evtgen.F:     1  ,T85,'DLTR/PI',T100,'S-MATRIX')
lund_crm1_evtgen.F:        DEM1=.0051
lund_crm1_evtgen.F:        IF(J.EQ.0) CONST=1./(4.*PI)
lund_crm1_evtgen.F:        IF(J.EQ.1) CONST=1./(12.*PI)
lund_crm1_evtgen.F:        IF(J.EQ.2) CONST=9./(10.*PI)
lund_crm1_evtgen.F:        DO 60 I=1,IMAX
lund_crm1_evtgen.F:           PW1=REAL(DSQRT(WE(I)**2-4.*MASS(1,1)**2)/2.)
lund_crm1_evtgen.F:              A1=1.-CONST*PW1*EW*PS(1,2,I)
lund_crm1_evtgen.F:              A2=CONST*PW1*EW*PS(1,1,I)
lund_crm1_evtgen.F:              EKIN=WE(I)**2-4.*(MASS(1,1)+DEM1)**2
lund_crm1_evtgen.F:              A1=1.-CONST*EW*(PW1*PS(1,2,I)+PW2*PS(2,2,I))
lund_crm1_evtgen.F:              A2=CONST*EW*(PW1*PS(1,1,I)+PW2*PS(2,1,I))
lund_crm1_evtgen.F:           MD=SQRT(A1**2+A2**2)
lund_crm1_evtgen.F:           DLTI=-(1./2.)*ALOG(MD)
lund_crm1_evtgen.F:           L1=SIGN(1.,A1)
lund_crm1_evtgen.F:           L2=SIGN(1.,A2)
lund_crm1_evtgen.F:           ANG=PI*(1.-L2*(1.+L1)/2.)+L1*L2*ATAN(ABS(A2/A1))
lund_crm1_evtgen.F:           IF(PW.LE.1.E-5) THEN
lund_crm1_evtgen.F: 50        FORMAT(T8,F10.7,T21,F10.7,T40,2(F10.7,3X),T68,F10.7,T83,
lund_crm1_evtgen.F:     1          F10.7,T98,2(F10.7,3X))
lund_crm1_evtgen.F:C           WRITE(55,50) WE(I),PW1,DLTJ,PMOD,PANG,A1,A2
lund_crm1_evtgen.F:      PARAMETER (PI = 3.14159265358979D+00)
lund_crm1_evtgen.F:        DO N=1,FIST_MIX
lund_crm1_evtgen.F:        KFLAG=1
lund_crm1_evtgen.F:        CORR=(1.-16.*ALPS/(3.*PI))
lund_crm1_evtgen.F:        DO IQCD=1,15
lund_crm1_evtgen.F:C  is "integer" bins from 1 to 16, for the various charm states.
lund_crm1_evtgen.F:      DATA XPREV /-1./
lund_crm1_evtgen.F:C  X.  This routine is designed to be called internally from HBFUN1,
lund_crm1_evtgen.F:      DOUBLE PRECISION FUNCTION SIXJ(J2,S1,S2,L,LP,LP1,LS)
lund_crm1_evtgen.F:      INTEGER J2,S1,S2,L,LP,LP1,LS
lund_crm1_evtgen.F:      INTEGER JT,ST,SB,SB1,I1,I,JA,I2
lund_crm1_evtgen.F:      REAL FACT(2,3),VC11(2),VC2(2,2,2)
lund_crm1_evtgen.F:      JT=1
lund_crm1_evtgen.F:      ST=1
lund_crm1_evtgen.F:      VC11(1)=-SQRT(1./3.)
lund_crm1_evtgen.F:      VC11(2)=SQRT(2./3.)
lund_crm1_evtgen.F:      VC2(1,1,1)=1.0
lund_crm1_evtgen.F:      VC2(1,1,2)=0.0
lund_crm1_evtgen.F:      VC2(1,2,1)=0.0
lund_crm1_evtgen.F:      VC2(1,2,2)=1.0
lund_crm1_evtgen.F:      VC2(2,1,1)=0.0
lund_crm1_evtgen.F:      VC2(2,1,2)=1.0
lund_crm1_evtgen.F:      VC2(2,2,1)=SQRT(1./5.)
lund_crm1_evtgen.F:      IF(L.EQ.0) I=1
lund_crm1_evtgen.F:      IF(LP.EQ.0) I1=1
lund_crm1_evtgen.F:      IF(LP.EQ.2) I1=2
lund_crm1_evtgen.F:      I2=LS+1
lund_crm1_evtgen.F:      IF(LP1.EQ.0) JA=1
lund_crm1_evtgen.F:      IF(LP1.EQ.2) JA=2
lund_crm1_evtgen.F:      FACT(I1,I2)=0.0
lund_crm1_evtgen.F:      DO 10 SB=1,2
lund_crm1_evtgen.F:      SB1=SB-1
lund_crm1_evtgen.F:   10 FACT(I1,I2)=SQRT((2.*L+1)*(2.*LP1+1)*(2.*LS+1.)*(2.*J2+1))*
lund_crm1_evtgen.F:     1   VC11(JA)*VC2(I,JA,I1)*3.*(1.+SB1)**((S1+S2)/2.)*(-1.)**SB1*
lund_crm1_evtgen.F:     2   SJS(LP1,SB1,J2,S2,1,1)*SJS(LP1,SB1,J2,LS,LP,L)*
lund_crm1_evtgen.F:     3   SJS(L,SB1,LS,S1,1,1)+FACT(I1,I2)
lund_crm1_evtgen.F:      SIXJ=FACT(I1,I2)
lund_crm1_evtgen.F:      REAL FUNCTION SJS(I1,I2,I3,I4,I5,I6)
lund_crm1_evtgen.F:      INTEGER I1,I2,I3,I4,I5,I6
lund_crm1_evtgen.F:      INTEGER J(3,2), JFLA, IAJ1, IAJ2, KSJ1, KFLA, KSJ2
lund_crm1_evtgen.F:      J(1,1)=I1
lund_crm1_evtgen.F:      J(2,1)=I2
lund_crm1_evtgen.F:      J(3,1)=I3
lund_crm1_evtgen.F:      J(1,2)=I4
lund_crm1_evtgen.F:      DO 10 KSJ2=1,2
lund_crm1_evtgen.F:      DO 10 KSJ1=1,3
lund_crm1_evtgen.F:   10 IF(J(KSJ1,KSJ2).EQ.0) KFLA=KSJ1+3*(KSJ2-1)
lund_crm1_evtgen.F:      IF(KFLA.LE.3) JFLA=1
lund_crm1_evtgen.F:      IAJ1=KFLA+1
lund_crm1_evtgen.F:      IF(IAJ1.GT.3) IAJ1=IAJ1-3
lund_crm1_evtgen.F:      SJS=(-1)**(J(KFLA,1)+J(IAJ1,1)+J(IAJ2,1))/SQRT((2.*J(IAJ1,1)+
lund_crm1_evtgen.F:     1   1.)*(2.*J(IAJ2,1)+1.))
lund_crm1_evtgen.F:      IF(J(IAJ1,1).NE.J(IAJ2,2).OR.J(IAJ1,2).NE.J(IAJ2,1)) SJS=0.0
lund_crm1_evtgen.F:   20 SJS=(-1)**(J(KFLA,2)+J(IAJ1,2)+J(IAJ2,1))/SQRT((2.*J(IAJ1,1)
lund_crm1_evtgen.F:     1   +1.)*(2.*J(IAJ2,2)+1.))
lund_crm1_evtgen.F:      IF(J(IAJ1,1).NE.J(IAJ2,1).OR.J(IAJ1,2).NE.J(IAJ2,2)) SJS=0.0
lund_crm1_evtgen.F:      IF(I5.GT.1) GO TO 40
lund_crm1_evtgen.F:      IF(I3.EQ.1) SJS=1./6.
lund_crm1_evtgen.F:      IF(I3.EQ.2) SJS=-1./(2.*SQRT(5.))
lund_crm1_evtgen.F:      SJS=SQRT(7./3.)/10.
lund_crm1_evtgen.F:      IF(I3.EQ.2.AND.I4.EQ.2) SJS=-1./10.
lund_crm1_evtgen.F:      ARHO(1,1)=1.951907D+0
lund_crm1_evtgen.F:      ARHO(2,1)=1.139439D+0
lund_crm1_evtgen.F:      ARHO(3,1)=8.996869D-1
lund_crm1_evtgen.F:      ARHO(4,1)=7.755678D-1
lund_crm1_evtgen.F:      ARHO(1,2)=3.441901D+0
lund_crm1_evtgen.F:      ARHO(2,2)=1.529710D+0
lund_crm1_evtgen.F:      ARHO(3,2)=1.129173D+0
lund_crm1_evtgen.F:      ARHO(4,2)=9.437397D-1
lund_crm1_evtgen.F:      ARHO(1,3)=5.781487D+0
lund_crm1_evtgen.F:      ARHO(2,3)=1.947987D+0
lund_crm1_evtgen.F:      ARHO(3,3)=1.347184D+0
lund_crm1_evtgen.F:      ARHO(4,3)=1.095991D+0
lund_crm1_evtgen.F:      ARHO(1,4)=9.109572D+0
lund_crm1_evtgen.F:      ARHO(3,4)=1.557306D+0
lund_crm1_evtgen.F:      ARHO(4,4)=1.235111D+0
lund_crm1_evtgen.F:      ARHO(1,5)=1.347147D+1
lund_crm1_evtgen.F:      ARHO(2,5)=2.940190D+0
lund_crm1_evtgen.F:      ARHO(3,5)=1.766301D+0
lund_crm1_evtgen.F:      ARHO(4,5)=1.363841D+0
lund_crm1_evtgen.F:      DO 10 J=1,5
lund_crm1_evtgen.F:   10 CONTINUE
lund_crm1_evtgen.F:      CALL INTPL(1.0D+0,AC,X,AO,1.0D+0,0)
lund_crm1_evtgen.F:      WFLAM=DSQRT(AO*X+1.0)
mix.inc:      PARAMETER (N_SDM = FIST_MIX*(FIST_MIX+1)/2)
pykcut.F:C...that the event has passed the cuts, MCUT=1 that it has failed.
pykcut.F:      COMMON/PYDAT1/MSTU(200),PARU(200),MSTJ(200),PARJ(200)
pykcut.F:      COMMON/PYINT1/MINT(400),VINT(400)
pykcut.F:      SAVE /PYDAT1/,/PYINT1/,/PYINT2/,/PYPARS/
pykcut.F:      ISUB=MINT(1)
pykcut.F:      TAU=VINT(21)
pykcut.F:C...Calculate x_1, x_2, x_F.
pykcut.F:        X1=SQRT(TAU)*EXP(YST)
pykcut.F:        X1=SQRT(TAUP)*EXP(YST)
pykcut.F:      XF=X1-X2
pykcut.F:      BE34=SQRT(MAX(0D0,(1D0-RM3-RM4)**2-4D0*RM3*RM4))
pykcut.F:      RPTS=4D0*VINT(71)**2/SHAT
pykcut.F:      BE34L=SQRT(MAX(0D0,(1D0-RM3-RM4)**2-4D0*RM3*RM4-RPTS))
pykcut.F:      RSQM=1D0+RM34
pykcut.F:      RTHM=(4D0*RM3*RM4+RPTS)/(1D0-RM3-RM4+BE34L)
pykcut.F:      THAT=-0.5D0*SHAT*MAX(RTHM,1D0-RM3-RM4-BE34*CTH)
pykcut.F:      UHAT=-0.5D0*SHAT*MAX(RTHM,1D0-RM3-RM4+BE34*CTH)
pykcut.F:      PT2=MAX(VINT(71)**2,0.25D0*SHAT*BE34**2*(1D0-CTH**2))
pykcut.F:      IF(SHAT.LE.PARP(2)*PARP(2)) MCUT=1
pykcut.F:C      WRITE(MSTU(11),5000)
pykcut.F:C      IF(PYR(0).LT.10D0) STOP
pykcut.F: 5000 FORMAT(1X,'Error: you did not link your PYKCUT routine ',
pykcut.F:     &'correctly.'/1X,'Dummy routine in PYTHIA file called instead.'/
pykcut.F:     &1X,'Execution stopped!')
Pythia.F:C      Copyright (C) 1998      Caltech, UCSB
Pythia.F:C    DJL/RYD     August 11, 1998         Module created
Pythia.F:      CHARACTER CH1*16,CH2*16
Pythia.F:      COMMON/DECAYCH/DC(18)
Pythia.F:         MAXIMUM=10.6
Pythia.F:         DO IDC=MDCY(23,2),MDCY(23,2)+MDCY(23,3)-1
Pythia.F:            MDME(IDC,1)=MIN(0,MDME(IDC,1))
Pythia.F:            CDC=IABS(KFDP(IDC,1))
Pythia.F:            CALL PYNAME(CDC,CH1)
Pythia.F:            IF(DC(CDC).EQ.1) THEN
Pythia.F:               MDME(IDC,1)=1
Pythia.F:               WRITE (*,*) "  ",ch1,"+ ",ch2," ALLOWED"
Pythia.F:               WRITE (*,*) "  ",ch1,"+ ",ch2," DISABLED"
Pythia.F:C      Copyright (C) 1998      Caltech, UCSB
Pythia.F:C    DJL/RYD     August 11, 1998         Module created
Pythia.F:      COMMON/PYDAT1/MSTU(200),PARU(200),MSTJ(200),PARJ(200)
Pythia.F:      INTEGER KF(100),I,NDAUG
Pythia.F:      REAL*8  PX(100),PY(100),PZ(100),E(100)
Pythia.F:      IMSTJ=MSTJ(21)
Pythia.F:      MSTJ(21)=0
Pythia.F:C         DO IDC=MDCY(23,2),MDCY(23,2)+MDCY(23,3)-1
Pythia.F:C            IF(IABS(KFDP(IDC,1)).NE.Flavor)
Pythia.F:C     >           MDME(IDC,1)=MIN(0,MDME(IDC,1))
Pythia.F: 4    PARP(171)=Energy/MAXIMUM 
Pythia.F:      MSTJ(21)=IMSTJ
Pythia.F:      DO 1,I=1,N
Pythia.F:         NDAUG=NDAUG+1
Pythia.F:         PX(NDAUG)=P(I,1)
Pythia.F:         IF(K(I,1).LT.10)THEN
Pythia.F:1     CONTINUE
Pythia.F:      IF (ABS(PXSUM).GT.0.001.OR.
Pythia.F:     +       ABS(PYSUM).GT.0.001.OR.
Pythia.F:     +       ABS(PZSUM).GT.0.001) THEN
Pythia.F:C      Copyright (C) 1998      Caltech, UCSB
Pythia.F:C Module: jetset1.F
Pythia.F:C    DJL/RYD     August 11, 1998         Module created
Pythia.F:      COMMON/PYDAT1/MSTU(200),PARU(200),MSTJ(200),PARJ(200)
Pythia.F:      SAVE /PYDAT1/
Pythia.F:      PARAMETER (NDMAX=100)
Pythia.F:      INTEGER KP,KID,IPART1,IPART
Pythia.F:      INTEGER IP1,IMSTJ
Pythia.F:C      CALL PY1ENT(1,IP,M,0D0,0D0)
Pythia.F:      K(1,1)=1
Pythia.F:      K(1,2)=ip
Pythia.F:      P(1,5)=m
Pythia.F:      P(1,4)=m
Pythia.F:      P(1,1)=0.0
Pythia.F:      P(1,2)=0.0
Pythia.F:      P(1,3)=0.0
Pythia.F:      n=1
Pythia.F:      IMSTJ=MSTJ(21)
Pythia.F:      MSTJ(21)=0
Pythia.F:      CALL PYDECY(1)
Pythia.F:      MSTJ(21)=IMSTJ
Pythia.F:          IP1=MSTJ(92)
Pythia.F:          QMAX=SQRT(MAX(0.,(P(IP1,4)+P(IP1+1,4))**2-(P(IP1,1)+P(IP1+1,
Pythia.F:     &    1))**2-(P(IP1,2)+P(IP1+1,2))**2-(P(IP1,3)+P(IP1+1,3))**2))
Pythia.F:          CALL PYSHOW(IP1,IP1+1,QMAX)
Pythia.F:          CALL PYPREP(IP1)
Pythia.F:          IP1=-MSTJ(92)
Pythia.F:          CALL PYSHOW(IP1,-3,P(IP,5))
Pythia.F:          CALL PYPREP(IP1)
Pythia.F:c      call lulist(1)
Pythia.F:      mstj(21)=0
Pythia.F:      mstj(21)=2
Pythia.F:      ipart1 = 1
Pythia.F:      ipart = 1
Pythia.F:      do 10 i=2,n
Pythia.F:         if (abs(kid) .ge. 1 .and. abs(kid) .le. 8
Pythia.F:     1        .or. kid .eq. 21
Pythia.F:     2        .or. kid .ge. 91 .and. kid .le. 94)  then
Pythia.F:            if (ipart1 .eq. 1) ipart1 = i
Pythia.F:            if (kp .ne. 1)  goto 10
Pythia.F:               goto 10
Pythia.F:            elseif (kp .ge. ipart1)  then
Pythia.F:               kp = ipart1-1
Pythia.F:         ndaug = ndaug + 1
Pythia.F:         px(ndaug)=p(i,1)
Pythia.F:C        print '( 2I5,I12,4F12.4 )',ndaug,km(ndaug),kf(ndaug),
Pythia.F:C     1    px(ndaug),py(ndaug),pz(ndaug),e(ndaug)
Pythia.F: 10   CONTINUE
Pythia.F:C        NDAUG = NDAUG + 1
Pythia.F:C        PX(NDAUG)=P(I,1)
pytime.F:      DO 100 J=1,6
pytime.F:  100 CONTINUE
pytime.F:C...Example 1: Fortran 90 routine.
pytime.F:C      IDATI(1)=IVAL(1)
pytime.F:C      IDATI(1)=IYEAR
pytime.F:C      IDATI(1)=IYEAR
pytime.F:C      READ(ATIME(1:2),'(I2)') IHOUR
pytime.F:      IDATI(1)=IDTEMP(3)
pytime.F:      IDATI(3)=IDTEMP(1)
pytime.F:      IDATI(4)=IDTEMP(1)
pytime.F:      IDATI(1)=2000+MOD(IDATI(1),100)
stdhep.inc:C  ISTHEP(N)   = stability code; 0 if stable, 1 if decays.
stdhep.inc:C  JMOHEP(1,I) = line number of mother particle
stdhep.inc:C  JDAHEP(1,I) = line number of 1st daughter particle
tauola2.4.F:C     PIN RONG GANG,2008-07-12
tauola2.4.F:c      IDTAU=-15       
tauola2.4.F:c      TAUP(1)=1
tauola2.4.F:c      POLT(1)=2.04533
tauola2.4.F:c      POLT(2)=1
tauola2.4.F:c      DO NEVT =1,1000
tauola2.4.F:c      DO NN=1,NDAUG 
tauola2.4.F:c      WRITE(*,'(I2,2X,I6,2X,I4,2X,4F10.5)')
tauola2.4.F:C    IDTAU: =15 (TAU-),-15(TAU+)
tauola2.4.F:C********pingrg,2008,08-13
tauola2.4.F:      COMMON / JAKI   /  JAK1,JAK2,JAKP,JAKM,KTOM
tauola2.4.F:C==== KTORY = 1 : INTERFACE OF KORAL-Z TYPE(HIGH ENERGY CASE) ==========
tauola2.4.F:C JAK1/JAK2: DECAY TYPE OF TAU+/TAU-. JAK1/JAK2=0 DENOTES ALL DECAY 
tauola2.4.F:      JAK1=0
tauola2.4.F:C RADIATIVE CORRECTION SWITCH ITDKRC=0/1 DENOTES RADIATION OFF/ON 
tauola2.4.F:      ITDKRC=1
tauola2.4.F:      XK0DEC=0.001 
tauola2.4.F:C LUND IDENTIFIER (FOR TAU+) -15
tauola2.4.F:      IDFF=-15
tauola2.4.F:C KTO=1 DENOTES TAU DEFINED BY IDFF (I.E. TAU+)
tauola2.4.F:      IF(IDTAU.EQ.-15)KTO=1
tauola2.4.F:      IF(IDTAU.EQ. 15)KTO=2
tauola2.4.F:         CALL INIPHYx(0.1D0)
tauola2.4.F:          IF (KTORY.EQ.1) THEN
tauola2.4.F:            CALL DEXAYx(-1,POL)
tauola2.4.F:            CALL DEKAYx(-1,HH)
tauola2.4.F:cCCC      DO 300 IEV=1,NEVTES
tauola2.4.F:      NEV=NEV+1
tauola2.4.F:      IF (KTORY.EQ.1) THEN
tauola2.4.F:         CALL DEKAYx(KTO+10,HH)
tauola2.4.F:C       BEX=TAUP(1)/TAUP(0)
tauola2.4.F:c       CALL PYROBO(1,N,0D0,0D0,BEX,BEY,BEZ) !rotate and boost of tau particle
tauola2.4.F:       IF(IDTAU.EQ.15) THEN
tauola2.4.F:           NDAUG=NDAUG+1
tauola2.4.F:       ELSE IF(IDTAU.EQ.-15) THEN
tauola2.4.F:           NDAUG=NDAUG+1
tauola2.4.F:           NDAUG=NDAUG+1
tauola2.4.F:        NDAUG=NDAUG-1
tauola2.4.F:       DO II=1,NDAUG
tauola2.4.F:            PX(II)=P(NNX,1)
tauola2.4.F:      IPRI=MOD(NEV,1000)
tauola2.4.F:      SUBROUTINE CHOICEx(MNUM,RR,ICHAN,PROB1,PROB2,PROB3,
tauola2.4.F:     *                 ,AMPIZ,AMPI,AMRO,GAMRO,AMA1,GAMA1
tauola2.4.F:     *                 ,AMPIZ,AMPI,AMRO,GAMRO,AMA1,GAMA1
tauola2.4.F:      AMROP=1.1
tauola2.4.F:       PROB1=0.5
tauola2.4.F:       AMRX =AMA1
tauola2.4.F:       GAMRX=GAMA1
tauola2.4.F:      ELSEIF(MNUM.EQ.1) THEN
tauola2.4.F:       PROB1=0.5
tauola2.4.F:       AMRX =1.57
tauola2.4.F:       PROB1=0.5
tauola2.4.F:       AMRX =1.57
tauola2.4.F:       PROB1=0.5
tauola2.4.F:       AMRX =1.27
tauola2.4.F:       PROB1=0.5
tauola2.4.F:       AMRX =1.27
tauola2.4.F:       PROB1=0.5
tauola2.4.F:       AMRX =1.27
tauola2.4.F:       PROB1=0.4
tauola2.4.F:       AMRX =1.27
tauola2.4.F:       PROB1=0.0
tauola2.4.F:       PROB2=1.0
tauola2.4.F:       AMRX =1.27
tauola2.4.F:       PROB1=0.0
tauola2.4.F:       PROB2=1.0
tauola2.4.F:      ELSEIF(MNUM.EQ.101) THEN
tauola2.4.F:       PROB1=.35
tauola2.4.F:       AMRX =1.2
tauola2.4.F:      ELSEIF(MNUM.EQ.102) THEN
tauola2.4.F:       PROB1=0.0
tauola2.4.F:       AMRX =1.4
tauola2.4.F:       PROB1=0.0
tauola2.4.F:       AMRX =AMA1
tauola2.4.F:       GAMRX=GAMA1
tauola2.4.F:      IF    (RR.LE.PROB1) THEN
tauola2.4.F:       ICHAN=1
tauola2.4.F:      ELSEIF(RR.LE.(PROB1+PROB2)) THEN
tauola2.4.F:        PX   =PROB1
tauola2.4.F:        PROB1=PROB2
tauola2.4.F:      PROB3=1.0-PROB1-PROB2
tauola2.4.F:     *                 ,AMPIZ,AMPI,AMRO,GAMRO,AMA1,GAMA1
tauola2.4.F:     *                 ,AMPIZ,AMPI,AMRO,GAMRO,AMA1,GAMA1
tauola2.4.F:      COMMON / TAUKLE / BRA1,BRK0,BRK0B,BRKS
tauola2.4.F:      REAL*4            BRA1,BRK0,BRK0B,BRKS
tauola2.4.F:CCAM                  enu   munu   pinu  rhonu   A1nu   Knu    K*nu   pi'
tauola2.4.F:CCAM   DATA JLIST  /    1,     2,     3,     4,     5,     6,     7,
tauola2.4.F:CCAM   DATA GAMPRT /1.000,0.9730,0.6054,1.2432,0.8432,0.0432,O.O811,0.616
tauola2.4.F:      DATA NOPI/-1,-1,1,2,0,0,2,2,2,-1,0,0,-1,-1,-1,1,1,0,-1,-1,-1,1,1,2
tauola2.4.F:CC     DATA IDFPIK/ 3,-3, 1  , 4,-4, 1  , 3, 4, 2  ,
tauola2.4.F:CC    $             3, 2, 2  , 3,-1, 1  ,-4, 2, 1  /
tauola2.4.F:      DATA IDFPIK/ 3, 1,-3  , 4, 1,-4  , 3, 2, 4  ,
tauola2.4.F:     $             2, 2, 3  , 3, 1,-1  , 1,-4, 2  ,
tauola2.4.F:     $             9, 1, 2  , 1, 2, 8             /
tauola2.4.F:      NCHAN = 19
tauola2.4.F:      DO 1 I = 1,30
tauola2.4.F:        IF(I.EQ. 1) GAMPRT(I) = 1.0000
tauola2.4.F:        IF(I.EQ. 2) GAMPRT(I) = 1.0000
tauola2.4.F:        IF(I.EQ. 3) GAMPRT(I) = 1.0000
tauola2.4.F:        IF(I.EQ. 4) GAMPRT(I) = 1.0000
tauola2.4.F:        IF(I.EQ. 5) GAMPRT(I) = 1.0000
tauola2.4.F:        IF(I.EQ. 6) GAMPRT(I) = 1.0000
tauola2.4.F:        IF(I.EQ. 7) GAMPRT(I) = 1.0000
tauola2.4.F:        IF(I.EQ. 8) GAMPRT(I) = 1.0000
tauola2.4.F:        IF(I.EQ. 9) GAMPRT(I) = 1.0000
tauola2.4.F:        IF(I.EQ.10) GAMPRT(I) = 1.0000
tauola2.4.F:        IF(I.EQ.11) GAMPRT(I) = 1.0000
tauola2.4.F:        IF(I.EQ.12) GAMPRT(I) = 1.0000
tauola2.4.F:        IF(I.EQ.13) GAMPRT(I) = 1.0000
tauola2.4.F:        IF(I.EQ.14) GAMPRT(I) = 1.0000
tauola2.4.F:        IF(I.EQ.15) GAMPRT(I) = 1.0000
tauola2.4.F:        IF(I.EQ.16) GAMPRT(I) = 1.0000
tauola2.4.F:        IF(I.EQ.17) GAMPRT(I) = 1.0000
tauola2.4.F:        IF(I.EQ.18) GAMPRT(I) = 1.0000
tauola2.4.F:        IF(I.EQ.19) GAMPRT(I) = 1.0000
tauola2.4.F:   1  CONTINUE
tauola2.4.F:      DO 3 I=1,NMODE
tauola2.4.F:      DO 3 J=1,MULT(I)
tauola2.4.F:      IF     (IPI.EQ. 1) THEN
tauola2.4.F:        KPI (J,I) = 211
tauola2.4.F:      ELSEIF (IPI.EQ.-1) THEN
tauola2.4.F:        KPI (J,I) =-211
tauola2.4.F:        KPI (J,I) = 111
tauola2.4.F:      DO 5 I=1,3
tauola2.4.F:      DO 5 J=1,8
tauola2.4.F:C --- A1 3CHARGED/ A1 1CHARGED 2 NEUTRALS MATRIX ELEMENTS (MASLESS LIM.)
tauola2.4.F:C --- ALL COEFFICENTS SHOULD BE IN THE RANGE (0.0,1.0)
tauola2.4.F:      BRA1=0.5
tauola2.4.F:      PI =4.*ATAN(1.)
tauola2.4.F:      GFERMI = 1.16637E-5
tauola2.4.F:      GV     = 1.0
tauola2.4.F:      GA     =-1.0
tauola2.4.F:C ZW 13.04.89 HERE WAS AN ERROR
tauola2.4.F:      SCABIB = SQRT(1.-CCABIB**2)
tauola2.4.F:      GAMEL  = GFERMI**2*AMTAU**5/(192*PI**3)
tauola2.4.F:C      CALL DEXAYx(-1)
tauola2.4.F:      COMMON / TAUKLE / BRA1,BRK0,BRK0B,BRKS
tauola2.4.F:      REAL*4            BRA1,BRK0,BRK0B,BRKS
tauola2.4.F:      IF (KTO.EQ.1) THEN
tauola2.4.F:      NCHAN = 19
tauola2.4.F:      DO 1 I = 1,30
tauola2.4.F:        IF(I.EQ. 1) GAMPRT(I) = .0000
tauola2.4.F:        IF(I.EQ. 8) GAMPRT(I) = 1.0000
tauola2.4.F:        IF(I.EQ. 9) GAMPRT(I) = 1.0000
tauola2.4.F:        IF(I.EQ.10) GAMPRT(I) = 1.0000
tauola2.4.F:        IF(I.EQ.11) GAMPRT(I) = 1.0000
tauola2.4.F:        IF(I.EQ.12) GAMPRT(I) = 1.0000
tauola2.4.F:        IF(I.EQ.13) GAMPRT(I) = 1.0000
tauola2.4.F:        IF(I.EQ.14) GAMPRT(I) = 1.0000
tauola2.4.F:        IF(I.EQ.15) GAMPRT(I) = 1.0000
tauola2.4.F:        IF(I.EQ.16) GAMPRT(I) = 1.0000
tauola2.4.F:        IF(I.EQ.17) GAMPRT(I) = 1.0000
tauola2.4.F:        IF(I.EQ.18) GAMPRT(I) = 1.0000
tauola2.4.F:        IF(I.EQ.19) GAMPRT(I) = 1.0000
tauola2.4.F:   1  CONTINUE
tauola2.4.F:C --- A1 3CHARGED/ A1 1CHARGED 2 NEUTRALS MATRIX ELEMENTS (MASLESS LIM.)
tauola2.4.F:C --- ALL COEFFICENTS SHOULD BE IN THE RANGE (0.0,1.0)
tauola2.4.F:      BRA1=0.5
tauola2.4.F:      NCHAN = 19
tauola2.4.F:      DO 2 I = 1,30
tauola2.4.F:        IF(I.EQ. 1) GAMPRT(I) = .0000
tauola2.4.F:        IF(I.EQ. 8) GAMPRT(I) = 1.0000
tauola2.4.F:        IF(I.EQ. 9) GAMPRT(I) = 1.0000
tauola2.4.F:        IF(I.EQ.10) GAMPRT(I) = 1.0000
tauola2.4.F:        IF(I.EQ.11) GAMPRT(I) = 1.0000
tauola2.4.F:        IF(I.EQ.12) GAMPRT(I) = 1.0000
tauola2.4.F:        IF(I.EQ.13) GAMPRT(I) = 1.0000
tauola2.4.F:        IF(I.EQ.14) GAMPRT(I) = 1.0000
tauola2.4.F:        IF(I.EQ.15) GAMPRT(I) = 1.0000
tauola2.4.F:        IF(I.EQ.16) GAMPRT(I) = 1.0000
tauola2.4.F:        IF(I.EQ.17) GAMPRT(I) = 1.0000
tauola2.4.F:        IF(I.EQ.18) GAMPRT(I) = 1.0000
tauola2.4.F:        IF(I.EQ.19) GAMPRT(I) = 1.0000
tauola2.4.F:C --- A1 3CHARGED/ A1 1CHARGED 2 NEUTRALS MATRIX ELEMENTS (MASLESS LIM.)
tauola2.4.F:C --- ALL COEFFICENTS SHOULD BE IN THE RANGE (0.0,1.0)
tauola2.4.F:      BRA1=0.5
tauola2.4.F:      PI8    = 4.D0*DATAN(1.D0)
tauola2.4.F:      ALFINV = 137.03604D0
tauola2.4.F:      ALFPI  = 1D0/(ALFINV*PI8)
tauola2.4.F:     *                 ,AMPIZ,AMPI,AMRO,GAMRO,AMA1,GAMA1
tauola2.4.F:     *                 ,AMPIZ,AMPI,AMRO,GAMRO,AMA1,GAMA1
tauola2.4.F:      AMTAU  = 1.7842
tauola2.4.F:      AMNUTA = 0.01
tauola2.4.F:      AMEL   = 0.0005111
tauola2.4.F:      AMMU   = 0.105659
tauola2.4.F:      AMPIZ  = 0.134964
tauola2.4.F:      AMPI   = 0.139568
tauola2.4.F:      GAMRO  = 0.145
tauola2.4.F:      AMA1   = 1.251
tauola2.4.F:      GAMA1  = 0.599
tauola2.4.F:      AMKST  = 0.8921
tauola2.4.F:      GAMKST = 0.0513
tauola2.4.F:     *                 ,AMPIZ,AMPI,AMRO,GAMRO,AMA1,GAMA1
tauola2.4.F:     *                 ,AMPIZ,AMPI,AMRO,GAMRO,AMA1,GAMA1
tauola2.4.F:      DIMENSION XPB1(4),XPB2(4),AQF1(4),AQF2(4)
tauola2.4.F:      DO 4 K=1,3
tauola2.4.F:        XPB1(K)=0.0
tauola2.4.F:        AQF1(K)=0.0
tauola2.4.F:        AQF1(4)=AMTAU
tauola2.4.F:      CALL TRALO4x(1,AQF1,AQF1,AM)
tauola2.4.F:        KFB1= 11*IDFF/IABS(IDFF)
tauola2.4.F:        KFB2=-11*IDFF/IABS(IDFF)
tauola2.4.F:        XPB1(4)= AQF1(4)
tauola2.4.F:        XPB1(3)= AQF1(4)
tauola2.4.F:        IF(AQF1(3).NE.0.0)
tauola2.4.F:     $  XPB1(3)= AQF1(4)*AQF1(3)/ABS(AQF1(3))
tauola2.4.F:      CALL FILHEPx(  1,3, KFB1,0,0,0,0,XPB1, AMEL,.TRUE.)
tauola2.4.F:      CALL FILHEPx(NPA,1, IDFF,1,2,0,0,AQF1,AMTAU,.TRUE.)
tauola2.4.F:      CALL FILHEPx(NPB,1, -IDFF,1,2,0,0,AQF2,AMTAU,.TRUE.)
tauola2.4.F:c      CALL FILHEPx(1,1, -IDFF,0,0,0,0,AQF2,AMTAU,.TRUE.)
tauola2.4.F:      KK(3,1)=11
tauola2.4.F:     *                 ,AMPIZ,AMPI,AMRO,GAMRO,AMA1,GAMA1
tauola2.4.F:     *                 ,AMPIZ,AMPI,AMRO,GAMRO,AMA1,GAMA1
tauola2.4.F:C      R. Decker, Z. Phys C36 (1987) 487.
tauola2.4.F:     *                 ,AMPIZ,AMPI,AMRO,GAMRO,AMA1,GAMA1
tauola2.4.F:     *                 ,AMPIZ,AMPI,AMRO,GAMRO,AMA1,GAMA1
tauola2.4.F:      COMMON /TESTA1/ KEYA1
tauola2.4.F:      DATA ICONT /1/
tauola2.4.F:      BWIGN(XM,AM,GAMMA)=1./CMPLX(XM**2-AM**2,GAMMA*AM)
tauola2.4.F:      ELPHA=- 0.1
tauola2.4.F:      AMROP = 1.7
tauola2.4.F:      AROMEG= 1.0
tauola2.4.F:      GCOUP=12.924
tauola2.4.F:      FQED  =SQRT(4.0*3.1415926535/137.03604)
tauola2.4.F:      FUNCTION FORM1x(MNUM,QQ,S1,SDWA)
tauola2.4.F:C     formfactorfor F1 for 3 scalar final state
tauola2.4.F:C     R. Fisher, J. Wess and F. Wagner Z. Phys C3 (1980) 313
tauola2.4.F:C     The Benjamin/Cummings Pub. Co., Inc. 1984.
tauola2.4.F:      COMPLEX FORM1x,WIGNER,WIGFORx,FPIKMx,BWIGMx
tauola2.4.F:     *                 ,AMPIZ,AMPI,AMRO,GAMRO,AMA1,GAMA1
tauola2.4.F:     *                 ,AMPIZ,AMPI,AMRO,GAMRO,AMA1,GAMA1
tauola2.4.F:      WIGNER(A,B,C)= CMPLX(1.0,0.0)/CMPLX(A-B**2,B*C)
tauola2.4.F:C ------------  3 pi hadronic state (a1)
tauola2.4.F:       GAMAX=GAMA1*GFUNx(QQ)/GFUNx(AMA1**2)
tauola2.4.F:       FORM1x=AMA1**2*WIGNER(QQ,AMA1,GAMAX)*FPIKMx(SQRT(S1),AMPI,AMPI)
tauola2.4.F:      ELSEIF (MNUM.EQ.1) THEN
tauola2.4.F:       FORM1x=BWIGMx(S1,AMKST,GAMKST,AMPI,AMK)
tauola2.4.F:         GAMAX=GAMA1*GFUNx(QQ)/GFUNx(AMA1**2)
tauola2.4.F:       FORM1x=AMA1**2*WIGNER(QQ,AMA1,GAMAX)*FORM1x
tauola2.4.F:       FORM1x=BWIGMx(S1,AMKST,GAMKST,AMPI,AMK)
tauola2.4.F:         GAMAX=GAMA1*GFUNx(QQ)/GFUNx(AMA1**2)
tauola2.4.F:       FORM1x=AMA1**2*WIGNER(QQ,AMA1,GAMAX)*FORM1x
tauola2.4.F:       FORM1x=0.0
tauola2.4.F:         GAMAX=GAMA1*GFUNx(QQ)/GFUNx(AMA1**2)
tauola2.4.F:       FORM1x=AMA1**2*WIGNER(QQ,AMA1,GAMAX)*FORM1x
tauola2.4.F:       XM2=1.402
tauola2.4.F:       GAM2=0.174
tauola2.4.F:       FORM1x=BWIGMx(S1,AMKST,GAMKST,AMK,AMPI)
tauola2.4.F:       FORM1x=WIGFORx(QQ,XM2,GAM2)*FORM1x
tauola2.4.F:       XM2=1.402
tauola2.4.F:       GAM2=0.174
tauola2.4.F:       FORM1x=WIGFORx(QQ,XM2,GAM2)*FPIKMx(SQRT(S1),AMPI,AMPI)
tauola2.4.F:       FORM1x=0.0
tauola2.4.F:       FORM1x=0.0
tauola2.4.F:      FUNCTION FORM2x(MNUM,QQ,S1,SDWA)
tauola2.4.F:C     R. Fisher, J. Wess and F. Wagner Z. Phys C3 (1980) 313
tauola2.4.F:C     The Benjamin/Cummings Pub. Co., Inc. 1984.
tauola2.4.F:     *                 ,AMPIZ,AMPI,AMRO,GAMRO,AMA1,GAMA1
tauola2.4.F:     *                 ,AMPIZ,AMPI,AMRO,GAMRO,AMA1,GAMA1
tauola2.4.F:      WIGNER(A,B,C)= CMPLX(1.0,0.0)/CMPLX(A-B**2,B*C)
tauola2.4.F:C ------------  3 pi hadronic state (a1)
tauola2.4.F:       GAMAX=GAMA1*GFUNx(QQ)/GFUNx(AMA1**2)
tauola2.4.F:       FORM2x=AMA1**2*WIGNER(QQ,AMA1,GAMAX)*FPIKMx(SQRT(S1),AMPI,AMPI)
tauola2.4.F:      ELSEIF (MNUM.EQ.1) THEN
tauola2.4.F:         GAMAX=GAMA1*GFUNx(QQ)/GFUNx(AMA1**2)
tauola2.4.F:       FORM2x=AMA1**2*WIGNER(QQ,AMA1,GAMAX)*FPIKMx(SQRT(S1),AMPI,AMPI)
tauola2.4.F:         GAMAX=GAMA1*GFUNx(QQ)/GFUNx(AMA1**2)
tauola2.4.F:       FORM2x=AMA1**2*WIGNER(QQ,AMA1,GAMAX)*FPIKMx(SQRT(S1),AMPI,AMPI)
tauola2.4.F:         GAMAX=GAMA1*GFUNx(QQ)/GFUNx(AMA1**2)
tauola2.4.F:       FORM2x=AMA1**2*WIGNER(QQ,AMA1,GAMAX)*FPIKMx(SQRT(S1),AMPI,AMPI)
tauola2.4.F:       XM2=1.402
tauola2.4.F:       GAM2=0.174
tauola2.4.F:       FORM2x=BWIGMx(S1,AMKST,GAMKST,AMK,AMPI)
tauola2.4.F:       XM2=1.402
tauola2.4.F:       GAM2=0.174
tauola2.4.F:       FORM2x=BWIGMx(S1,AMKST,GAMKST,AMK,AMPI)
tauola2.4.F:       XM2=1.402
tauola2.4.F:       GAM2=0.174
tauola2.4.F:       FORM2x=WIGFORx(QQ,XM2,GAM2)*FPIKMx(SQRT(S1),AMPI,AMPI)
tauola2.4.F:      COMPLEX FUNCTION BWIGMx(S,M,G,XM1,XM2)
tauola2.4.F:      REAL S,M,G,XM1,XM2
tauola2.4.F:      INIT=1
tauola2.4.F:      PI=3.141592654
tauola2.4.F:       IF (S.GT.(XM1+XM2)**2) THEN
tauola2.4.F:         QS=SQRT(ABS((S   -(XM1+XM2)**2)*(S   -(XM1-XM2)**2)))/SQRT(S)
tauola2.4.F:         QM=SQRT(ABS((M**2-(XM1+XM2)**2)*(M**2-(XM1-XM2)**2)))/M
tauola2.4.F:      COMPLEX FUNCTION FPIKMx(W,XM1,XM2)
tauola2.4.F:      REAL ROM,ROG,ROM1,ROG1,BETA1,PI,PIM,S,W
tauola2.4.F:      INIT=1
tauola2.4.F:      PI=3.141592654
tauola2.4.F:      PIM=.140
tauola2.4.F:      ROG=0.145
tauola2.4.F:      ROM1=1.370
tauola2.4.F:      ROG1=0.510
tauola2.4.F:      BETA1=-0.145
tauola2.4.F:      FPIKMx=(BWIGMx(S,ROM,ROG,XM1,XM2)
tauola2.4.F:     &	+BETA1*BWIGMx(S,ROM1,ROG1,XM1,XM2))
tauola2.4.F:     & /(1+BETA1)
tauola2.4.F:      COMPLEX FUNCTION FPIKMDx(W,XM1,XM2)
tauola2.4.F:      REAL ROM,ROG,ROM1,ROG1,PI,PIM,S,W
tauola2.4.F:      INIT=1
tauola2.4.F:      PI=3.141592654
tauola2.4.F:      PIM=.140
tauola2.4.F:      ROG=0.145
tauola2.4.F:      ROM1=1.500
tauola2.4.F:      ROG1=0.220
tauola2.4.F:      ROM2=1.750
tauola2.4.F:      ROG2=0.120
tauola2.4.F:      FPIKMDx=(DELTA*BWIGMx(S,ROM,ROG,XM1,XM2)
tauola2.4.F:     $      +BETA*BWIGMx(S,ROM1,ROG1,XM1,XM2)
tauola2.4.F:     $      +     BWIGMx(S,ROM2,ROG2,XM1,XM2))
tauola2.4.F:     & /(1+BETA+DELTA)
tauola2.4.F:      FUNCTION FORM3x(MNUM,QQ,S1,SDWA)
tauola2.4.F:C     R. Fisher, J. Wess and F. Wagner Z. Phys C3 (1980) 313
tauola2.4.F:C     The Benjamin/Cummings Pub. Co., Inc. 1984.
tauola2.4.F:     *                 ,AMPIZ,AMPI,AMRO,GAMRO,AMA1,GAMA1
tauola2.4.F:     *                 ,AMPIZ,AMPI,AMRO,GAMRO,AMA1,GAMA1
tauola2.4.F:      FUNCTION FORM4x(MNUM,QQ,S1,S2,S3)
tauola2.4.F:     *                 ,AMPIZ,AMPI,AMRO,GAMRO,AMA1,GAMA1
tauola2.4.F:     *                 ,AMPIZ,AMPI,AMRO,GAMRO,AMA1,GAMA1
tauola2.4.F:      WIGNER(A,B,C)=CMPLX(1.0,0.0) /CMPLX(A-B**2,B*C)
tauola2.4.F:C ------------  3 pi hadronic state (a1)
tauola2.4.F:        G1=5.8
tauola2.4.F:        AMPIP=1.3
tauola2.4.F:        XM1=AMPIZ
tauola2.4.F:         IF (S.GT.(XM1+XM2)**2) THEN
tauola2.4.F:           QS=SQRT(ABS((S   -(XM1+XM2)**2)*(S   -(XM1-XM2)**2)))/SQRT(S)
tauola2.4.F:           QM=SQRT(ABS((M**2-(XM1+XM2)**2)*(M**2-(XM1-XM2)**2)))/M
tauola2.4.F:        FORM4x=G1*G2*FPIP/AMRO**4/AMPIP**2
tauola2.4.F:     $       *( S1*(S2-S3)*FPIKMx(SQRT(S1),AMPIZ,AMPIZ)
tauola2.4.F:     $         +S2*(S1-S3)*FPIKMx(SQRT(S2),AMPIZ,AMPIZ) )
tauola2.4.F:      ELSEIF (MNUM.EQ.1) THEN
tauola2.4.F:C ------------  3 pi hadronic state (a1)
tauola2.4.F:        G1=5.8
tauola2.4.F:        AMPIP=1.3
tauola2.4.F:        XM1=AMPIZ
tauola2.4.F:         IF (S.GT.(XM1+XM2)**2) THEN
tauola2.4.F:           QS=SQRT(ABS((S   -(XM1+XM2)**2)*(S   -(XM1-XM2)**2)))/SQRT(S)
tauola2.4.F:           QM=SQRT(ABS((M**2-(XM1+XM2)**2)*(M**2-(XM1-XM2)**2)))/M
tauola2.4.F:        FORM4x=G1*G2*FPIP/AMRO**4/AMPIP**2
tauola2.4.F:     $       *( S1*(S2-S3)*FPIKMx(SQRT(S1),AMPIZ,AMPIZ)
tauola2.4.F:     $         +S2*(S1-S3)*FPIKMx(SQRT(S2),AMPIZ,AMPIZ) )
tauola2.4.F:      FUNCTION FORM5x(MNUM,QQ,S1,S2)
tauola2.4.F:C     G. Kramer, W. Palmer, S. Pinsky, Phys. Rev. D30 (1984) 89.
tauola2.4.F:C     G. Kramer, W. Palmer             Z. Phys. C25 (1984) 195.
tauola2.4.F:     *                 ,AMPIZ,AMPI,AMRO,GAMRO,AMA1,GAMA1
tauola2.4.F:     *                 ,AMPIZ,AMPI,AMRO,GAMRO,AMA1,GAMA1
tauola2.4.F:      WIGNER(A,B,C)=CMPLX(1.0,0.0)/CMPLX(A-B**2,B*C)
tauola2.4.F:C ------------  3 pi hadronic state (a1)
tauola2.4.F:      ELSEIF (MNUM.EQ.1) THEN
tauola2.4.F:         FORM5x=FPIKMDx(SQRT(QQ),AMPI,AMPI)/(1+ELPHA)
tauola2.4.F:     $          +ELPHA*BWIGMx(S1,AMKST,GAMKST,AMPI,AMK))
tauola2.4.F:         FORM5x=FPIKMDx(SQRT(QQ),AMPI,AMPI)/(1+ELPHA)
tauola2.4.F:     $          +ELPHA*BWIGMx(S1,AMKST,GAMKST,AMPI,AMK))
tauola2.4.F:        FORM5x=BWIGMx(QQ,AMKST,GAMKST,AMPI,AMK)/(1+ELPHA)
tauola2.4.F:     $       *(       FPIKMx(SQRT(S1),AMPI,AMPI)
tauola2.4.F:        FORM5x=BWIGMx(QQ,AMKST,GAMKST,AMPI,AMKZ)/(1+ELPHA)
tauola2.4.F:     $         +ELPHA*BWIGMx(S1,AMKST,GAMKST,AMPI,AMK))
tauola2.4.F:       FORM5x=FPIKMDx(SQRT(QQ),AMPI,AMPI)*FPIKMx(SQRT(S1),AMPI,AMPI)
tauola2.4.F:      SUBROUTINE CURRx(MNUM,PIM1,PIM2,PIM3,PIM4,HADCUR)
tauola2.4.F:C     R. Fisher, J. Wess and F. Wagner Z. Phys C3 (1980) 313
tauola2.4.F:C     R. Decker Z. Phys C36 (1987) 487.
tauola2.4.F:C     M. Gell-Mann, D. Sharp, W. Wagner Phys. Rev. Lett 8 (1962) 261.
tauola2.4.F:     *                 ,AMPIZ,AMPI,AMRO,GAMRO,AMA1,GAMA1
tauola2.4.F:     *                 ,AMPIZ,AMPI,AMRO,GAMRO,AMA1,GAMA1
tauola2.4.F:      REAL  PIM1(4),PIM2(4),PIM3(4),PIM4(4),PAA(4)
tauola2.4.F:      COMPLEX HADCUR(4),FORM1x,FORM2x,FORM3x,FPIKMx
tauola2.4.F:      DATA PI /3.141592653589793238462643/
tauola2.4.F:      BWIGN(A,XM,XG)=1.0/CMPLX(A-XM**2,XM*XG)
tauola2.4.F:      G1=12.924
tauola2.4.F:      G2=1475.98
tauola2.4.F:      G =G1*G2
tauola2.4.F:      ELPHA=-.1
tauola2.4.F:      AMROP=1.7
tauola2.4.F:      ARFLAT=1.0
tauola2.4.F:      AROMEG=1.0
tauola2.4.F:      COEF1=2.0*SQRT(3.0)/FPI**2*ARFLAT
tauola2.4.F:      DO 7 K=1,4
tauola2.4.F:      DO 8 L=1,4
tauola2.4.F:      PAA(K)=PIM1(K)+PIM2(K)+PIM3(K)+PIM4(K)
tauola2.4.F:      PP(1,K)=PIM1(K)
tauola2.4.F:      IF (MNUM.EQ.1) THEN
tauola2.4.F:       QQ=PAA(4)**2-PAA(3)**2-PAA(2)**2-PAA(1)**2
tauola2.4.F:       DO 201 K=1,3
tauola2.4.F:     $    -(PP(K,2)+PIM4(2))**2-(PP(K,1)+PIM4(1))**2
tauola2.4.F:        DO 202 I=1,4
tauola2.4.F:         DO 203 J=1,4
tauola2.4.F: 202    AA(I,I)=1.0
tauola2.4.F:        DO 204 L=1,3
tauola2.4.F:     $         -(PAA(2)-PP(L,2))**2-(PAA(1)-PP(L,1))**2
tauola2.4.F:          DO 205 I=1,4
tauola2.4.F:          DO 205 J=1,4
tauola2.4.F:                      SIG= 1.0
tauola2.4.F:       FORM1x= FPIKMx(SQRT(SK),AMPI,AMPI) *FPIKMx(SQRT(QQ),AMPI,AMPI)
tauola2.4.F:C       FORM1x= FPIKMx(SQRT(SK),AMPI,AMPI) *FPIKMDx(SQRT(QQ),AMPI,AMPI)
tauola2.4.F:CCCCCCCCCCCCCCCCC       FORM1x=WIGFORx(SK,AMRO,GAMRO)      (tests)
tauola2.4.F:       FIX=1.0
tauola2.4.F:       DO 206 I=1,4
tauola2.4.F:       DO 206 J=1,4
tauola2.4.F:     $  HADCUR(I)+CMPLX(FIX*COEF1)*FORM1x*AA(I,J)*(PP(K,J)-PP(4,J))
tauola2.4.F: 201   CONTINUE
tauola2.4.F:       DO 301 KK=1,2
tauola2.4.F:        DO 302 I=1,4
tauola2.4.F:         QP1P2=0.0
tauola2.4.F:         QP1P3=0.0
tauola2.4.F:         QP1P4=0.0
tauola2.4.F:         P1P2 =0.0
tauola2.4.F:         P1P3 =0.0
tauola2.4.F:         P1P4 =0.0
tauola2.4.F:        DO 303 K=1,4
tauola2.4.F:                     SIGN=-1.0
tauola2.4.F:         IF (K.EQ.4) SIGN= 1.0
tauola2.4.F:         QP1P2=QP1P2+SIGN*(PAA(K)-PA(K))*PB(K)
tauola2.4.F:         QP1P3=QP1P3+SIGN*(PAA(K)-PA(K))*PIM3(K)
tauola2.4.F:         QP1P4=QP1P4+SIGN*(PAA(K)-PA(K))*PIM4(K)
tauola2.4.F:         P1P2=P1P2+SIGN*PA(K)*PB(K)
tauola2.4.F:         P1P3=P1P3+SIGN*PA(K)*PIM3(K)
tauola2.4.F:         P1P4=P1P4+SIGN*PA(K)*PIM4(K)
tauola2.4.F:        DO 304 K=1,4
tauola2.4.F:     $             PB  (K)*(QP1P3*P1P4-QP1P4*P1P3)
tauola2.4.F:     $            +PIM3(K)*(QP1P4*P1P2-QP1P2*P1P4)
tauola2.4.F:     $            +PIM4(K)*(QP1P2*P1P3-QP1P3*P1P2) )
tauola2.4.F: 301   CONTINUE
tauola2.4.F:       QQ=PAA(4)**2-PAA(3)**2-PAA(2)**2-PAA(1)**2
tauola2.4.F:       DO 101 K=1,3
tauola2.4.F:     $    -(PP(K,2)+PIM4(2))**2-(PP(K,1)+PIM4(1))**2
tauola2.4.F:        DO 102 I=1,4
tauola2.4.F:         DO 103 J=1,4
tauola2.4.F: 103     AA(I,J)=0.0
tauola2.4.F: 102    AA(I,I)=1.0
tauola2.4.F:        DO 104 L=1,3
tauola2.4.F:     $         -(PAA(2)-PP(L,2))**2-(PAA(1)-PP(L,1))**2
tauola2.4.F:          DO 105 I=1,4
tauola2.4.F:          DO 105 J=1,4
tauola2.4.F:                      SIG=1.0
tauola2.4.F: 105      CONTINUE
tauola2.4.F: 104    CONTINUE
tauola2.4.F:       FORM1x= FPIKMx(SQRT(SK),AMPI,AMPI) *FPIKMx(SQRT(QQ),AMPI,AMPI)
tauola2.4.F:C       FORM1x= FPIKMx(SQRT(SK),AMPI,AMPI) *FPIKMDx(SQRT(QQ),AMPI,AMPI)
tauola2.4.F:CCCCCCCCCCCCC       FORM1x=WIGFORx(SK,AMRO,GAMRO)        (tests)
tauola2.4.F:        DO 106 I=1,4
tauola2.4.F:        DO 106 J=1,4
tauola2.4.F:     $   HADCUR(I)+CMPLX(COEF1)*FORM1x*AA(I,J)*(PP(K,J)-PP(4,J))
tauola2.4.F: 106    CONTINUE
tauola2.4.F: 101   CONTINUE
tauola2.4.F:C           **************NOVEMBER 1992******************              *
tauola2.4.F:C           *** PREPRINT CERN-TH-5856 SEPTEMBER 1990 ****              *
tauola2.4.F:C           *** PREPRINT CERN-TH-6195 OCTOBER   1991 ****              *
tauola2.4.F:C           *** PREPRINT CERN-TH-6793 NOVEMBER  1992 ****              *
tauola2.4.F:C JAK=1 ELECTRON MODE
tauola2.4.F:C JAK=5 A1   MODE
tauola2.4.F:      CALL RANMAR(RRR,1)
tauola2.4.F:      DO 20 I=1,NCHAN
tauola2.4.F:      DO 25 I=NCHAN,1,-1
tauola2.4.F:C VOL. 36 (1985) 191, SEE COMMENTS  ON GENERAL PHILOSOPHY THERE.
tauola2.4.F:C KTO=1,11 DENOTES TAU+ AND KTO=2,12 TAU-
tauola2.4.F:C DEKAYx(1,H) AND DEKAYx(2,H) IS CALLED INTERNALLY BY MC GENERATOR.
tauola2.4.F:C USER MAY OPTIONALLY CALL DEKAYx(11,H) DEKAYx(12,H) IN ORDER
tauola2.4.F:C KTO=100, PRINT FINAL REPORT  (OPTIONAL).
tauola2.4.F:C JAK=1 ELECTRON DECAY
tauola2.4.F:C JAK=5 A1  DECAY
tauola2.4.F:C JAK=0 INCLUSIVE:  JAK=1,2,3,4,5,6,7,8
tauola2.4.F:      COMMON / JAKI   /  JAK1,JAK2,JAKP,JAKM,KTOM
tauola2.4.F:      REAL  PDUM1(4),PDUM2(4),PDUM3(4),PDUM4(4),PDUM5(4),HDUM(4)
tauola2.4.F:      IF(KTO.EQ.-1) THEN
tauola2.4.F:        KTOM=1
tauola2.4.F:        IF (IWARM.EQ.1) X=5/(IWARM-1)
tauola2.4.F:        IWARM=1
tauola2.4.F:        WRITE(*,7001) JAK1,JAK2
tauola2.4.F:        NEV1=0
tauola2.4.F:        IF(JAK1.NE.-1.OR.JAK2.NE.-1) THEN
tauola2.4.F:          CALL DADMELx(-1,IDUM,HDUM,PDUM1,PDUM2,PDUM3,PDUM4,PDUM5)
tauola2.4.F:          CALL DADMMUx(-1,IDUM,HDUM,PDUM1,PDUM2,PDUM3,PDUM4,PDUM5)
tauola2.4.F:          CALL DADMPIx(-1,IDUM,PDUM,PDUM1,PDUM2)
tauola2.4.F:          CALL DADMROx(-1,IDUM,HDUM,PDUM1,PDUM2,PDUM3,PDUM4)
tauola2.4.F:          CALL DADMAAx(-1,IDUM,HDUM,PDUM1,PDUM2,PDUM3,PDUM4,PDUM5,JDUM)
tauola2.4.F:          CALL DADMKKx(-1,IDUM,PDUM,PDUM1,PDUM2)
tauola2.4.F:          CALL DADMKSx(-1,IDUM,HDUM,PDUM1,PDUM2,PDUM3,PDUM4,JDUM)
tauola2.4.F:          CALL DAD4PIx(-1,IDUM,HDUM,PDUM1,PDUM2,PDUMX,JDUM)
tauola2.4.F:          CALL DADNPIx(-1,IDUM,     PDUM1,PDUM2,PDUMX,JDUM)
tauola2.4.F:          CALL DADMPKx(-1,IDUM,HDUM,PDUM1,PDUM2,PDUM3,PDUM4,PDUM5,JDUM)
tauola2.4.F:      ELSEIF(KTO.EQ.1) THEN
tauola2.4.F:        NEVTOT=NEVTOT+1
tauola2.4.F:        CALL DEKAY1x(0,H,ISGN)
tauola2.4.F:        NEVTOT=NEVTOT+1
tauola2.4.F:      ELSEIF(KTO.EQ.11) THEN
tauola2.4.F:        NEV1=NEV1+1
tauola2.4.F:        CALL DEKAY1x(1,H,ISGN)
tauola2.4.F:      ELSEIF(KTO.EQ.12) THEN
tauola2.4.F:        NEV2=NEV2+1
tauola2.4.F:        CALL DEKAY2x(1,H,ISGN)
tauola2.4.F:      ELSEIF(KTO.EQ.100) THEN
tauola2.4.F:        IF(JAK1.NE.-1.OR.JAK2.NE.-1) THEN
tauola2.4.F:          CALL DADMELx( 1,IDUM,HDUM,PDUM1,PDUM2,PDUM3,PDUM4,PDUM5)
tauola2.4.F:          CALL DADMMUx( 1,IDUM,HDUM,PDUM1,PDUM2,PDUM3,PDUM4,PDUM5)
tauola2.4.F:          CALL DADMPIx( 1,IDUM,PDUM,PDUM1,PDUM2)
tauola2.4.F:          CALL DADMROx( 1,IDUM,HDUM,PDUM1,PDUM2,PDUM3,PDUM4)
tauola2.4.F:          CALL DADMAAx( 1,IDUM,HDUM,PDUM1,PDUM2,PDUM3,PDUM4,PDUM5,JDUM)
tauola2.4.F:          CALL DADMKKx( 1,IDUM,PDUM,PDUM1,PDUM2)
tauola2.4.F:          CALL DADMKSx( 1,IDUM,HDUM,PDUM1,PDUM2,PDUM3,PDUM4,JDUM)
tauola2.4.F:          CALL DAD4PIx( 1,IDUM,HDUM,PDUM1,PDUM2,PDUMX,JDUM)
tauola2.4.F:          CALL DADNPIx( 1,IDUM,     PDUM1,PDUM2,PDUMX,JDUM)
tauola2.4.F:          CALL DADMPKx( 1,IDUM,HDUM,PDUM1,PDUM2,PDUM3,PDUM4,PDUM5,JDUM)
tauola2.4.F:          WRITE(*,7010) NEV1,NEV2,NEVTOT
tauola2.4.F:          WRITE(*,7011) (NEVDEC(I),GAMPMC(I),GAMPER(I),I= 1,11)
tauola2.4.F:          WRITE(*,7012) (NEVDEC(I),GAMPMC(I),GAMPER(I),I=12,19)
tauola2.4.F:        GOTO 910
tauola2.4.F:        DO 78 K=1,4
tauola2.4.F: 7001 FORMAT(///1X,15(5H*****)
tauola2.4.F:     $ /,' *',     25X,'*****TAUOLA LIBRARY: VERSION 2.4 ******',9X,1H*,
tauola2.4.F:     $ /,' *',     25X,'***********NOVEMBER 1992***************',9X,1H*,
tauola2.4.F:     $ /,' *',     25X,'**AUTHORS: S.JADACH, Z.WAS*************',9X,1H*,
tauola2.4.F:     $ /,' *',     25X,'**R. DECKER, M. JEZABEK, J.H.KUEHN*****',9X,1H*,
tauola2.4.F:     $ /,' *',     25X,'**AVAILABLE FROM: WASM AT CERNVM ******',9X,1H*,
tauola2.4.F:     $ /,' *',     25X,'***** PUBLISHED IN COMP. PHYS. COMM.***',9X,1H*,
tauola2.4.F:     $ /,' *',     25X,'*******CERN-TH-5856 SEPTEMBER 1990*****',9X,1H*,
tauola2.4.F:     $ /,' *',     25X,'*******CERN-TH-6195 SEPTEMBER 1991*****',9X,1H*,
tauola2.4.F:     $ /,' *',     25X,'*******CERN-TH-6793 NOVEMBER  1992*****',9X,1H*,
tauola2.4.F:     $ /,' *',     25X,'****DEKAY ROUTINE: INITIALIZATION******',9X,1H*,
tauola2.4.F:     $ /,' *',I20  ,5X,'JAK1   = DECAY MODE TAU+               ',9X,1H*,
tauola2.4.F:     $ /,' *',I20  ,5X,'JAK2   = DECAY MODE TAU-               ',9X,1H*,
tauola2.4.F:     $  /,1X,15(5H*****)/)
tauola2.4.F: 7010 FORMAT(///1X,15(5H*****)
tauola2.4.F:     $ /,' *',     25X,'*****TAUOLA LIBRARY: VERSION 2.4 ******',9X,1H*,
tauola2.4.F:     $ /,' *',     25X,'***********NOVEMBER 1992***************',9X,1H*,
tauola2.4.F:     $ /,' *',     25X,'**AUTHORS: S.JADACH, Z.WAS*************',9X,1H*,
tauola2.4.F:     $ /,' *',     25X,'**R. DECKER, M. JEZABEK, J.H.KUEHN*****',9X,1H*,
tauola2.4.F:     $ /,' *',     25X,'**AVAILABLE FROM: WASM AT CERNVM ******',9X,1H*,
tauola2.4.F:     $ /,' *',     25X,'***** PUBLISHED IN COMP. PHYS. COMM.***',9X,1H*,
tauola2.4.F:     $ /,' *',     25X,'*******CERN-TH-5856 SEPTEMBER 1990*****',9X,1H*,
tauola2.4.F:     $ /,' *',     25X,'*******CERN-TH-6195 SEPTEMBER 1991*****',9X,1H*,
tauola2.4.F:     $ /,' *',     25X,'*******CERN TH-6793 NOVEMBER  1992*****',9X,1H*,
tauola2.4.F:     $ /,' *',     25X,'*****DEKAY ROUTINE: FINAL REPORT*******',9X,1H*,
tauola2.4.F:     $ /,' *',I20  ,5X,'NEV1   = NO. OF TAU+ DECS. ACCEPTED    ',9X,1H*,
tauola2.4.F:     $ /,' *',I20  ,5X,'NEV2   = NO. OF TAU- DECS. ACCEPTED    ',9X,1H*,
tauola2.4.F:     $ /,' *',I20  ,5X,'NEVTOT = SUM                           ',9X,1H*,
tauola2.4.F:     $   ' PART.WIDTH     ERROR       ROUTINE    DECAY MODE    ',9X,1H*)
tauola2.4.F: 7011 FORMAT(1X,'*'
tauola2.4.F:     $       ,I10,2F12.7       ,'     DADMEL     ELECTRON      ',9X,1H*
tauola2.4.F:     $ /,' *',I10,2F12.7       ,'     DADMMU     MUON          ',9X,1H*
tauola2.4.F:     $ /,' *',I10,2F12.7       ,'     DADMPIx     PION          ',9X,1H*
tauola2.4.F:     $ /,' *',I10,2F12.7,       '     DADMROx     RHO (->2PI)   ',9X,1H*
tauola2.4.F:     $ /,' *',I10,2F12.7,       '     DADMAAx     A1  (->3PI)   ',9X,1H*
tauola2.4.F:     $ /,' *',I10,2F12.7,       '     DADMKKx     KAON          ',9X,1H*
tauola2.4.F:     $ /,' *',I10,2F12.7,       '     DADMKSx     K*            ',9X,1H*
tauola2.4.F:     $ /,' *',I10,2F12.7,       '     DAD4PIx     PI- 2PI+ PI0  ',9X,1H*
tauola2.4.F:     $ /,' *',I10,2F12.7,       '     DAD4PIx     PI- 3PI0      ',9X,1H*
tauola2.4.F:     $ /,' *',I10,2F12.7,       '     DADNPIx     3PI- 2PI+     ',9X,1H*
tauola2.4.F:     $ /,' *',I10,2F12.7,      '     DADNPIx     3PI- 2PI+ PI0 ',9X,1H*)
tauola2.4.F: 7012 FORMAT(1X,'*'
tauola2.4.F:     $       ,I10,2F12.7,       '     DADMPKx     K+ K- PI+     ',9X,1H*
tauola2.4.F:     $ /,' *',I10,2F12.7,       '     DADMPKx     K0B K0 PI+    ',9X,1H*
tauola2.4.F:     $ /,' *',I10,2F12.7,       '     DADMPKx     K+ K0B PI0    ',9X,1H*
tauola2.4.F:     $ /,' *',I10,2F12.7,       '     DADMPKx     K+ PI0 PI0    ',9X,1H*
tauola2.4.F:     $ /,' *',I10,2F12.7,       '     DADMPKx     K+ PI- PI+    ',9X,1H*
tauola2.4.F:     $ /,' *',I10,2F12.7,       '     DADMPKx     K0 PI0 PI+    ',9X,1H*
tauola2.4.F:     $ /,' *',I10,2F12.7,       '     DADMPKx     ET PI- PI0    ',9X,1H*
tauola2.4.F:     $ /,' *',I10,2F12.7,       '     DADMPKx     PI-PI0 GAM    ',9X,1H*
tauola2.4.F:     $ /,' *',20X,'THE ERROR IS RELATIVE AND  PART.WIDTH      ',10X,1H*
tauola2.4.F:     $ /,' *',20X,'IN UNITS GFERMI**2*MASS**5/192/PI**3       ',10X,1H*
tauola2.4.F:     $  /,1X,15(5H*****)/)
tauola2.4.F: 910  PRINT 9100
tauola2.4.F: 9100 FORMAT(' ----- DEKAY: WRONG VALUE OF KTO ')
tauola2.4.F:      SUBROUTINE DEKAY1x(IMOD,HH,ISGN)
tauola2.4.F:      COMMON / DECP4 / PP1(4),PP2(4),KF1,KF2
tauola2.4.F:      COMMON / JAKI   /  JAK1,JAK2,JAKP,JAKM,KTOM
tauola2.4.F:      REAL  PAA(4),PIM1(4),PIM2(4),PIPL(4)
tauola2.4.F:      DATA NEV,NPRIN/0,10/
tauola2.4.F:      KTO=1
tauola2.4.F:      IF(JAK1.EQ.-1) RETURN
tauola2.4.F:      JAK=JAK1
tauola2.4.F:      IF(JAK1.EQ.0) CALL JAKERx(JAK)
tauola2.4.F:      IF(JAK.EQ.1) THEN
tauola2.4.F:        CALL DADMAAx(0, ISGN,HV,PNU,PAA,PIM1,PIM2,PIPL,JAA)
tauola2.4.F:      ELSEIF(JAK.GT.9.AND.JAK.LE.11) THEN
tauola2.4.F:      DO 32 I=1,3
tauola2.4.F:      ELSEIF(JAK.GE.12.AND.JAK.LE.19) THEN
tauola2.4.F:        JAA=JAK-11
tauola2.4.F:        CALL DADMPKx(0, ISGN,HV,PNU,PAA,PIM1,PIM2,PIPL,JAA)
tauola2.4.F:      DO 33 I=1,3
tauola2.4.F:      HH(4)=1.0
tauola2.4.F:      ELSEIF(IMD.EQ.1) THEN
tauola2.4.F:      NEV=NEV+1
tauola2.4.F:           NEVDEC(JAK)=NEVDEC(JAK)+1
tauola2.4.F:      DO 34 I=1,4
tauola2.4.F:      IF(JAK.EQ.1) THEN
tauola2.4.F:        CALL DWLUELx(1,ISGN,PNU,PWB,PMU,PNM)
tauola2.4.F:        DO 10 I=1,4
tauola2.4.F: 10     PP1(I)=PMU(I)
tauola2.4.F:        CALL DWLUMUx(1,ISGN,PNU,PWB,PMU,PNM)
tauola2.4.F:        DO 20 I=1,4
tauola2.4.F: 20     PP1(I)=PMU(I)
tauola2.4.F:        CALL DWLUPIx(1,ISGN,PPI,PNU)
tauola2.4.F:        DO 30 I=1,4
tauola2.4.F: 30     PP1(I)=PPI(I)
tauola2.4.F:        CALL DWLUROx(1,ISGN,PNU,PRHO,PIC,PIZ)
tauola2.4.F:        DO 40 I=1,4
tauola2.4.F: 40     PP1(I)=PRHO(I)
tauola2.4.F:        CALL DWLUAAx(1,ISGN,PNU,PAA,PIM1,PIM2,PIPL,JAA)
tauola2.4.F:        DO 50 I=1,4
tauola2.4.F: 50     PP1(I)=PAA(I)
tauola2.4.F:        CALL DWLUKKx(1,ISGN,PKK,PNU)
tauola2.4.F:        DO 60 I=1,4
tauola2.4.F: 60     PP1(I)=PKK(I)
tauola2.4.F:        CALL DWLUKSx(1,ISGN,PNU,PKS,PKK,PPI,JKST)
tauola2.4.F:        DO 70 I=1,4
tauola2.4.F: 70     PP1(I)=PKS(I)
tauola2.4.F:      ELSEIF(JAK.GE.8.AND.JAK.LE.11) THEN
tauola2.4.F:        CALL DWLNPIx(1,ISGN,PNU,PWB,PNPI,JNPI)
tauola2.4.F:        DO 80 I=1,4
tauola2.4.F: 80     PP1(I)=PWB(I)
tauola2.4.F:      ELSEIF(JAK.GE.12.AND.JAK.LE.19) THEN
tauola2.4.F:        JAA=JAK-11
tauola2.4.F:        CALL DWLUPKx(1,ISGN,PNU,PAA,PIM1,PIM2,PIPL,JAA)
tauola2.4.F:        DO 90 I=1,4
tauola2.4.F: 90     PP1(I)=PAA(I)
tauola2.4.F: 9020 FORMAT(' ----- DEKAY1: WRONG JAK')
tauola2.4.F:      COMMON / DECP4 / PP1(4),PP2(4),KF1,KF2
tauola2.4.F:      COMMON / JAKI   /  JAK1,JAK2,JAKP,JAKM,KTOM
tauola2.4.F:      REAL  PAA(4),PIM1(4),PIM2(4),PIPL(4)
tauola2.4.F:      DATA NEV,NPRIN/0,10/
tauola2.4.F:      IF(JAK2.EQ.-1) RETURN
tauola2.4.F:      IF(JAK.EQ.1) THEN
tauola2.4.F:        CALL DADMAAx(0, ISGN,HV,PNU,PAA,PIM1,PIM2,PIPL,JAA)
tauola2.4.F:      ELSEIF(JAK.GT.9.AND.JAK.LE.11) THEN
tauola2.4.F:      DO 32 I=1,3
tauola2.4.F:      ELSEIF(JAK.GE.12.AND.JAK.LE.19) THEN
tauola2.4.F:        JAA=JAK-11
tauola2.4.F:        CALL DADMPKx(0, ISGN,HV,PNU,PAA,PIM1,PIM2,PIPL,JAA)
tauola2.4.F:      DO 33 I=1,3
tauola2.4.F:      HH(4)=1.0
tauola2.4.F:      ELSEIF(IMD.EQ.1) THEN
tauola2.4.F:      NEV=NEV+1
tauola2.4.F:           NEVDEC(JAK)=NEVDEC(JAK)+1
tauola2.4.F:      DO 34 I=1,4
tauola2.4.F:      IF(JAK.EQ.1) THEN
tauola2.4.F:        DO 10 I=1,4
tauola2.4.F: 10     PP2(I)=PMU(I)
tauola2.4.F:        DO 20 I=1,4
tauola2.4.F:        DO 30 I=1,4
tauola2.4.F:        DO 40 I=1,4
tauola2.4.F:        CALL DWLUAAx(2,ISGN,PNU,PAA,PIM1,PIM2,PIPL,JAA)
tauola2.4.F:        DO 50 I=1,4
tauola2.4.F:        DO 60 I=1,4
tauola2.4.F: 60     PP1(I)=PKK(I)
tauola2.4.F:        DO 70 I=1,4
tauola2.4.F: 70     PP1(I)=PKS(I)
tauola2.4.F:      ELSEIF(JAK.GE.8.AND.JAK.LE.11) THEN
tauola2.4.F:        DO 80 I=1,4
tauola2.4.F: 80     PP1(I)=PWB(I)
tauola2.4.F:      ELSEIF(JAK.GE.12.AND.JAK.LE.19) THEN
tauola2.4.F:        JAA=JAK-11
tauola2.4.F:        CALL DWLUPKx(2,ISGN,PNU,PAA,PIM1,PIM2,PIPL,JAA)
tauola2.4.F:        DO 90 I=1,4
tauola2.4.F:C KTO=1 DENOTES TAU+ AND KTO=2 TAU-
tauola2.4.F:C DEXAYx(1,POL) AND DEXAYx(2,POL) ARE CALLED INTERNALLY BY MC GENERATOR.
tauola2.4.F:C KTO=100, PRINT FINAL REPORT (OPTIONAL).
tauola2.4.F:      COMMON / JAKI   /  JAK1,JAK2,JAKP,JAKM,KTOM
tauola2.4.F:      REAL  PDUM1(4),PDUM2(4),PDUM3(4),PDUM4(4),PDUM5(4)
tauola2.4.F:      IF(KTO.EQ.-1) THEN
tauola2.4.F:        IWARM=1
tauola2.4.F:        WRITE(*, 7001) JAK1,JAK2
tauola2.4.F:        NEV1=0
tauola2.4.F:        IF(JAK1.NE.-1.OR.JAK2.NE.-1) THEN
tauola2.4.F:          CALL DEXELx(-1,IDUM,PDUM,PDUM1,PDUM2,PDUM3,PDUM4,PDUM5)
tauola2.4.F:          CALL DEXMUx(-1,IDUM,PDUM,PDUM1,PDUM2,PDUM3,PDUM4,PDUM5)
tauola2.4.F:          CALL DEXPIx(-1,IDUM,PDUM,PDUM1,PDUM2)
tauola2.4.F:          CALL DEXROx(-1,IDUM,PDUM,PDUM1,PDUM2,PDUM3,PDUM4)
tauola2.4.F:          CALL DEXAAx(-1,IDUM,PDUM,PDUM1,PDUM2,PDUM3,PDUM4,PDUM5,IDUM)
tauola2.4.F:          CALL DEXKKx(-1,IDUM,PDUM,PDUM1,PDUM2)
tauola2.4.F:          CALL DEXKSx(-1,IDUM,PDUM,PDUM1,PDUM2,PDUM3,PDUM4,IDUM)
tauola2.4.F:          CALL DEX4PIx(-1,IDUM,PDUM,PDUM1,PDUM2,PDUMI,IDUM)
tauola2.4.F:          CALL DEXNPIx(-1,IDUM,PDUM,PDUM1,PDUMI,IDUM)
tauola2.4.F:          CALL DEXPKx(-1,IDUM,PDUM,PDUM1,PDUM2,PDUM3,PDUM4,PDUM5,IDUM)
tauola2.4.F:        DO 21 I=1,30
tauola2.4.F: 21     GAMPER(I)=0
tauola2.4.F:      ELSEIF(KTO.EQ.1) THEN
tauola2.4.F:        NEVTOT=NEVTOT+1
tauola2.4.F:        NEV1=NEV1+1
tauola2.4.F:CAM     CALL DEXAY1x(POL,ISGN)
tauola2.4.F:        CALL DEXAY1x(KTO,JAK1,JAKP,POL,ISGN)
tauola2.4.F:        NEVTOT=NEVTOT+1
tauola2.4.F:        NEV2=NEV2+1
tauola2.4.F:        CALL DEXAY1x(KTO,JAK2,JAKM,POL,ISGN)
tauola2.4.F:      ELSEIF(KTO.EQ.100) THEN
tauola2.4.F:        IF(JAK1.NE.-1.OR.JAK2.NE.-1) THEN
tauola2.4.F:          CALL DEXELx( 1,IDUM,PDUM,PDUM1,PDUM2,PDUM3,PDUM4,PDUM5)
tauola2.4.F:          CALL DEXMUx( 1,IDUM,PDUM,PDUM1,PDUM2,PDUM3,PDUM4,PDUM5)
tauola2.4.F:          CALL DEXPIx( 1,IDUM,PDUM,PDUM1,PDUM2)
tauola2.4.F:          CALL DEXROx( 1,IDUM,PDUM,PDUM1,PDUM2,PDUM3,PDUM4)
tauola2.4.F:          CALL DEXAAx( 1,IDUM,PDUM,PDUM1,PDUM2,PDUM3,PDUM4,PDUM5,IDUM)
tauola2.4.F:          CALL DEXKKx( 1,IDUM,PDUM,PDUM1,PDUM2)
tauola2.4.F:          CALL DEXKSx( 1,IDUM,PDUM,PDUM1,PDUM2,PDUM3,PDUM4,IDUM)
tauola2.4.F:          CALL DEX4PIx( 1,IDUM,PDUM,PDUM1,PDUM2,PDUMI,IDUM)
tauola2.4.F:          CALL DEXNPIx( 1,IDUM,PDUM,PDUM,PDUMI,IDUM)
tauola2.4.F:          CALL DEXPKx( 1,IDUM,PDUM,PDUM1,PDUM2,PDUM3,PDUM4,PDUM5,IDUM)
tauola2.4.F:          WRITE(*,7010) NEV1,NEV2,NEVTOT
tauola2.4.F:          WRITE(*,7011) (NEVDEC(I),GAMPMC(I),GAMPER(I),I= 1,11)
tauola2.4.F:          WRITE(*,7012) (NEVDEC(I),GAMPMC(I),GAMPER(I),I=12,19)
tauola2.4.F:        GOTO 910
tauola2.4.F: 7001 FORMAT(///1X,15(5H*****)
tauola2.4.F:     $ /,' *',     25X,'*****TAUOLA LIBRARY: VERSION 2.4 ******',9X,1H*,
tauola2.4.F:     $ /,' *',     25X,'***********NOVEMBER 1992***************',9X,1H*,
tauola2.4.F:     $ /,' *',     25X,'**AUTHORS: S.JADACH, Z.WAS*************',9X,1H*,
tauola2.4.F:     $ /,' *',     25X,'**R. DECKER, M. JEZABEK, J.H.KUEHN*****',9X,1H*,
tauola2.4.F:     $ /,' *',     25X,'**AVAILABLE FROM: WASM AT CERNVM ******',9X,1H*,
tauola2.4.F:     $ /,' *',     25X,'***** PUBLISHED IN COMP. PHYS. COMM.***',9X,1H*,
tauola2.4.F:     $ /,' *',     25X,'*******CERN-TH-5856 SEPTEMBER 1990*****',9X,1H*,
tauola2.4.F:     $ /,' *',     25X,'*******CERN-TH-6195 SEPTEMBER 1991*****',9X,1H*,
tauola2.4.F:     $ /,' *',     25X,'*******CERN-TH-6793 NOVEMBER  1992*****',9X,1H*,
tauola2.4.F:     $ /,' *',     25X,'******DEXAY ROUTINE: INITIALIZATION****',9X,1H*
tauola2.4.F:     $ /,' *',I20  ,5X,'JAK1   = DECAY MODE FERMION1 (TAU+)    ',9X,1H*
tauola2.4.F:     $ /,' *',I20  ,5X,'JAK2   = DECAY MODE FERMION2 (TAU-)    ',9X,1H*
tauola2.4.F:     $  /,1X,15(5H*****)/)
tauola2.4.F:CHBU  format 7010 had more than 19 continuation lines
tauola2.4.F: 7010 FORMAT(///1X,15(5H*****)
tauola2.4.F:     $ /,' *',     25X,'*****TAUOLA LIBRARY: VERSION 2.4 ******',9X,1H*,
tauola2.4.F:     $ /,' *',     25X,'***********NOVEMBER 1992***************',9X,1H*,
tauola2.4.F:     $ /,' *',     25X,'**AUTHORS: S.JADACH, Z.WAS*************',9X,1H*,
tauola2.4.F:     $ /,' *',     25X,'**R. DECKER, M. JEZABEK, J.H.KUEHN*****',9X,1H*,
tauola2.4.F:     $ /,' *',     25X,'**AVAILABLE FROM: WASM AT CERNVM ******',9X,1H*,
tauola2.4.F:     $ /,' *',     25X,'***** PUBLISHED IN COMP. PHYS. COMM.***',9X,1H*,
tauola2.4.F:     $ /,' *',     25X,'*******CERN-TH-5856 SEPTEMBER 1990*****',9X,1H*,
tauola2.4.F:     $ /,' *',     25X,'*******CERN-TH-6195 SEPTEMBER 1991*****',9X,1H*,
tauola2.4.F:     $ /,' *',     25X,'*******CERN-TH-6793 NOVEMBER  1992*****',9X,1H*,
tauola2.4.F:     $ /,' *',     25X,'******DEXAY ROUTINE: FINAL REPORT******',9X,1H*
tauola2.4.F:     $ /,' *',I20  ,5X,'NEV1   = NO. OF TAU+ DECS. ACCEPTED    ',9X,1H*
tauola2.4.F:     $ /,' *',I20  ,5X,'NEV2   = NO. OF TAU- DECS. ACCEPTED    ',9X,1H*
tauola2.4.F:     $ /,' *',I20  ,5X,'NEVTOT = SUM                           ',9X,1H*
tauola2.4.F:     $   ' PART.WIDTH     ERROR       ROUTINE    DECAY MODE    ',9X,1H*)
tauola2.4.F: 7011 FORMAT(1X,'*'
tauola2.4.F:     $       ,I10,2F12.7       ,'     DADMEL     ELECTRON      ',9X,1H*
tauola2.4.F:     $ /,' *',I10,2F12.7       ,'     DADMMU     MUON          ',9X,1H*
tauola2.4.F:     $ /,' *',I10,2F12.7       ,'     DADMPIx     PION          ',9X,1H*
tauola2.4.F:     $ /,' *',I10,2F12.7,       '     DADMROx     RHO (->2PI)   ',9X,1H*
tauola2.4.F:     $ /,' *',I10,2F12.7,       '     DADMAAx     A1  (->3PI)   ',9X,1H*
tauola2.4.F:     $ /,' *',I10,2F12.7,       '     DADMKKx     KAON          ',9X,1H*
tauola2.4.F:     $ /,' *',I10,2F12.7,       '     DADMKSx     K*            ',9X,1H*
tauola2.4.F:     $ /,' *',I10,2F12.7,       '     DAD4PIx     PI- 2PI+ PI0  ',9X,1H*
tauola2.4.F:     $ /,' *',I10,2F12.7,       '     DAD4PIx     PI- 3PI0      ',9X,1H*
tauola2.4.F:     $ /,' *',I10,2F12.7,       '     DADNPIx     3PI- 2PI+     ',9X,1H*
tauola2.4.F:     $ /,' *',I10,2F12.7,      '     DADNPIx     3PI- 2PI+ PI0 ',9X,1H*)
tauola2.4.F: 7012 FORMAT(1X,'*'
tauola2.4.F:     $       ,I10,2F12.7,       '     DADMPKx     K+ K- PI+     ',9X,1H*
tauola2.4.F:     $ /,' *',I10,2F12.7,       '     DADMPKx     K0B K0 PI+    ',9X,1H*
tauola2.4.F:     $ /,' *',I10,2F12.7,       '     DADMPKx     K+ K0B PI0    ',9X,1H*
tauola2.4.F:     $ /,' *',I10,2F12.7,       '     DADMPKx     K+ PI0 PI0    ',9X,1H*
tauola2.4.F:     $ /,' *',I10,2F12.7,       '     DADMPKx     K+ PI- PI+    ',9X,1H*
tauola2.4.F:     $ /,' *',I10,2F12.7,       '     DADMPKx     K0 PI0 PI+    ',9X,1H*
tauola2.4.F:     $ /,' *',I10,2F12.7,       '     DADMPKx     ET PI- PI0    ',9X,1H*
tauola2.4.F:     $ /,' *',I10,2F12.7,       '     DADMPKx     PI-PI0 GAM    ',9X,1H*
tauola2.4.F:     $ /,' *',20X,'THE ERROR IS RELATIVE AND  PART.WIDTH      ',10X,1H*
tauola2.4.F:     $ /,' *',20X,'IN UNITS GFERMI**2*MASS**5/192/PI**3       ',10X,1H*
tauola2.4.F:     $  /,1X,15(5H*****)/)
tauola2.4.F: 910  WRITE(*, 9100)
tauola2.4.F: 9100 FORMAT(' ----- DEXAY: WRONG VALUE OF KTO ')
tauola2.4.F:      SUBROUTINE DEXAY1x(KTO,JAKIN,JAK,POL,ISGN)
tauola2.4.F:      REAL  PAA(4),PIM1(4),PIM2(4),PIPL(4)
tauola2.4.F:      IF(JAKIN.EQ.-1) RETURN
tauola2.4.F:      DO 33 I=1,3
tauola2.4.F:      DO 34 I=1,4
tauola2.4.F:      IF(JAK.EQ.1) THEN
tauola2.4.F:        CALL DEXAAx(0, ISGN,POLAR,PNU,PAA,PIM1,PIM2,PIPL,JAA)
tauola2.4.F:        CALL DWLUAAx(KTO,ISGN,PNU,PAA,PIM1,PIM2,PIPL,JAA)
tauola2.4.F:      ELSEIF(JAK.GT.9.AND.JAK.LE.11) THEN
tauola2.4.F:      ELSEIF(JAK.GE.12.AND.JAK.LE.19) THEN
tauola2.4.F:        JAA=JAK-11
tauola2.4.F:        CALL DEXPKx(0, ISGN,POLAR,PNU,PAA,PIM1,PIM2,PIPL,JAA)
tauola2.4.F:        CALL DWLUPKx(KTO,ISGN,PNU,PAA,PIM1,PIM2,PIPL,JAA)
tauola2.4.F:      NEVDEC(JAK)=NEVDEC(JAK)+1
tauola2.4.F: 9020 FORMAT(' ----- DEXAY1: WRONG JAK')
tauola2.4.F:      SUBROUTINE DEXELx(MODE,ISGN,POL,PNU,PWB,Q1,Q2,PH)
tauola2.4.F:C     called by : DEXAY,DEXAY1
tauola2.4.F:      REAL  POL(4),HV(4),PWB(4),PNU(4),Q1(4),Q2(4),PH(4)
tauola2.4.F:      IF(MODE.EQ.-1) THEN
tauola2.4.F:        IWARM=1
tauola2.4.F:        CALL DADMELx( -1,ISGN,HV,PNU,PWB,Q1,Q2,PH)
tauola2.4.F:CC      CALL HBOOK1(813,'WEIGHT DISTRIBUTION  DEXEL    $',100,0,2)
tauola2.4.F:        CALL DADMELx(  0,ISGN,HV,PNU,PWB,Q1,Q2,PH)
tauola2.4.F:        WT=(1+POL(1)*HV(1)+POL(2)*HV(2)+POL(3)*HV(3))/2.
tauola2.4.F:CC      CALL HFILL(813,WT)
tauola2.4.F:        CALL RANMAR(RN,1)
tauola2.4.F:      ELSEIF(MODE.EQ. 1) THEN
tauola2.4.F:        CALL DADMELx(  1,ISGN,HV,PNU,PWB,Q1,Q2,PH)
tauola2.4.F:CC      CALL HPRINT(813)
tauola2.4.F:      SUBROUTINE DEXMUx(MODE,ISGN,POL,PNU,PWB,Q1,Q2,PH)
tauola2.4.F:C                      Q1    MUON
tauola2.4.F:      REAL  POL(4),HV(4),PWB(4),PNU(4),Q1(4),Q2(4),PH(4)
tauola2.4.F:      IF(MODE.EQ.-1) THEN
tauola2.4.F:        IWARM=1
tauola2.4.F:        CALL DADMMUx( -1,ISGN,HV,PNU,PWB,Q1,Q2,PH)
tauola2.4.F:CC      CALL HBOOK1(814,'WEIGHT DISTRIBUTION  DEXMU    $',100,0,2)
tauola2.4.F:        CALL DADMMUx(  0,ISGN,HV,PNU,PWB,Q1,Q2,PH)
tauola2.4.F:        WT=(1+POL(1)*HV(1)+POL(2)*HV(2)+POL(3)*HV(3))/2.
tauola2.4.F:CC      CALL HFILL(814,WT)
tauola2.4.F:        CALL RANMAR(RN,1)
tauola2.4.F:      ELSEIF(MODE.EQ. 1) THEN
tauola2.4.F:        CALL DADMMUx(  1,ISGN,HV,PNU,PWB,Q1,Q2,PH)
tauola2.4.F:CC      CALL HPRINT(814)
tauola2.4.F:      SUBROUTINE DADMELx(MODE,ISGN,HHV,PNU,PWB,Q1,Q2,PHX)
tauola2.4.F:C     called by : DEXEL,(DEKAY,DEKAY1)
tauola2.4.F:     *                 ,AMPIZ,AMPI,AMRO,GAMRO,AMA1,GAMA1
tauola2.4.F:     *                 ,AMPIZ,AMPI,AMRO,GAMRO,AMA1,GAMA1
tauola2.4.F:      REAL  HHV(4),HV(4),PWB(4),PNU(4),Q1(4),Q2(4)
tauola2.4.F:      REAL  PDUM1(4),PDUM2(4),PDUM3(4),PDUM4(4),PDUM5(4)
tauola2.4.F:      DATA PI /3.141592653589793238462643/
tauola2.4.F:      IF(MODE.EQ.-1) THEN
tauola2.4.F:        IWARM=1
tauola2.4.F:        WTMAX=1E-20
tauola2.4.F:        DO 15 I=1,500
tauola2.4.F:        CALL DPHSELx(WT,HV,PDUM1,PDUM2,PDUM3,PDUM4,PDUM5)
tauola2.4.F:        IF(WT.GT.WTMAX/1.2) WTMAX=WT*1.2
tauola2.4.F:15      CONTINUE
tauola2.4.F:CC      CALL HBOOK1(803,'WEIGHT DISTRIBUTION  DADMEL    $',100,0,2)
tauola2.4.F:        NEVRAW=NEVRAW+1
tauola2.4.F:        CALL DPHSELx(WT,HV,PNU,PWB,Q1,Q2,PHX)
tauola2.4.F:        RN=RRR(1)
tauola2.4.F:        IF(WT.GT.WTMAX) NEVOVR=NEVOVR+1
tauola2.4.F:        COSTHE=-1.+2.*RR2
tauola2.4.F:        CALL ROTOR2x(THET,Q1,Q1)
tauola2.4.F:        CALL ROTOR3x( PHI,Q1,Q1)
tauola2.4.F:        DO 44,I=1,3
tauola2.4.F:        NEVACC=NEVACC+1
tauola2.4.F:      ELSEIF(MODE.EQ. 1) THEN
tauola2.4.F:        PARGAM=SWT/FLOAT(NEVRAW+1)
tauola2.4.F:        IF(NEVRAW.NE.0) ERROR=SQRT(SSWT/SWT**2-1./FLOAT(NEVRAW))
tauola2.4.F:        WRITE(*, 7010) NEVRAW,NEVACC,NEVOVR,PARGAM,RAT,ERROR
tauola2.4.F:        GAMPMC(1)=RAT
tauola2.4.F:        GAMPER(1)=ERROR
tauola2.4.F:CAM     NEVDEC(1)=NEVACC
tauola2.4.F: 7010 FORMAT(///1X,15(5H*****)
tauola2.4.F:     $ /,' *',     25X,'******** DADMEL FINAL REPORT  ******** ',9X,1H*
tauola2.4.F:     $ /,' *',I20  ,5X,'NEVRAW = NO. OF EL  DECAYS TOTAL       ',9X,1H*
tauola2.4.F:     $ /,' *',I20  ,5X,'NEVACC = NO. OF EL   DECS. ACCEPTED    ',9X,1H*
tauola2.4.F:     $ /,' *',I20  ,5X,'NEVOVR = NO. OF OVERWEIGHTED EVENTS    ',9X,1H*
tauola2.4.F:     $ /,' *',E20.5,5X,'PARTIAL WTDTH ( ELECTRON) IN GEV UNITS ',9X,1H*
tauola2.4.F:     $ /,' *',F20.9,5X,'IN UNITS GFERMI**2*MASS**5/192/PI**3   ',9X,1H*
tauola2.4.F:     $ /,' *',F20.9,5X,'RELATIVE ERROR OF PARTIAL WIDTH        ',9X,1H*
tauola2.4.F:     $ /,' *',25X,     'COMPLETE QED CORRECTIONS INCLUDED      ',9X,1H*
tauola2.4.F:     $ /,' *',25X,     'BUT ONLY V-A CUPLINGS                  ',9X,1H*
tauola2.4.F:     $  /,1X,15(5H*****)/)
tauola2.4.F:      SUBROUTINE DADMMUx(MODE,ISGN,HHV,PNU,PWB,Q1,Q2,PHX)
tauola2.4.F:     *                 ,AMPIZ,AMPI,AMRO,GAMRO,AMA1,GAMA1
tauola2.4.F:     *                 ,AMPIZ,AMPI,AMRO,GAMRO,AMA1,GAMA1
tauola2.4.F:      REAL  HHV(4),HV(4),PNU(4),PWB(4),Q1(4),Q2(4)
tauola2.4.F:      REAL  PDUM1(4),PDUM2(4),PDUM3(4),PDUM4(4),PDUM5(4)
tauola2.4.F:      DATA PI /3.141592653589793238462643/
tauola2.4.F:      IF(MODE.EQ.-1) THEN
tauola2.4.F:        IWARM=1
tauola2.4.F:        WTMAX=1E-20
tauola2.4.F:        DO 15 I=1,500
tauola2.4.F:        CALL DPHSMUx(WT,HV,PDUM1,PDUM2,PDUM3,PDUM4,PDUM5)
tauola2.4.F:        IF(WT.GT.WTMAX/1.2) WTMAX=WT*1.2
tauola2.4.F:15      CONTINUE
tauola2.4.F:CC      CALL HBOOK1(802,'WEIGHT DISTRIBUTION  DADMMU    $',100,0,2)
tauola2.4.F:        NEVRAW=NEVRAW+1
tauola2.4.F:        CALL DPHSMUx(WT,HV,PNU,PWB,Q1,Q2,PHX)
tauola2.4.F:        RN=RRR(1)
tauola2.4.F:        IF(WT.GT.WTMAX) NEVOVR=NEVOVR+1
tauola2.4.F:        COSTHE=-1.+2.*RRR(2)
tauola2.4.F:        CALL ROTOR2x(THET,Q1,Q1)
tauola2.4.F:        CALL ROTOR3x( PHI,Q1,Q1)
tauola2.4.F:        DO 44,I=1,3
tauola2.4.F:        NEVACC=NEVACC+1
tauola2.4.F:      ELSEIF(MODE.EQ. 1) THEN
tauola2.4.F:        PARGAM=SWT/FLOAT(NEVRAW+1)
tauola2.4.F:        IF(NEVRAW.NE.0) ERROR=SQRT(SSWT/SWT**2-1./FLOAT(NEVRAW))
tauola2.4.F:        WRITE(*, 7010) NEVRAW,NEVACC,NEVOVR,PARGAM,RAT,ERROR
tauola2.4.F: 7010 FORMAT(///1X,15(5H*****)
tauola2.4.F:     $ /,' *',     25X,'******** DADMMU FINAL REPORT  ******** ',9X,1H*
tauola2.4.F:     $ /,' *',I20  ,5X,'NEVRAW = NO. OF MU  DECAYS TOTAL       ',9X,1H*
tauola2.4.F:     $ /,' *',I20  ,5X,'NEVACC = NO. OF MU   DECS. ACCEPTED    ',9X,1H*
tauola2.4.F:     $ /,' *',I20  ,5X,'NEVOVR = NO. OF OVERWEIGHTED EVENTS    ',9X,1H*
tauola2.4.F:     $ /,' *',E20.5,5X,'PARTIAL WTDTH (MU  DECAY) IN GEV UNITS ',9X,1H*
tauola2.4.F:     $ /,' *',F20.9,5X,'IN UNITS GFERMI**2*MASS**5/192/PI**3   ',9X,1H*
tauola2.4.F:     $ /,' *',F20.9,5X,'RELATIVE ERROR OF PARTIAL WIDTH        ',9X,1H*
tauola2.4.F:     $ /,' *',25X,     'COMPLETE QED CORRECTIONS INCLUDED      ',9X,1H*
tauola2.4.F:     $ /,' *',25X,     'BUT ONLY V-A CUPLINGS                  ',9X,1H*
tauola2.4.F:     $  /,1X,15(5H*****)/)
tauola2.4.F:      IELMU=1
tauola2.4.F:      DO 7 K=1,4
tauola2.4.F:      DO 7 K=1,4
tauola2.4.F:     *                 ,AMPIZ,AMPI,AMRO,GAMRO,AMA1,GAMA1
tauola2.4.F:     *                 ,AMPIZ,AMPI,AMRO,GAMRO,AMA1,GAMA1
tauola2.4.F:      DATA PI /3.141592653589793238462643D0/
tauola2.4.F:      PHSPAC=1./2**17/PI**8
tauola2.4.F:      PT(1)=0.D0
tauola2.4.F:        IF (IELMU.EQ.1) THEN
tauola2.4.F:        PRSOFT=1.-PRHARD
tauola2.4.F:         IF(PRSOFT.LT.0.1) THEN
tauola2.4.F:          RR1=RRR(1)
tauola2.4.F:          AMS1=(AMU+AMNUTA)**2
tauola2.4.F:          XK1=1-AMS1/AMS2
tauola2.4.F:          XL1=LOG(XK1/2/XK0DEC)
tauola2.4.F:          XK=EXP(XL1*RR1+XL0)
tauola2.4.F:          AM3SQ=(1-XK)*AMS2
tauola2.4.F:          PHSPAC=PHSPAC*AMS2*XL1*XK
tauola2.4.F:        AMS1=(AMNUTA)**2
tauola2.4.F:      AM2SQ=AMS1+   RR2*(AMS2-AMS1)
tauola2.4.F:      PHSPAC=PHSPAC*(AMS2-AMS1)
tauola2.4.F:        ENQ1=(AM2SQ+AMNUTA**2)/(2*AM2)
tauola2.4.F:        PPI=         ENQ1**2-AMNUTA**2
tauola2.4.F:        PPPI=SQRT(ABS(ENQ1**2-AMNUTA**2))
tauola2.4.F:        XN(4)=ENQ1
tauola2.4.F:        DO 30 I=1,3
tauola2.4.F:        PR(1)=0
tauola2.4.F:        PR(4)=1.D0/(2*AM3)*(AM3**2+AM2**2-AMU**2)
tauola2.4.F:        QP(1)=0
tauola2.4.F:        QP(4)=1.D0/(2*AM3)*(AM3**2-AM2**2+AMU**2)
tauola2.4.F:        XL1=LOG((2+EPS)/EPS)
tauola2.4.F:        ETA  =EXP(XL1*RR3+XL0)
tauola2.4.F:        CTHET=1+EPS-ETA
tauola2.4.F:        PHSPAC=PHSPAC*XL1/2*ETA
tauola2.4.F:        PAA(1)=0
tauola2.4.F:        PAA(4)=1/(2*AMTAX)*(AMTAX**2+AM3**2)
tauola2.4.F:        PH(1)=0
tauola2.4.F:        THET =ACOS(-1.+2*RR3)
tauola2.4.F:        PAA(1)=0
tauola2.4.F:        PH(1)=0
tauola2.4.F:      DGAMT=1/(2.*AMTAX)*AMPLIT*PHSPAC
tauola2.4.F:     *                 ,AMPIZ,AMPI,AMRO,GAMRO,AMA1,GAMA1
tauola2.4.F:     *                 ,AMPIZ,AMPI,AMRO,GAMRO,AMA1,GAMA1
tauola2.4.F:      HV(4)=1.D0
tauola2.4.F:      IF(XK(4).LT.0.1D0*AK0) THEN
tauola2.4.F:C     see Eqs. (2.9)-(2.10) from CJK ( Nucl.Phys.B(1991) )             *
tauola2.4.F:     *                 ,AMPIZ,AMPI,AMRO,GAMRO,AMA1,GAMA1
tauola2.4.F:     *                 ,AMPIZ,AMPI,AMRO,GAMRO,AMA1,GAMA1
tauola2.4.F:      DATA PI /3.141592653589793238462643D0/
tauola2.4.F:      EMASS2=QP(4)**2-QP(1)**2-QP(2)**2-QP(3)**2
tauola2.4.F:      DO 7 I=1,3
tauola2.4.F:        R(1)=0.D0
tauola2.4.F:        RXA(I)=R(4)*XA(4)-R(1)*XA(1)-R(2)*XA(2)-R(3)*XA(3)
tauola2.4.F:C       RXN(I)=R(4)*XN(4)-R(1)*XN(1)-R(2)*XN(2)-R(3)*XN(3)
tauola2.4.F:        RXK(I)=R(4)*XK(4)-R(1)*XK(1)-R(2)*XK(2)-R(3)*XK(3)
tauola2.4.F:        RQP(I)=R(4)*QP(4)-R(1)*QP(1)-R(2)*QP(2)-R(3)*QP(3)
tauola2.4.F:      QPXN=QP(4)*XN(4)-QP(1)*XN(1)-QP(2)*XN(2)-QP(3)*XN(3)
tauola2.4.F:      QPXA=QP(4)*XA(4)-QP(1)*XA(1)-QP(2)*XA(2)-QP(3)*XA(3)
tauola2.4.F:      QPXK=QP(4)*XK(4)-QP(1)*XK(1)-QP(2)*XK(2)-QP(3)*XK(3)
tauola2.4.F:c     XNXA=XN(4)*XA(4)-XN(1)*XA(1)-XN(2)*XA(2)-XN(3)*XA(3)
tauola2.4.F:      XNXK=XN(4)*XK(4)-XN(1)*XK(1)-XN(2)*XK(2)-XN(3)*XK(3)
tauola2.4.F:      XAXK=XA(4)*XK(4)-XA(1)*XK(1)-XA(2)*XK(2)-XA(3)*XK(3)
tauola2.4.F:      A= 1+X
tauola2.4.F:      B= 1+ X*(1+Z)/2+Z/2
tauola2.4.F:      S1= QPXN*TXA*( -EMASS2/QPXK**2*A + 2*TQP/(QPXK*TXK)*B-
tauola2.4.F:      SQM2x=S1*CONST4
tauola2.4.F:      DO 5 I=1,3
tauola2.4.F:  5     HV(I)=S0(I)/S1-1.D0
tauola2.4.F:C     SEE EQS. (2.2),(2.4)-(2.5) FROM CJK (NUCL.PHYS.B351(1991)70      *
tauola2.4.F:C     AND (C.2) FROM JK (NUCL.PHYS.B320(1991)20 )                      *
tauola2.4.F:     *                 ,AMPIZ,AMPI,AMRO,GAMRO,AMA1,GAMA1
tauola2.4.F:     *                 ,AMPIZ,AMPI,AMRO,GAMRO,AMA1,GAMA1
tauola2.4.F:      DATA PI /3.141592653589793238462643D0/
tauola2.4.F:      DO 7 I=1,3
tauola2.4.F:        R(1)=0.D0
tauola2.4.F:        RXA(I)=R(4)*XA(4)-R(1)*XA(1)-R(2)*XA(2)-R(3)*XA(3)
tauola2.4.F:        RXN(I)=R(4)*XN(4)-R(1)*XN(1)-R(2)*XN(2)-R(3)*XN(3)
tauola2.4.F:C       RXK(I)=R(4)*XK(4)-R(1)*XK(1)-R(2)*XK(2)-R(3)*XK(3)
tauola2.4.F:        RQP(I)=R(4)*QP(4)-R(1)*QP(1)-R(2)*QP(2)-R(3)*QP(3)
tauola2.4.F:      U3=SQRT(QP(1)**2+QP(2)**2+QP(3)**2)/TMASS
tauola2.4.F:      F0=2*U0/U3*(  DILOGx(1-(UM*WM/(UP*WP)))- DILOGx(1-WM/WP) +
tauola2.4.F:     $DILOGx(1-UM/UP) -2*YU+ 2*LOG(UP)*(YW+YU) ) +
tauola2.4.F:     $1/Y* ( 2*U3*YU + (1-EPS2- 2*Y)*LOG(EPS) ) +
tauola2.4.F:     $ 2 - 4*(U0/U3*YU -1)* LOG(2*AL)
tauola2.4.F:      FP= YU/(2*U3)*(1 + (1-EPS2)/Y ) + LOG(EPS)/Y
tauola2.4.F:      FM= YU/(2*U3)*(1 - (1-EPS2)/Y ) - LOG(EPS)/Y
tauola2.4.F:      QPXN=QP(4)*XN(4)-QP(1)*XN(1)-QP(2)*XN(2)-QP(3)*XN(3)
tauola2.4.F:      QPXA=QP(4)*XA(4)-QP(1)*XA(1)-QP(2)*XA(2)-QP(3)*XA(3)
tauola2.4.F:      XNXA=XN(4)*XA(4)-XN(1)*XA(1)-XN(2)*XA(2)-XN(3)*XA(3)
tauola2.4.F:      CONST3=1/(2*ALPHAI*PI)*64*GF**2
tauola2.4.F:      DO 5 I=1,3
tauola2.4.F:  5     HV(I)=(BORNPL(I)+AM3POL(I))/(BORN+AM3)-1.D0
tauola2.4.F:      IF (THBx/BORN.LT.0.1D0) THEN
tauola2.4.F:      IF(MODE.EQ.-1) THEN
tauola2.4.F:        CALL DADMPIx(-1,ISGN,HV,PPI,PNU)
tauola2.4.F:CC      CALL HBOOK1(815,'WEIGHT DISTRIBUTION  DEXPIx    $',100,0,2)
tauola2.4.F:        WT=(1+POL(1)*HV(1)+POL(2)*HV(2)+POL(3)*HV(3))/2.
tauola2.4.F:CC      CALL HFILL(815,WT)
tauola2.4.F:        CALL RANMAR(RN,1)
tauola2.4.F:      ELSEIF(MODE.EQ. 1) THEN
tauola2.4.F:        CALL DADMPIx( 1,ISGN,HV,PPI,PNU)
tauola2.4.F:CC      CALL HPRINT(815)
tauola2.4.F:     *                 ,AMPIZ,AMPI,AMRO,GAMRO,AMA1,GAMA1
tauola2.4.F:     *                 ,AMPIZ,AMPI,AMRO,GAMRO,AMA1,GAMA1
tauola2.4.F:      DATA PI /3.141592653589793238462643/
tauola2.4.F:      IF(MODE.EQ.-1) THEN
tauola2.4.F:        NEVTOT=NEVTOT+1
tauola2.4.F:        DO 30 I=1,3
tauola2.4.F:        QXN=PPI(4)*PNU(4)-PPI(1)*PNU(1)-PPI(2)*PNU(2)-PPI(3)*PNU(3)
tauola2.4.F:        DO 40 I=1,3
tauola2.4.F:        HV(4)=1
tauola2.4.F:      ELSEIF(MODE.EQ. 1) THEN
tauola2.4.F:        FPI=0.1284
tauola2.4.F:C        GAMM=(GFERMI*FPI)**2/(16.*PI)*AMTAU**3*
tauola2.4.F:        GAMM=(GFERMI*FPI)**2/(16.*PI)*AMTAU**3*
tauola2.4.F:        WRITE(*, 7010) NEVTOT,GAMM,RAT,ERROR
tauola2.4.F: 7010 FORMAT(///1X,15(5H*****)
tauola2.4.F:     $ /,' *',     25X,'******** DADMPIx FINAL REPORT  ******** ',9X,1H*
tauola2.4.F:     $ /,' *',I20  ,5X,'NEVTOT = NO. OF PI  DECAYS TOTAL       ',9X,1H*
tauola2.4.F:     $ /,' *',E20.5,5X,'PARTIAL WTDTH ( PI DECAY) IN GEV UNITS ',9X,1H*
tauola2.4.F:     $ /,' *',F20.9,5X,'IN UNITS GFERMI**2*MASS**5/192/PI**3   ',9X,1H*
tauola2.4.F:     $ /,' *',F20.8,5X,'RELATIVE ERROR OF PARTIAL WIDTH (STAT.)',9X,1H*
tauola2.4.F:     $  /,1X,15(5H*****)/)
tauola2.4.F:      IF(MODE.EQ.-1) THEN
tauola2.4.F:        IWARM=1
tauola2.4.F:        CALL DADMROx( -1,ISGN,HV,PNU,PRO,PIC,PIZ)
tauola2.4.F:CC      CALL HBOOK1(816,'WEIGHT DISTRIBUTION  DEXROx    $',100,0,2)
tauola2.4.F:CC      CALL HBOOK1(916,'ABS2 OF HV IN ROUTINE DEXROx   $',100,0,2)
tauola2.4.F:        WT=(1+POL(1)*HV(1)+POL(2)*HV(2)+POL(3)*HV(3))/2.
tauola2.4.F:CC      CALL HFILL(816,WT)
tauola2.4.F:CC      XHELP=HV(1)**2+HV(2)**2+HV(3)**2
tauola2.4.F:CC      CALL HFILL(916,XHELP)
tauola2.4.F:        CALL RANMAR(RN,1)
tauola2.4.F:      ELSEIF(MODE.EQ. 1) THEN
tauola2.4.F:        CALL DADMROx(  1,ISGN,HV,PNU,PRO,PIC,PIZ)
tauola2.4.F:CC      CALL HPRINT(816)
tauola2.4.F:CC      CALL HPRINT(916)
tauola2.4.F:     *                 ,AMPIZ,AMPI,AMRO,GAMRO,AMA1,GAMA1
tauola2.4.F:     *                 ,AMPIZ,AMPI,AMRO,GAMRO,AMA1,GAMA1
tauola2.4.F:      REAL  PDUM1(4),PDUM2(4),PDUM3(4),PDUM4(4)
tauola2.4.F:      DATA PI /3.141592653589793238462643/
tauola2.4.F:      IF(MODE.EQ.-1) THEN
tauola2.4.F:        IWARM=1
tauola2.4.F:        WTMAX=1E-20
tauola2.4.F:        DO 15 I=1,500
tauola2.4.F:        CALL DPHSROx(WT,HV,PDUM1,PDUM2,PDUM3,PDUM4)
tauola2.4.F:        IF(WT.GT.WTMAX/1.2) WTMAX=WT*1.2
tauola2.4.F:15      CONTINUE
tauola2.4.F:CC      CALL HBOOK1(801,'WEIGHT DISTRIBUTION  DADMROx    $',100,0,2)
tauola2.4.F:CC      CALL HFILL(801,WT/WTMAX)
tauola2.4.F:        NEVRAW=NEVRAW+1
tauola2.4.F:        RN=RRR(1)
tauola2.4.F:        IF(WT.GT.WTMAX) NEVOVR=NEVOVR+1
tauola2.4.F:        COSTHE=-1.+2.*RRR(2)
tauola2.4.F:        DO 44 I=1,3
tauola2.4.F:        NEVACC=NEVACC+1
tauola2.4.F:      ELSEIF(MODE.EQ. 1) THEN
tauola2.4.F:        PARGAM=SWT/FLOAT(NEVRAW+1)
tauola2.4.F:        IF(NEVRAW.NE.0) ERROR=SQRT(SSWT/SWT**2-1./FLOAT(NEVRAW))
tauola2.4.F:        WRITE(*, 7010) NEVRAW,NEVACC,NEVOVR,PARGAM,RAT,ERROR
tauola2.4.F:CC      CALL HPRINT(801)
tauola2.4.F: 7003 FORMAT(///1X,15(5H*****)
tauola2.4.F:     $ /,' *',     25X,'******** DADMROx INITIALISATION ********',9X,1H*
tauola2.4.F:     $ /,' *',E20.5,5X,'WTMAX  = MAXIMUM WEIGHT                ',9X,1H*
tauola2.4.F:     $  /,1X,15(5H*****)/)
tauola2.4.F: 7010 FORMAT(///1X,15(5H*****)
tauola2.4.F:     $ /,' *',     25X,'******** DADMROx FINAL REPORT  ******** ',9X,1H*
tauola2.4.F:     $ /,' *',I20  ,5X,'NEVRAW = NO. OF RHO DECAYS TOTAL       ',9X,1H*
tauola2.4.F:     $ /,' *',I20  ,5X,'NEVACC = NO. OF RHO  DECS. ACCEPTED    ',9X,1H*
tauola2.4.F:     $ /,' *',I20  ,5X,'NEVOVR = NO. OF OVERWEIGHTED EVENTS    ',9X,1H*
tauola2.4.F:     $ /,' *',E20.5,5X,'PARTIAL WTDTH (RHO DECAY) IN GEV UNITS ',9X,1H*
tauola2.4.F:     $ /,' *',F20.9,5X,'IN UNITS GFERMI**2*MASS**5/192/PI**3   ',9X,1H*
tauola2.4.F:     $ /,' *',F20.8,5X,'RELATIVE ERROR OF PARTIAL WIDTH        ',9X,1H*
tauola2.4.F:     $  /,1X,15(5H*****)/)
tauola2.4.F:     *                 ,AMPIZ,AMPI,AMRO,GAMRO,AMA1,GAMA1
tauola2.4.F:     *                 ,AMPIZ,AMPI,AMRO,GAMRO,AMA1,GAMA1
tauola2.4.F:      DATA PI /3.141592653589793238462643/
tauola2.4.F:      PHSPAC=1./2**11/PI**5
tauola2.4.F:      PT(1)=0.
tauola2.4.F:      AMS1=(AMPI+AMPIZ)**2
tauola2.4.F:C     AMX2=AMS1+   RR1*(AMS2-AMS1)
tauola2.4.F:C     PHSPAC=PHSPAC*(AMS2-AMS1)
tauola2.4.F:      ALP1=ATAN((AMS1-AMRO**2)/AMRO/GAMRO)
tauola2.4.F: 100  CONTINUE
tauola2.4.F:      CALL RANMAR(RR1,1)
tauola2.4.F:      ALP=ALP1+RR1*(ALP2-ALP1)
tauola2.4.F:      IF(AMX.LT.2.*AMPI) GO TO 100
tauola2.4.F:      PHSPAC=PHSPAC*(ALP2-ALP1)
tauola2.4.F:      PN(1)=0
tauola2.4.F:      PN(4)=1./(2*AMTAU)*(AMTAU**2+AMNUTA**2-AMX**2)
tauola2.4.F:      PR(1)=0
tauola2.4.F:      PR(4)=1./(2*AMTAU)*(AMTAU**2-AMNUTA**2+AMX**2)
tauola2.4.F:      ENQ1=(AMX2+AMPI**2-AMPIZ**2)/(2.*AMX)
tauola2.4.F:      PPPI=SQRT((ENQ1-AMPI)*(ENQ1+AMPI))
tauola2.4.F:      PIC(4)=ENQ1
tauola2.4.F:      DO 20 I=1,3
tauola2.4.F:      DO 30 I=1,4
tauola2.4.F:      PRODNQ=PN(4)*QQ(4)-PN(1)*QQ(1)-PN(2)*QQ(2)-PN(3)*QQ(3)
tauola2.4.F:      QQ2= QQ(4)**2-QQ(1)**2-QQ(2)**2-QQ(3)**2
tauola2.4.F:      DGAMT=1/(2.*AMTAU)*AMPLIT*PHSPAC
tauola2.4.F:      DO 40 I=1,3
tauola2.4.F:      SUBROUTINE DEXAAx(MODE,ISGN,POL,PNU,PAA,PIM1,PIM2,PIPL,JAA)
tauola2.4.F:* INTO NU A1, NEXT A1 DECAYS INTO RHO PI AND FINALLY RHO INTO PI PI.
tauola2.4.F:*                      PAA   A1
tauola2.4.F:*                      PIM1  PION MINUS (OR PI0) 1      (FOR TAU MINUS)
tauola2.4.F:*                      (PIPL,PIM1) FORM A RHO
tauola2.4.F:      REAL  POL(4),HV(4),PAA(4),PNU(4),PIM1(4),PIM2(4),PIPL(4)
tauola2.4.F:      IF(MODE.EQ.-1) THEN
tauola2.4.F:        IWARM=1
tauola2.4.F:        CALL DADMAAx( -1,ISGN,HV,PNU,PAA,PIM1,PIM2,PIPL,JAA)
tauola2.4.F:CC      CALL HBOOK1(816,'WEIGHT DISTRIBUTION  DEXAAx    $',100,-2.,2.)
tauola2.4.F:        CALL DADMAAx(  0,ISGN,HV,PNU,PAA,PIM1,PIM2,PIPL,JAA)
tauola2.4.F:        WT=(1+POL(1)*HV(1)+POL(2)*HV(2)+POL(3)*HV(3))/2.
tauola2.4.F:CC      CALL HFILL(816,WT)
tauola2.4.F:        CALL RANMAR(RN,1)
tauola2.4.F:      ELSEIF(MODE.EQ. 1) THEN
tauola2.4.F:        CALL DADMAAx(  1,ISGN,HV,PNU,PAA,PIM1,PIM2,PIPL,JAA)
tauola2.4.F:CC      CALL HPRINT(816)
tauola2.4.F:      SUBROUTINE DADMAAx(MODE,ISGN,HHV,PNU,PAA,PIM1,PIM2,PIPL,JAA)
tauola2.4.F:* A1 DECAY UNWEIGHTED EVENTS
tauola2.4.F:     *                 ,AMPIZ,AMPI,AMRO,GAMRO,AMA1,GAMA1
tauola2.4.F:     *                 ,AMPIZ,AMPI,AMRO,GAMRO,AMA1,GAMA1
tauola2.4.F:      REAL  HV(4),PAA(4),PNU(4),PIM1(4),PIM2(4),PIPL(4)
tauola2.4.F:      REAL  PDUM1(4),PDUM2(4),PDUM3(4),PDUM4(4),PDUM5(4)
tauola2.4.F:      DATA PI /3.141592653589793238462643/
tauola2.4.F:      IF(MODE.EQ.-1) THEN
tauola2.4.F:        IWARM=1
tauola2.4.F:        WTMAX=1E-20
tauola2.4.F:        DO 15 I=1,500
tauola2.4.F:        CALL DPHSAAx(WT,HV,PDUM1,PDUM2,PDUM3,PDUM4,PDUM5,JAA)
tauola2.4.F:        IF(WT.GT.WTMAX/1.2) WTMAX=WT*1.2
tauola2.4.F:15      CONTINUE
tauola2.4.F:CC      CALL HBOOK1(801,'WEIGHT DISTRIBUTION  DADMAAx    $',100,0,2)
tauola2.4.F:        CALL DPHSAAx(WT,HV,PNU,PAA,PIM1,PIM2,PIPL,JAA)
tauola2.4.F:CC      CALL HFILL(801,WT/WTMAX)
tauola2.4.F:        NEVRAW=NEVRAW+1
tauola2.4.F:        RN=RRR(1)
tauola2.4.F:        IF(WT.GT.WTMAX) NEVOVR=NEVOVR+1
tauola2.4.F:        COSTHE=-1.+2.*RRR(2)
tauola2.4.F:        CALL ROTPOLx(THET,PHI,PIM1)
tauola2.4.F:        DO 44 I=1,3
tauola2.4.F:        NEVACC=NEVACC+1
tauola2.4.F:      ELSEIF(MODE.EQ. 1) THEN
tauola2.4.F:        PARGAM=SWT/FLOAT(NEVRAW+1)
tauola2.4.F:        IF(NEVRAW.NE.0) ERROR=SQRT(SSWT/SWT**2-1./FLOAT(NEVRAW))
tauola2.4.F:        WRITE(*, 7010) NEVRAW,NEVACC,NEVOVR,PARGAM,RAT,ERROR
tauola2.4.F:CC      CALL HPRINT(801)
tauola2.4.F: 7003 FORMAT(///1X,15(5H*****)
tauola2.4.F:     $ /,' *',     25X,'******** DADMAAx INITIALISATION ********',9X,1H*
tauola2.4.F:     $ /,' *',E20.5,5X,'WTMAX  = MAXIMUM WEIGHT                ',9X,1H*
tauola2.4.F:     $  /,1X,15(5H*****)/)
tauola2.4.F: 7010 FORMAT(///1X,15(5H*****)
tauola2.4.F:     $ /,' *',     25X,'******** DADMAAx FINAL REPORT  ******** ',9X,1H*
tauola2.4.F:     $ /,' *',I20  ,5X,'NEVRAW = NO. OF A1  DECAYS TOTAL       ',9X,1H*
tauola2.4.F:     $ /,' *',I20  ,5X,'NEVACC = NO. OF A1   DECS. ACCEPTED    ',9X,1H*
tauola2.4.F:     $ /,' *',I20  ,5X,'NEVOVR = NO. OF OVERWEIGHTED EVENTS    ',9X,1H*
tauola2.4.F:     $ /,' *',E20.5,5X,'PARTIAL WTDTH (A1  DECAY) IN GEV UNITS ',9X,1H*
tauola2.4.F:     $ /,' *',F20.9,5X,'IN UNITS GFERMI**2*MASS**5/192/PI**3   ',9X,1H*
tauola2.4.F:     $ /,' *',F20.8,5X,'RELATIVE ERROR OF PARTIAL WIDTH        ',9X,1H*
tauola2.4.F:     $  /,1X,15(5H*****)/)
tauola2.4.F:      SUBROUTINE DPHSAAx(DGAMT,HV,PN,PAA,PIM1,PIM2,PIPL,JAA)
tauola2.4.F:* IT SIMULATES A1  DECAY IN TAU REST FRAME WITH
tauola2.4.F:* Z-AXIS ALONG A1  MOMENTUM
tauola2.4.F:     *                 ,AMPIZ,AMPI,AMRO,GAMRO,AMA1,GAMA1
tauola2.4.F:     *                 ,AMPIZ,AMPI,AMRO,GAMRO,AMA1,GAMA1
tauola2.4.F:      COMMON / TAUKLE / BRA1,BRK0,BRK0B,BRKS
tauola2.4.F:      REAL*4            BRA1,BRK0,BRK0B,BRKS
tauola2.4.F:      REAL  HV(4),PN(4),PAA(4),PIM1(4),PIM2(4),PIPL(4)
tauola2.4.F:      REAL*4 RRR(1)
tauola2.4.F:      KEYT=1
tauola2.4.F:      CALL RANMAR(RRR,1)
tauola2.4.F:      RMOD=RRR(1)
tauola2.4.F:      IF (RMOD.LT.BRA1) THEN
tauola2.4.F:       JAA=1
tauola2.4.F:       AMP1=AMPI
tauola2.4.F:       AMP1=AMPIZ
tauola2.4.F:     $DPHTREx(DGAMT,HV,PN,PAA,PIM1,AMP1,PIM2,AMP2,PIPL,AMP3,KEYT,MNUM)
tauola2.4.F:      IF(MODE.EQ.-1) THEN
tauola2.4.F:        CALL DADMKKx(-1,ISGN,HV,PKK,PNU)
tauola2.4.F:CC      CALL HBOOK1(815,'WEIGHT DISTRIBUTION  DEXPIx    $',100,0,2)
tauola2.4.F:        WT=(1+POL(1)*HV(1)+POL(2)*HV(2)+POL(3)*HV(3))/2.
tauola2.4.F:CC      CALL HFILL(815,WT)
tauola2.4.F:        CALL RANMAR(RN,1)
tauola2.4.F:      ELSEIF(MODE.EQ. 1) THEN
tauola2.4.F:        CALL DADMKKx( 1,ISGN,HV,PKK,PNU)
tauola2.4.F:CC      CALL HPRINT(815)
tauola2.4.F:     *                 ,AMPIZ,AMPI,AMRO,GAMRO,AMA1,GAMA1
tauola2.4.F:     *                 ,AMPIZ,AMPI,AMRO,GAMRO,AMA1,GAMA1
tauola2.4.F:      DATA PI /3.141592653589793238462643/
tauola2.4.F:      IF(MODE.EQ.-1) THEN
tauola2.4.F:        NEVTOT=NEVTOT+1
tauola2.4.F:        DO 30 I=1,3
tauola2.4.F:        QXN=PKK(4)*PNU(4)-PKK(1)*PNU(1)-PKK(2)*PNU(2)-PKK(3)*PNU(3)
tauola2.4.F:        DO 40 I=1,3
tauola2.4.F:        HV(4)=1
tauola2.4.F:      ELSEIF(MODE.EQ. 1) THEN
tauola2.4.F:C        GAMM=(GFERMI*FKK)**2/(16.*PI)*AMTAU**3*
tauola2.4.F:        GAMM=(GFERMI*FKK)**2/(16.*PI)*AMTAU**3*
tauola2.4.F:        WRITE(*, 7010) NEVTOT,GAMM,RAT,ERROR
tauola2.4.F: 7010 FORMAT(///1X,15(5H*****)
tauola2.4.F:     $ /,' *',     25X,'******** DADMKKx FINAL REPORT   ********',9X,1H*
tauola2.4.F:     $ /,' *',I20  ,5X,'NEVTOT = NO. OF K  DECAYS TOTAL        ',9X,1H*,
tauola2.4.F:     $ /,' *',E20.5,5X,'PARTIAL WTDTH ( K DECAY) IN GEV UNITS  ',9X,1H*,
tauola2.4.F:     $ /,' *',F20.9,5X,'IN UNITS GFERMI**2*MASS**5/192/PI**3   ',9X,1H*
tauola2.4.F:     $ /,' *',F20.8,5X,'RELATIVE ERROR OF PARTIAL WIDTH (STAT.)',9X,1H*
tauola2.4.F:     $  /,1X,15(5H*****)/)
tauola2.4.F:C OR PI+-,K0(JKST=10).
tauola2.4.F:      IF(MODE.EQ.-1) THEN
tauola2.4.F:        IWARM=1
tauola2.4.F:CFZ INITIALISATION DONE WITH THE GHARGED PION NEUTRAL KAON MODE(JKST=10
tauola2.4.F:        CALL DADMKSx( -1,ISGN,HV,PNU,PKS,PKK,PPI,JKST)
tauola2.4.F:CC      CALL HBOOK1(816,'WEIGHT DISTRIBUTION  DEXKSx    $',100,0,2)
tauola2.4.F:CC      CALL HBOOK1(916,'ABS2 OF HV IN ROUTINE DEXKSx   $',100,0,2)
tauola2.4.F:        WT=(1+POL(1)*HV(1)+POL(2)*HV(2)+POL(3)*HV(3))/2.
tauola2.4.F:CC      CALL HFILL(816,WT)
tauola2.4.F:CC      XHELP=HV(1)**2+HV(2)**2+HV(3)**2
tauola2.4.F:CC      CALL HFILL(916,XHELP)
tauola2.4.F:        CALL RANMAR(RN,1)
tauola2.4.F:      ELSEIF(MODE.EQ. 1) THEN
tauola2.4.F:        CALL DADMKSx( 1,ISGN,HV,PNU,PKS,PKK,PPI,JKST)
tauola2.4.F:CC      CALL HPRINT(816)
tauola2.4.F:CC      CALL HPRINT(916)
tauola2.4.F:     *                 ,AMPIZ,AMPI,AMRO,GAMRO,AMA1,GAMA1
tauola2.4.F:     *                 ,AMPIZ,AMPI,AMRO,GAMRO,AMA1,GAMA1
tauola2.4.F:      COMMON / TAUKLE / BRA1,BRK0,BRK0B,BRKS
tauola2.4.F:      REAL*4            BRA1,BRK0,BRK0B,BRKS
tauola2.4.F:      REAL  PDUM1(4),PDUM2(4),PDUM3(4),PDUM4(4)
tauola2.4.F:      DATA PI /3.141592653589793238462643/
tauola2.4.F:      IF(MODE.EQ.-1) THEN
tauola2.4.F:        IWARM=1
tauola2.4.F:        WTMAX=1E-20
tauola2.4.F:        DO 15 I=1,500
tauola2.4.F:        JKST=10
tauola2.4.F:        CALL DPHSKSx(WT,HV,PDUM1,PDUM2,PDUM3,PDUM4,JKST)
tauola2.4.F:        IF(WT.GT.WTMAX/1.2) WTMAX=WT*1.2
tauola2.4.F:15      CONTINUE
tauola2.4.F:CC      CALL HBOOK1(801,'WEIGHT DISTRIBUTION  DADMKSx    $',100,0,2)
tauola2.4.F:CC      CALL HBOOK1(112,'-------- K* MASS -------- $',100,0.,2.)
tauola2.4.F:        DEC1=BRKS
tauola2.4.F:        CALL RANMAR(RMOD,1)
tauola2.4.F:        IF(RMOD.LT.DEC1) THEN
tauola2.4.F:          JKST=10
tauola2.4.F:        RN=RRR(1)
tauola2.4.F:        IF(WT.GT.WTMAX) NEVOVR=NEVOVR+1
tauola2.4.F:        NEVRAW=NEVRAW+1
tauola2.4.F:        COSTHE=-1.+2.*RRR(2)
tauola2.4.F:        DO 44 I=1,3
tauola2.4.F:        NEVACC=NEVACC+1
tauola2.4.F:      ELSEIF(MODE.EQ. 1) THEN
tauola2.4.F:        PARGAM=SWT/FLOAT(NEVRAW+1)
tauola2.4.F:        IF(NEVRAW.NE.0) ERROR=SQRT(SSWT/SWT**2-1./FLOAT(NEVRAW))
tauola2.4.F:        WRITE(*, 7010) NEVRAW,NEVACC,NEVOVR,PARGAM,RAT,ERROR
tauola2.4.F:CC      CALL HPRINT(801)
tauola2.4.F: 7003 FORMAT(///1X,15(5H*****)
tauola2.4.F:     $ /,' *',     25X,'******** DADMKSx INITIALISATION ********',9X,1H*
tauola2.4.F:     $ /,' *',E20.5,5X,'WTMAX  = MAXIMUM WEIGHT                ',9X,1H*
tauola2.4.F:     $  /,1X,15(5H*****)/)
tauola2.4.F: 7010 FORMAT(///1X,15(5H*****)
tauola2.4.F:     $ /,' *',     25X,'******** DADMKSx FINAL REPORT   ********',9X,1H*
tauola2.4.F:     $ /,' *',I20  ,5X,'NEVRAW = NO. OF K* DECAYS TOTAL        ',9X,1H*,
tauola2.4.F:     $ /,' *',I20  ,5X,'NEVACC = NO. OF K*  DECS. ACCEPTED     ',9X,1H*,
tauola2.4.F:     $ /,' *',I20  ,5X,'NEVOVR = NO. OF OVERWEIGHTED EVENTS    ',9X,1H*
tauola2.4.F:     $ /,' *',E20.5,5X,'PARTIAL WTDTH (K* DECAY) IN GEV UNITS  ',9X,1H*,
tauola2.4.F:     $ /,' *',F20.9,5X,'IN UNITS GFERMI**2*MASS**5/192/PI**3   ',9X,1H*
tauola2.4.F:     $ /,' *',F20.8,5X,'RELATIVE ERROR OF PARTIAL WIDTH        ',9X,1H*
tauola2.4.F:     $  /,1X,15(5H*****)/)
tauola2.4.F:C     JKST=10 FOR K* --->K0 + PI+-
tauola2.4.F:     *                 ,AMPIZ,AMPI,AMRO,GAMRO,AMA1,GAMA1
tauola2.4.F:     *                 ,AMPIZ,AMPI,AMRO,GAMRO,AMA1,GAMA1
tauola2.4.F:      DATA PI /3.141592653589793238462643/
tauola2.4.F:      PHSPAC=1./2**11/PI**5
tauola2.4.F:      PT(1)=0.
tauola2.4.F:      CALL RANMAR(RR1,1)
tauola2.4.F:      IF(JKST.EQ.10)THEN
tauola2.4.F:        AMS1=(AMPI+AMKZ)**2
tauola2.4.F:C       AMX2=AMS1+   RR1*(AMS2-AMS1)
tauola2.4.F:C       PHSPAC=PHSPAC*(AMS2-AMS1)
tauola2.4.F:        ALP1=ATAN((AMS1-AMKST**2)/AMKST/GAMKST)
tauola2.4.F:        ALP=ALP1+RR1*(ALP2-ALP1)
tauola2.4.F:        PHSPAC=PHSPAC*(ALP2-ALP1)
tauola2.4.F:        PN(1)=0
tauola2.4.F:        PN(4)=1./(2*AMTAU)*(AMTAU**2+AMNUTA**2-AMX**2)
tauola2.4.F:        PKS(1)=0
tauola2.4.F:        PKS(4)=1./(2*AMTAU)*(AMTAU**2-AMNUTA**2+AMX**2)
tauola2.4.F:        DO 20 I=1,3
tauola2.4.F:        DO 30 I=1,4
tauola2.4.F:        PKSD =PKS(4)*PKS(4)-PKS(3)*PKS(3)-PKS(2)*PKS(2)-PKS(1)*PKS(1)
tauola2.4.F:        QQPKS=PKS(4)* QQ(4)-PKS(3)* QQ(3)-PKS(2)* QQ(2)-PKS(1)* QQ(1)
tauola2.4.F:        DO 31 I=1,4
tauola2.4.F:31      QQ(I)=QQ(I)-PKS(I)*QQPKS/PKSD
tauola2.4.F:        PRODNQ=PN(4)*QQ(4)-PN(1)*QQ(1)-PN(2)*QQ(2)-PN(3)*QQ(3)
tauola2.4.F:        QQ2= QQ(4)**2-QQ(1)**2-QQ(2)**2-QQ(3)**2
tauola2.4.F:        DGAMT=1/(2.*AMTAU)*AMPLIT*PHSPAC
tauola2.4.F:        DO 40 I=1,3
tauola2.4.F:        AMS1=(AMPIZ+AMK)**2
tauola2.4.F:C       AMX2=AMS1+   RR1*(AMS2-AMS1)
tauola2.4.F:C       PHSPAC=PHSPAC*(AMS2-AMS1)
tauola2.4.F:        ALP1=ATAN((AMS1-AMKST**2)/AMKST/GAMKST)
tauola2.4.F:        ALP=ALP1+RR1*(ALP2-ALP1)
tauola2.4.F:        PHSPAC=PHSPAC*(ALP2-ALP1)
tauola2.4.F:        PN(1)=0
tauola2.4.F:        PN(4)=1./(2*AMTAU)*(AMTAU**2+AMNUTA**2-AMX**2)
tauola2.4.F:        PKS(1)=0
tauola2.4.F:        PKS(4)=1./(2*AMTAU)*(AMTAU**2-AMNUTA**2+AMX**2)
tauola2.4.F:        DO 50 I=1,3
tauola2.4.F:        DO 60 I=1,4
tauola2.4.F:        PKSD =PKS(4)*PKS(4)-PKS(3)*PKS(3)-PKS(2)*PKS(2)-PKS(1)*PKS(1)
tauola2.4.F:        QQPKS=PKS(4)* QQ(4)-PKS(3)* QQ(3)-PKS(2)* QQ(2)-PKS(1)* QQ(1)
tauola2.4.F:        DO 61 I=1,4
tauola2.4.F:61      QQ(I)=QQ(I)-PKS(I)*QQPKS/PKSD
tauola2.4.F:        PRODNQ=PN(4)*QQ(4)-PN(1)*QQ(1)-PN(2)*QQ(2)-PN(3)*QQ(3)
tauola2.4.F:        QQ2= QQ(4)**2-QQ(1)**2-QQ(2)**2-QQ(3)**2
tauola2.4.F:        DGAMT=1/(2.*AMTAU)*AMPLIT*PHSPAC
tauola2.4.F:        DO 70 I=1,3
tauola2.4.F:C     called by : DEXAY,DEXAY1
tauola2.4.F:      IF(MODE.EQ.-1) THEN
tauola2.4.F:        DO 1 JNPI=1,NMODE
tauola2.4.F:C         CALL HBOOK1(1070+10*JNPI+1,
tauola2.4.F:C    &    'NEUTRINO ENERGY FROM MULTIPI$', 100,.0,50.,.0)
tauola2.4.F:C         CALL HBOOK1(1070+10*JNPI+2,
tauola2.4.F:C    &    'VIRTUAL W MASS  FROM MULTIPI$', 100,.0,2.0,0.)
tauola2.4.F:1       CONTINUE
tauola2.4.F:        CALL DADNPIx(-1,ISGN,PNU,PWB,PNPI,JNPI)
tauola2.4.F:      ELSEIF(MODE.EQ. 1) THEN
tauola2.4.F:        CALL DADNPIx(1,ISGN,PNU,PWB,PNPI,JNPI)
tauola2.4.F:     *                 ,AMPIZ,AMPI,AMRO,GAMRO,AMA1,GAMA1
tauola2.4.F:     *                 ,AMPIZ,AMPI,AMRO,GAMRO,AMA1,GAMA1
tauola2.4.F:      REAL*4 PDUM1(4),PDUM2(4),PDUMI(4,6)
tauola2.4.F:      CHARACTER TITLE(4)*31
tauola2.4.F:      DATA PI /3.141592653589793238462643/
tauola2.4.F:      IF(MODE.EQ.-1) THEN
tauola2.4.F:        IWARM=1
tauola2.4.F:        TITLE(1)='  TAU-  --> 2PI-,  PI+,  PI0   '
tauola2.4.F:        DO 1 JNPI=3,NMODE
tauola2.4.F:        WTMAX(JNPI)=-1.
tauola2.4.F:        DO 3 I=1,500
tauola2.4.F:        CALL DPHNPIx(WT,PDUM1,PDUM2,PDUMI,JNPI)
tauola2.4.F:        IF(WT.GT.WTMAX(JNPI)/1.2) WTMAX(JNPI)=WT*1.2
tauola2.4.F:C       CALL HBOOK1(801,'WEIGHT DISTRIBUTION  DADNPIx    $',100,0.,2.,.0)
tauola2.4.F:1       CONTINUE
tauola2.4.F:C        CALL RANMAR(RM,1)
tauola2.4.F:C        DO 200 JNPI=1,NMODE
tauola2.4.F:C        IF(RM.LT.CBRNPI(JNPI)) GO TO 210
tauola2.4.F:C210     CONTINUE
tauola2.4.F:C       CALL HFILL(801,WT/WTMAX(JNPI))
tauola2.4.F:        NEVRAW(JNPI)=NEVRAW(JNPI)+1
tauola2.4.F:        RN=RRR(1)
tauola2.4.F:        IF(WT.GT.WTMAX(JNPI)) NEVOVR(JNPI)=NEVOVR(JNPI)+1
tauola2.4.F:        COSTHE=-1.+2.*RRR(2)
tauola2.4.F:        DO 301 I=1,ND
tauola2.4.F:        CALL ROTOR2x(THET,PNPI(1,I),PNPI(1,I))
tauola2.4.F:        CALL ROTOR3x( PHI,PNPI(1,I),PNPI(1,I))
tauola2.4.F:301     CONTINUE
tauola2.4.F:        NEVACC(JNPI)=NEVACC(JNPI)+1
tauola2.4.F:      ELSEIF(MODE.EQ. 1) THEN
tauola2.4.F:          PARGAM=SWT(JNPI)/FLOAT(NEVRAW(JNPI)+1)
tauola2.4.F:     &    ERROR=SQRT(SSWT(JNPI)/SWT(JNPI)**2-1./FLOAT(NEVRAW(JNPI)))
tauola2.4.F:          WRITE(*, 7010) TITLE(JNPI),
tauola2.4.F:CC        CALL HPRINT(801)
tauola2.4.F:          GAMPMC(8+JNPI-1)=RAT
tauola2.4.F:          GAMPER(8+JNPI-1)=ERROR
tauola2.4.F:CAM       NEVDEC(8+JNPI-1)=NEVACC(JNPI)
tauola2.4.F: 7003 FORMAT(///1X,15(5H*****)
tauola2.4.F:     $ /,' *',     25X,'******** DADNPIx INITIALISATION ********',9X,1H*
tauola2.4.F: 7004 FORMAT(' *',E20.5,5X,'WTMAX  = MAXIMUM WEIGHT  ',9X,1H*/)
tauola2.4.F:     $  /,1X,15(5H*****)/)
tauola2.4.F: 7010 FORMAT(///1X,15(5H*****)
tauola2.4.F:     $ /,' *',     25X,'******** DADNPIx FINAL REPORT  ******** ',9X,1H*
tauola2.4.F:     $ /,' *',     25X,'CHANNEL:',A31                           ,9X,1H*
tauola2.4.F:     $ /,' *',I20  ,5X,'NEVRAW = NO. OF DECAYS TOTAL           ',9X,1H*
tauola2.4.F:     $ /,' *',I20  ,5X,'NEVACC = NO. OF DECAYS ACCEPTED        ',9X,1H*
tauola2.4.F:     $ /,' *',I20  ,5X,'NEVOVR = NO. OF OVERWEIGHTED EVENTS    ',9X,1H*
tauola2.4.F:     $ /,' *',E20.5,5X,'PARTIAL WTDTH IN GEV UNITS             ',9X,1H*
tauola2.4.F:     $ /,' *',F20.9,5X,'IN UNITS GFERMI**2*MASS**5/192/PI**3   ',9X,1H*
tauola2.4.F:     $ /,' *',F20.8,5X,'RELATIVE ERROR OF PARTIAL WIDTH        ',9X,1H*
tauola2.4.F:     $  /,1X,15(5H*****)/)
tauola2.4.F:     *                 ,AMPIZ,AMPI,AMRO,GAMRO,AMA1,GAMA1
tauola2.4.F:     *                 ,AMPIZ,AMPI,AMRO,GAMRO,AMA1,GAMA1
tauola2.4.F:      DATA PI /3.141592653589793238462643/
tauola2.4.F:      PT(1)=0.
tauola2.4.F:      PHSPAC = 1./2.**5 /PI**2
tauola2.4.F:      DO 4 I=1,ND
tauola2.4.F:      CALL RANMAR(RR1,1)
tauola2.4.F:      AMS1=PS**2
tauola2.4.F:      AMX2=AMS1+   RR1*(AMS2-AMS1)
tauola2.4.F:      PHSPAC=PHSPAC * (AMS2-AMS1)
tauola2.4.F:      PN(1)=0
tauola2.4.F:      PN(4)=1./(2*AMTAU)*(AMTAU**2+AMNUTA**2-AMX2)
tauola2.4.F:      PR(1)=0
tauola2.4.F:      PR(4)=1./(2*AMTAU)*(AMTAU**2-AMNUTA**2+AMX2)
tauola2.4.F:C AMPLITUDE  (cf YS.Tsai Phys.Rev.D4,2821(1971)
tauola2.4.F:C    or F.Gilman SH.Rhie Phys.Rev.D31,1066(1985)
tauola2.4.F:        QXN=PR(4)*PN(4)-PR(1)*PN(1)-PR(2)*PN(2)-PR(3)*PN(3)
tauola2.4.F:C HERE WAS AN ERROR. 20.10.91 (ZW)
tauola2.4.F:      DGAMT=1./(2.*AMTAU)*AMPLIT*PHSPAC
tauola2.4.F:      PHSMAX = 1.
tauola2.4.F:      DO 200 I=1,4
tauola2.4.F:  200 PV(I,1)=PR(I)
tauola2.4.F:      PV(5,1)=AMW
tauola2.4.F:      DO 220 IL=ND-1,1,-1
tauola2.4.F:      PMIN=PMIN+AMAS(IL+1,JNPI)
tauola2.4.F:  100 CONTINUE
tauola2.4.F:      PHS=1.
tauola2.4.F:      PHSPAC = 1./2.**(6*ND-7) /PI**(3*ND-4)
tauola2.4.F:      DO 230 IL=1,ND-2
tauola2.4.F:      AMS1=.0
tauola2.4.F:      DO 231 JL=IL+1,ND
tauola2.4.F:  231 AMS1=AMS1+AMAS(JL,JNPI)
tauola2.4.F:      AMS1=AMS1**2
tauola2.4.F:      RR1=RRR(IL)
tauola2.4.F:      AMX2=AMS1+  RR1*(AMS2-AMS1)
tauola2.4.F:      PV(5,IL+1)=AMX
tauola2.4.F:      PHSPAC=PHSPAC * (AMS2-AMS1)
tauola2.4.F:      PA=PAWT(PV(5,IL),PV(5,IL+1),AMAS(IL,JNPI))
tauola2.4.F:      CALL RANMAR(RN,1)
tauola2.4.F:      IF(RN*PHSMAX.GT.PHS) GO TO 100
tauola2.4.F:  280 DO 300 IL=1,ND-1
tauola2.4.F:      PA=PAWT(PV(5,IL),PV(5,IL+1),AMAS(IL,JNPI))
tauola2.4.F:      UE(3)=2.*RRR(1)-1.
tauola2.4.F:      UE(1)=SQRT(1.-UE(3)**2)*COS(PHI)
tauola2.4.F:      UE(2)=SQRT(1.-UE(3)**2)*SIN(PHI)
tauola2.4.F:      DO 290 J=1,3
tauola2.4.F:  290 PV(J,IL+1)=-PA*UE(J)
tauola2.4.F:      PV(4,IL+1)=SQRT(PA**2+PV(5,IL+1)**2)
tauola2.4.F:      DO 310 J=1,4
tauola2.4.F:  310 PPI(J,ND)=PV(J,ND)
tauola2.4.F:      DO 340 IL=ND-1,1,-1
tauola2.4.F:      DO 320 J=1,3
tauola2.4.F:      BEP=BE(1)*PPI(1,I)+BE(2)*PPI(2,I)+BE(3)*PPI(3,I)
tauola2.4.F:      DO 330 J=1,3
tauola2.4.F:  330 PPI(J,I)=PPI(J,I)+GAM*(GAM*BEP/(1.+GAM)+PPI(4,I))*BE(J)
tauola2.4.F:C  e+e- cross section in the (1.GEV2,AMTAU**2) region
tauola2.4.F:C  cf YS.Tsai        Phys.Rev D4 ,2821(1971)
tauola2.4.F:C     F.Gilman et al Phys.Rev D17,1846(1978)
tauola2.4.F:C     C.Kiesling, to be pub. in High Energy e+e- Physics (1988)
tauola2.4.F:C  DATSIG(*,1) = e+e- -> pi+pi-2pi0
tauola2.4.F:C                (Phys Lett 78B,623(1978)
tauola2.4.F:     *                 ,AMPIZ,AMPI,AMRO,GAMRO,AMA1,GAMA1
tauola2.4.F:     *                 ,AMPIZ,AMPI,AMRO,GAMRO,AMA1,GAMA1
tauola2.4.F:      REAL*4 DATSIG(17,4)
tauola2.4.F:     1  7.40,12.00,16.15,21.25,24.90,29.55,34.15,37.40,37.85,37.40,
tauola2.4.F:     2 36.00,33.25,30.50,27.70,24.50,21.25,18.90,
tauola2.4.F:     3  1.24, 2.50, 3.70, 5.40, 7.45,10.75,14.50,18.20,22.30,28.90,
tauola2.4.F:     4 29.35,25.60,22.30,18.60,14.05,11.60, 9.10,
tauola2.4.F:     5 17*.0,
tauola2.4.F:     6 9*.0,.65,1.25,2.20,3.15,5.00,5.75,7.80,8.25/
tauola2.4.F:      DATA PI /3.141592653589793238462643/
tauola2.4.F:        INIT=1
tauola2.4.F:        DO 100 I=1,17
tauola2.4.F:        DATSIG(I,1) = DATSIG(I,1) + DATSIG(I,2)
tauola2.4.F:        S = 1.025+(I-1)*.05
tauola2.4.F:        DO 200 J=1,17
tauola2.4.F:        T= 1.025+(J-1)*.05
tauola2.4.F:        IF(T . GT. S-AMPI ) GO TO 201
tauola2.4.F:        FACT = FACT * (DATSIG(J,1)+DATSIG(J+1,1))
tauola2.4.F: 201    DATSIG(I,3) = DATSIG(I,3) /(2*PI*FPI)**2
tauola2.4.F: 100    CONTINUE
tauola2.4.F:C       WRITE(6,1000) DATSIG
tauola2.4.F: 1000   FORMAT(///1X,' EE SIGMA USED IN MULTIPI DECAYS'/
tauola2.4.F:     %        (17F7.2/))
tauola2.4.F:      QMIN=1.
tauola2.4.F:        SIGEEx=DATSIG(1,JNPI)+
tauola2.4.F:     &       (DATSIG(2,JNPI)-DATSIG(1,JNPI))*(Q-1.)/.05
tauola2.4.F:      ELSEIF(Q.LT.1.8) THEN
tauola2.4.F:        DO 1 I=1,16
tauola2.4.F: 1      CONTINUE
tauola2.4.F:     &       (DATSIG(I+1,JNPI)-DATSIG(I,JNPI)) * (Q-QMIN)/.05
tauola2.4.F:      ELSEIF(Q.GT.1.8) THEN
tauola2.4.F:        SIGEEx=DATSIG(17,JNPI)+
tauola2.4.F:     &       (DATSIG(17,JNPI)-DATSIG(16,JNPI)) * (Q-1.8)/.05
tauola2.4.F:      SUBROUTINE DEXPKx(MODE,ISGN,POL,PNU,PAA,PIM1,PIM2,PIPL,JAA)
tauola2.4.F:* INTO NU A1, NEXT A1 DECAYS INTO RHO PI AND FINALLY RHO INTO PI PI.
tauola2.4.F:*                      PAA   A1
tauola2.4.F:*                      PIM1  PION MINUS (OR PI0) 1      (FOR TAU MINUS)
tauola2.4.F:*                      (PIPL,PIM1) FORM A RHO
tauola2.4.F:      REAL  POL(4),HV(4),PAA(4),PNU(4),PIM1(4),PIM2(4),PIPL(4)
tauola2.4.F:      IF(MODE.EQ.-1) THEN
tauola2.4.F:        IWARM=1
tauola2.4.F:        CALL DADMPKx( -1,ISGN,HV,PNU,PAA,PIM1,PIM2,PIPL,JAA)
tauola2.4.F:CC      CALL HBOOK1(816,'WEIGHT DISTRIBUTION  DEXAAx    $',100,-2.,2.)
tauola2.4.F:        CALL DADMPKx(  0,ISGN,HV,PNU,PAA,PIM1,PIM2,PIPL,JAA)
tauola2.4.F:        WT=(1+POL(1)*HV(1)+POL(2)*HV(2)+POL(3)*HV(3))/2.
tauola2.4.F:CC      CALL HFILL(816,WT)
tauola2.4.F:        CALL RANMAR(RN,1)
tauola2.4.F:      ELSEIF(MODE.EQ. 1) THEN
tauola2.4.F:        CALL DADMPKx(  1,ISGN,HV,PNU,PAA,PIM1,PIM2,PIPL,JAA)
tauola2.4.F:CC      CALL HPRINT(816)
tauola2.4.F:      SUBROUTINE DADMPKx(MODE,ISGN,HHV,PNU,PAA,PIM1,PIM2,PIPL,JAA)
tauola2.4.F:* A1 DECAY UNWEIGHTED EVENTS
tauola2.4.F:     *                 ,AMPIZ,AMPI,AMRO,GAMRO,AMA1,GAMA1
tauola2.4.F:     *                 ,AMPIZ,AMPI,AMRO,GAMRO,AMA1,GAMA1
tauola2.4.F:      REAL  HV(4),PAA(4),PNU(4),PIM1(4),PIM2(4),PIPL(4)
tauola2.4.F:      REAL  PDUM1(4),PDUM2(4),PDUM3(4),PDUM4(4),PDUM5(4)
tauola2.4.F:      DATA PI /3.141592653589793238462643/
tauola2.4.F:      CHARACTER TITLE(8)*31
tauola2.4.F:      IF(MODE.EQ.-1) THEN
tauola2.4.F:        IWARM=1
tauola2.4.F:        TITLE(1)='  TAU-  -->  K-, PI-,  K+      '
tauola2.4.F:        DO 1 INUM=1,8
tauola2.4.F:        WTMAX(INUM)=1E-20
tauola2.4.F:        DO 15 I=1,500
tauola2.4.F:        CALL DPHSPKx(WT,HV,PDUM1,PDUM2,PDUM3,PDUM4,PDUM5,INUM)
tauola2.4.F:        IF(WT.GT.WTMAX(INUM)/1.2) WTMAX(INUM)=WT*1.2
tauola2.4.F:15      CONTINUE
tauola2.4.F:CC      CALL HBOOK1(801,'WEIGHT DISTRIBUTION  DADMPKx    $',100,0,2)
tauola2.4.F:  1     CONTINUE
tauola2.4.F:        CALL DPHSPKx(WT,HV,PNU,PAA,PIM1,PIM2,PIPL,JAA)
tauola2.4.F:CC      CALL HFILL(801,WT/WTMAX)
tauola2.4.F:        NEVRAW(JAA)=NEVRAW(JAA)+1
tauola2.4.F:        RN=RRR(1)
tauola2.4.F:        IF(WT.GT.WTMAX(JAA)) NEVOVR(JAA)=NEVOVR(JAA)+1
tauola2.4.F:        COSTHE=-1.+2.*RRR(2)
tauola2.4.F:        CALL ROTPOLx(THET,PHI,PIM1)
tauola2.4.F:        DO 44 I=1,3
tauola2.4.F:        NEVACC(JAA)=NEVACC(JAA)+1
tauola2.4.F:      ELSEIF(MODE.EQ. 1) THEN
tauola2.4.F:        DO 500 INUM=1,8
tauola2.4.F:        PARGAM=SWT(INUM)/FLOAT(NEVRAW(INUM)+1)
tauola2.4.F:     $  ERROR=SQRT(SSWT(INUM)/SWT(INUM)**2-1./FLOAT(NEVRAW(INUM)))
tauola2.4.F:        WRITE(*, 7010) TITLE(INUM),
tauola2.4.F:CC      CALL HPRINT(801)
tauola2.4.F:        GAMPMC(11+INUM)=RAT
tauola2.4.F:        GAMPER(11+INUM)=ERROR
tauola2.4.F:CAM     NEVDEC(11+INUM)=NEVACC(INUM)
tauola2.4.F: 7003 FORMAT(///1X,15(5H*****)
tauola2.4.F:     $ /,' *',     25X,'******** DADMPKx INITIALISATION ********',9X,1H*
tauola2.4.F:     $ /,' *',E20.5,5X,'WTMAX  = MAXIMUM WEIGHT                ',9X,1H*
tauola2.4.F:     $  /,1X,15(5H*****)/)
tauola2.4.F: 7010 FORMAT(///1X,15(5H*****)
tauola2.4.F:     $ /,' *',     25X,'******** DADMPKx FINAL REPORT  ******** ',9X,1H*
tauola2.4.F:     $ /,' *',     25X,'CHANNEL:',A31                           ,9X,1H*
tauola2.4.F:     $ /,' *',I20  ,5X,'NEVRAW = NO. OF DECAYS TOTAL           ',9X,1H*
tauola2.4.F:     $ /,' *',I20  ,5X,'NEVACC = NO. OF DECAYS ACCEPTED        ',9X,1H*
tauola2.4.F:     $ /,' *',I20  ,5X,'NEVOVR = NO. OF OVERWEIGHTED EVENTS    ',9X,1H*
tauola2.4.F:     $ /,' *',E20.5,5X,'PARTIAL WTDTH IN GEV UNITS             ',9X,1H*
tauola2.4.F:     $ /,' *',F20.9,5X,'IN UNITS GFERMI**2*MASS**5/192/PI**3   ',9X,1H*
tauola2.4.F:     $ /,' *',F20.8,5X,'RELATIVE ERROR OF PARTIAL WIDTH        ',9X,1H*
tauola2.4.F:     $  /,1X,15(5H*****)/)
tauola2.4.F:      SUBROUTINE DPHSPKx(DGAMT,HV,PN,PAA,PIM1,PIM2,PIPL,JAA)
tauola2.4.F:      REAL  HV(4),PN(4),PAA(4),PIM1(4),PIM2(4),PIPL(4)
tauola2.4.F:       AMP1=APKMASx(1,JAA)
tauola2.4.F:     $DPHTREx(DGAMT,HV,PN,PAA,PIM1,AMP1,PIM2,AMP2,PIPL,AMP3,KEYT,MNUM)
tauola2.4.F:     *                 ,AMPIZ,AMPI,AMRO,GAMRO,AMA1,GAMA1
tauola2.4.F:     *                 ,AMPIZ,AMPI,AMRO,GAMRO,AMA1,GAMA1
tauola2.4.F:      IF      (IDENT.EQ. 1) THEN
tauola2.4.F:      ELSEIF  (IDENT.EQ.-1) THEN
tauola2.4.F:        APKMASx=0.0001
tauola2.4.F:        APKMASx=0.0001
tauola2.4.F:      COMMON / TAUKLE / BRA1,BRK0,BRK0B,BRKS
tauola2.4.F:      REAL*4            BRA1,BRK0,BRK0B,BRKS
tauola2.4.F:      IF      (IDENT.EQ. 1) THEN
tauola2.4.F:        IPKDEFx=-211
tauola2.4.F:      ELSEIF  (IDENT.EQ.-1) THEN
tauola2.4.F:        IPKDEFx= 211
tauola2.4.F:        IPKDEFx=111
tauola2.4.F:        IPKDEFx=111
tauola2.4.F:        IPKDEFx=-321
tauola2.4.F:        IPKDEFx= 321
tauola2.4.F:C K0 --> K0_LONG (IS 130) / K0_SHORT (IS 310) = 1/1
tauola2.4.F:        CALL RANMAR(XIO,1)
tauola2.4.F:          IPKDEFx= 130
tauola2.4.F:          IPKDEFx= 310
tauola2.4.F:C K0B--> K0_LONG (IS 130) / K0_SHORT (IS 310) = 1/1
tauola2.4.F:        CALL RANMAR(XIO,1)
tauola2.4.F:          IPKDEFx= 130
tauola2.4.F:          IPKDEFx= 310
tauola2.4.F:        IPKDEFx= 221
tauola2.4.F:        IPKDEFx= 221
tauola2.4.F:     $DPHTREx(DGAMT,HV,PN,PAA,PIM1,AMPA,PIM2,AMPB,PIPL,AMP3,KEYT,MNUM)
tauola2.4.F:* IT SIMULATES A1  DECAY IN TAU REST FRAME WITH
tauola2.4.F:* Z-AXIS ALONG A1  MOMENTUM
tauola2.4.F:*  2   - flat phase space PIM1 PIM2 symmetrized statistical factor 1/2
tauola2.4.F:*  1   - like 1 but peaked around a1 and rho (two channels) masses.
tauola2.4.F:* AMP1 - mass of first pi, etc. (1-3)
tauola2.4.F:*  0   - a1 matrix element
tauola2.4.F:* 1-6  - matrix element for K pi pi, K K pi decay modes
tauola2.4.F:     *                 ,AMPIZ,AMPI,AMRO,GAMRO,AMA1,GAMA1
tauola2.4.F:     *                 ,AMPIZ,AMPI,AMRO,GAMRO,AMA1,GAMA1
tauola2.4.F:      REAL  HV(4),PT(4),PN(4),PAA(4),PIM1(4),PIM2(4),PIPL(4)
tauola2.4.F:      DATA PI /3.141592653589793238462643/
tauola2.4.F:      PHSPAC=1./2**17/PI**8
tauola2.4.F:      PT(1)=0.
tauola2.4.F:      CALL CHOICEx(MNUM,RR,ICHAN,PROB1,PROB2,PROB3,
tauola2.4.F:      IF     (ICHAN.EQ.1) THEN
tauola2.4.F:        AMP1=AMPB
tauola2.4.F:        AMP1=AMPA
tauola2.4.F:        AMP1=AMPB
tauola2.4.F:        RR1=RRR(1)
tauola2.4.F:        AMS1=(AMP1+AMP2+AMP3)**2
tauola2.4.F:* PHASE SPACE WITH SAMPLING FOR A1  RESONANCE
tauola2.4.F:        ALP1=ATAN((AMS1-AMRX**2)/AMRX/GAMRX)
tauola2.4.F:        ALP=ALP1+RR1*(ALP2-ALP1)
tauola2.4.F:        PHSPAC=PHSPAC*(ALP2-ALP1)
tauola2.4.F:        AMS1=(AMP2+AMP3)**2
tauola2.4.F:        AMS2=(AM3-AMP1)**2
tauola2.4.F:        ALP1=ATAN((AMS1-AMRA**2)/AMRA/GAMRA)
tauola2.4.F:        ALP=ALP1+RR2*(ALP2-ALP1)
tauola2.4.F:C     PHSPAC=PHSPAC*(ALP2-ALP1)
tauola2.4.F:        AM2SQ=AMS1+   RR2*(AMS2-AMS1)
tauola2.4.F:        PHF0=(AMS2-AMS1)
tauola2.4.F:* RHO RESTFRAME, DEFINE PIPL AND PIM1
tauola2.4.F:        ENQ1=(AM2SQ-AMP2**2+AMP3**2)/(2*AM2)
tauola2.4.F:        PPI=         ENQ1**2-AMP3**2
tauola2.4.F:        PPPI=SQRT(ABS(ENQ1**2-AMP3**2))
tauola2.4.F:        PHF1=(4*PI)*(2*PPPI/AM2)
tauola2.4.F:        PIPL(4)=ENQ1
tauola2.4.F:* PI0 1 MOMENTUM IN RHO REST FRAME
tauola2.4.F:        DO 30 I=1,3
tauola2.4.F: 30     PIM1(I)=-PIPL(I)
tauola2.4.F:        PIM1(4)=ENQ2
tauola2.4.F:* A1 REST FRAME, DEFINE PIM2
tauola2.4.F:        PR(1)=0
tauola2.4.F:        PR(4)=1./(2*AM3)*(AM3**2+AM2**2-AMP1**2)
tauola2.4.F:        PIM2(1)=0
tauola2.4.F:        PIM2(4)=1./(2*AM3)*(AM3**2-AM2**2+AMP1**2)
tauola2.4.F:* OLD PIONS BOOSTED FROM RHO REST FRAME TO A1 REST FRAME
tauola2.4.F:      CALL BOSTR3x(EXE,PIM1,PIM1)
tauola2.4.F:      THET =ACOS(-1.+2*RR3)
tauola2.4.F:      CALL ROTPOLx(THET,PHI,PIM1)
tauola2.4.F:* NOW TO THE TAU REST FRAME, DEFINE A1 AND NEUTRINO MOMENTA
tauola2.4.F:* A1  MOMENTUM
tauola2.4.F:      PAA(1)=0
tauola2.4.F:      PAA(4)=1./(2*AMTAU)*(AMTAU**2-AMNUTA**2+AM3**2)
tauola2.4.F:      PN(1)=0
tauola2.4.F:      PN(4)=1./(2*AMTAU)*(AMTAU**2+AMNUTA**2-AM3**2)
tauola2.4.F:C ---FIRST CHANNEL ------- PIM1+PIPL
tauola2.4.F:        AMS1=(AMP2+AMP3)**2
tauola2.4.F:        AMS2=(AM3-AMP1)**2
tauola2.4.F:        ALP1=ATAN((AMS1-AMRA**2)/AMRA/GAMRA)
tauola2.4.F:       XPRO =      (PIM1(3)+PIPL(3))**2
tauola2.4.F:     $            +(PIM1(2)+PIPL(2))**2+(PIM1(1)+PIPL(1))**2
tauola2.4.F:       AM2SQ=-XPRO+(PIM1(4)+PIPL(4))**2
tauola2.4.F:       FF1   =       ((AM2SQ-AMRA**2)**2+(AMRA*GAMRA)**2)/(AMRA*GAMRA)
tauola2.4.F:       FF1   =FF1     *(ALP2-ALP1)
tauola2.4.F:       GG1   =       (4*PI)*(XLAM(AM2SQ,AMP2**2,AMP3**2)/AM2SQ)
tauola2.4.F:C LAMBDA OF A1 DECAY
tauola2.4.F:       GG1   =GG1   *(4*PI)*SQRT(4*XPRO/AM3SQ)
tauola2.4.F:       XJAJE=GG1*(AMS2-AMS1)
tauola2.4.F:       AMS1=(AMP1+AMP3)**2
tauola2.4.F:        ALP1=ATAN((AMS1-AMRB**2)/AMRB/GAMRB)
tauola2.4.F:     $            +(PIM2(2)+PIPL(2))**2+(PIM2(1)+PIPL(1))**2
tauola2.4.F:       FF2   =FF2     *(ALP2-ALP1)
tauola2.4.F:       GG2   =       (4*PI)*(XLAM(AM2SQ,AMP1**2,AMP3**2)/AM2SQ)
tauola2.4.F:       XJADW=GG2*(AMS2-AMS1)
tauola2.4.F:       A1=0.0
tauola2.4.F:       XJAC1=FF1*GG1
tauola2.4.F:       IF (XJAC1.NE.0.0) A1=PROB1/XJAC1
tauola2.4.F:       IF (A1+A2+A3.NE.0.0) THEN
tauola2.4.F:         PHSPAC=PHSPAC/(A1+A2+A3)
tauola2.4.F:        DO 70 I=1,4
tauola2.4.F:        X=PIM1(I)
tauola2.4.F:        PIM1(I)=PIM2(I)
tauola2.4.F:* ALL PIONS BOOSTED FROM A1  REST FRAME TO TAU REST FRAME
tauola2.4.F:      CALL BOSTR3x(EXE,PIM1,PIM1)
tauola2.4.F:        CALL DAMPOGx(PT,PN,PIM1,PIM2,PIPL,AMPLIT,HV)
tauola2.4.F:C        CALL DAMPAAx(PT,PN,PIM1,PIM2,PIPL,AMPLIT,HV)
tauola2.4.F:        CALL DAMPPKx(MNUM,PT,PN,PIM1,PIM2,PIPL,AMPLIT,HV)
tauola2.4.F:      IF (KEYT.EQ.1.OR.KEYT.EQ.2) THEN
tauola2.4.F:C TWO, FOR TWO MODES OF A1 DECAY NAMELLY PI+PI-PI- AND PI-PI0PI0
tauola2.4.F:      DGAMT=1/(2.*AMTAU)*AMPLIT*PHSPAC
tauola2.4.F:      SUBROUTINE DAMPAAx(PT,PN,PIM1,PIM2,PIPL,AMPLIT,HV)
tauola2.4.F:* FOR TAU DECAY INTO A1, A1 DECAYS NEXT INTO RHO+PI AND RHO INTO PI+PI.
tauola2.4.F:     *                 ,AMPIZ,AMPI,AMRO,GAMRO,AMA1,GAMA1
tauola2.4.F:     *                 ,AMPIZ,AMPI,AMRO,GAMRO,AMA1,GAMA1
tauola2.4.F:      COMMON /TESTA1/ KEYA1
tauola2.4.F:      REAL  HV(4),PT(4),PN(4),PIM1(4),PIM2(4),PIPL(4)
tauola2.4.F:      REAL  PAA(4),VEC1(4),VEC2(4)
tauola2.4.F:      DATA ICONT /1/
tauola2.4.F:* F CONSTANTS FOR A1, A1-RHO-PI, AND RHO-PI-PI
tauola2.4.F:      BWIGN(XM,AM,GAMMA)=1./CMPLX(XM**2-AM**2,GAMMA*AM)
tauola2.4.F:* FOUR MOMENTUM OF A1
tauola2.4.F:      DO 10 I=1,4
tauola2.4.F:   10 PAA(I)=PIM1(I)+PIM2(I)+PIPL(I)
tauola2.4.F:* MASSES OF A1, AND OF TWO PI-PAIRS WHICH MAY FORM RHO
tauola2.4.F:      XMAA   =SQRT(ABS(PAA(4)**2-PAA(3)**2-PAA(2)**2-PAA(1)**2))
tauola2.4.F:      XMRO1  =SQRT(ABS((PIPL(4)+PIM1(4))**2-(PIPL(1)+PIM1(1))**2
tauola2.4.F:     $                -(PIPL(2)+PIM1(2))**2-(PIPL(3)+PIM1(3))**2))
tauola2.4.F:      XMRO2  =SQRT(ABS((PIPL(4)+PIM2(4))**2-(PIPL(1)+PIM2(1))**2
tauola2.4.F:      PROD1  =PAA(4)*(PIM1(4)-PIPL(4))-PAA(1)*(PIM1(1)-PIPL(1))
tauola2.4.F:     $       -PAA(2)*(PIM1(2)-PIPL(2))-PAA(3)*(PIM1(3)-PIPL(3))
tauola2.4.F:      PROD2  =PAA(4)*(PIM2(4)-PIPL(4))-PAA(1)*(PIM2(1)-PIPL(1))
tauola2.4.F:      DO 40 I=1,4
tauola2.4.F:      VEC1(I)= PIM1(I)-PIPL(I) -PAA(I)*PROD1/XMAA**2
tauola2.4.F:* HADRON CURRENT SATURATED WITH A1 AND RHO RESONANCES
tauola2.4.F:      IF (KEYA1.EQ.1) THEN
tauola2.4.F:        FA1=9.87
tauola2.4.F:        FAROPI=1.0
tauola2.4.F:        FRO2PI=1.0
tauola2.4.F:        FNORM=FA1/SQRT(2.)*FAROPI*FRO2PI
tauola2.4.F:        DO 45 I=1,4
tauola2.4.F:        HADCUR(I)= CMPLX(FNORM) *AMA1**2*BWIGN(XMAA,AMA1,GAMA1)
tauola2.4.F:     $              *(CMPLX(VEC1(I))*AMRO**2*BWIGN(XMRO1,AMRO,GAMRO)
tauola2.4.F:        GAMAX=GAMA1*GFUNx(XMAA**2)/GFUNx(AMA1**2)
tauola2.4.F:        DO 46 I=1,4
tauola2.4.F:        HADCUR(I)= CMPLX(FNORM) *AMA1**2*BWIGN(XMAA,AMA1,GAMAX)
tauola2.4.F:     $              *(CMPLX(VEC1(I))*FPIKx(XMRO1)
tauola2.4.F:C TWO, FOR TWO MODES OF A1 DECAY NAMELLY PI+PI-PI- AND PI-PI0PI0
tauola2.4.F:      DO 90 I=1,3
tauola2.4.F:C     G-FUNCTION USED TO INRODUCE ENERGY DEPENDENCE IN A1 WIDTH
tauola2.4.F:     *                 ,AMPIZ,AMPI,AMRO,GAMRO,AMA1,GAMA1
tauola2.4.F:     *                 ,AMPIZ,AMPI,AMRO,GAMRO,AMA1,GAMA1
tauola2.4.F:          GFUNx=4.1*(QKWA-9*AMPIZ**2)**3
tauola2.4.F:     $        *(1.-3.3*(QKWA-9*AMPIZ**2)+5.8*(QKWA-9*AMPIZ**2)**2)
tauola2.4.F:          GFUNx=QKWA*(1.623+10.38/QKWA-9.32/QKWA**2+0.65/QKWA**3)
tauola2.4.F:      INIT=1
tauola2.4.F:      PI=3.141592654
tauola2.4.F:      PIM=.139
tauola2.4.F:      INIT=1
tauola2.4.F:      PI=3.141592654
tauola2.4.F:      PIM=.139
tauola2.4.F:      REAL ROM,ROG,ROM1,ROG1,BETA1,PI,PIM,S,W
tauola2.4.F:      INIT=1
tauola2.4.F:      PI=3.141592654
tauola2.4.F:      PIM=.140
tauola2.4.F:      ROG=0.145
tauola2.4.F:      ROM1=1.370
tauola2.4.F:      ROG1=0.510
tauola2.4.F:      BETA1=-0.145
tauola2.4.F:      FPIKx= (BWIGx(S,ROM,ROG)+BETA1*BWIGx(S,ROM1,ROG1))
tauola2.4.F:     & /(1+BETA1)
tauola2.4.F:     $        -HJ(2)*CONJG(HJ(2))-HJ(1)*CONJG(HJ(1)))
tauola2.4.F:      DO 10 I=1,4
tauola2.4.F:   10 PIV(I)=4.*REAL(HN*CONJG(HJ(I)))-2.*HH*PN(I)
tauola2.4.F:      COMMON / JAKI   /  JAK1,JAK2,JAKP,JAKM,KTOM
tauola2.4.F:C -- here was an error (ZW, 21.11.1991)
tauola2.4.F:C -- it was affecting sign of A_LR asymmetry in a1 decay.
tauola2.4.F:C -- TAUOLA paper and J.H. Kuhn and Santamaria Z. Phys C 48 (1990) 445
tauola2.4.F:      IF     (KTOM.EQ.1.OR.KTOM.EQ.-1) THEN
tauola2.4.F:      DO 10 I=1,4
tauola2.4.F: 10   HJC(I)=CONJG(HJ(I))
tauola2.4.F:      PIA(1)= -2.*PN(3)*DET2(2,4)+2.*PN(4)*DET2(2,3)
tauola2.4.F:      PIA(2)= -2.*PN(4)*DET2(1,3)+2.*PN(3)*DET2(1,4)
tauola2.4.F:      PIA(3)=  2.*PN(4)*DET2(1,2)
tauola2.4.F:      PIA(4)=  2.*PN(3)*DET2(1,2)
tauola2.4.F:      DO 20 I=1,4
tauola2.4.F:      DATA P /3*0.,1.0/
tauola2.4.F:     &      - HJ(2)*AIMAG(HJ(2)) - HJ(1)*AIMAG(HJ(1))  )
tauola2.4.F:      SUBROUTINE DAMPOGx(PT,PN,PIM1,PIM2,PIPL,AMPLIT,HV)
tauola2.4.F:* FOR TAU DECAY INTO A1, A1 DECAYS NEXT INTO RHO+PI AND RHO INTO PI+PI.
tauola2.4.F:     *                 ,AMPIZ,AMPI,AMRO,GAMRO,AMA1,GAMA1
tauola2.4.F:     *                 ,AMPIZ,AMPI,AMRO,GAMRO,AMA1,GAMA1
tauola2.4.F:      COMMON /TESTA1/ KEYA1
tauola2.4.F:      REAL  HV(4),PT(4),PN(4),PIM1(4),PIM2(4),PIPL(4)
tauola2.4.F:      REAL  PAA(4),VEC1(4),VEC2(4)
tauola2.4.F:      DATA ICONT /1/
tauola2.4.F:      BWIGN(XM,AM,GAMMA)=1./CMPLX(XM**2-AM**2,GAMMA*AM)
tauola2.4.F:* FOUR MOMENTUM OF A1
tauola2.4.F:      DO 10 I=1,4
tauola2.4.F:      VEC1(I)=0.0
tauola2.4.F:   10 PAA(I)=PIM1(I)+PIM2(I)+PIPL(I)
tauola2.4.F:      VEC1(1)=1.0
tauola2.4.F:* MASSES OF A1, AND OF TWO PI-PAIRS WHICH MAY FORM RHO
tauola2.4.F:      XMAA   =SQRT(ABS(PAA(4)**2-PAA(3)**2-PAA(2)**2-PAA(1)**2))
tauola2.4.F:     $                 -(PIM2(2)+PIPL(2))**2-(PIM2(1)+PIPL(1))**2   ))
tauola2.4.F:      XMRO2  =(PIPL(1))**2 +(PIPL(2))**2 +(PIPL(3))**2
tauola2.4.F:      PROD1  =VEC1(1)*PIPL(1)
tauola2.4.F:      P12    =PIM1(4)*PIM2(4)-PIM1(1)*PIM2(1)
tauola2.4.F:     $       -PIM1(2)*PIM2(2)-PIM1(3)*PIM2(3)
tauola2.4.F:      P1PL   =PIM1(4)*PIPL(4)-PIM1(1)*PIPL(1)
tauola2.4.F:     $       -PIM1(2)*PIPL(2)-PIM1(3)*PIPL(3)
tauola2.4.F:      P2PL   =PIPL(4)*PIM2(4)-PIPL(1)*PIM2(1)
tauola2.4.F:      DO 40 I=1,3
tauola2.4.F:        VEC1(I)= (VEC1(I)-PROD1/XMRO2*PIPL(I))
tauola2.4.F:        GNORM=SQRT(VEC1(1)**2+VEC1(2)**2+VEC1(3)**2)
tauola2.4.F:      DO 41 I=1,3
tauola2.4.F:        VEC1(I)= VEC1(I)/GNORM
tauola2.4.F: 41   CONTINUE
tauola2.4.F:      VEC2(1)=(VEC1(2)*PIPL(3)-VEC1(3)*PIPL(2))/SQRT(XMRO2)
tauola2.4.F:      VEC2(2)=(VEC1(3)*PIPL(1)-VEC1(1)*PIPL(3))/SQRT(XMRO2)
tauola2.4.F:      VEC2(3)=(VEC1(1)*PIPL(2)-VEC1(2)*PIPL(1))/SQRT(XMRO2)
tauola2.4.F:      P1VEC1   =PIM1(4)*VEC1(4)-PIM1(1)*VEC1(1)
tauola2.4.F:     $         -PIM1(2)*VEC1(2)-PIM1(3)*VEC1(3)
tauola2.4.F:      P2VEC1   =VEC1(4)*PIM2(4)-VEC1(1)*PIM2(1)
tauola2.4.F:     $         -VEC1(2)*PIM2(2)-VEC1(3)*PIM2(3)
tauola2.4.F:      P1VEC2   =PIM1(4)*VEC2(4)-PIM1(1)*VEC2(1)
tauola2.4.F:     $         -PIM1(2)*VEC2(2)-PIM1(3)*VEC2(3)
tauola2.4.F:      P2VEC2   =VEC2(4)*PIM2(4)-VEC2(1)*PIM2(1)
tauola2.4.F:      DO 120 JJ=1,2
tauola2.4.F:        DO 45 I=1,4
tauola2.4.F:       IF (JJ.EQ.1) THEN
tauola2.4.F:     $             VEC1(I)*(AMPI**2*P1PL-P2PL*(P12-P1PL))
tauola2.4.F:     $            -PIM2(I)*(P2VEC1*P1PL-P1VEC1*P2PL)
tauola2.4.F:     $            +PIPL(I)*(P2VEC1*P12 -P1VEC1*(AMPI**2+P2PL))  )
tauola2.4.F:     $             VEC2(I)*(AMPI**2*P1PL-P2PL*(P12-P1PL))
tauola2.4.F:     $            -PIM2(I)*(P2VEC2*P1PL-P1VEC2*P2PL)
tauola2.4.F:     $            +PIPL(I)*(P2VEC2*P12 -P1VEC2*(AMPI**2+P2PL))  )
tauola2.4.F:      DO 90 I=1,3
tauola2.4.F: 120  CONTINUE
tauola2.4.F:C TWO, FOR TWO MODES OF A1 DECAY NAMELLY PI+PI-PI- AND PI-PI0PI0
tauola2.4.F:      DO 91 I=1,3
tauola2.4.F: 91   CONTINUE
tauola2.4.F:      SUBROUTINE DAMPPKx(MNUM,PT,PN,PIM1,PIM2,PIM3,AMPLIT,HV)
tauola2.4.F:     *                 ,AMPIZ,AMPI,AMRO,GAMRO,AMA1,GAMA1
tauola2.4.F:     *                 ,AMPIZ,AMPI,AMRO,GAMRO,AMA1,GAMA1
tauola2.4.F:      REAL  HV(4),PT(4),PN(4),PIM1(4),PIM2(4),PIM3(4)
tauola2.4.F:      REAL  PAA(4),VEC1(4),VEC2(4),VEC3(4),VEC4(4),VEC5(4)
tauola2.4.F:      REAL FNORM(0:7),COEF(1:5,0:7)
tauola2.4.F:      COMPLEX HADCUR(4),FORM1x,FORM2x,FORM3x,FORM4x,FORM5x,UROJ
tauola2.4.F:      EXTERNAL FORM1x,FORM2x,FORM3x,FORM4x,FORM5x
tauola2.4.F:      DATA PI /3.141592653589793238462643/
tauola2.4.F:       ICONT=1
tauola2.4.F:       UROJ=CMPLX(0.0,1.0)
tauola2.4.F:       FNORM(1)=CCABIB/FPI
tauola2.4.F:       COEF(1,0)= 2.0*SQRT(2.)/3.0
tauola2.4.F:       COEF(1,1)=-SQRT(2.)/3.0
tauola2.4.F:       COEF(2,1)= SQRT(2.)/3.0
tauola2.4.F:       COEF(3,1)= 0.0
tauola2.4.F:       COEF(4,1)= FPI
tauola2.4.F:       COEF(5,1)= SQRT(2.)
tauola2.4.F:       COEF(1,2)=-SQRT(2.)/3.0
tauola2.4.F:       COEF(1,3)= 0.0
tauola2.4.F:       COEF(2,3)=-1.0
tauola2.4.F:       COEF(1,4)= 1.0/SQRT(2.)/3.0
tauola2.4.F:       COEF(2,4)=-1.0/SQRT(2.)/3.0
tauola2.4.F:       COEF(1,5)=-SQRT(2.)/3.0
tauola2.4.F:       COEF(1,6)= 0.0
tauola2.4.F:       COEF(2,6)=-1.0
tauola2.4.F:       COEF(1,7)= 0.0
tauola2.4.F:      DO 10 I=1,4
tauola2.4.F:   10 PAA(I)=PIM1(I)+PIM2(I)+PIM3(I)
tauola2.4.F:      XMAA   =SQRT(ABS(PAA(4)**2-PAA(3)**2-PAA(2)**2-PAA(1)**2))
tauola2.4.F:      XMRO1  =SQRT(ABS((PIM3(4)+PIM2(4))**2-(PIM3(1)+PIM2(1))**2
tauola2.4.F:      XMRO2  =SQRT(ABS((PIM3(4)+PIM1(4))**2-(PIM3(1)+PIM1(1))**2
tauola2.4.F:     $                -(PIM3(2)+PIM1(2))**2-(PIM3(3)+PIM1(3))**2))
tauola2.4.F:      XMRO3  =SQRT(ABS((PIM1(4)+PIM2(4))**2-(PIM1(1)+PIM2(1))**2
tauola2.4.F:     $                -(PIM1(2)+PIM2(2))**2-(PIM1(3)+PIM2(3))**2))
tauola2.4.F:      PROD1  =PAA(4)*(PIM2(4)-PIM3(4))-PAA(1)*(PIM2(1)-PIM3(1))
tauola2.4.F:      PROD2  =PAA(4)*(PIM3(4)-PIM1(4))-PAA(1)*(PIM3(1)-PIM1(1))
tauola2.4.F:     $       -PAA(2)*(PIM3(2)-PIM1(2))-PAA(3)*(PIM3(3)-PIM1(3))
tauola2.4.F:      PROD3  =PAA(4)*(PIM1(4)-PIM2(4))-PAA(1)*(PIM1(1)-PIM2(1))
tauola2.4.F:     $       -PAA(2)*(PIM1(2)-PIM2(2))-PAA(3)*(PIM1(3)-PIM2(3))
tauola2.4.F:      DO 40 I=1,4
tauola2.4.F:      VEC1(I)= PIM2(I)-PIM3(I) -PAA(I)*PROD1/XMAA**2
tauola2.4.F:      VEC2(I)= PIM3(I)-PIM1(I) -PAA(I)*PROD2/XMAA**2
tauola2.4.F:      VEC3(I)= PIM1(I)-PIM2(I) -PAA(I)*PROD3/XMAA**2
tauola2.4.F: 40   VEC4(I)= PIM1(I)+PIM2(I)+PIM3(I)
tauola2.4.F:      CALL PROD5x(PIM1,PIM2,PIM3,VEC5)
tauola2.4.F:C be aware that sign of vec2 is opposite to sign of vec1 in a1 case
tauola2.4.F:      DO 45 I=1,4
tauola2.4.F:     $CMPLX(VEC1(I)*COEF(1,MNUM))*
tauola2.4.F:     $            FORM1x(MNUM,XMAA**2,XMRO1**2,XMRO2**2)+
tauola2.4.F:     $            FORM2x(MNUM,XMAA**2,XMRO2**2,XMRO1**2)+
tauola2.4.F:     $            FORM3x(MNUM,XMAA**2,XMRO3**2,XMRO1**2)+
tauola2.4.F:     *(-1.0*UROJ)*
tauola2.4.F:     $CMPLX(VEC4(I)*COEF(4,MNUM))*FORM4x(MNUM,XMAA**2,XMRO1**2,
tauola2.4.F:     $(-1.0)*UROJ/4.0/PI**2/FPI**2*
tauola2.4.F:     $            FORM5x(MNUM,XMAA**2,XMRO1**2,XMRO2**2))
tauola2.4.F:        ZNAK=-1.0
tauola2.4.F:        XM1=0.0
tauola2.4.F:        DO 77 K=1,4
tauola2.4.F:        IF (K.EQ.4) ZNAK=1.0
tauola2.4.F:        XM1=ZNAK*PIM1(K)**2+XM1
tauola2.4.F: 77     PRINT *, 'PIM1=',PIM1(K),'PIM2=',PIM2(K),'PIM3=',PIM3(K)
tauola2.4.F:        PRINT *, 'XM1=',SQRT(XM1),'XM2=',SQRT(XM2),'XM3=',SQRT(XM3)
tauola2.4.F:      DO 90 I=1,3
tauola2.4.F:      SUBROUTINE PROD5x(P1,P2,P3,PIA)
tauola2.4.F:C external product of P1, P2, P3 4-momenta.
tauola2.4.F:      COMMON / JAKI   /  JAK1,JAK2,JAKP,JAKM,KTOM
tauola2.4.F:      REAL PIA(4),P1(4),P2(4),P3(4)
tauola2.4.F:      DET2(I,J)=P1(I)*P2(J)-P2(I)*P1(J)
tauola2.4.F:      IF     (KTOM.EQ.1.OR.KTOM.EQ.-1) THEN
tauola2.4.F:C EPSILON( p1(1), p2(2), p3(3), (4) ) = 1
tauola2.4.F:      PIA(1)= -P3(3)*DET2(2,4)+P3(4)*DET2(2,3)+P3(2)*DET2(3,4)
tauola2.4.F:      PIA(2)= -P3(4)*DET2(1,3)+P3(3)*DET2(1,4)-P3(1)*DET2(3,4)
tauola2.4.F:      PIA(3)=  P3(4)*DET2(1,2)-P3(2)*DET2(1,4)+P3(1)*DET2(2,4)
tauola2.4.F:      PIA(4)=  P3(3)*DET2(1,2)-P3(2)*DET2(1,3)+P3(1)*DET2(2,3)
tauola2.4.F:      DO 20 I=1,4
tauola2.4.F:* INTO NU A1, NEXT A1 DECAYS INTO RHO PI AND FINALLY RHO INTO PI PI.
tauola2.4.F:*                      PAA   A1
tauola2.4.F:*                      PIM1  PION MINUS (OR PI0) 1      (FOR TAU MINUS)
tauola2.4.F:*                      (PIPL,PIM1) FORM A RHO
tauola2.4.F:      IF(MODE.EQ.-1) THEN
tauola2.4.F:        IWARM=1
tauola2.4.F:        CALL DAD4PIx( -1,ISGN,HV,PNU,PAA,PNPI,JDUMM)
tauola2.4.F:CC      CALL HBOOK1(816,'WEIGHT DISTRIBUTION  DEXAAx    $',100,-2.,2.)
tauola2.4.F:        WT=(1+POL(1)*HV(1)+POL(2)*HV(2)+POL(3)*HV(3))/2.
tauola2.4.F:CC      CALL HFILL(816,WT)
tauola2.4.F:        CALL RANMAR(RN,1)
tauola2.4.F:      ELSEIF(MODE.EQ. 1) THEN
tauola2.4.F:        CALL DAD4PIx( 1,ISGN,HV,PNU,PAA,PNPI,JDUMM)
tauola2.4.F:CC      CALL HPRINT(816)
tauola2.4.F:     *                 ,AMPIZ,AMPI,AMRO,GAMRO,AMA1,GAMA1
tauola2.4.F:     *                 ,AMPIZ,AMPI,AMRO,GAMRO,AMA1,GAMA1
tauola2.4.F:      REAL*4 PDUM1(4),PDUM2(4),PDUMI(4,6)
tauola2.4.F:      CHARACTER TITLE(4)*31
tauola2.4.F:      DATA PI /3.141592653589793238462643/
tauola2.4.F:      IF(MODE.EQ.-1) THEN
tauola2.4.F:        IWARM=1
tauola2.4.F:        TITLE(1)='  TAU-  --> 2PI-,  PI0,  PI+   '
tauola2.4.F:        DO 1 JNPI=1,NMOD
tauola2.4.F:        WTMAX(JNPI)=-1.
tauola2.4.F:        DO 3 I=1,500
tauola2.4.F:        CALL DPH4PIx(WT,HV,PDUM1,PDUM2,PDUMI,JNPI)
tauola2.4.F:        IF(WT.GT.WTMAX(JNPI)/1.2) WTMAX(JNPI)=WT*1.2
tauola2.4.F:C       CALL HBOOK1(801,'WEIGHT DISTRIBUTION  DADNPIx    $',100,0.,2.,.0)
tauola2.4.F:1       CONTINUE
tauola2.4.F:C       CALL HFILL(801,WT/WTMAX(JNPI))
tauola2.4.F:        NEVRAW(JNPI)=NEVRAW(JNPI)+1
tauola2.4.F:        RN=RRR(1)
tauola2.4.F:        IF(WT.GT.WTMAX(JNPI)) NEVOVR(JNPI)=NEVOVR(JNPI)+1
tauola2.4.F:        COSTHE=-1.+2.*RRR(2)
tauola2.4.F:        DO 301 I=1,ND
tauola2.4.F:        CALL ROTOR2x(THET,PNPI(1,I),PNPI(1,I))
tauola2.4.F:        CALL ROTOR3x( PHI,PNPI(1,I),PNPI(1,I))
tauola2.4.F:301     CONTINUE
tauola2.4.F:        NEVACC(JNPI)=NEVACC(JNPI)+1
tauola2.4.F:      ELSEIF(MODE.EQ. 1) THEN
tauola2.4.F:        DO 500 JNPI=1,NMOD
tauola2.4.F:          PARGAM=SWT(JNPI)/FLOAT(NEVRAW(JNPI)+1)
tauola2.4.F:     &    ERROR=SQRT(SSWT(JNPI)/SWT(JNPI)**2-1./FLOAT(NEVRAW(JNPI)))
tauola2.4.F:          WRITE(*, 7010) TITLE(JNPI),
tauola2.4.F:CC        CALL HPRINT(801)
tauola2.4.F:          GAMPMC(8+JNPI-1)=RAT
tauola2.4.F:          GAMPER(8+JNPI-1)=ERROR
tauola2.4.F:CAM       NEVDEC(8+JNPI-1)=NEVACC(JNPI)
tauola2.4.F: 7003 FORMAT(///1X,15(5H*****)
tauola2.4.F:     $ /,' *',     25X,'******** DAD4PIx INITIALISATION ********',9X,1H*
tauola2.4.F: 7004 FORMAT(' *',E20.5,5X,'WTMAX  = MAXIMUM WEIGHT  ',9X,1H*/)
tauola2.4.F:     $  /,1X,15(5H*****)/)
tauola2.4.F: 7010 FORMAT(///1X,15(5H*****)
tauola2.4.F:     $ /,' *',     25X,'******** DAD4PIx FINAL REPORT  ******** ',9X,1H*
tauola2.4.F:     $ /,' *',     25X,'CHANNEL:',A31                           ,9X,1H*
tauola2.4.F:     $ /,' *',I20  ,5X,'NEVRAW = NO. OF DECAYS TOTAL           ',9X,1H*
tauola2.4.F:     $ /,' *',I20  ,5X,'NEVACC = NO. OF DECAYS ACCEPTED        ',9X,1H*
tauola2.4.F:     $ /,' *',I20  ,5X,'NEVOVR = NO. OF OVERWEIGHTED EVENTS    ',9X,1H*
tauola2.4.F:     $ /,' *',E20.5,5X,'PARTIAL WTDTH IN GEV UNITS             ',9X,1H*
tauola2.4.F:     $ /,' *',F20.9,5X,'IN UNITS GFERMI**2*MASS**5/192/PI**3   ',9X,1H*
tauola2.4.F:     $ /,' *',F20.8,5X,'RELATIVE ERROR OF PARTIAL WIDTH        ',9X,1H*
tauola2.4.F:     $  /,1X,15(5H*****)/)
tauola2.4.F:* IT SIMULATES A1  DECAY IN TAU REST FRAME WITH
tauola2.4.F:* Z-AXIS ALONG A1  MOMENTUM
tauola2.4.F:     *                 ,AMPIZ,AMPI,AMRO,GAMRO,AMA1,GAMA1
tauola2.4.F:     *                 ,AMPIZ,AMPI,AMRO,GAMRO,AMA1,GAMA1
tauola2.4.F:      REAL  HV(4),PT(4),PN(4),PAA(4),PIM1(4),PIM2(4),PIPL(4),PMULT(4,6)
tauola2.4.F:      REAL*8 UU,FF,FF1,FF2,FF3,FF4,GG1,GG2,GG3,GG4 
tauola2.4.F:      DATA PI /3.141592653589793238462643/
tauola2.4.F:      PHSPAC=1./2**23/PI**11
tauola2.4.F:      PHSP=1./2**5/PI**2
tauola2.4.F:      IF (JNPI.EQ.1) THEN
tauola2.4.F:       AMP1=AMPI
tauola2.4.F:        AMROP =1.2
tauola2.4.F:       AMP1=AMPIZ
tauola2.4.F:       AMRX=1.4
tauola2.4.F:      CALL CHOICEx(100+JNPI,RR,ICHAN,PROB1,PROB2,PROB3,
tauola2.4.F:      PREZ=PROB1+PROB2
tauola2.4.F:      PT(1)=0.
tauola2.4.F:        RR1=RRR(6)
tauola2.4.F:        AMS1=(AMP1+AMP2+AMP3+AMP4)**2
tauola2.4.F:        ALP1=ATAN((AMS1-AMROP**2)/AMROP/GAMROP)
tauola2.4.F:        ALP=ALP1+RR1*(ALP2-ALP1)
tauola2.4.F:        PHSPAC=PHSPAC*(ALP2-ALP1)
tauola2.4.F:        RR1=RRR(1)
tauola2.4.F:        AMS1=(AMP2+AMP3+AMP4)**2
tauola2.4.F:        AMS2=(AM4-AMP1)**2
tauola2.4.F:          AM3SQ=AMS1+   RR1*(AMS2-AMS1)
tauola2.4.F:          FF1=AMS2-AMS1
tauola2.4.F:        ALP1=ATAN((AMS1-AMRX**2)/AMRX/GAMRX)
tauola2.4.F:        ALP=ALP1+RR1*(ALP2-ALP1)
tauola2.4.F:        FF1=((AM3SQ-AMRX**2)**2+(AMRX*GAMRX)**2)/(AMRX*GAMRX)
tauola2.4.F:        FF1=FF1*(ALP2-ALP1)
tauola2.4.F:        AMS1=(AMP3+AMP4)**2
tauola2.4.F:        AM2SQ=AMS1+   RR2*(AMS2-AMS1)
tauola2.4.F:        FF2=(AMS2-AMS1)
tauola2.4.F:        ENQ1=(AM2SQ-AMP3**2+AMP4**2)/(2*AM2)
tauola2.4.F:        PPI=         ENQ1**2-AMP4**2
tauola2.4.F:        PPPI=SQRT(ABS(ENQ1**2-AMP4**2))
tauola2.4.F:        PIZ(4)=ENQ1
tauola2.4.F:        DO 30 I=1,3
tauola2.4.F:* 3 REST FRAME, DEFINE PIM1
tauola2.4.F:        PR(1)=0
tauola2.4.F:        PR(4)=1./(2*AM3)*(AM3**2+AM2**2-AMP2**2)
tauola2.4.F:*       PIM1  MOMENTUM
tauola2.4.F:        PIM1(1)=0
tauola2.4.F:        PIM1(2)=0
tauola2.4.F:        PIM1(4)=1./(2*AM3)*(AM3**2-AM2**2+AMP2**2)
tauola2.4.F:        PIM1(3)=-PR(3)
tauola2.4.F:      THET =ACOS(-1.+2*RR3)
tauola2.4.F:      CALL ROTPOLx(THET,PHI,PIM1)
tauola2.4.F:        PR(1)=0
tauola2.4.F:        PR(4)=1./(2*AM4)*(AM4**2+AM3**2-AMP1**2)
tauola2.4.F:        PIM2(1)=0
tauola2.4.F:        PIM2(4)=1./(2*AM4)*(AM4**2-AM3**2+AMP1**2)
tauola2.4.F:      CALL BOSTR3x(EXE,PIM1,PIM1)
tauola2.4.F:      THET =ACOS(-1.+2*RR3)
tauola2.4.F:      CALL ROTPOLx(THET,PHI,PIM1)
tauola2.4.F:      PAA(1)=0
tauola2.4.F:      PAA(4)=1./(2*AMTAU)*(AMTAU**2-AMNUTA**2+AM4**2)
tauola2.4.F:      PN(1)=0
tauola2.4.F:      PN(4)=1./(2*AMTAU)*(AMTAU**2+AMNUTA**2-AM4**2)
tauola2.4.F:        AM3SQ=(PIM1(4)+PIZ(4)+PIPL(4))**2-(PIM1(3)+PIZ(3)+PIPL(3))**2
tauola2.4.F:     $       -(PIM1(2)+PIZ(2)+PIPL(2))**2-(PIM1(1)+PIZ(1)+PIPL(1))**2
tauola2.4.F:        AMS1=(AMP1+AMP3+AMP4)**2
tauola2.4.F:        FF1=(AMS2-AMS1)
tauola2.4.F:        AMS1=(AMP3+AMP4)**2
tauola2.4.F:        AMS2=(SQRT(AM3SQ)-AMP1)**2
tauola2.4.F:        FF2=AMS2-AMS1
tauola2.4.F:        FF3=(4*PI)*(XLAM(AM2**2,AMP1**2,AM3SQ)/AM3SQ)
tauola2.4.F:        UU=FF1*FF2*FF3*FF4
tauola2.4.F:        AM3SQ=(PIM1(4)+PIZ(4)+PIPL(4))**2-(PIM1(3)+PIZ(3)+PIPL(3))**2
tauola2.4.F:     $       -(PIM1(2)+PIZ(2)+PIPL(2))**2-(PIM1(1)+PIZ(1)+PIPL(1))**2
tauola2.4.F:        AMS1=(AMP1+AMP3+AMP4)**2
tauola2.4.F:        ALP1=ATAN((AMS1-AMRX**2)/AMRX/GAMRX)
tauola2.4.F:        FF1=((AM3SQ-AMRX**2)**2+(AMRX*GAMRX)**2)/(AMRX*GAMRX)
tauola2.4.F:        FF1=FF1*(ALP2-ALP1)
tauola2.4.F:        AMS1=(AMP3+AMP4)**2
tauola2.4.F:        AMS2=(SQRT(AM3SQ)-AMP1)**2
tauola2.4.F:        FF2=AMS2-AMS1
tauola2.4.F:        FF3=(4*PI)*(XLAM(AM2**2,AMP1**2,AM3SQ)/AM3SQ)
tauola2.4.F:        FF=FF1*FF2*FF3*FF4
tauola2.4.F:     $       -(PIM2(2)+PIZ(2)+PIPL(2))**2-(PIM2(1)+PIZ(1)+PIPL(1))**2
tauola2.4.F:        AMS2=(AM4-AMP1)**2
tauola2.4.F:        AMS1=(AMP2+AMP3+AMP4)**2
tauola2.4.F:        ALP1=ATAN((AMS1-AMRX**2)/AMRX/GAMRX)
tauola2.4.F:        GG1=((AM3SQ-AMRX**2)**2+(AMRX*GAMRX)**2)/(AMRX*GAMRX)
tauola2.4.F:        GG1=GG1*(ALP2-ALP1)
tauola2.4.F:        AMS1=(AMP3+AMP4)**2
tauola2.4.F:        GG2=AMS2-AMS1
tauola2.4.F:        GG4=(4*PI)*(XLAM(AM3SQ,AMP1**2,AM4**2)/AM4**2)
tauola2.4.F:        GG=GG1*GG2*GG3*GG4
tauola2.4.F:          RR=FF*GG*UU/(0.5*PREZ*(FF+GG)*UU+(1.0-PREZ)*FF*GG)
tauola2.4.F:       IF (JNPI.EQ.1) THEN
tauola2.4.F:         DO 70 I=1,4
tauola2.4.F:         X=PIM1(I)
tauola2.4.F:         PIM1(I)=PIM2(I)
tauola2.4.F:         DO 71 I=1,4
tauola2.4.F:         X=PIM1(I)
tauola2.4.F:         PIM1(I)=PIM2(I)
tauola2.4.F: 71      PIM2(I)=X
tauola2.4.F:      CALL BOSTR3x(EXE,PIM1,PIM1)
tauola2.4.F:C      AMPLIT=CCABIB**2*GFERMI**2/2. * BRAK * AMX2*SIGEEx(AMX2,1)
tauola2.4.F:      IF     (JNPI.EQ.1) THEN
tauola2.4.F:        CALL DAM4PIx(JNPI,PT,PN,PIM1,PIM2,PIZ,PIPL,AMPLIT,HV)
tauola2.4.F:        CALL DAM4PIx(JNPI,PT,PN,PIM1,PIM2,PIPL,PIZ,AMPLIT,HV)
tauola2.4.F:      DGAMT=1/(2.*AMTAU)*AMPLIT*PHSPAC
tauola2.4.F:      DO 77 K=1,4
tauola2.4.F:        PMULT(K,1)=PIM1(K)
tauola2.4.F:      SUBROUTINE DAM4PIx(MNUM,PT,PN,PIM1,PIM2,PIM3,PIM4,AMPLIT,HV)
tauola2.4.F:     *                 ,AMPIZ,AMPI,AMRO,GAMRO,AMA1,GAMA1
tauola2.4.F:     *                 ,AMPIZ,AMPI,AMRO,GAMRO,AMA1,GAMA1
tauola2.4.F:      REAL  HV(4),PT(4),PN(4),PIM1(4),PIM2(4),PIM3(4),PIM4(4)
tauola2.4.F:      COMPLEX HADCUR(4),FORM1x,FORM2x,FORM3x,FORM4x,FORM5x
tauola2.4.F:      EXTERNAL FORM1x,FORM2x,FORM3x,FORM4x,FORM5x
tauola2.4.F:      DATA PI /3.141592653589793238462643/
tauola2.4.F:      CALL CURRx(MNUM,PIM1,PIM2,PIM3,PIM4,HADCUR)
tauola2.4.F:      DO 90 I=1,3
tauola2.4.F:      DO  9 K=1,4
tauola2.4.F:        DO 1002 I=1,4
tauola2.4.F: 1002   QHOT(I)=PHX(I)
tauola2.4.F:        IF (QHOT(4).GT.1.E-5) CALL DWLUPHx(KTO,QHOT)
tauola2.4.F:C     called by : DEXAY1,(DEKAY1,DEKAY2)
tauola2.4.F:      IF((KTO.EQ. 1).OR.(KTO.EQ.11)) THEN
tauola2.4.F:      IF(KTOS.GT.10) KTOS=KTOS-10
tauola2.4.F:      CALL FILHEPx(0,1,22,NPS,NPS,0,0,PHOT,0.0,.TRUE.)
tauola2.4.F:C ISGN = 1/-1 for tau-/tau+
tauola2.4.F:C     called by : DEXAY,(DEKAY1,DEKAY2)
tauola2.4.F:      IF(KTO.EQ. 1) THEN
tauola2.4.F:C tau neutrino (nu_tau is 16)
tauola2.4.F:      CALL FILHEPx(0,1,16*ISGN,NPS,NPS,0,0,PNU,AM,.TRUE.)
tauola2.4.F:C electron (e- is 11)
tauola2.4.F:      CALL FILHEPx(0,1,11*ISGN,NPS,NPS,0,0,PEL,AM,.FALSE.)
tauola2.4.F:C anti electron neutrino (nu_e is 12)
tauola2.4.F:      CALL FILHEPx(0,1,-12*ISGN,NPS,NPS,0,0,PNE,AM,.TRUE.)
tauola2.4.F:C ISGN = 1/-1 for tau-/tau+
tauola2.4.F:C     called by : DEXAY,(DEKAY1,DEKAY2)
tauola2.4.F:      IF(KTO.EQ. 1) THEN
tauola2.4.F:C tau neutrino (nu_tau is 16)
tauola2.4.F:      CALL FILHEPx(0,1,16*ISGN,NPS,NPS,0,0,PNU,AM,.TRUE.)
tauola2.4.F:C muon (mu- is 13)
tauola2.4.F:      CALL FILHEPx(0,1,13*ISGN,NPS,NPS,0,0,PMU,AM,.FALSE.)
tauola2.4.F:C anti muon neutrino (nu_mu is 14)
tauola2.4.F:      CALL FILHEPx(0,1,-14*ISGN,NPS,NPS,0,0,PNM,AM,.TRUE.)
tauola2.4.F:C ISGN = 1/-1 for tau-/tau+
tauola2.4.F:C     called by : DEXAY,(DEKAY1,DEKAY2)
tauola2.4.F:      IF(KTO.EQ. 1) THEN
tauola2.4.F:C tau neutrino (nu_tau is 16)
tauola2.4.F:      CALL FILHEPx(0,1,16*ISGN,NPS,NPS,0,0,PNU,AM,.TRUE.)
tauola2.4.F:C charged pi meson (pi+ is 211)
tauola2.4.F:      CALL FILHEPx(0,1,-211*ISGN,NPS,NPS,0,0,PPI,AM,.TRUE.)
tauola2.4.F:C ISGN = 1/-1 for tau-/tau+
tauola2.4.F:C     called by : DEXAY,(DEKAY1,DEKAY2)
tauola2.4.F:      IF(KTO.EQ. 1) THEN
tauola2.4.F:C tau neutrino (nu_tau is 16)
tauola2.4.F:      CALL FILHEPx(0,1,16*ISGN,NPS,NPS,0,0,PNU,AM,.TRUE.)
tauola2.4.F:C charged rho meson (rho+ is 213)
tauola2.4.F:      CALL FILHEPx(0,2,-213*ISGN,NPS,NPS,0,0,PRHO,AM,.TRUE.)
tauola2.4.F:C charged pi meson (pi+ is 211)
tauola2.4.F:      CALL FILHEPx(0,1,-211*ISGN,-1,-1,0,0,PIC,AM,.TRUE.)
tauola2.4.F:C pi0 meson (pi0 is 111)
tauola2.4.F:      CALL FILHEPx(0,1,111,-2,-2,0,0,PIZ,AM,.TRUE.)
tauola2.4.F:      SUBROUTINE DWLUAAx(KTO,ISGN,PNU,PAA,PIM1,PIM2,PIPL,JAA)
tauola2.4.F:C ISGN = 1/-1 for tau-/tau+
tauola2.4.F:C JAA  = 1 (2) FOR A_1- DECAY TO PI+ 2PI- (PI- 2PI0)
tauola2.4.F:C     called by : DEXAY,(DEKAY1,DEKAY2)
tauola2.4.F:      REAL  PNU(4),PAA(4),PIM1(4),PIM2(4),PIPL(4)
tauola2.4.F:      IF(KTO.EQ. 1) THEN
tauola2.4.F:C tau neutrino (nu_tau is 16)
tauola2.4.F:      CALL FILHEPx(0,1,16*ISGN,NPS,NPS,0,0,PNU,AM,.TRUE.)
tauola2.4.F:C charged a_1 meson (a_1+ is 20213)
tauola2.4.F:      CALL FILHEPx(0,1,-20213*ISGN,NPS,NPS,0,0,PAA,AM,.TRUE.)
tauola2.4.F:C two possible decays of the charged a1 meson
tauola2.4.F:      IF(JAA.EQ.1) THEN
tauola2.4.F:C A1  --> PI+ PI-  PI- (or charged conjugate)
tauola2.4.F:C pi minus (or c.c.) (pi+ is 211)
tauola2.4.F:        CALL FILHEPx(0,1,-211*ISGN,-1,-1,0,0,PIM2,AM,.TRUE.)
tauola2.4.F:C pi minus (or c.c.) (pi+ is 211)
tauola2.4.F:        CALL TRALO4x(KTO,PIM1,PIM1,AM)
tauola2.4.F:        CALL FILHEPx(0,1,-211*ISGN,-2,-2,0,0,PIM1,AM,.TRUE.)
tauola2.4.F:C pi plus (or c.c.) (pi+ is 211)
tauola2.4.F:        CALL FILHEPx(0,1, 211*ISGN,-3,-3,0,0,PIPL,AM,.TRUE.)
tauola2.4.F:C A1  --> PI- PI0  PI0 (or charged conjugate)
tauola2.4.F:C pi zero (pi0 is 111)
tauola2.4.F:        CALL FILHEPx(0,1,111,-1,-1,0,0,PIM2,AM,.TRUE.)
tauola2.4.F:C pi zero (pi0 is 111)
tauola2.4.F:        CALL TRALO4x(KTO,PIM1,PIM1,AM)
tauola2.4.F:        CALL FILHEPx(0,1,111,-2,-2,0,0,PIM1,AM,.TRUE.)
tauola2.4.F:C pi minus (or c.c.) (pi+ is 211)
tauola2.4.F:        CALL FILHEPx(0,1,-211*ISGN,-3,-3,0,0,PIPL,AM,.TRUE.)
tauola2.4.F:C ISGN = 1/-1 for tau-/tau+
tauola2.4.F:      IF (KTO.EQ.1) THEN
tauola2.4.F:C tau neutrino (nu_tau is 16)
tauola2.4.F:      CALL FILHEPx(0,1,16*ISGN,NPS,NPS,0,0,PNU,AM,.TRUE.)
tauola2.4.F:C K meson (K+ is 321)
tauola2.4.F:      CALL FILHEPx(0,1,-321*ISGN,NPS,NPS,0,0,PKK,AM,.TRUE.)
tauola2.4.F:      COMMON / TAUKLE / BRA1,BRK0,BRK0B,BRKS
tauola2.4.F:      REAL*4            BRA1,BRK0,BRK0B,BRKS
tauola2.4.F:C ISGN = 1/-1 for tau-/tau+
tauola2.4.F:C JKST=10 (20) corresponds to K0B pi- (K- pi0) decay
tauola2.4.F:      IF(KTO.EQ. 1) THEN
tauola2.4.F:C tau neutrino (nu_tau is 16)
tauola2.4.F:      CALL FILHEPx(0,1,16*ISGN,NPS,NPS,0,0,PNU,AM,.TRUE.)
tauola2.4.F:      CALL FILHEPx(0,1,-323*ISGN,NPS,NPS,0,0,PKS,AM,.TRUE.)
tauola2.4.F:      IF(JKST.EQ.10) THEN
tauola2.4.F:C charged pi meson  (pi+ is 211)
tauola2.4.F:        CALL FILHEPx(0,1,-211*ISGN,-1,-1,0,0,PPI,AM,.TRUE.)
tauola2.4.F:        IF (ISGN.EQ.-1) BRAN=BRK0
tauola2.4.F:C K0 --> K0_long (is 130) / K0_short (is 310) = 1/1
tauola2.4.F:        CALL RANMAR(XIO,1)
tauola2.4.F:          K0TYPE = 130
tauola2.4.F:          K0TYPE = 310
tauola2.4.F:        CALL FILHEPx(0,1,K0TYPE,-2,-2,0,0,PKK,AM,.TRUE.)
tauola2.4.F:C pi zero (pi0 is 111)
tauola2.4.F:        CALL FILHEPx(0,1,111,-1,-1,0,0,PPI,AM,.TRUE.)
tauola2.4.F:C charged K meson (K+ is 321)
tauola2.4.F:        CALL FILHEPx(0,1,-321*ISGN,-2,-2,0,0,PKK,AM,.TRUE.)
tauola2.4.F:C ISGN = 1/-1 for tau-/tau+
tauola2.4.F:C     called by : DEXAY,(DEKAY1,DEKAY2)
tauola2.4.F:      IF(KTO.EQ. 1) THEN
tauola2.4.F:C tau neutrino (nu_tau is 16)
tauola2.4.F:      CALL FILHEPx(0,1,16*ISGN,NPS,NPS,0,0,PNU,AM,.TRUE.)
tauola2.4.F:      CALL FILHEPx(0,1,-24*ISGN,NPS,NPS,0,0,PWB,AM,.TRUE.)
tauola2.4.F:      DO I=1,ND
tauola2.4.F:        IF(KFPI.NE.111)KFPI=KFPI*ISGN
tauola2.4.F:        DO J=1,4
tauola2.4.F:        CALL FILHEPx(0,1,KFPI,-I,-I,0,0,PPI,AM,.TRUE.)
tauola2.4.F:      SUBROUTINE DWLUPKx(KTO,ISGN,PNU,PAA,PIM1,PIM2,PIPL,JAA)
tauola2.4.F:C ISGN = 1/-1 for tau-/tau+
tauola2.4.F:C JAA  = 1 (2) FOR A_1- DECAY TO PI+ 2PI- (PI- 2PI0)
tauola2.4.F:C     called by : DEXAY,(DEKAY1,DEKAY2)
tauola2.4.F:      REAL  PNU(4),PAA(4),PIM1(4),PIM2(4),PIPL(4)
tauola2.4.F:      IF(KTO.EQ. 1) THEN
tauola2.4.F:C tau neutrino (nu_tau is 16)
tauola2.4.F:      CALL FILHEPx(0,1,16*ISGN,NPS,NPS,0,0,PNU,AM,.TRUE.)
tauola2.4.F:      CALL FILHEPx(0,1,-24*ISGN,NPS,NPS,0,0,PAA,AM,.TRUE.)
tauola2.4.F:        IDEF=IPKDEFx(1,JAA,ISGN)
tauola2.4.F:        CALL TRALO4x(KTO,PIM1,PIM1,AM)
tauola2.4.F:        CALL FILHEPx(0,1,IDEF,-1,-1,0,0,PIM1,AM,.TRUE.)
tauola2.4.F:        CALL FILHEPx(0,1,IDEF,-2,-2,0,0,PIM2,AM,.TRUE.)
tauola2.4.F:        CALL FILHEPx(0,1,IDEF,-3,-3,0,0,PIPL,AM,.TRUE.)
tauola2.4.F:      SUBROUTINE FILHEPx(N,IST,ID,JMO1,JMO2,JDA1,JDA2,P4,PINV,PHFLAG)
tauola2.4.F:C written by Martin W. Gruenewald (91/01/28)
tauola2.4.F:        IHEP=NHEP+1
tauola2.4.F:      JMOHEP(1,IHEP)=JMO1
tauola2.4.F:      IF(JMO1.LT.0)JMOHEP(1,IHEP)=JMOHEP(1,IHEP)+IHEP
tauola2.4.F:      JDAHEP(1,IHEP)=JDA1
tauola2.4.F:      DO I=1,4
tauola2.4.F:      DO IP=JMOHEP(1,IHEP),JMOHEP(2,IHEP)
tauola2.4.F:          IF(ISTHEP(IP).EQ.1)ISTHEP(IP)=2
tauola2.4.F:          IF(JDAHEP(1,IP).EQ.0)THEN
tauola2.4.F:            JDAHEP(1,IP)=IHEP
tauola2.4.F:      AAA=PP(4)**2-PP(3)**2-PP(2)**2-PP(1)**2
tauola2.4.F:      AAA=PP(4)**2-PP(3)**2-PP(2)**2-PP(1)**2
tauola2.4.F:      DATA PI /3.141592653589793238462643D0/
tauola2.4.F:      DATA PI /3.141592653589793238462643D0/
tauola2.4.F:      SUBROUTINE ROTOD1x(PH1,PVEC,QVEC)
tauola2.4.F:      PHI=PH1
tauola2.4.F:      DO 10 I=1,4
tauola2.4.F:  10  RVEC(I)=PVEC(I)
tauola2.4.F:      QVEC(1)=RVEC(1)
tauola2.4.F:      SUBROUTINE ROTOD2x(PH1,PVEC,QVEC)
tauola2.4.F:      PHI=PH1
tauola2.4.F:      DO 10 I=1,4
tauola2.4.F:  10  RVEC(I)=PVEC(I)
tauola2.4.F:      QVEC(1)= CS*RVEC(1)+SN*RVEC(3)
tauola2.4.F:      QVEC(3)=-SN*RVEC(1)+CS*RVEC(3)
tauola2.4.F:      SUBROUTINE ROTOD3x(PH1,PVEC,QVEC)
tauola2.4.F:      PHI=PH1
tauola2.4.F:      DO 10 I=1,4
tauola2.4.F:  10  RVEC(I)=PVEC(I)
tauola2.4.F:      QVEC(1)= CS*RVEC(1)-SN*RVEC(2)
tauola2.4.F:      QVEC(2)= SN*RVEC(1)+CS*RVEC(2)
tauola2.4.F:      DO 10 I=1,4
tauola2.4.F:  10  RVEC(I)=PVEC(I)
tauola2.4.F:      QVEC(1)=RVEC(1)
tauola2.4.F:      DO 10 I=1,4
tauola2.4.F:  10  RVEC(I)=PVEC(I)
tauola2.4.F:      QVEC(1)=RVEC(1)
tauola2.4.F:      SUBROUTINE ROTOR1x(PH1,PVEC,QVEC)
tauola2.4.F:      PHI=PH1
tauola2.4.F:      DO 10 I=1,4
tauola2.4.F:  10  RVEC(I)=PVEC(I)
tauola2.4.F:      QVEC(1)=RVEC(1)
tauola2.4.F:      SUBROUTINE ROTOR2x(PH1,PVEC,QVEC)
tauola2.4.F:      PHI=PH1
tauola2.4.F:      DO 10 I=1,4
tauola2.4.F:  10  RVEC(I)=PVEC(I)
tauola2.4.F:      QVEC(1)= CS*RVEC(1)+SN*RVEC(3)
tauola2.4.F:      QVEC(3)=-SN*RVEC(1)+CS*RVEC(3)
tauola2.4.F:      DO 10 I=1,4
tauola2.4.F:  10  RVEC(I)=PVEC(I)
tauola2.4.F:      QVEC(1)= CS*RVEC(1)-SN*RVEC(2)
tauola2.4.F:      QVEC(2)= SN*RVEC(1)+CS*RVEC(2)
tauola2.4.F:      DATA PI /3.141592653589793238462643D0/
tauola2.4.F:      COSTH=-1+2*RRR(1)
tauola2.4.F:      SINTH=SQRT(1 -COSTH**2)
tauola2.4.F:      X(1)=R*SINTH*COS(2*PI*RRR(2))
tauola2.4.F:      DATA PI /3.141592653589793238462643/
tauola2.4.F:      COSTH=-1.+2.*RRR(1)
tauola2.4.F:      SINTH=SQRT(1.-COSTH**2)
tauola2.4.F:      X(1)=R*SINTH*COS(2*PI*RRR(2))
tauola2.4.F:C CERNLIB V113, VERSION WITH AUTOMATIC DEFAULT INITIALIZATION
tauola2.4.F:C     AM.Lutz   November 1988, Feb. 1989
tauola2.4.F:C        modified by F. James, 1988 and 1989, to generate a vector
tauola2.4.F:      COMMON/RASET1/U(97),C,I97,J97
tauola2.4.F:      PARAMETER (MODCNS=1000000000)
tauola2.4.F:      DATA NTOT,NTOT2,IJKL/-1,0,0/
tauola2.4.F:      IF(IJKL.EQ.0)IJKL = 5421713  !!SET BY USERS IN /TAUOLASEED/
tauola2.4.F:      GO TO 1
tauola2.4.F:C To get the standard values in Marsaglia's paper, IJKLIN=54217137
tauola2.4.F:      KALLED = 1
tauola2.4.F:    1 CONTINUE
tauola2.4.F:      I = MOD(IJ/177, 177) + 2
tauola2.4.F:      J = MOD(IJ, 177)     + 2
tauola2.4.F:      K = MOD(KL/169, 178) + 1
tauola2.4.F:      L = MOD(KL, 169)
tauola2.4.F:      WRITE(*,201) IJKL,NTOT,NTOT2
tauola2.4.F: 201  FORMAT(1X,' RANMAR INITIALIZED: ',I10,2X,2I10)
tauola2.4.F:      DO 2 II= 1, 97
tauola2.4.F:      DO 3 JJ= 1, 24
tauola2.4.F:         M = MOD(MOD(I*J,179)*K, 179)
tauola2.4.F:         L = MOD(53*L+1, 169)
tauola2.4.F:      TWOM24 = 1.0
tauola2.4.F:      DO 4 I24= 1, 24
tauola2.4.F:      CD =  7654321.*TWOM24
tauola2.4.F:      CM = 16777213.*TWOM24
tauola2.4.F:      DO 45 LOOP2= 1, NTOT2+1
tauola2.4.F:      IF (LOOP2 .EQ. NTOT2+1)  NOW=NTOT
tauola2.4.F:       WRITE (*,'(A,I15)') ' RMARIN SKIPPING OVER ',NOW
tauola2.4.F:       DO 40 IDUM = 1, NTOT
tauola2.4.F:       IF (UNI .LT. 0.)  UNI=UNI+1.
tauola2.4.F:       I97 = I97-1
tauola2.4.F:       J97 = J97-1
tauola2.4.F:      IF (KALLED .EQ. 1)  RETURN
tauola2.4.F:      DO 100 IVEC= 1, LENV
tauola2.4.F:      IF (UNI .LT. 0.)  UNI=UNI+1.
tauola2.4.F:      I97 = I97-1
tauola2.4.F:      J97 = J97-1
tauola2.4.F:      IF (UNI .LT. 0.) UNI=UNI+1.
tauola2.4.F:  100 CONTINUE    
tauola2.4.F:         NTOT2 = NTOT2 + 1
tauola2.4.F:CERN      C304      VERSION    29/07/71 DILOGx        59                C
tauola2.4.F:      Z=-1.64493406684822
tauola2.4.F:      IF(X .LT.-1.0) GO TO 1
tauola2.4.F:      IF(X .EQ. 1.0) GO TO 3
tauola2.4.F:      Z=3.2898681336964
tauola2.4.F:    1 T=1.0/X
tauola2.4.F:    3 DILOGx=1.64493406684822
tauola2.4.F:    4 T=1.0-X
tauola2.4.F:      Z=1.64493406684822 - LOG(X)* LOG(ABS(T))
tauola2.4.F:      B=      0.00000 00000 00001
tauola2.4.F:      B=Y*A-B+0.00000 00000 00011
tauola2.4.F:      B=Y*A-B+0.00000 00000 00121
tauola2.4.F:      B=Y*A-B+0.00000 00000 01312
tauola2.4.F:      B=Y*A-B+0.00000 00000 14437
tauola2.4.F:      B=Y*A-B+0.00000 00001 62421
tauola2.4.F:      A=Y*B-A+0.00000 00005 50291
tauola2.4.F:      B=Y*A-B+0.00000 00018 79117
tauola2.4.F:      A=Y*B-A+0.00000 10299 04264
tauola2.4.F:      B=Y*A-B+0.00000 38163 29463
tauola2.4.F:      A=Y*B-A+0.00001 44963 00557
tauola2.4.F:      B=Y*A-B+0.00005 68178 22718
tauola2.4.F:      A=Y*B-A+0.00023 20021 96094
tauola2.4.F:      B=Y*A-B+0.00100 16274 96164
tauola2.4.F:      A=Y*B-A+0.00468 63619 59447
tauola2.4.F:      A=Y*B-A+0.16607 30329 27855
tauola2.4.F:      A=Y*A-B+1.93506 43008 6996
uclacont.F:C      Copyright (C) 1998      Caltech, UCSB
uclacont.F:C    SBC     Nov. 24, 1998         Module created
uclacont.F:      integer flavor,kf(100),i,ndaug,istart
uclacont.F:      real*8  px(100),py(100),pz(100),e(100)
uclacont.F:      do 1,i=1,n
uclacont.F:        if(abs(k(i,2)).gt.6) goto 1
uclacont.F:        if(k(i,2).eq.0)      goto 1
uclacont.F:        if(k(i,3).ne.0)      goto 1
uclacont.F:        ndaug=ndaug+1
uclacont.F:        px(ndaug)=p(i,1)
uclacont.F:1     continue
uclacont.F:      do 2, i=1,n
uclacont.F:        call gbrlist(1)
uclacont.F:      do 3,i=istart+1,n
uclacont.F:        ndaug = ndaug + 1
uclacont.F:        px(ndaug)=p(i,1)
